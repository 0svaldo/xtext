/*
* generated by Xtext
*/

package org.eclipse.xtext.example.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class EcoreDslGrammarAccess implements IGrammarAccess {
	
	
	public class EcoreDslElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EcoreDsl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentImports = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallImportStatementDecl = (RuleCall)c0AssignmentImports.eContents().get(0);
		private final Assignment c1AssignmentPackage = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10ParserRuleCallEPackageDecl = (RuleCall)c1AssignmentPackage.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentImports() { return c0AssignmentImports; }

		// not supported
		public RuleCall ele00ParserRuleCallImportStatementDecl() { return c00ParserRuleCallImportStatementDecl; }

		// not supported
		public Assignment ele1AssignmentPackage() { return c1AssignmentPackage; }

		// not supported
		public RuleCall ele10ParserRuleCallEPackageDecl() { return c10ParserRuleCallEPackageDecl; }
	}

	public class ImportStatementDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportStatementDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordImport = (Keyword)cGroup.eContents().get(0);
		private final Group c1Group = (Group)cGroup.eContents().get(1);
		private final Assignment c10AssignmentAlias = (Assignment)c1Group.eContents().get(0);
		private final RuleCall c100TerminalRuleCallID = (RuleCall)c10AssignmentAlias.eContents().get(0);
		private final Keyword c11KeywordEqualsSign = (Keyword)c1Group.eContents().get(1);
		private final Assignment c2AssignmentImportURI = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallSTRING = (RuleCall)c2AssignmentImportURI.eContents().get(0);
		private final Keyword c3KeywordSemicolon = (Keyword)cGroup.eContents().get(3);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordImport() { return c0KeywordImport; }

		// not supported
		public Group ele1Group() { return c1Group; }

		// not supported
		public Assignment ele10AssignmentAlias() { return c10AssignmentAlias; }

		// not supported
		public RuleCall ele100TerminalRuleCallID() { return c100TerminalRuleCallID; }

		// not supported
		public Keyword ele11KeywordEqualsSign() { return c11KeywordEqualsSign; }

		// not supported
		public Assignment ele2AssignmentImportURI() { return c2AssignmentImportURI; }

		// not supported
		public RuleCall ele20TerminalRuleCallSTRING() { return c20TerminalRuleCallSTRING; }

		// not supported
		public Keyword ele3KeywordSemicolon() { return c3KeywordSemicolon; }
	}

	public class EPackageDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EPackageDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Keyword c1KeywordPackage = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentName = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20ParserRuleCallQID = (RuleCall)c2AssignmentName.eContents().get(0);
		private final Keyword c3KeywordNsURI = (Keyword)cGroup.eContents().get(3);
		private final Keyword c4KeywordEqualsSign = (Keyword)cGroup.eContents().get(4);
		private final Assignment c5AssignmentNsURI = (Assignment)cGroup.eContents().get(5);
		private final RuleCall c50TerminalRuleCallSTRING = (RuleCall)c5AssignmentNsURI.eContents().get(0);
		private final Keyword c6KeywordNsPrefix = (Keyword)cGroup.eContents().get(6);
		private final Keyword c7KeywordEqualsSign = (Keyword)cGroup.eContents().get(7);
		private final Assignment c8AssignmentNsPrefix = (Assignment)cGroup.eContents().get(8);
		private final RuleCall c80ParserRuleCallQID = (RuleCall)c8AssignmentNsPrefix.eContents().get(0);
		private final Keyword c9KeywordLeftCurlyBracket = (Keyword)cGroup.eContents().get(9);
		private final Alternatives c10Alternatives = (Alternatives)cGroup.eContents().get(10);
		private final Assignment c100AssignmentESubpackages = (Assignment)c10Alternatives.eContents().get(0);
		private final RuleCall c1000ParserRuleCallSubEPackageDecl = (RuleCall)c100AssignmentESubpackages.eContents().get(0);
		private final Assignment c101AssignmentEClassifiers = (Assignment)c10Alternatives.eContents().get(1);
		private final RuleCall c1010ParserRuleCallEClassifierDecl = (RuleCall)c101AssignmentEClassifiers.eContents().get(0);
		private final Keyword c11KeywordRightCurlyBracket = (Keyword)cGroup.eContents().get(11);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Keyword ele1KeywordPackage() { return c1KeywordPackage; }

		// not supported
		public Assignment ele2AssignmentName() { return c2AssignmentName; }

		// not supported
		public RuleCall ele20ParserRuleCallQID() { return c20ParserRuleCallQID; }

		// not supported
		public Keyword ele3KeywordNsURI() { return c3KeywordNsURI; }

		// not supported
		public Keyword ele4KeywordEqualsSign() { return c4KeywordEqualsSign; }

		// not supported
		public Assignment ele5AssignmentNsURI() { return c5AssignmentNsURI; }

		// not supported
		public RuleCall ele50TerminalRuleCallSTRING() { return c50TerminalRuleCallSTRING; }

		// not supported
		public Keyword ele6KeywordNsPrefix() { return c6KeywordNsPrefix; }

		// not supported
		public Keyword ele7KeywordEqualsSign() { return c7KeywordEqualsSign; }

		// not supported
		public Assignment ele8AssignmentNsPrefix() { return c8AssignmentNsPrefix; }

		// not supported
		public RuleCall ele80ParserRuleCallQID() { return c80ParserRuleCallQID; }

		// not supported
		public Keyword ele9KeywordLeftCurlyBracket() { return c9KeywordLeftCurlyBracket; }

		// not supported
		public Alternatives ele10Alternatives() { return c10Alternatives; }

		// not supported
		public Assignment ele100AssignmentESubpackages() { return c100AssignmentESubpackages; }

		// not supported
		public RuleCall ele1000ParserRuleCallSubEPackageDecl() { return c1000ParserRuleCallSubEPackageDecl; }

		// not supported
		public Assignment ele101AssignmentEClassifiers() { return c101AssignmentEClassifiers; }

		// not supported
		public RuleCall ele1010ParserRuleCallEClassifierDecl() { return c1010ParserRuleCallEClassifierDecl; }

		// not supported
		public Keyword ele11KeywordRightCurlyBracket() { return c11KeywordRightCurlyBracket; }
	}

	public class SubEPackageDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubEPackageDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Keyword c1KeywordPackage = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentName = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallID = (RuleCall)c2AssignmentName.eContents().get(0);
		private final Keyword c3KeywordLeftCurlyBracket = (Keyword)cGroup.eContents().get(3);
		private final Alternatives c4Alternatives = (Alternatives)cGroup.eContents().get(4);
		private final Assignment c40AssignmentESubpackages = (Assignment)c4Alternatives.eContents().get(0);
		private final RuleCall c400ParserRuleCallSubEPackageDecl = (RuleCall)c40AssignmentESubpackages.eContents().get(0);
		private final Assignment c41AssignmentEClassifiers = (Assignment)c4Alternatives.eContents().get(1);
		private final RuleCall c410ParserRuleCallEClassifierDecl = (RuleCall)c41AssignmentEClassifiers.eContents().get(0);
		private final Keyword c5KeywordRightCurlyBracket = (Keyword)cGroup.eContents().get(5);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Keyword ele1KeywordPackage() { return c1KeywordPackage; }

		// not supported
		public Assignment ele2AssignmentName() { return c2AssignmentName; }

		// not supported
		public RuleCall ele20TerminalRuleCallID() { return c20TerminalRuleCallID; }

		// not supported
		public Keyword ele3KeywordLeftCurlyBracket() { return c3KeywordLeftCurlyBracket; }

		// not supported
		public Alternatives ele4Alternatives() { return c4Alternatives; }

		// not supported
		public Assignment ele40AssignmentESubpackages() { return c40AssignmentESubpackages; }

		// not supported
		public RuleCall ele400ParserRuleCallSubEPackageDecl() { return c400ParserRuleCallSubEPackageDecl; }

		// not supported
		public Assignment ele41AssignmentEClassifiers() { return c41AssignmentEClassifiers; }

		// not supported
		public RuleCall ele410ParserRuleCallEClassifierDecl() { return c410ParserRuleCallEClassifierDecl; }

		// not supported
		public Keyword ele5KeywordRightCurlyBracket() { return c5KeywordRightCurlyBracket; }
	}

	public class EClassifierDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassifierDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallEClassDecl = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallEDataTypeDecl = (RuleCall)cAlternatives.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0ParserRuleCallEClassDecl() { return c0ParserRuleCallEClassDecl; }

		// not supported
		public RuleCall ele1ParserRuleCallEDataTypeDecl() { return c1ParserRuleCallEDataTypeDecl; }
	}

	public class EDataTypeDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EDataTypeDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group c0Group = (Group)cAlternatives.eContents().get(0);
		private final Assignment c00AssignmentEAnnotations = (Assignment)c0Group.eContents().get(0);
		private final RuleCall c000ParserRuleCallEAnnotationDecl = (RuleCall)c00AssignmentEAnnotations.eContents().get(0);
		private final Assignment c01AssignmentSerializable = (Assignment)c0Group.eContents().get(1);
		private final Keyword c010KeywordSerializable = (Keyword)c01AssignmentSerializable.eContents().get(0);
		private final Group c02Group = (Group)c0Group.eContents().get(2);
		private final Keyword c020KeywordDatatype = (Keyword)c02Group.eContents().get(0);
		private final Assignment c021AssignmentName = (Assignment)c02Group.eContents().get(1);
		private final RuleCall c0210TerminalRuleCallID = (RuleCall)c021AssignmentName.eContents().get(0);
		private final Keyword c022KeywordColon = (Keyword)c02Group.eContents().get(2);
		private final Assignment c023AssignmentInstanceClassName = (Assignment)c02Group.eContents().get(3);
		private final RuleCall c0230ParserRuleCallSTRING_OR_QID = (RuleCall)c023AssignmentInstanceClassName.eContents().get(0);
		private final Keyword c024KeywordSemicolon = (Keyword)c02Group.eContents().get(4);
		private final RuleCall c1ParserRuleCallEEnumDecl = (RuleCall)cAlternatives.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public Group ele0Group() { return c0Group; }

		// not supported
		public Assignment ele00AssignmentEAnnotations() { return c00AssignmentEAnnotations; }

		// not supported
		public RuleCall ele000ParserRuleCallEAnnotationDecl() { return c000ParserRuleCallEAnnotationDecl; }

		// not supported
		public Assignment ele01AssignmentSerializable() { return c01AssignmentSerializable; }

		// not supported
		public Keyword ele010KeywordSerializable() { return c010KeywordSerializable; }

		// not supported
		public Group ele02Group() { return c02Group; }

		// not supported
		public Keyword ele020KeywordDatatype() { return c020KeywordDatatype; }

		// not supported
		public Assignment ele021AssignmentName() { return c021AssignmentName; }

		// not supported
		public RuleCall ele0210TerminalRuleCallID() { return c0210TerminalRuleCallID; }

		// not supported
		public Keyword ele022KeywordColon() { return c022KeywordColon; }

		// not supported
		public Assignment ele023AssignmentInstanceClassName() { return c023AssignmentInstanceClassName; }

		// not supported
		public RuleCall ele0230ParserRuleCallSTRING_OR_QID() { return c0230ParserRuleCallSTRING_OR_QID; }

		// not supported
		public Keyword ele024KeywordSemicolon() { return c024KeywordSemicolon; }

		// not supported
		public RuleCall ele1ParserRuleCallEEnumDecl() { return c1ParserRuleCallEEnumDecl; }
	}

	public class EAnnotationDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EAnnotationDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordCommercialAt = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentSource = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallSTRING = (RuleCall)c1AssignmentSource.eContents().get(0);
		private final Assignment c2AssignmentEModelElement = (Assignment)cGroup.eContents().get(2);
		private final CrossReference c20CrossReferenceEStringEModelElement = (CrossReference)c2AssignmentEModelElement.eContents().get(0);
		private final Keyword c3KeywordLeftParenthesis = (Keyword)cGroup.eContents().get(3);
		private final Assignment c4AssignmentContents = (Assignment)cGroup.eContents().get(4);
		private final RuleCall c40ParserRuleCallMapEntrySuper = (RuleCall)c4AssignmentContents.eContents().get(0);
		private final Group c5Group = (Group)cGroup.eContents().get(5);
		private final Keyword c50KeywordComma = (Keyword)c5Group.eContents().get(0);
		private final Assignment c51AssignmentContents = (Assignment)c5Group.eContents().get(1);
		private final RuleCall c510ParserRuleCallMapEntrySuper = (RuleCall)c51AssignmentContents.eContents().get(0);
		private final Keyword c6KeywordRightParenthesis = (Keyword)cGroup.eContents().get(6);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordCommercialAt() { return c0KeywordCommercialAt; }

		// not supported
		public Assignment ele1AssignmentSource() { return c1AssignmentSource; }

		// not supported
		public RuleCall ele10TerminalRuleCallSTRING() { return c10TerminalRuleCallSTRING; }

		// not supported
		public Assignment ele2AssignmentEModelElement() { return c2AssignmentEModelElement; }

		// not supported
		public CrossReference ele20CrossReferenceEStringEModelElement() { return c20CrossReferenceEStringEModelElement; }

		// not supported
		public Keyword ele3KeywordLeftParenthesis() { return c3KeywordLeftParenthesis; }

		// not supported
		public Assignment ele4AssignmentContents() { return c4AssignmentContents; }

		// not supported
		public RuleCall ele40ParserRuleCallMapEntrySuper() { return c40ParserRuleCallMapEntrySuper; }

		// not supported
		public Group ele5Group() { return c5Group; }

		// not supported
		public Keyword ele50KeywordComma() { return c50KeywordComma; }

		// not supported
		public Assignment ele51AssignmentContents() { return c51AssignmentContents; }

		// not supported
		public RuleCall ele510ParserRuleCallMapEntrySuper() { return c510ParserRuleCallMapEntrySuper; }

		// not supported
		public Keyword ele6KeywordRightParenthesis() { return c6KeywordRightParenthesis; }
	}

	public class EClassDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Assignment c1AssignmentAbstract = (Assignment)cGroup.eContents().get(1);
		private final Keyword c10KeywordAbstract = (Keyword)c1AssignmentAbstract.eContents().get(0);
		private final Alternatives c2Alternatives = (Alternatives)cGroup.eContents().get(2);
		private final Assignment c20AssignmentInterface = (Assignment)c2Alternatives.eContents().get(0);
		private final Keyword c200KeywordInterface = (Keyword)c20AssignmentInterface.eContents().get(0);
		private final Keyword c21KeywordClass = (Keyword)c2Alternatives.eContents().get(1);
		private final Assignment c3AssignmentName = (Assignment)cGroup.eContents().get(3);
		private final RuleCall c30TerminalRuleCallID = (RuleCall)c3AssignmentName.eContents().get(0);
		private final Group c4Group = (Group)cGroup.eContents().get(4);
		private final Keyword c40KeywordLessThanSign = (Keyword)c4Group.eContents().get(0);
		private final Assignment c41AssignmentETypeParameters = (Assignment)c4Group.eContents().get(1);
		private final RuleCall c410ParserRuleCallETypeParameterDecl = (RuleCall)c41AssignmentETypeParameters.eContents().get(0);
		private final Group c42Group = (Group)c4Group.eContents().get(2);
		private final Keyword c420KeywordComma = (Keyword)c42Group.eContents().get(0);
		private final Assignment c421AssignmentETypeParameters = (Assignment)c42Group.eContents().get(1);
		private final RuleCall c4210ParserRuleCallETypeParameterDecl = (RuleCall)c421AssignmentETypeParameters.eContents().get(0);
		private final Keyword c43KeywordGreaterThanSign = (Keyword)c4Group.eContents().get(3);
		private final Group c5Group = (Group)cGroup.eContents().get(5);
		private final Keyword c50KeywordExtends = (Keyword)c5Group.eContents().get(0);
		private final Assignment c51AssignmentEGenericSuperTypes = (Assignment)c5Group.eContents().get(1);
		private final RuleCall c510ParserRuleCallEGenericTypeReferenceDecl = (RuleCall)c51AssignmentEGenericSuperTypes.eContents().get(0);
		private final Group c52Group = (Group)c5Group.eContents().get(2);
		private final Keyword c520KeywordComma = (Keyword)c52Group.eContents().get(0);
		private final Assignment c521AssignmentEGenericSuperTypes = (Assignment)c52Group.eContents().get(1);
		private final RuleCall c5210ParserRuleCallEGenericTypeReferenceDecl = (RuleCall)c521AssignmentEGenericSuperTypes.eContents().get(0);
		private final Group c6Group = (Group)cGroup.eContents().get(6);
		private final Keyword c60KeywordColon = (Keyword)c6Group.eContents().get(0);
		private final Assignment c61AssignmentInstanceClassName = (Assignment)c6Group.eContents().get(1);
		private final RuleCall c610ParserRuleCallSTRING_OR_QID = (RuleCall)c61AssignmentInstanceClassName.eContents().get(0);
		private final Keyword c7KeywordLeftCurlyBracket = (Keyword)cGroup.eContents().get(7);
		private final Alternatives c8Alternatives = (Alternatives)cGroup.eContents().get(8);
		private final Assignment c80AssignmentEStructuralFeatures = (Assignment)c8Alternatives.eContents().get(0);
		private final RuleCall c800ParserRuleCallEStructuralFeatureDecl = (RuleCall)c80AssignmentEStructuralFeatures.eContents().get(0);
		private final Assignment c81AssignmentEOperations = (Assignment)c8Alternatives.eContents().get(1);
		private final RuleCall c810ParserRuleCallEOperationDecl = (RuleCall)c81AssignmentEOperations.eContents().get(0);
		private final Keyword c9KeywordRightCurlyBracket = (Keyword)cGroup.eContents().get(9);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Assignment ele1AssignmentAbstract() { return c1AssignmentAbstract; }

		// not supported
		public Keyword ele10KeywordAbstract() { return c10KeywordAbstract; }

		// not supported
		public Alternatives ele2Alternatives() { return c2Alternatives; }

		// not supported
		public Assignment ele20AssignmentInterface() { return c20AssignmentInterface; }

		// not supported
		public Keyword ele200KeywordInterface() { return c200KeywordInterface; }

		// not supported
		public Keyword ele21KeywordClass() { return c21KeywordClass; }

		// not supported
		public Assignment ele3AssignmentName() { return c3AssignmentName; }

		// not supported
		public RuleCall ele30TerminalRuleCallID() { return c30TerminalRuleCallID; }

		// not supported
		public Group ele4Group() { return c4Group; }

		// not supported
		public Keyword ele40KeywordLessThanSign() { return c40KeywordLessThanSign; }

		// not supported
		public Assignment ele41AssignmentETypeParameters() { return c41AssignmentETypeParameters; }

		// not supported
		public RuleCall ele410ParserRuleCallETypeParameterDecl() { return c410ParserRuleCallETypeParameterDecl; }

		// not supported
		public Group ele42Group() { return c42Group; }

		// not supported
		public Keyword ele420KeywordComma() { return c420KeywordComma; }

		// not supported
		public Assignment ele421AssignmentETypeParameters() { return c421AssignmentETypeParameters; }

		// not supported
		public RuleCall ele4210ParserRuleCallETypeParameterDecl() { return c4210ParserRuleCallETypeParameterDecl; }

		// not supported
		public Keyword ele43KeywordGreaterThanSign() { return c43KeywordGreaterThanSign; }

		// not supported
		public Group ele5Group() { return c5Group; }

		// not supported
		public Keyword ele50KeywordExtends() { return c50KeywordExtends; }

		// not supported
		public Assignment ele51AssignmentEGenericSuperTypes() { return c51AssignmentEGenericSuperTypes; }

		// not supported
		public RuleCall ele510ParserRuleCallEGenericTypeReferenceDecl() { return c510ParserRuleCallEGenericTypeReferenceDecl; }

		// not supported
		public Group ele52Group() { return c52Group; }

		// not supported
		public Keyword ele520KeywordComma() { return c520KeywordComma; }

		// not supported
		public Assignment ele521AssignmentEGenericSuperTypes() { return c521AssignmentEGenericSuperTypes; }

		// not supported
		public RuleCall ele5210ParserRuleCallEGenericTypeReferenceDecl() { return c5210ParserRuleCallEGenericTypeReferenceDecl; }

		// not supported
		public Group ele6Group() { return c6Group; }

		// not supported
		public Keyword ele60KeywordColon() { return c60KeywordColon; }

		// not supported
		public Assignment ele61AssignmentInstanceClassName() { return c61AssignmentInstanceClassName; }

		// not supported
		public RuleCall ele610ParserRuleCallSTRING_OR_QID() { return c610ParserRuleCallSTRING_OR_QID; }

		// not supported
		public Keyword ele7KeywordLeftCurlyBracket() { return c7KeywordLeftCurlyBracket; }

		// not supported
		public Alternatives ele8Alternatives() { return c8Alternatives; }

		// not supported
		public Assignment ele80AssignmentEStructuralFeatures() { return c80AssignmentEStructuralFeatures; }

		// not supported
		public RuleCall ele800ParserRuleCallEStructuralFeatureDecl() { return c800ParserRuleCallEStructuralFeatureDecl; }

		// not supported
		public Assignment ele81AssignmentEOperations() { return c81AssignmentEOperations; }

		// not supported
		public RuleCall ele810ParserRuleCallEOperationDecl() { return c810ParserRuleCallEOperationDecl; }

		// not supported
		public Keyword ele9KeywordRightCurlyBracket() { return c9KeywordRightCurlyBracket; }
	}

	public class EStructuralFeatureDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EStructuralFeatureDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallEAttributeDecl = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallEReferenceDecl = (RuleCall)cAlternatives.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0ParserRuleCallEAttributeDecl() { return c0ParserRuleCallEAttributeDecl; }

		// not supported
		public RuleCall ele1ParserRuleCallEReferenceDecl() { return c1ParserRuleCallEReferenceDecl; }
	}

	public class EAttributeDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EAttributeDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Alternatives c1Alternatives = (Alternatives)cGroup.eContents().get(1);
		private final Assignment c10AssignmentID = (Assignment)c1Alternatives.eContents().get(0);
		private final Keyword c100KeywordID = (Keyword)c10AssignmentID.eContents().get(0);
		private final Assignment c11AssignmentUnique = (Assignment)c1Alternatives.eContents().get(1);
		private final Keyword c110KeywordBag = (Keyword)c11AssignmentUnique.eContents().get(0);
		private final Assignment c12AssignmentOrdered = (Assignment)c1Alternatives.eContents().get(2);
		private final Keyword c120KeywordRandom = (Keyword)c12AssignmentOrdered.eContents().get(0);
		private final Assignment c13AssignmentChangeable = (Assignment)c1Alternatives.eContents().get(3);
		private final Keyword c130KeywordReadonly = (Keyword)c13AssignmentChangeable.eContents().get(0);
		private final Assignment c14AssignmentVolatile = (Assignment)c1Alternatives.eContents().get(4);
		private final Keyword c140KeywordVolatile = (Keyword)c14AssignmentVolatile.eContents().get(0);
		private final Assignment c15AssignmentTransient = (Assignment)c1Alternatives.eContents().get(5);
		private final Keyword c150KeywordTransient = (Keyword)c15AssignmentTransient.eContents().get(0);
		private final Assignment c16AssignmentUnsettable = (Assignment)c1Alternatives.eContents().get(6);
		private final Keyword c160KeywordUnsettable = (Keyword)c16AssignmentUnsettable.eContents().get(0);
		private final Assignment c17AssignmentDerived = (Assignment)c1Alternatives.eContents().get(7);
		private final Keyword c170KeywordDerived = (Keyword)c17AssignmentDerived.eContents().get(0);
		private final Keyword c2KeywordAttr = (Keyword)cGroup.eContents().get(2);
		private final Assignment c3AssignmentEGenericType = (Assignment)cGroup.eContents().get(3);
		private final RuleCall c30ParserRuleCallEGenericTypeReferenceDecl = (RuleCall)c3AssignmentEGenericType.eContents().get(0);
		private final Group c4Group = (Group)cGroup.eContents().get(4);
		private final Keyword c40KeywordLeftSquareBracket = (Keyword)c4Group.eContents().get(0);
		private final Assignment c41AssignmentLowerBound = (Assignment)c4Group.eContents().get(1);
		private final RuleCall c410TerminalRuleCallINT = (RuleCall)c41AssignmentLowerBound.eContents().get(0);
		private final Group c42Group = (Group)c4Group.eContents().get(2);
		private final Keyword c420KeywordFullStopFullStop = (Keyword)c42Group.eContents().get(0);
		private final Assignment c421AssignmentUpperBound = (Assignment)c42Group.eContents().get(1);
		private final RuleCall c4210ParserRuleCallSINT = (RuleCall)c421AssignmentUpperBound.eContents().get(0);
		private final Keyword c43KeywordRightSquareBracket = (Keyword)c4Group.eContents().get(3);
		private final Assignment c5AssignmentName = (Assignment)cGroup.eContents().get(5);
		private final RuleCall c50TerminalRuleCallID = (RuleCall)c5AssignmentName.eContents().get(0);
		private final Group c6Group = (Group)cGroup.eContents().get(6);
		private final Keyword c60KeywordEqualsSign = (Keyword)c6Group.eContents().get(0);
		private final Assignment c61AssignmentDefaultValueLiteral = (Assignment)c6Group.eContents().get(1);
		private final RuleCall c610TerminalRuleCallSTRING = (RuleCall)c61AssignmentDefaultValueLiteral.eContents().get(0);
		private final Keyword c7KeywordSemicolon = (Keyword)cGroup.eContents().get(7);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Alternatives ele1Alternatives() { return c1Alternatives; }

		// not supported
		public Assignment ele10AssignmentID() { return c10AssignmentID; }

		// not supported
		public Keyword ele100KeywordID() { return c100KeywordID; }

		// not supported
		public Assignment ele11AssignmentUnique() { return c11AssignmentUnique; }

		// not supported
		public Keyword ele110KeywordBag() { return c110KeywordBag; }

		// not supported
		public Assignment ele12AssignmentOrdered() { return c12AssignmentOrdered; }

		// not supported
		public Keyword ele120KeywordRandom() { return c120KeywordRandom; }

		// not supported
		public Assignment ele13AssignmentChangeable() { return c13AssignmentChangeable; }

		// not supported
		public Keyword ele130KeywordReadonly() { return c130KeywordReadonly; }

		// not supported
		public Assignment ele14AssignmentVolatile() { return c14AssignmentVolatile; }

		// not supported
		public Keyword ele140KeywordVolatile() { return c140KeywordVolatile; }

		// not supported
		public Assignment ele15AssignmentTransient() { return c15AssignmentTransient; }

		// not supported
		public Keyword ele150KeywordTransient() { return c150KeywordTransient; }

		// not supported
		public Assignment ele16AssignmentUnsettable() { return c16AssignmentUnsettable; }

		// not supported
		public Keyword ele160KeywordUnsettable() { return c160KeywordUnsettable; }

		// not supported
		public Assignment ele17AssignmentDerived() { return c17AssignmentDerived; }

		// not supported
		public Keyword ele170KeywordDerived() { return c170KeywordDerived; }

		// not supported
		public Keyword ele2KeywordAttr() { return c2KeywordAttr; }

		// not supported
		public Assignment ele3AssignmentEGenericType() { return c3AssignmentEGenericType; }

		// not supported
		public RuleCall ele30ParserRuleCallEGenericTypeReferenceDecl() { return c30ParserRuleCallEGenericTypeReferenceDecl; }

		// not supported
		public Group ele4Group() { return c4Group; }

		// not supported
		public Keyword ele40KeywordLeftSquareBracket() { return c40KeywordLeftSquareBracket; }

		// not supported
		public Assignment ele41AssignmentLowerBound() { return c41AssignmentLowerBound; }

		// not supported
		public RuleCall ele410TerminalRuleCallINT() { return c410TerminalRuleCallINT; }

		// not supported
		public Group ele42Group() { return c42Group; }

		// not supported
		public Keyword ele420KeywordFullStopFullStop() { return c420KeywordFullStopFullStop; }

		// not supported
		public Assignment ele421AssignmentUpperBound() { return c421AssignmentUpperBound; }

		// not supported
		public RuleCall ele4210ParserRuleCallSINT() { return c4210ParserRuleCallSINT; }

		// not supported
		public Keyword ele43KeywordRightSquareBracket() { return c43KeywordRightSquareBracket; }

		// not supported
		public Assignment ele5AssignmentName() { return c5AssignmentName; }

		// not supported
		public RuleCall ele50TerminalRuleCallID() { return c50TerminalRuleCallID; }

		// not supported
		public Group ele6Group() { return c6Group; }

		// not supported
		public Keyword ele60KeywordEqualsSign() { return c60KeywordEqualsSign; }

		// not supported
		public Assignment ele61AssignmentDefaultValueLiteral() { return c61AssignmentDefaultValueLiteral; }

		// not supported
		public RuleCall ele610TerminalRuleCallSTRING() { return c610TerminalRuleCallSTRING; }

		// not supported
		public Keyword ele7KeywordSemicolon() { return c7KeywordSemicolon; }
	}

	public class EReferenceDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EReferenceDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Alternatives c1Alternatives = (Alternatives)cGroup.eContents().get(1);
		private final Assignment c10AssignmentResolveProxies = (Assignment)c1Alternatives.eContents().get(0);
		private final Keyword c100KeywordLocal = (Keyword)c10AssignmentResolveProxies.eContents().get(0);
		private final Assignment c11AssignmentUnique = (Assignment)c1Alternatives.eContents().get(1);
		private final Keyword c110KeywordBag = (Keyword)c11AssignmentUnique.eContents().get(0);
		private final Assignment c12AssignmentOrdered = (Assignment)c1Alternatives.eContents().get(2);
		private final Keyword c120KeywordRandom = (Keyword)c12AssignmentOrdered.eContents().get(0);
		private final Assignment c13AssignmentChangeable = (Assignment)c1Alternatives.eContents().get(3);
		private final Keyword c130KeywordReadonly = (Keyword)c13AssignmentChangeable.eContents().get(0);
		private final Assignment c14AssignmentVolatile = (Assignment)c1Alternatives.eContents().get(4);
		private final Keyword c140KeywordVolatile = (Keyword)c14AssignmentVolatile.eContents().get(0);
		private final Assignment c15AssignmentTransient = (Assignment)c1Alternatives.eContents().get(5);
		private final Keyword c150KeywordTransient = (Keyword)c15AssignmentTransient.eContents().get(0);
		private final Assignment c16AssignmentUnsettable = (Assignment)c1Alternatives.eContents().get(6);
		private final Keyword c160KeywordUnsettable = (Keyword)c16AssignmentUnsettable.eContents().get(0);
		private final Assignment c17AssignmentDerived = (Assignment)c1Alternatives.eContents().get(7);
		private final Keyword c170KeywordDerived = (Keyword)c17AssignmentDerived.eContents().get(0);
		private final Alternatives c2Alternatives = (Alternatives)cGroup.eContents().get(2);
		private final Assignment c20AssignmentContainment = (Assignment)c2Alternatives.eContents().get(0);
		private final Keyword c200KeywordVal = (Keyword)c20AssignmentContainment.eContents().get(0);
		private final Keyword c21KeywordRef = (Keyword)c2Alternatives.eContents().get(1);
		private final Assignment c3AssignmentEGenericType = (Assignment)cGroup.eContents().get(3);
		private final RuleCall c30ParserRuleCallEGenericTypeReferenceDecl = (RuleCall)c3AssignmentEGenericType.eContents().get(0);
		private final Group c4Group = (Group)cGroup.eContents().get(4);
		private final Keyword c40KeywordLeftSquareBracket = (Keyword)c4Group.eContents().get(0);
		private final Assignment c41AssignmentLowerBound = (Assignment)c4Group.eContents().get(1);
		private final RuleCall c410TerminalRuleCallINT = (RuleCall)c41AssignmentLowerBound.eContents().get(0);
		private final Group c42Group = (Group)c4Group.eContents().get(2);
		private final Keyword c420KeywordFullStopFullStop = (Keyword)c42Group.eContents().get(0);
		private final Assignment c421AssignmentUpperBound = (Assignment)c42Group.eContents().get(1);
		private final RuleCall c4210ParserRuleCallSINT = (RuleCall)c421AssignmentUpperBound.eContents().get(0);
		private final Keyword c43KeywordRightSquareBracket = (Keyword)c4Group.eContents().get(3);
		private final Group c5Group = (Group)cGroup.eContents().get(5);
		private final Keyword c50KeywordNumberSign = (Keyword)c5Group.eContents().get(0);
		private final Assignment c51AssignmentEOpposite = (Assignment)c5Group.eContents().get(1);
		private final CrossReference c510CrossReferenceEStringEReference = (CrossReference)c51AssignmentEOpposite.eContents().get(0);
		private final Assignment c6AssignmentName = (Assignment)cGroup.eContents().get(6);
		private final RuleCall c60TerminalRuleCallID = (RuleCall)c6AssignmentName.eContents().get(0);
		private final Keyword c7KeywordSemicolon = (Keyword)cGroup.eContents().get(7);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Alternatives ele1Alternatives() { return c1Alternatives; }

		// not supported
		public Assignment ele10AssignmentResolveProxies() { return c10AssignmentResolveProxies; }

		// not supported
		public Keyword ele100KeywordLocal() { return c100KeywordLocal; }

		// not supported
		public Assignment ele11AssignmentUnique() { return c11AssignmentUnique; }

		// not supported
		public Keyword ele110KeywordBag() { return c110KeywordBag; }

		// not supported
		public Assignment ele12AssignmentOrdered() { return c12AssignmentOrdered; }

		// not supported
		public Keyword ele120KeywordRandom() { return c120KeywordRandom; }

		// not supported
		public Assignment ele13AssignmentChangeable() { return c13AssignmentChangeable; }

		// not supported
		public Keyword ele130KeywordReadonly() { return c130KeywordReadonly; }

		// not supported
		public Assignment ele14AssignmentVolatile() { return c14AssignmentVolatile; }

		// not supported
		public Keyword ele140KeywordVolatile() { return c140KeywordVolatile; }

		// not supported
		public Assignment ele15AssignmentTransient() { return c15AssignmentTransient; }

		// not supported
		public Keyword ele150KeywordTransient() { return c150KeywordTransient; }

		// not supported
		public Assignment ele16AssignmentUnsettable() { return c16AssignmentUnsettable; }

		// not supported
		public Keyword ele160KeywordUnsettable() { return c160KeywordUnsettable; }

		// not supported
		public Assignment ele17AssignmentDerived() { return c17AssignmentDerived; }

		// not supported
		public Keyword ele170KeywordDerived() { return c170KeywordDerived; }

		// not supported
		public Alternatives ele2Alternatives() { return c2Alternatives; }

		// not supported
		public Assignment ele20AssignmentContainment() { return c20AssignmentContainment; }

		// not supported
		public Keyword ele200KeywordVal() { return c200KeywordVal; }

		// not supported
		public Keyword ele21KeywordRef() { return c21KeywordRef; }

		// not supported
		public Assignment ele3AssignmentEGenericType() { return c3AssignmentEGenericType; }

		// not supported
		public RuleCall ele30ParserRuleCallEGenericTypeReferenceDecl() { return c30ParserRuleCallEGenericTypeReferenceDecl; }

		// not supported
		public Group ele4Group() { return c4Group; }

		// not supported
		public Keyword ele40KeywordLeftSquareBracket() { return c40KeywordLeftSquareBracket; }

		// not supported
		public Assignment ele41AssignmentLowerBound() { return c41AssignmentLowerBound; }

		// not supported
		public RuleCall ele410TerminalRuleCallINT() { return c410TerminalRuleCallINT; }

		// not supported
		public Group ele42Group() { return c42Group; }

		// not supported
		public Keyword ele420KeywordFullStopFullStop() { return c420KeywordFullStopFullStop; }

		// not supported
		public Assignment ele421AssignmentUpperBound() { return c421AssignmentUpperBound; }

		// not supported
		public RuleCall ele4210ParserRuleCallSINT() { return c4210ParserRuleCallSINT; }

		// not supported
		public Keyword ele43KeywordRightSquareBracket() { return c43KeywordRightSquareBracket; }

		// not supported
		public Group ele5Group() { return c5Group; }

		// not supported
		public Keyword ele50KeywordNumberSign() { return c50KeywordNumberSign; }

		// not supported
		public Assignment ele51AssignmentEOpposite() { return c51AssignmentEOpposite; }

		// not supported
		public CrossReference ele510CrossReferenceEStringEReference() { return c510CrossReferenceEStringEReference; }

		// not supported
		public Assignment ele6AssignmentName() { return c6AssignmentName; }

		// not supported
		public RuleCall ele60TerminalRuleCallID() { return c60TerminalRuleCallID; }

		// not supported
		public Keyword ele7KeywordSemicolon() { return c7KeywordSemicolon; }
	}

	public class EEnumDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EEnumDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Keyword c1KeywordEnum = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentName = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallID = (RuleCall)c2AssignmentName.eContents().get(0);
		private final Keyword c3KeywordLeftCurlyBracket = (Keyword)cGroup.eContents().get(3);
		private final Assignment c4AssignmentELiterals = (Assignment)cGroup.eContents().get(4);
		private final RuleCall c40ParserRuleCallEEnumLiteralDecl = (RuleCall)c4AssignmentELiterals.eContents().get(0);
		private final Keyword c5KeywordRightCurlyBracket = (Keyword)cGroup.eContents().get(5);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Keyword ele1KeywordEnum() { return c1KeywordEnum; }

		// not supported
		public Assignment ele2AssignmentName() { return c2AssignmentName; }

		// not supported
		public RuleCall ele20TerminalRuleCallID() { return c20TerminalRuleCallID; }

		// not supported
		public Keyword ele3KeywordLeftCurlyBracket() { return c3KeywordLeftCurlyBracket; }

		// not supported
		public Assignment ele4AssignmentELiterals() { return c4AssignmentELiterals; }

		// not supported
		public RuleCall ele40ParserRuleCallEEnumLiteralDecl() { return c40ParserRuleCallEEnumLiteralDecl; }

		// not supported
		public Keyword ele5KeywordRightCurlyBracket() { return c5KeywordRightCurlyBracket; }
	}

	public class EEnumLiteralDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EEnumLiteralDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Assignment c1AssignmentName = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentName.eContents().get(0);
		private final Group c2Group = (Group)cGroup.eContents().get(2);
		private final Keyword c20KeywordEqualsSign = (Keyword)c2Group.eContents().get(0);
		private final Assignment c21AssignmentValue = (Assignment)c2Group.eContents().get(1);
		private final RuleCall c210TerminalRuleCallINT = (RuleCall)c21AssignmentValue.eContents().get(0);
		private final Assignment c3AssignmentLiteral = (Assignment)cGroup.eContents().get(3);
		private final RuleCall c30TerminalRuleCallSTRING = (RuleCall)c3AssignmentLiteral.eContents().get(0);
		private final Keyword c4KeywordSemicolon = (Keyword)cGroup.eContents().get(4);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Assignment ele1AssignmentName() { return c1AssignmentName; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }

		// not supported
		public Group ele2Group() { return c2Group; }

		// not supported
		public Keyword ele20KeywordEqualsSign() { return c20KeywordEqualsSign; }

		// not supported
		public Assignment ele21AssignmentValue() { return c21AssignmentValue; }

		// not supported
		public RuleCall ele210TerminalRuleCallINT() { return c210TerminalRuleCallINT; }

		// not supported
		public Assignment ele3AssignmentLiteral() { return c3AssignmentLiteral; }

		// not supported
		public RuleCall ele30TerminalRuleCallSTRING() { return c30TerminalRuleCallSTRING; }

		// not supported
		public Keyword ele4KeywordSemicolon() { return c4KeywordSemicolon; }
	}

	public class ETypeParameterDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ETypeParameterDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentName = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00TerminalRuleCallID = (RuleCall)c0AssignmentName.eContents().get(0);
		private final Group c1Group = (Group)cGroup.eContents().get(1);
		private final Keyword c10KeywordExtends = (Keyword)c1Group.eContents().get(0);
		private final Assignment c11AssignmentEBounds = (Assignment)c1Group.eContents().get(1);
		private final RuleCall c110ParserRuleCallEGenericTypeDecl = (RuleCall)c11AssignmentEBounds.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentName() { return c0AssignmentName; }

		// not supported
		public RuleCall ele00TerminalRuleCallID() { return c00TerminalRuleCallID; }

		// not supported
		public Group ele1Group() { return c1Group; }

		// not supported
		public Keyword ele10KeywordExtends() { return c10KeywordExtends; }

		// not supported
		public Assignment ele11AssignmentEBounds() { return c11AssignmentEBounds; }

		// not supported
		public RuleCall ele110ParserRuleCallEGenericTypeDecl() { return c110ParserRuleCallEGenericTypeDecl; }
	}

	public class EGenericTypeReferenceDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EGenericTypeReferenceDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group c0Group = (Group)cAlternatives.eContents().get(0);
		private final Assignment c00AssignmentEClassifier = (Assignment)c0Group.eContents().get(0);
		private final CrossReference c000CrossReferenceEStringEClassifier = (CrossReference)c00AssignmentEClassifier.eContents().get(0);
		private final Group c01Group = (Group)c0Group.eContents().get(1);
		private final Keyword c010KeywordLessThanSign = (Keyword)c01Group.eContents().get(0);
		private final Assignment c011AssignmentETypeArguments = (Assignment)c01Group.eContents().get(1);
		private final RuleCall c0110ParserRuleCallEGenericTypeDecl = (RuleCall)c011AssignmentETypeArguments.eContents().get(0);
		private final Group c012Group = (Group)c01Group.eContents().get(2);
		private final Keyword c0120KeywordComma = (Keyword)c012Group.eContents().get(0);
		private final Assignment c0121AssignmentETypeArguments = (Assignment)c012Group.eContents().get(1);
		private final RuleCall c01210ParserRuleCallEGenericTypeDecl = (RuleCall)c0121AssignmentETypeArguments.eContents().get(0);
		private final Keyword c013KeywordGreaterThanSign = (Keyword)c01Group.eContents().get(3);
		private final Group c1Group = (Group)cAlternatives.eContents().get(1);
		private final Keyword c10KeywordNumberSign = (Keyword)c1Group.eContents().get(0);
		private final Assignment c11AssignmentETypeParameter = (Assignment)c1Group.eContents().get(1);
		private final CrossReference c110CrossReferenceEStringETypeParameter = (CrossReference)c11AssignmentETypeParameter.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public Group ele0Group() { return c0Group; }

		// not supported
		public Assignment ele00AssignmentEClassifier() { return c00AssignmentEClassifier; }

		// not supported
		public CrossReference ele000CrossReferenceEStringEClassifier() { return c000CrossReferenceEStringEClassifier; }

		// not supported
		public Group ele01Group() { return c01Group; }

		// not supported
		public Keyword ele010KeywordLessThanSign() { return c010KeywordLessThanSign; }

		// not supported
		public Assignment ele011AssignmentETypeArguments() { return c011AssignmentETypeArguments; }

		// not supported
		public RuleCall ele0110ParserRuleCallEGenericTypeDecl() { return c0110ParserRuleCallEGenericTypeDecl; }

		// not supported
		public Group ele012Group() { return c012Group; }

		// not supported
		public Keyword ele0120KeywordComma() { return c0120KeywordComma; }

		// not supported
		public Assignment ele0121AssignmentETypeArguments() { return c0121AssignmentETypeArguments; }

		// not supported
		public RuleCall ele01210ParserRuleCallEGenericTypeDecl() { return c01210ParserRuleCallEGenericTypeDecl; }

		// not supported
		public Keyword ele013KeywordGreaterThanSign() { return c013KeywordGreaterThanSign; }

		// not supported
		public Group ele1Group() { return c1Group; }

		// not supported
		public Keyword ele10KeywordNumberSign() { return c10KeywordNumberSign; }

		// not supported
		public Assignment ele11AssignmentETypeParameter() { return c11AssignmentETypeParameter; }

		// not supported
		public CrossReference ele110CrossReferenceEStringETypeParameter() { return c110CrossReferenceEStringETypeParameter; }
	}

	public class EGenericTypeDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EGenericTypeDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group c0Group = (Group)cAlternatives.eContents().get(0);
		private final Assignment c00AssignmentEClassifier = (Assignment)c0Group.eContents().get(0);
		private final CrossReference c000CrossReferenceEStringEClassifier = (CrossReference)c00AssignmentEClassifier.eContents().get(0);
		private final Group c01Group = (Group)c0Group.eContents().get(1);
		private final Keyword c010KeywordLessThanSign = (Keyword)c01Group.eContents().get(0);
		private final Assignment c011AssignmentETypeArguments = (Assignment)c01Group.eContents().get(1);
		private final RuleCall c0110ParserRuleCallEGenericTypeDecl = (RuleCall)c011AssignmentETypeArguments.eContents().get(0);
		private final Group c012Group = (Group)c01Group.eContents().get(2);
		private final Keyword c0120KeywordComma = (Keyword)c012Group.eContents().get(0);
		private final Assignment c0121AssignmentETypeArguments = (Assignment)c012Group.eContents().get(1);
		private final RuleCall c01210ParserRuleCallEGenericTypeDecl = (RuleCall)c0121AssignmentETypeArguments.eContents().get(0);
		private final Keyword c013KeywordGreaterThanSign = (Keyword)c01Group.eContents().get(3);
		private final Group c1Group = (Group)cAlternatives.eContents().get(1);
		private final Keyword c10KeywordNumberSign = (Keyword)c1Group.eContents().get(0);
		private final Assignment c11AssignmentETypeParameter = (Assignment)c1Group.eContents().get(1);
		private final CrossReference c110CrossReferenceEStringETypeParameter = (CrossReference)c11AssignmentETypeParameter.eContents().get(0);
		private final Group c2Group = (Group)cAlternatives.eContents().get(2);
		private final Keyword c20KeywordQuestionMark = (Keyword)c2Group.eContents().get(0);
		private final Alternatives c21Alternatives = (Alternatives)c2Group.eContents().get(1);
		private final Group c210Group = (Group)c21Alternatives.eContents().get(0);
		private final Keyword c2100KeywordExtends = (Keyword)c210Group.eContents().get(0);
		private final Assignment c2101AssignmentEUpperBound = (Assignment)c210Group.eContents().get(1);
		private final RuleCall c21010ParserRuleCallEGenericTypeDecl = (RuleCall)c2101AssignmentEUpperBound.eContents().get(0);
		private final Group c211Group = (Group)c21Alternatives.eContents().get(1);
		private final Keyword c2110KeywordSuper = (Keyword)c211Group.eContents().get(0);
		private final Assignment c2111AssignmentELowerBound = (Assignment)c211Group.eContents().get(1);
		private final RuleCall c21110ParserRuleCallEGenericTypeDecl = (RuleCall)c2111AssignmentELowerBound.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public Group ele0Group() { return c0Group; }

		// not supported
		public Assignment ele00AssignmentEClassifier() { return c00AssignmentEClassifier; }

		// not supported
		public CrossReference ele000CrossReferenceEStringEClassifier() { return c000CrossReferenceEStringEClassifier; }

		// not supported
		public Group ele01Group() { return c01Group; }

		// not supported
		public Keyword ele010KeywordLessThanSign() { return c010KeywordLessThanSign; }

		// not supported
		public Assignment ele011AssignmentETypeArguments() { return c011AssignmentETypeArguments; }

		// not supported
		public RuleCall ele0110ParserRuleCallEGenericTypeDecl() { return c0110ParserRuleCallEGenericTypeDecl; }

		// not supported
		public Group ele012Group() { return c012Group; }

		// not supported
		public Keyword ele0120KeywordComma() { return c0120KeywordComma; }

		// not supported
		public Assignment ele0121AssignmentETypeArguments() { return c0121AssignmentETypeArguments; }

		// not supported
		public RuleCall ele01210ParserRuleCallEGenericTypeDecl() { return c01210ParserRuleCallEGenericTypeDecl; }

		// not supported
		public Keyword ele013KeywordGreaterThanSign() { return c013KeywordGreaterThanSign; }

		// not supported
		public Group ele1Group() { return c1Group; }

		// not supported
		public Keyword ele10KeywordNumberSign() { return c10KeywordNumberSign; }

		// not supported
		public Assignment ele11AssignmentETypeParameter() { return c11AssignmentETypeParameter; }

		// not supported
		public CrossReference ele110CrossReferenceEStringETypeParameter() { return c110CrossReferenceEStringETypeParameter; }

		// not supported
		public Group ele2Group() { return c2Group; }

		// not supported
		public Keyword ele20KeywordQuestionMark() { return c20KeywordQuestionMark; }

		// not supported
		public Alternatives ele21Alternatives() { return c21Alternatives; }

		// not supported
		public Group ele210Group() { return c210Group; }

		// not supported
		public Keyword ele2100KeywordExtends() { return c2100KeywordExtends; }

		// not supported
		public Assignment ele2101AssignmentEUpperBound() { return c2101AssignmentEUpperBound; }

		// not supported
		public RuleCall ele21010ParserRuleCallEGenericTypeDecl() { return c21010ParserRuleCallEGenericTypeDecl; }

		// not supported
		public Group ele211Group() { return c211Group; }

		// not supported
		public Keyword ele2110KeywordSuper() { return c2110KeywordSuper; }

		// not supported
		public Assignment ele2111AssignmentELowerBound() { return c2111AssignmentELowerBound; }

		// not supported
		public RuleCall ele21110ParserRuleCallEGenericTypeDecl() { return c21110ParserRuleCallEGenericTypeDecl; }
	}

	public class EOperationDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EOperationDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Alternatives c1Alternatives = (Alternatives)cGroup.eContents().get(1);
		private final Assignment c10AssignmentUnique = (Assignment)c1Alternatives.eContents().get(0);
		private final Keyword c100KeywordBag = (Keyword)c10AssignmentUnique.eContents().get(0);
		private final Assignment c11AssignmentOrdered = (Assignment)c1Alternatives.eContents().get(1);
		private final Keyword c110KeywordRandom = (Keyword)c11AssignmentOrdered.eContents().get(0);
		private final Keyword c2KeywordOp = (Keyword)cGroup.eContents().get(2);
		private final Alternatives c3Alternatives = (Alternatives)cGroup.eContents().get(3);
		private final Assignment c30AssignmentEGenericType = (Assignment)c3Alternatives.eContents().get(0);
		private final RuleCall c300ParserRuleCallEGenericTypeReferenceDecl = (RuleCall)c30AssignmentEGenericType.eContents().get(0);
		private final Keyword c31KeywordVoid = (Keyword)c3Alternatives.eContents().get(1);
		private final Assignment c4AssignmentName = (Assignment)cGroup.eContents().get(4);
		private final RuleCall c40TerminalRuleCallID = (RuleCall)c4AssignmentName.eContents().get(0);
		private final Group c5Group = (Group)cGroup.eContents().get(5);
		private final Keyword c50KeywordLessThanSign = (Keyword)c5Group.eContents().get(0);
		private final Assignment c51AssignmentETypeParameters = (Assignment)c5Group.eContents().get(1);
		private final RuleCall c510ParserRuleCallETypeParameterDecl = (RuleCall)c51AssignmentETypeParameters.eContents().get(0);
		private final Group c52Group = (Group)c5Group.eContents().get(2);
		private final Keyword c520KeywordComma = (Keyword)c52Group.eContents().get(0);
		private final Assignment c521AssignmentETypeParameters = (Assignment)c52Group.eContents().get(1);
		private final RuleCall c5210ParserRuleCallETypeParameterDecl = (RuleCall)c521AssignmentETypeParameters.eContents().get(0);
		private final Keyword c53KeywordGreaterThanSign = (Keyword)c5Group.eContents().get(3);
		private final Keyword c6KeywordLeftParenthesis = (Keyword)cGroup.eContents().get(6);
		private final Group c7Group = (Group)cGroup.eContents().get(7);
		private final Assignment c70AssignmentEParameters = (Assignment)c7Group.eContents().get(0);
		private final RuleCall c700ParserRuleCallEParameterDecl = (RuleCall)c70AssignmentEParameters.eContents().get(0);
		private final Group c71Group = (Group)c7Group.eContents().get(1);
		private final Keyword c710KeywordComma = (Keyword)c71Group.eContents().get(0);
		private final Assignment c711AssignmentEParameters = (Assignment)c71Group.eContents().get(1);
		private final RuleCall c7110ParserRuleCallEParameterDecl = (RuleCall)c711AssignmentEParameters.eContents().get(0);
		private final Keyword c8KeywordRightParenthesis = (Keyword)cGroup.eContents().get(8);
		private final Group c9Group = (Group)cGroup.eContents().get(9);
		private final Keyword c90KeywordThrows = (Keyword)c9Group.eContents().get(0);
		private final Assignment c91AssignmentEGenericExceptions = (Assignment)c9Group.eContents().get(1);
		private final RuleCall c910ParserRuleCallEGenericTypeReferenceDecl = (RuleCall)c91AssignmentEGenericExceptions.eContents().get(0);
		private final Group c92Group = (Group)c9Group.eContents().get(2);
		private final Keyword c920KeywordComma = (Keyword)c92Group.eContents().get(0);
		private final Assignment c921AssignmentEGenericExceptions = (Assignment)c92Group.eContents().get(1);
		private final RuleCall c9210ParserRuleCallEGenericTypeReferenceDecl = (RuleCall)c921AssignmentEGenericExceptions.eContents().get(0);
		private final Keyword c10KeywordSemicolon = (Keyword)cGroup.eContents().get(10);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Alternatives ele1Alternatives() { return c1Alternatives; }

		// not supported
		public Assignment ele10AssignmentUnique() { return c10AssignmentUnique; }

		// not supported
		public Keyword ele100KeywordBag() { return c100KeywordBag; }

		// not supported
		public Assignment ele11AssignmentOrdered() { return c11AssignmentOrdered; }

		// not supported
		public Keyword ele110KeywordRandom() { return c110KeywordRandom; }

		// not supported
		public Keyword ele2KeywordOp() { return c2KeywordOp; }

		// not supported
		public Alternatives ele3Alternatives() { return c3Alternatives; }

		// not supported
		public Assignment ele30AssignmentEGenericType() { return c30AssignmentEGenericType; }

		// not supported
		public RuleCall ele300ParserRuleCallEGenericTypeReferenceDecl() { return c300ParserRuleCallEGenericTypeReferenceDecl; }

		// not supported
		public Keyword ele31KeywordVoid() { return c31KeywordVoid; }

		// not supported
		public Assignment ele4AssignmentName() { return c4AssignmentName; }

		// not supported
		public RuleCall ele40TerminalRuleCallID() { return c40TerminalRuleCallID; }

		// not supported
		public Group ele5Group() { return c5Group; }

		// not supported
		public Keyword ele50KeywordLessThanSign() { return c50KeywordLessThanSign; }

		// not supported
		public Assignment ele51AssignmentETypeParameters() { return c51AssignmentETypeParameters; }

		// not supported
		public RuleCall ele510ParserRuleCallETypeParameterDecl() { return c510ParserRuleCallETypeParameterDecl; }

		// not supported
		public Group ele52Group() { return c52Group; }

		// not supported
		public Keyword ele520KeywordComma() { return c520KeywordComma; }

		// not supported
		public Assignment ele521AssignmentETypeParameters() { return c521AssignmentETypeParameters; }

		// not supported
		public RuleCall ele5210ParserRuleCallETypeParameterDecl() { return c5210ParserRuleCallETypeParameterDecl; }

		// not supported
		public Keyword ele53KeywordGreaterThanSign() { return c53KeywordGreaterThanSign; }

		// not supported
		public Keyword ele6KeywordLeftParenthesis() { return c6KeywordLeftParenthesis; }

		// not supported
		public Group ele7Group() { return c7Group; }

		// not supported
		public Assignment ele70AssignmentEParameters() { return c70AssignmentEParameters; }

		// not supported
		public RuleCall ele700ParserRuleCallEParameterDecl() { return c700ParserRuleCallEParameterDecl; }

		// not supported
		public Group ele71Group() { return c71Group; }

		// not supported
		public Keyword ele710KeywordComma() { return c710KeywordComma; }

		// not supported
		public Assignment ele711AssignmentEParameters() { return c711AssignmentEParameters; }

		// not supported
		public RuleCall ele7110ParserRuleCallEParameterDecl() { return c7110ParserRuleCallEParameterDecl; }

		// not supported
		public Keyword ele8KeywordRightParenthesis() { return c8KeywordRightParenthesis; }

		// not supported
		public Group ele9Group() { return c9Group; }

		// not supported
		public Keyword ele90KeywordThrows() { return c90KeywordThrows; }

		// not supported
		public Assignment ele91AssignmentEGenericExceptions() { return c91AssignmentEGenericExceptions; }

		// not supported
		public RuleCall ele910ParserRuleCallEGenericTypeReferenceDecl() { return c910ParserRuleCallEGenericTypeReferenceDecl; }

		// not supported
		public Group ele92Group() { return c92Group; }

		// not supported
		public Keyword ele920KeywordComma() { return c920KeywordComma; }

		// not supported
		public Assignment ele921AssignmentEGenericExceptions() { return c921AssignmentEGenericExceptions; }

		// not supported
		public RuleCall ele9210ParserRuleCallEGenericTypeReferenceDecl() { return c9210ParserRuleCallEGenericTypeReferenceDecl; }

		// not supported
		public Keyword ele10KeywordSemicolon() { return c10KeywordSemicolon; }
	}

	public class EParameterDeclElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EParameterDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentEAnnotations = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallEAnnotationDecl = (RuleCall)c0AssignmentEAnnotations.eContents().get(0);
		private final Assignment c1AssignmentEGenericType = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10ParserRuleCallEGenericTypeReferenceDecl = (RuleCall)c1AssignmentEGenericType.eContents().get(0);
		private final Assignment c2AssignmentName = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallID = (RuleCall)c2AssignmentName.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentEAnnotations() { return c0AssignmentEAnnotations; }

		// not supported
		public RuleCall ele00ParserRuleCallEAnnotationDecl() { return c00ParserRuleCallEAnnotationDecl; }

		// not supported
		public Assignment ele1AssignmentEGenericType() { return c1AssignmentEGenericType; }

		// not supported
		public RuleCall ele10ParserRuleCallEGenericTypeReferenceDecl() { return c10ParserRuleCallEGenericTypeReferenceDecl; }

		// not supported
		public Assignment ele2AssignmentName() { return c2AssignmentName; }

		// not supported
		public RuleCall ele20TerminalRuleCallID() { return c20TerminalRuleCallID; }
	}

	public class MapEntrySuperElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MapEntrySuper");
		private final RuleCall cParserRuleCallMapEntry = (RuleCall)rule.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public RuleCall eleParserRuleCallMapEntry() { return cParserRuleCallMapEntry; }
	}

	public class MapEntryElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MapEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentDetailKey = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00TerminalRuleCallID = (RuleCall)c0AssignmentDetailKey.eContents().get(0);
		private final Keyword c1KeywordEqualsSign = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentDetailValue = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallSTRING = (RuleCall)c2AssignmentDetailValue.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentDetailKey() { return c0AssignmentDetailKey; }

		// not supported
		public RuleCall ele00TerminalRuleCallID() { return c00TerminalRuleCallID; }

		// not supported
		public Keyword ele1KeywordEqualsSign() { return c1KeywordEqualsSign; }

		// not supported
		public Assignment ele2AssignmentDetailValue() { return c2AssignmentDetailValue; }

		// not supported
		public RuleCall ele20TerminalRuleCallSTRING() { return c20TerminalRuleCallSTRING; }
	}

	public class MultiplicityExprElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiplicityExpr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword c0KeywordPlusSign = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword c1KeywordQuestionMark = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword c2KeywordAsterisk = (Keyword)cAlternatives.eContents().get(2);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public Keyword ele0KeywordPlusSign() { return c0KeywordPlusSign; }

		// not supported
		public Keyword ele1KeywordQuestionMark() { return c1KeywordQuestionMark; }

		// not supported
		public Keyword ele2KeywordAsterisk() { return c2KeywordAsterisk; }
	}

	public class QIDElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall c0TerminalRuleCallID = (RuleCall)cGroup.eContents().get(0);
		private final Group c1Group = (Group)cGroup.eContents().get(1);
		private final Alternatives c10Alternatives = (Alternatives)c1Group.eContents().get(0);
		private final Keyword c100KeywordFullStop = (Keyword)c10Alternatives.eContents().get(0);
		private final Keyword c101Keyword$ = (Keyword)c10Alternatives.eContents().get(1);
		private final RuleCall c11TerminalRuleCallID = (RuleCall)c1Group.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public RuleCall ele0TerminalRuleCallID() { return c0TerminalRuleCallID; }

		// not supported
		public Group ele1Group() { return c1Group; }

		// not supported
		public Alternatives ele10Alternatives() { return c10Alternatives; }

		// not supported
		public Keyword ele100KeywordFullStop() { return c100KeywordFullStop; }

		// not supported
		public Keyword ele101Keyword$() { return c101Keyword$; }

		// not supported
		public RuleCall ele11TerminalRuleCallID() { return c11TerminalRuleCallID; }
	}

	public class STRING_OR_QIDElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "STRING_OR_QID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0TerminalRuleCallSTRING = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallQID = (RuleCall)cAlternatives.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0TerminalRuleCallSTRING() { return c0TerminalRuleCallSTRING; }

		// not supported
		public RuleCall ele1ParserRuleCallQID() { return c1ParserRuleCallQID; }
	}

	public class SINTElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SINT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordHyphenMinus = (Keyword)cGroup.eContents().get(0);
		private final RuleCall c1TerminalRuleCallINT = (RuleCall)cGroup.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordHyphenMinus() { return c0KeywordHyphenMinus; }

		// not supported
		public RuleCall ele1TerminalRuleCallINT() { return c1TerminalRuleCallINT; }
	}
	
	private EcoreDslElements pEcoreDsl;
	private ImportStatementDeclElements pImportStatementDecl;
	private EPackageDeclElements pEPackageDecl;
	private SubEPackageDeclElements pSubEPackageDecl;
	private EClassifierDeclElements pEClassifierDecl;
	private EDataTypeDeclElements pEDataTypeDecl;
	private EAnnotationDeclElements pEAnnotationDecl;
	private EClassDeclElements pEClassDecl;
	private EStructuralFeatureDeclElements pEStructuralFeatureDecl;
	private EAttributeDeclElements pEAttributeDecl;
	private EReferenceDeclElements pEReferenceDecl;
	private EEnumDeclElements pEEnumDecl;
	private EEnumLiteralDeclElements pEEnumLiteralDecl;
	private ETypeParameterDeclElements pETypeParameterDecl;
	private EGenericTypeReferenceDeclElements pEGenericTypeReferenceDecl;
	private EGenericTypeDeclElements pEGenericTypeDecl;
	private EOperationDeclElements pEOperationDecl;
	private EParameterDeclElements pEParameterDecl;
	private MapEntrySuperElements pMapEntrySuper;
	private MapEntryElements pMapEntry;
	private MultiplicityExprElements pMultiplicityExpr;
	private QIDElements pQID;
	private STRING_OR_QIDElements pSTRING_OR_QID;
	private SINTElements pSINT;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess terminalsGrammarAccess;

	@Inject
	public EcoreDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess terminalsGrammarAccess) {
		this.grammarProvider = grammarProvider;
		this.terminalsGrammarAccess = terminalsGrammarAccess;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return terminalsGrammarAccess;
	}

	
	// not supported
	public EcoreDslElements prEcoreDsl() {
		return (pEcoreDsl != null) ? pEcoreDsl : (pEcoreDsl = new EcoreDslElements());
	} 

	// not supported
	public ImportStatementDeclElements prImportStatementDecl() {
		return (pImportStatementDecl != null) ? pImportStatementDecl : (pImportStatementDecl = new ImportStatementDeclElements());
	} 

	// not supported
	public EPackageDeclElements prEPackageDecl() {
		return (pEPackageDecl != null) ? pEPackageDecl : (pEPackageDecl = new EPackageDeclElements());
	} 

	// not supported
	public SubEPackageDeclElements prSubEPackageDecl() {
		return (pSubEPackageDecl != null) ? pSubEPackageDecl : (pSubEPackageDecl = new SubEPackageDeclElements());
	} 

	// not supported
	public EClassifierDeclElements prEClassifierDecl() {
		return (pEClassifierDecl != null) ? pEClassifierDecl : (pEClassifierDecl = new EClassifierDeclElements());
	} 

	// not supported
	public EDataTypeDeclElements prEDataTypeDecl() {
		return (pEDataTypeDecl != null) ? pEDataTypeDecl : (pEDataTypeDecl = new EDataTypeDeclElements());
	} 

	// not supported
	public EAnnotationDeclElements prEAnnotationDecl() {
		return (pEAnnotationDecl != null) ? pEAnnotationDecl : (pEAnnotationDecl = new EAnnotationDeclElements());
	} 

	// not supported
	public EClassDeclElements prEClassDecl() {
		return (pEClassDecl != null) ? pEClassDecl : (pEClassDecl = new EClassDeclElements());
	} 

	// not supported
	public EStructuralFeatureDeclElements prEStructuralFeatureDecl() {
		return (pEStructuralFeatureDecl != null) ? pEStructuralFeatureDecl : (pEStructuralFeatureDecl = new EStructuralFeatureDeclElements());
	} 

	// not supported
	public EAttributeDeclElements prEAttributeDecl() {
		return (pEAttributeDecl != null) ? pEAttributeDecl : (pEAttributeDecl = new EAttributeDeclElements());
	} 

	// not supported
	public EReferenceDeclElements prEReferenceDecl() {
		return (pEReferenceDecl != null) ? pEReferenceDecl : (pEReferenceDecl = new EReferenceDeclElements());
	} 

	// not supported
	public EEnumDeclElements prEEnumDecl() {
		return (pEEnumDecl != null) ? pEEnumDecl : (pEEnumDecl = new EEnumDeclElements());
	} 

	// not supported
	public EEnumLiteralDeclElements prEEnumLiteralDecl() {
		return (pEEnumLiteralDecl != null) ? pEEnumLiteralDecl : (pEEnumLiteralDecl = new EEnumLiteralDeclElements());
	} 

	// not supported
	public ETypeParameterDeclElements prETypeParameterDecl() {
		return (pETypeParameterDecl != null) ? pETypeParameterDecl : (pETypeParameterDecl = new ETypeParameterDeclElements());
	} 

	// not supported
	public EGenericTypeReferenceDeclElements prEGenericTypeReferenceDecl() {
		return (pEGenericTypeReferenceDecl != null) ? pEGenericTypeReferenceDecl : (pEGenericTypeReferenceDecl = new EGenericTypeReferenceDeclElements());
	} 

	// not supported
	public EGenericTypeDeclElements prEGenericTypeDecl() {
		return (pEGenericTypeDecl != null) ? pEGenericTypeDecl : (pEGenericTypeDecl = new EGenericTypeDeclElements());
	} 

	// not supported
	public EOperationDeclElements prEOperationDecl() {
		return (pEOperationDecl != null) ? pEOperationDecl : (pEOperationDecl = new EOperationDeclElements());
	} 

	// not supported
	public EParameterDeclElements prEParameterDecl() {
		return (pEParameterDecl != null) ? pEParameterDecl : (pEParameterDecl = new EParameterDeclElements());
	} 

	// not supported
	public MapEntrySuperElements prMapEntrySuper() {
		return (pMapEntrySuper != null) ? pMapEntrySuper : (pMapEntrySuper = new MapEntrySuperElements());
	} 

	// not supported
	public MapEntryElements prMapEntry() {
		return (pMapEntry != null) ? pMapEntry : (pMapEntry = new MapEntryElements());
	} 

	// not supported
	public MultiplicityExprElements prMultiplicityExpr() {
		return (pMultiplicityExpr != null) ? pMultiplicityExpr : (pMultiplicityExpr = new MultiplicityExprElements());
	} 

	// not supported
	public QIDElements prQID() {
		return (pQID != null) ? pQID : (pQID = new QIDElements());
	} 

	// not supported
	public STRING_OR_QIDElements prSTRING_OR_QID() {
		return (pSTRING_OR_QID != null) ? pSTRING_OR_QID : (pSTRING_OR_QID = new STRING_OR_QIDElements());
	} 

	// not supported
	public SINTElements prSINT() {
		return (pSINT != null) ? pSINT : (pSINT = new SINTElements());
	} 

	// not supported
	public TerminalRule trID() {
		return terminalsGrammarAccess.trID();
	} 

	// not supported
	public TerminalRule trINT() {
		return terminalsGrammarAccess.trINT();
	} 

	// not supported
	public TerminalRule trSTRING() {
		return terminalsGrammarAccess.trSTRING();
	} 

	// not supported
	public TerminalRule trML_COMMENT() {
		return terminalsGrammarAccess.trML_COMMENT();
	} 

	// not supported
	public TerminalRule trSL_COMMENT() {
		return terminalsGrammarAccess.trSL_COMMENT();
	} 

	// not supported
	public TerminalRule trWS() {
		return terminalsGrammarAccess.trWS();
	} 

	// not supported
	public TerminalRule trANY_OTHER() {
		return terminalsGrammarAccess.trANY_OTHER();
	} 
}
