/*
* generated by Xtext
*/
grammar InternalEcoreDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.example.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.xtext.example.services.EcoreDslGrammarAccess;

}

@parser::members {
 
 	private EcoreDslGrammarAccess grammarAccess;
 	
    public InternalEcoreDslParser(TokenStream input, IAstFactory factory, EcoreDslGrammarAccess grammarAccess) {
        super(input, factory, grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/eclipse/xtext/example/parser/antlr/internal/InternalEcoreDsl.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "EcoreDsl";	
   	} 
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleEcoreDsl
entryRuleEcoreDsl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEcoreDsl().getRule(), currentNode); }
	 iv_ruleEcoreDsl=ruleEcoreDsl 
	 { $current=$iv_ruleEcoreDsl.current; } 
	 EOF 
;

// Rule EcoreDsl
ruleEcoreDsl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEcoreDsl().ele00ParserRuleCallImportStatementDecl(), currentNode); 
	    }
	    lv_imports_0=ruleImportStatementDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEcoreDsl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "imports", lv_imports_0, "ImportStatementDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEcoreDsl().ele10ParserRuleCallEPackageDecl(), currentNode); 
	    }
	    lv_package_1=ruleEPackageDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEcoreDsl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "package", lv_package_1, "EPackageDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleImportStatementDecl
entryRuleImportStatementDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prImportStatementDecl().getRule(), currentNode); }
	 iv_ruleImportStatementDecl=ruleImportStatementDecl 
	 { $current=$iv_ruleImportStatementDecl.current; } 
	 EOF 
;

// Rule ImportStatementDecl
ruleImportStatementDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('import' 
    {
        createLeafNode(grammarAccess.prImportStatementDecl().ele0KeywordImport(), null); 
    }
((	
	
	    lv_alias_1=	RULE_ID
	{
		createLeafNode(grammarAccess.prImportStatementDecl().ele100TerminalRuleCallID(), "alias"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prImportStatementDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "alias", lv_alias_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.prImportStatementDecl().ele11KeywordEqualsSign(), null); 
    }
)?(	
	
	    lv_importURI_3=	RULE_STRING
	{
		createLeafNode(grammarAccess.prImportStatementDecl().ele20TerminalRuleCallSTRING(), "importURI"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prImportStatementDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "importURI", lv_importURI_3, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.prImportStatementDecl().ele3KeywordSemicolon(), null); 
    }
);





// Entry rule entryRuleEPackageDecl
entryRuleEPackageDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEPackageDecl().getRule(), currentNode); }
	 iv_ruleEPackageDecl=ruleEPackageDecl 
	 { $current=$iv_ruleEPackageDecl.current; } 
	 EOF 
;

// Rule EPackageDecl
ruleEPackageDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEPackageDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'package' 
    {
        createLeafNode(grammarAccess.prEPackageDecl().ele1KeywordPackage(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEPackageDecl().ele20ParserRuleCallQID(), currentNode); 
	    }
	    lv_name_2=ruleQID 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "QID", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'nsURI' 
    {
        createLeafNode(grammarAccess.prEPackageDecl().ele3KeywordNsURI(), null); 
    }
'=' 
    {
        createLeafNode(grammarAccess.prEPackageDecl().ele4KeywordEqualsSign(), null); 
    }
(	
	
	    lv_nsURI_5=	RULE_STRING
	{
		createLeafNode(grammarAccess.prEPackageDecl().ele50TerminalRuleCallSTRING(), "nsURI"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nsURI", lv_nsURI_5, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'nsPrefix' 
    {
        createLeafNode(grammarAccess.prEPackageDecl().ele6KeywordNsPrefix(), null); 
    }
'=' 
    {
        createLeafNode(grammarAccess.prEPackageDecl().ele7KeywordEqualsSign(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEPackageDecl().ele80ParserRuleCallQID(), currentNode); 
	    }
	    lv_nsPrefix_8=ruleQID 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "nsPrefix", lv_nsPrefix_8, "QID", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.prEPackageDecl().ele9KeywordLeftCurlyBracket(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEPackageDecl().ele1000ParserRuleCallSubEPackageDecl(), currentNode); 
	    }
	    lv_eSubpackages_10=ruleSubEPackageDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eSubpackages", lv_eSubpackages_10, "SubEPackageDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEPackageDecl().ele1010ParserRuleCallEClassifierDecl(), currentNode); 
	    }
	    lv_eClassifiers_11=ruleEClassifierDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eClassifiers", lv_eClassifiers_11, "EClassifierDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.prEPackageDecl().ele11KeywordRightCurlyBracket(), null); 
    }
);





// Entry rule entryRuleSubEPackageDecl
entryRuleSubEPackageDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prSubEPackageDecl().getRule(), currentNode); }
	 iv_ruleSubEPackageDecl=ruleSubEPackageDecl 
	 { $current=$iv_ruleSubEPackageDecl.current; } 
	 EOF 
;

// Rule SubEPackageDecl
ruleSubEPackageDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prSubEPackageDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prSubEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'package' 
    {
        createLeafNode(grammarAccess.prSubEPackageDecl().ele1KeywordPackage(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.prSubEPackageDecl().ele20TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prSubEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.prSubEPackageDecl().ele3KeywordLeftCurlyBracket(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prSubEPackageDecl().ele400ParserRuleCallSubEPackageDecl(), currentNode); 
	    }
	    lv_eSubpackages_4=ruleSubEPackageDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prSubEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eSubpackages", lv_eSubpackages_4, "SubEPackageDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prSubEPackageDecl().ele410ParserRuleCallEClassifierDecl(), currentNode); 
	    }
	    lv_eClassifiers_5=ruleEClassifierDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prSubEPackageDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eClassifiers", lv_eClassifiers_5, "EClassifierDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.prSubEPackageDecl().ele5KeywordRightCurlyBracket(), null); 
    }
);





// Entry rule entryRuleEClassifierDecl
entryRuleEClassifierDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEClassifierDecl().getRule(), currentNode); }
	 iv_ruleEClassifierDecl=ruleEClassifierDecl 
	 { $current=$iv_ruleEClassifierDecl.current; } 
	 EOF 
;

// Rule EClassifierDecl
ruleEClassifierDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.prEClassifierDecl().ele0ParserRuleCallEClassDecl(), currentNode); 
    }
    this_EClassDecl_0=ruleEClassDecl
    { 
        $current = $this_EClassDecl_0.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.prEClassifierDecl().ele0ParserRuleCallEClassDecl(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.prEClassifierDecl().ele1ParserRuleCallEDataTypeDecl(), currentNode); 
    }
    this_EDataTypeDecl_1=ruleEDataTypeDecl
    { 
        $current = $this_EDataTypeDecl_1.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.prEClassifierDecl().ele1ParserRuleCallEDataTypeDecl(), null); 
    }
);





// Entry rule entryRuleEDataTypeDecl
entryRuleEDataTypeDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEDataTypeDecl().getRule(), currentNode); }
	 iv_ruleEDataTypeDecl=ruleEDataTypeDecl 
	 { $current=$iv_ruleEDataTypeDecl.current; } 
	 EOF 
;

// Rule EDataTypeDecl
ruleEDataTypeDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEDataTypeDecl().ele000ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEDataTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    lv_serializable_1='!serializable' 
    {
        createLeafNode(grammarAccess.prEDataTypeDecl().ele010KeywordSerializable(), "serializable"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEDataTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "serializable", true, "!serializable", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?('datatype' 
    {
        createLeafNode(grammarAccess.prEDataTypeDecl().ele020KeywordDatatype(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.prEDataTypeDecl().ele0210TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEDataTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)':' 
    {
        createLeafNode(grammarAccess.prEDataTypeDecl().ele022KeywordColon(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEDataTypeDecl().ele0230ParserRuleCallSTRING_OR_QID(), currentNode); 
	    }
	    lv_instanceClassName_5=ruleSTRING_OR_QID 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEDataTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "instanceClassName", lv_instanceClassName_5, "STRING_OR_QID", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.prEDataTypeDecl().ele024KeywordSemicolon(), null); 
    }
))
    |
    { 
        currentNode=createCompositeNode(grammarAccess.prEDataTypeDecl().ele1ParserRuleCallEEnumDecl(), currentNode); 
    }
    this_EEnumDecl_7=ruleEEnumDecl
    { 
        $current = $this_EEnumDecl_7.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.prEDataTypeDecl().ele1ParserRuleCallEEnumDecl(), null); 
    }
);





// Entry rule entryRuleEAnnotationDecl
entryRuleEAnnotationDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEAnnotationDecl().getRule(), currentNode); }
	 iv_ruleEAnnotationDecl=ruleEAnnotationDecl 
	 { $current=$iv_ruleEAnnotationDecl.current; } 
	 EOF 
;

// Rule EAnnotationDecl
ruleEAnnotationDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('@' 
    {
        createLeafNode(grammarAccess.prEAnnotationDecl().ele0KeywordCommercialAt(), null); 
    }
(	
	
	    lv_source_1=	RULE_STRING
	{
		createLeafNode(grammarAccess.prEAnnotationDecl().ele10TerminalRuleCallSTRING(), "source"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAnnotationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "source", lv_source_1, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.prEAnnotationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.prEAnnotationDecl().ele20CrossReferenceEStringEModelElement(), "eModelElement"); 
	}

		// TODO assign feature to currentNode
	
)?'(' 
    {
        createLeafNode(grammarAccess.prEAnnotationDecl().ele3KeywordLeftParenthesis(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEAnnotationDecl().ele40ParserRuleCallMapEntrySuper(), currentNode); 
	    }
	    lv_contents_4=ruleMapEntrySuper 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAnnotationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "contents", lv_contents_4, "MapEntrySuper", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.prEAnnotationDecl().ele50KeywordComma(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEAnnotationDecl().ele510ParserRuleCallMapEntrySuper(), currentNode); 
	    }
	    lv_contents_6=ruleMapEntrySuper 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAnnotationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "contents", lv_contents_6, "MapEntrySuper", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*')' 
    {
        createLeafNode(grammarAccess.prEAnnotationDecl().ele6KeywordRightParenthesis(), null); 
    }
);





// Entry rule entryRuleEClassDecl
entryRuleEClassDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEClassDecl().getRule(), currentNode); }
	 iv_ruleEClassDecl=ruleEClassDecl 
	 { $current=$iv_ruleEClassDecl.current; } 
	 EOF 
;

// Rule EClassDecl
ruleEClassDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEClassDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    lv_abstract_1='abstract' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele10KeywordAbstract(), "abstract"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "abstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?((	
	
	    lv_interface_2='interface' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele200KeywordInterface(), "interface"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "interface", true, "interface", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |'class' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele21KeywordClass(), null); 
    }
)(	
	
	    lv_name_4=	RULE_ID
	{
		createLeafNode(grammarAccess.prEClassDecl().ele30TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_4, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('<' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele40KeywordLessThanSign(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEClassDecl().ele410ParserRuleCallETypeParameterDecl(), currentNode); 
	    }
	    lv_eTypeParameters_6=ruleETypeParameterDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eTypeParameters", lv_eTypeParameters_6, "ETypeParameterDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele420KeywordComma(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEClassDecl().ele4210ParserRuleCallETypeParameterDecl(), currentNode); 
	    }
	    lv_eTypeParameters_8=ruleETypeParameterDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eTypeParameters", lv_eTypeParameters_8, "ETypeParameterDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'>' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele43KeywordGreaterThanSign(), null); 
    }
)?('extends' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele50KeywordExtends(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEClassDecl().ele510ParserRuleCallEGenericTypeReferenceDecl(), currentNode); 
	    }
	    lv_eGenericSuperTypes_11=ruleEGenericTypeReferenceDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eGenericSuperTypes", lv_eGenericSuperTypes_11, "EGenericTypeReferenceDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele520KeywordComma(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEClassDecl().ele5210ParserRuleCallEGenericTypeReferenceDecl(), currentNode); 
	    }
	    lv_eGenericSuperTypes_13=ruleEGenericTypeReferenceDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eGenericSuperTypes", lv_eGenericSuperTypes_13, "EGenericTypeReferenceDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*)?(':' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele60KeywordColon(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEClassDecl().ele610ParserRuleCallSTRING_OR_QID(), currentNode); 
	    }
	    lv_instanceClassName_15=ruleSTRING_OR_QID 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "instanceClassName", lv_instanceClassName_15, "STRING_OR_QID", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))?'{' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele7KeywordLeftCurlyBracket(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEClassDecl().ele800ParserRuleCallEStructuralFeatureDecl(), currentNode); 
	    }
	    lv_eStructuralFeatures_17=ruleEStructuralFeatureDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eStructuralFeatures", lv_eStructuralFeatures_17, "EStructuralFeatureDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEClassDecl().ele810ParserRuleCallEOperationDecl(), currentNode); 
	    }
	    lv_eOperations_18=ruleEOperationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEClassDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eOperations", lv_eOperations_18, "EOperationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.prEClassDecl().ele9KeywordRightCurlyBracket(), null); 
    }
);





// Entry rule entryRuleEStructuralFeatureDecl
entryRuleEStructuralFeatureDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEStructuralFeatureDecl().getRule(), currentNode); }
	 iv_ruleEStructuralFeatureDecl=ruleEStructuralFeatureDecl 
	 { $current=$iv_ruleEStructuralFeatureDecl.current; } 
	 EOF 
;

// Rule EStructuralFeatureDecl
ruleEStructuralFeatureDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.prEStructuralFeatureDecl().ele0ParserRuleCallEAttributeDecl(), currentNode); 
    }
    this_EAttributeDecl_0=ruleEAttributeDecl
    { 
        $current = $this_EAttributeDecl_0.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.prEStructuralFeatureDecl().ele0ParserRuleCallEAttributeDecl(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.prEStructuralFeatureDecl().ele1ParserRuleCallEReferenceDecl(), currentNode); 
    }
    this_EReferenceDecl_1=ruleEReferenceDecl
    { 
        $current = $this_EReferenceDecl_1.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.prEStructuralFeatureDecl().ele1ParserRuleCallEReferenceDecl(), null); 
    }
);





// Entry rule entryRuleEAttributeDecl
entryRuleEAttributeDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEAttributeDecl().getRule(), currentNode); }
	 iv_ruleEAttributeDecl=ruleEAttributeDecl 
	 { $current=$iv_ruleEAttributeDecl.current; } 
	 EOF 
;

// Rule EAttributeDecl
ruleEAttributeDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEAttributeDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*((	
	
	    lv_iD_1='ID' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele100KeywordID(), "iD"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "iD", true, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_unique_2='bag' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele110KeywordBag(), "unique"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unique", true, "bag", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_ordered_3='random' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele120KeywordRandom(), "ordered"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ordered", true, "random", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_changeable_4='readonly' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele130KeywordReadonly(), "changeable"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "changeable", true, "readonly", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_volatile_5='volatile' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele140KeywordVolatile(), "volatile"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "volatile", true, "volatile", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_transient_6='transient' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele150KeywordTransient(), "transient"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "transient", true, "transient", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_unsettable_7='unsettable' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele160KeywordUnsettable(), "unsettable"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unsettable", true, "unsettable", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_derived_8='derived' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele170KeywordDerived(), "derived"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "derived", true, "derived", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))*'attr' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele2KeywordAttr(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEAttributeDecl().ele30ParserRuleCallEGenericTypeReferenceDecl(), currentNode); 
	    }
	    lv_eGenericType_10=ruleEGenericTypeReferenceDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "eGenericType", lv_eGenericType_10, "EGenericTypeReferenceDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)('[' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele40KeywordLeftSquareBracket(), null); 
    }
(	
	
	    lv_lowerBound_12=	RULE_INT
	{
		createLeafNode(grammarAccess.prEAttributeDecl().ele410TerminalRuleCallINT(), "lowerBound"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "lowerBound", lv_lowerBound_12, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('..' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele420KeywordFullStopFullStop(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEAttributeDecl().ele4210ParserRuleCallSINT(), currentNode); 
	    }
	    lv_upperBound_14=ruleSINT 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "upperBound", lv_upperBound_14, "SINT", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))?']' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele43KeywordRightSquareBracket(), null); 
    }
)?(	
	
	    lv_name_16=	RULE_ID
	{
		createLeafNode(grammarAccess.prEAttributeDecl().ele50TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_16, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('=' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele60KeywordEqualsSign(), null); 
    }
(	
	
	    lv_defaultValueLiteral_18=	RULE_STRING
	{
		createLeafNode(grammarAccess.prEAttributeDecl().ele610TerminalRuleCallSTRING(), "defaultValueLiteral"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEAttributeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defaultValueLiteral", lv_defaultValueLiteral_18, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))?';' 
    {
        createLeafNode(grammarAccess.prEAttributeDecl().ele7KeywordSemicolon(), null); 
    }
);





// Entry rule entryRuleEReferenceDecl
entryRuleEReferenceDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEReferenceDecl().getRule(), currentNode); }
	 iv_ruleEReferenceDecl=ruleEReferenceDecl 
	 { $current=$iv_ruleEReferenceDecl.current; } 
	 EOF 
;

// Rule EReferenceDecl
ruleEReferenceDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEReferenceDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*((	
	
	    lv_resolveProxies_1='local' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele100KeywordLocal(), "resolveProxies"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "resolveProxies", true, "local", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_unique_2='bag' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele110KeywordBag(), "unique"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unique", true, "bag", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_ordered_3='random' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele120KeywordRandom(), "ordered"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ordered", true, "random", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_changeable_4='readonly' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele130KeywordReadonly(), "changeable"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "changeable", true, "readonly", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_volatile_5='volatile' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele140KeywordVolatile(), "volatile"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "volatile", true, "volatile", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_transient_6='transient' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele150KeywordTransient(), "transient"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "transient", true, "transient", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_unsettable_7='unsettable' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele160KeywordUnsettable(), "unsettable"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unsettable", true, "unsettable", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_derived_8='derived' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele170KeywordDerived(), "derived"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "derived", true, "derived", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))*((	
	
	    lv_containment_9='val' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele200KeywordVal(), "containment"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "containment", true, "val", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |'ref' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele21KeywordRef(), null); 
    }
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEReferenceDecl().ele30ParserRuleCallEGenericTypeReferenceDecl(), currentNode); 
	    }
	    lv_eGenericType_11=ruleEGenericTypeReferenceDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "eGenericType", lv_eGenericType_11, "EGenericTypeReferenceDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)('[' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele40KeywordLeftSquareBracket(), null); 
    }
(	
	
	    lv_lowerBound_13=	RULE_INT
	{
		createLeafNode(grammarAccess.prEReferenceDecl().ele410TerminalRuleCallINT(), "lowerBound"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "lowerBound", lv_lowerBound_13, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('..' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele420KeywordFullStopFullStop(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEReferenceDecl().ele4210ParserRuleCallSINT(), currentNode); 
	    }
	    lv_upperBound_15=ruleSINT 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "upperBound", lv_upperBound_15, "SINT", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))?']' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele43KeywordRightSquareBracket(), null); 
    }
)?('#' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele50KeywordNumberSign(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.prEReferenceDecl().ele510CrossReferenceEStringEReference(), "eOpposite"); 
	}

		// TODO assign feature to currentNode
	
))?(	
	
	    lv_name_19=	RULE_ID
	{
		createLeafNode(grammarAccess.prEReferenceDecl().ele60TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_19, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.prEReferenceDecl().ele7KeywordSemicolon(), null); 
    }
);





// Entry rule entryRuleEEnumDecl
entryRuleEEnumDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEEnumDecl().getRule(), currentNode); }
	 iv_ruleEEnumDecl=ruleEEnumDecl 
	 { $current=$iv_ruleEEnumDecl.current; } 
	 EOF 
;

// Rule EEnumDecl
ruleEEnumDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEEnumDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEEnumDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'enum' 
    {
        createLeafNode(grammarAccess.prEEnumDecl().ele1KeywordEnum(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.prEEnumDecl().ele20TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEEnumDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.prEEnumDecl().ele3KeywordLeftCurlyBracket(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEEnumDecl().ele40ParserRuleCallEEnumLiteralDecl(), currentNode); 
	    }
	    lv_eLiterals_4=ruleEEnumLiteralDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEEnumDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eLiterals", lv_eLiterals_4, "EEnumLiteralDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)+'}' 
    {
        createLeafNode(grammarAccess.prEEnumDecl().ele5KeywordRightCurlyBracket(), null); 
    }
);





// Entry rule entryRuleEEnumLiteralDecl
entryRuleEEnumLiteralDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEEnumLiteralDecl().getRule(), currentNode); }
	 iv_ruleEEnumLiteralDecl=ruleEEnumLiteralDecl 
	 { $current=$iv_ruleEEnumLiteralDecl.current; } 
	 EOF 
;

// Rule EEnumLiteralDecl
ruleEEnumLiteralDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEEnumLiteralDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEEnumLiteralDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.prEEnumLiteralDecl().ele10TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEEnumLiteralDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('=' 
    {
        createLeafNode(grammarAccess.prEEnumLiteralDecl().ele20KeywordEqualsSign(), null); 
    }
(	
	
	    lv_value_3=	RULE_INT
	{
		createLeafNode(grammarAccess.prEEnumLiteralDecl().ele210TerminalRuleCallINT(), "value"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEEnumLiteralDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_3, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))?(	
	
	    lv_literal_4=	RULE_STRING
	{
		createLeafNode(grammarAccess.prEEnumLiteralDecl().ele30TerminalRuleCallSTRING(), "literal"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEEnumLiteralDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "literal", lv_literal_4, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?';' 
    {
        createLeafNode(grammarAccess.prEEnumLiteralDecl().ele4KeywordSemicolon(), null); 
    }
);





// Entry rule entryRuleETypeParameterDecl
entryRuleETypeParameterDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prETypeParameterDecl().getRule(), currentNode); }
	 iv_ruleETypeParameterDecl=ruleETypeParameterDecl 
	 { $current=$iv_ruleETypeParameterDecl.current; } 
	 EOF 
;

// Rule ETypeParameterDecl
ruleETypeParameterDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.prETypeParameterDecl().ele00TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prETypeParameterDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('extends' 
    {
        createLeafNode(grammarAccess.prETypeParameterDecl().ele10KeywordExtends(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prETypeParameterDecl().ele110ParserRuleCallEGenericTypeDecl(), currentNode); 
	    }
	    lv_eBounds_2=ruleEGenericTypeDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prETypeParameterDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eBounds", lv_eBounds_2, "EGenericTypeDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))?);





// Entry rule entryRuleEGenericTypeReferenceDecl
entryRuleEGenericTypeReferenceDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEGenericTypeReferenceDecl().getRule(), currentNode); }
	 iv_ruleEGenericTypeReferenceDecl=ruleEGenericTypeReferenceDecl 
	 { $current=$iv_ruleEGenericTypeReferenceDecl.current; } 
	 EOF 
;

// Rule EGenericTypeReferenceDecl
ruleEGenericTypeReferenceDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.prEGenericTypeReferenceDecl().ele000CrossReferenceEStringEClassifier(), "eClassifier"); 
	}

		// TODO assign feature to currentNode
	
)('<' 
    {
        createLeafNode(grammarAccess.prEGenericTypeReferenceDecl().ele010KeywordLessThanSign(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEGenericTypeReferenceDecl().ele0110ParserRuleCallEGenericTypeDecl(), currentNode); 
	    }
	    lv_eTypeArguments_2=ruleEGenericTypeDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eTypeArguments", lv_eTypeArguments_2, "EGenericTypeDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.prEGenericTypeReferenceDecl().ele0120KeywordComma(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEGenericTypeReferenceDecl().ele01210ParserRuleCallEGenericTypeDecl(), currentNode); 
	    }
	    lv_eTypeArguments_4=ruleEGenericTypeDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eTypeArguments", lv_eTypeArguments_4, "EGenericTypeDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'>' 
    {
        createLeafNode(grammarAccess.prEGenericTypeReferenceDecl().ele013KeywordGreaterThanSign(), null); 
    }
)?)
    |('#' 
    {
        createLeafNode(grammarAccess.prEGenericTypeReferenceDecl().ele10KeywordNumberSign(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeReferenceDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.prEGenericTypeReferenceDecl().ele110CrossReferenceEStringETypeParameter(), "eTypeParameter"); 
	}

		// TODO assign feature to currentNode
	
)));





// Entry rule entryRuleEGenericTypeDecl
entryRuleEGenericTypeDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEGenericTypeDecl().getRule(), currentNode); }
	 iv_ruleEGenericTypeDecl=ruleEGenericTypeDecl 
	 { $current=$iv_ruleEGenericTypeDecl.current; } 
	 EOF 
;

// Rule EGenericTypeDecl
ruleEGenericTypeDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.prEGenericTypeDecl().ele000CrossReferenceEStringEClassifier(), "eClassifier"); 
	}

		// TODO assign feature to currentNode
	
)('<' 
    {
        createLeafNode(grammarAccess.prEGenericTypeDecl().ele010KeywordLessThanSign(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEGenericTypeDecl().ele0110ParserRuleCallEGenericTypeDecl(), currentNode); 
	    }
	    lv_eTypeArguments_2=ruleEGenericTypeDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eTypeArguments", lv_eTypeArguments_2, "EGenericTypeDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.prEGenericTypeDecl().ele0120KeywordComma(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEGenericTypeDecl().ele01210ParserRuleCallEGenericTypeDecl(), currentNode); 
	    }
	    lv_eTypeArguments_4=ruleEGenericTypeDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eTypeArguments", lv_eTypeArguments_4, "EGenericTypeDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'>' 
    {
        createLeafNode(grammarAccess.prEGenericTypeDecl().ele013KeywordGreaterThanSign(), null); 
    }
)?)
    |('#' 
    {
        createLeafNode(grammarAccess.prEGenericTypeDecl().ele10KeywordNumberSign(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.prEGenericTypeDecl().ele110CrossReferenceEStringETypeParameter(), "eTypeParameter"); 
	}

		// TODO assign feature to currentNode
	
))
    |('?' 
    {
        createLeafNode(grammarAccess.prEGenericTypeDecl().ele20KeywordQuestionMark(), null); 
    }
(('extends' 
    {
        createLeafNode(grammarAccess.prEGenericTypeDecl().ele2100KeywordExtends(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEGenericTypeDecl().ele21010ParserRuleCallEGenericTypeDecl(), currentNode); 
	    }
	    lv_eUpperBound_10=ruleEGenericTypeDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "eUpperBound", lv_eUpperBound_10, "EGenericTypeDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))
    |('super' 
    {
        createLeafNode(grammarAccess.prEGenericTypeDecl().ele2110KeywordSuper(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEGenericTypeDecl().ele21110ParserRuleCallEGenericTypeDecl(), currentNode); 
	    }
	    lv_eLowerBound_12=ruleEGenericTypeDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEGenericTypeDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "eLowerBound", lv_eLowerBound_12, "EGenericTypeDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)))));





// Entry rule entryRuleEOperationDecl
entryRuleEOperationDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEOperationDecl().getRule(), currentNode); }
	 iv_ruleEOperationDecl=ruleEOperationDecl 
	 { $current=$iv_ruleEOperationDecl.current; } 
	 EOF 
;

// Rule EOperationDecl
ruleEOperationDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEOperationDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*((	
	
	    lv_unique_1='bag' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele100KeywordBag(), "unique"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unique", true, "bag", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_ordered_2='random' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele110KeywordRandom(), "ordered"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ordered", true, "random", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))*'op' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele2KeywordOp(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEOperationDecl().ele300ParserRuleCallEGenericTypeReferenceDecl(), currentNode); 
	    }
	    lv_eGenericType_4=ruleEGenericTypeReferenceDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "eGenericType", lv_eGenericType_4, "EGenericTypeReferenceDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |'void' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele31KeywordVoid(), null); 
    }
)(	
	
	    lv_name_6=	RULE_ID
	{
		createLeafNode(grammarAccess.prEOperationDecl().ele40TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_6, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('<' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele50KeywordLessThanSign(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEOperationDecl().ele510ParserRuleCallETypeParameterDecl(), currentNode); 
	    }
	    lv_eTypeParameters_8=ruleETypeParameterDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eTypeParameters", lv_eTypeParameters_8, "ETypeParameterDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele520KeywordComma(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEOperationDecl().ele5210ParserRuleCallETypeParameterDecl(), currentNode); 
	    }
	    lv_eTypeParameters_10=ruleETypeParameterDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eTypeParameters", lv_eTypeParameters_10, "ETypeParameterDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'>' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele53KeywordGreaterThanSign(), null); 
    }
)?'(' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele6KeywordLeftParenthesis(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEOperationDecl().ele700ParserRuleCallEParameterDecl(), currentNode); 
	    }
	    lv_eParameters_13=ruleEParameterDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eParameters", lv_eParameters_13, "EParameterDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele710KeywordComma(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEOperationDecl().ele7110ParserRuleCallEParameterDecl(), currentNode); 
	    }
	    lv_eParameters_15=ruleEParameterDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eParameters", lv_eParameters_15, "EParameterDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*)?')' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele8KeywordRightParenthesis(), null); 
    }
('throws' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele90KeywordThrows(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEOperationDecl().ele910ParserRuleCallEGenericTypeReferenceDecl(), currentNode); 
	    }
	    lv_eGenericExceptions_18=ruleEGenericTypeReferenceDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eGenericExceptions", lv_eGenericExceptions_18, "EGenericTypeReferenceDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele920KeywordComma(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEOperationDecl().ele9210ParserRuleCallEGenericTypeReferenceDecl(), currentNode); 
	    }
	    lv_eGenericExceptions_20=ruleEGenericTypeReferenceDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEOperationDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eGenericExceptions", lv_eGenericExceptions_20, "EGenericTypeReferenceDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*)?';' 
    {
        createLeafNode(grammarAccess.prEOperationDecl().ele10KeywordSemicolon(), null); 
    }
);





// Entry rule entryRuleEParameterDecl
entryRuleEParameterDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prEParameterDecl().getRule(), currentNode); }
	 iv_ruleEParameterDecl=ruleEParameterDecl 
	 { $current=$iv_ruleEParameterDecl.current; } 
	 EOF 
;

// Rule EParameterDecl
ruleEParameterDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEParameterDecl().ele00ParserRuleCallEAnnotationDecl(), currentNode); 
	    }
	    lv_eAnnotations_0=ruleEAnnotationDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEParameterDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "eAnnotations", lv_eAnnotations_0, "EAnnotationDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.prEParameterDecl().ele10ParserRuleCallEGenericTypeReferenceDecl(), currentNode); 
	    }
	    lv_eGenericType_1=ruleEGenericTypeReferenceDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEParameterDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "eGenericType", lv_eGenericType_1, "EGenericTypeReferenceDecl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.prEParameterDecl().ele20TerminalRuleCallID(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prEParameterDecl().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));





// Entry rule entryRuleMapEntrySuper
entryRuleMapEntrySuper returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prMapEntrySuper().getRule(), currentNode); }
	 iv_ruleMapEntrySuper=ruleMapEntrySuper 
	 { $current=$iv_ruleMapEntrySuper.current; } 
	 EOF 
;

// Rule MapEntrySuper
ruleMapEntrySuper returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.prMapEntrySuper().eleParserRuleCallMapEntry(), currentNode); 
    }
    this_MapEntry_0=ruleMapEntry
    { 
        $current = $this_MapEntry_0.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.prMapEntrySuper().eleParserRuleCallMapEntry(), null); 
    }
;





// Entry rule entryRuleMapEntry
entryRuleMapEntry returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prMapEntry().getRule(), currentNode); }
	 iv_ruleMapEntry=ruleMapEntry 
	 { $current=$iv_ruleMapEntry.current; } 
	 EOF 
;

// Rule MapEntry
ruleMapEntry returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_detailKey_0=	RULE_ID
	{
		createLeafNode(grammarAccess.prMapEntry().ele00TerminalRuleCallID(), "detailKey"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prMapEntry().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "detailKey", lv_detailKey_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.prMapEntry().ele1KeywordEqualsSign(), null); 
    }
(	
	
	    lv_detailValue_2=	RULE_STRING
	{
		createLeafNode(grammarAccess.prMapEntry().ele20TerminalRuleCallSTRING(), "detailValue"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.prMapEntry().getRule().getType().getType());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "detailValue", lv_detailValue_2, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));







// Entry rule entryRuleQID
entryRuleQID returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prQID().getRule(), currentNode); } 
	 iv_ruleQID=ruleQID 
	 { $current=$iv_ruleQID.current.getText(); }  
	 EOF 
;

// Rule QID
ruleQID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.prQID().ele0TerminalRuleCallID(), null); 
    }
((
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.prQID().ele100KeywordFullStop(), null); 
    }

    |
	kw='$' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.prQID().ele101Keyword$(), null); 
    }
)    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    createLeafNode(grammarAccess.prQID().ele11TerminalRuleCallID(), null); 
    }
)*)
    ;





// Entry rule entryRuleSTRING_OR_QID
entryRuleSTRING_OR_QID returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prSTRING_OR_QID().getRule(), currentNode); } 
	 iv_ruleSTRING_OR_QID=ruleSTRING_OR_QID 
	 { $current=$iv_ruleSTRING_OR_QID.current.getText(); }  
	 EOF 
;

// Rule STRING_OR_QID
ruleSTRING_OR_QID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.prSTRING_OR_QID().ele0TerminalRuleCallSTRING(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.prSTRING_OR_QID().ele1ParserRuleCallQID(), currentNode); 
    }
    this_QID_1=ruleQID    {
		$current.merge(this_QID_1);
    }

    { 
        currentNode = currentNode.getParent();
    }
)
    ;





// Entry rule entryRuleSINT
entryRuleSINT returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.prSINT().getRule(), currentNode); } 
	 iv_ruleSINT=ruleSINT 
	 { $current=$iv_ruleSINT.current.getText(); }  
	 EOF 
;

// Rule SINT
ruleSINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
((
	kw='-' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.prSINT().ele0KeywordHyphenMinus(), null); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(grammarAccess.prSINT().ele1TerminalRuleCallINT(), null); 
    }
)
    ;




RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('\"' ('\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')|~(('\\'|'\"')))* '\"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


