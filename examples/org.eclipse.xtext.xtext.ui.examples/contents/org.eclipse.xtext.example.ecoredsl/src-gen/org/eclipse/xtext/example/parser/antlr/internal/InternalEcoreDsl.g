/*
* generated by Xtext
*/
grammar InternalEcoreDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.xtext.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.example.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.xtext.example.services.EcoreDslGrammarAccess;

}

@parser::members {

 	private EcoreDslGrammarAccess grammarAccess;
 	
    public InternalEcoreDslParser(TokenStream input, IAstFactory factory, EcoreDslGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "EcoreDsl";	
   	}
   	
   	@Override
   	protected EcoreDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleEcoreDsl
entryRuleEcoreDsl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEcoreDslRule(), currentNode); }
	 iv_ruleEcoreDsl=ruleEcoreDsl 
	 { $current=$iv_ruleEcoreDsl.current; } 
	 EOF 
;

// Rule EcoreDsl
ruleEcoreDsl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEcoreDslAccess().getMetamodelDeclarationsReferencedMetamodelParserRuleCall_0_0(), currentNode); 
	    }
		lv_metamodelDeclarations_0_0=ruleReferencedMetamodel		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEcoreDslRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"metamodelDeclarations",
	        		lv_metamodelDeclarations_0_0, 
	        		"ReferencedMetamodel", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEcoreDslAccess().getPackageEPackageDeclParserRuleCall_1_0(), currentNode); 
	    }
		lv_package_1_0=ruleEPackageDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEcoreDslRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"package",
	        		lv_package_1_0, 
	        		"EPackageDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleReferencedMetamodel
entryRuleReferencedMetamodel returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getReferencedMetamodelRule(), currentNode); }
	 iv_ruleReferencedMetamodel=ruleReferencedMetamodel 
	 { $current=$iv_ruleReferencedMetamodel.current; } 
	 EOF 
;

// Rule ReferencedMetamodel
ruleReferencedMetamodel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='import' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getReferencedMetamodelAccess().getImportKeyword_0(), null);
    }
((
(
		lv_alias_1_0=RULE_ID
		{
			createLeafNode(lv_alias_1_0, grammarAccess.getReferencedMetamodelAccess().getAliasIDTerminalRuleCall_1_0_0(), "alias"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getReferencedMetamodelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"alias",
	        		lv_alias_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_2='=' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getReferencedMetamodelAccess().getEqualsSignKeyword_1_1(), null);
    }
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getReferencedMetamodelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_3=RULE_STRING
	{
		createLeafNode(otherlv_3, grammarAccess.getReferencedMetamodelAccess().getEPackageEPackageCrossReference_2_0(), "ePackage"); 
	}

)
)	otherlv_4=';' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getReferencedMetamodelAccess().getSemicolonKeyword_3(), null);
    }
)
;





// Entry rule entryRuleEPackageDecl
entryRuleEPackageDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEPackageDeclRule(), currentNode); }
	 iv_ruleEPackageDecl=ruleEPackageDecl 
	 { $current=$iv_ruleEPackageDecl.current; } 
	 EOF 
;

// Rule EPackageDecl
ruleEPackageDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEPackageDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	otherlv_1='package' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getEPackageDeclAccess().getPackageKeyword_1(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEPackageDeclAccess().getNameQIDParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleQID		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"QID", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_3='nsURI' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getEPackageDeclAccess().getNsURIKeyword_3(), null);
    }
	otherlv_4='=' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getEPackageDeclAccess().getEqualsSignKeyword_4(), null);
    }
(
(
		lv_nsURI_5_0=RULE_STRING
		{
			createLeafNode(lv_nsURI_5_0, grammarAccess.getEPackageDeclAccess().getNsURISTRINGTerminalRuleCall_5_0(), "nsURI"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nsURI",
	        		lv_nsURI_5_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_6='nsPrefix' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getEPackageDeclAccess().getNsPrefixKeyword_6(), null);
    }
	otherlv_7='=' 
    {
    	createLeafNode(otherlv_7, grammarAccess.getEPackageDeclAccess().getEqualsSignKeyword_7(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEPackageDeclAccess().getNsPrefixQIDParserRuleCall_8_0(), currentNode); 
	    }
		lv_nsPrefix_8_0=ruleQID		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nsPrefix",
	        		lv_nsPrefix_8_0, 
	        		"QID", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_9='{' 
    {
    	createLeafNode(otherlv_9, grammarAccess.getEPackageDeclAccess().getLeftCurlyBracketKeyword_9(), null);
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEPackageDeclAccess().getESubpackagesSubEPackageDeclParserRuleCall_10_0_0(), currentNode); 
	    }
		lv_eSubpackages_10_0=ruleSubEPackageDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eSubpackages",
	        		lv_eSubpackages_10_0, 
	        		"SubEPackageDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEPackageDeclAccess().getEClassifiersEClassifierDeclParserRuleCall_10_1_0(), currentNode); 
	    }
		lv_eClassifiers_11_0=ruleEClassifierDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eClassifiers",
	        		lv_eClassifiers_11_0, 
	        		"EClassifierDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	otherlv_12='}' 
    {
    	createLeafNode(otherlv_12, grammarAccess.getEPackageDeclAccess().getRightCurlyBracketKeyword_11(), null);
    }
)
;





// Entry rule entryRuleSubEPackageDecl
entryRuleSubEPackageDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSubEPackageDeclRule(), currentNode); }
	 iv_ruleSubEPackageDecl=ruleSubEPackageDecl 
	 { $current=$iv_ruleSubEPackageDecl.current; } 
	 EOF 
;

// Rule SubEPackageDecl
ruleSubEPackageDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubEPackageDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	otherlv_1='package' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getSubEPackageDeclAccess().getPackageKeyword_1(), null);
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(lv_name_2_0, grammarAccess.getSubEPackageDeclAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_3='{' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getSubEPackageDeclAccess().getLeftCurlyBracketKeyword_3(), null);
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubEPackageDeclAccess().getESubpackagesSubEPackageDeclParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_eSubpackages_4_0=ruleSubEPackageDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eSubpackages",
	        		lv_eSubpackages_4_0, 
	        		"SubEPackageDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubEPackageDeclAccess().getEClassifiersEClassifierDeclParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_eClassifiers_5_0=ruleEClassifierDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubEPackageDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eClassifiers",
	        		lv_eClassifiers_5_0, 
	        		"EClassifierDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	otherlv_6='}' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getSubEPackageDeclAccess().getRightCurlyBracketKeyword_5(), null);
    }
)
;





// Entry rule entryRuleEClassifierDecl
entryRuleEClassifierDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEClassifierDeclRule(), currentNode); }
	 iv_ruleEClassifierDecl=ruleEClassifierDecl 
	 { $current=$iv_ruleEClassifierDecl.current; } 
	 EOF 
;

// Rule EClassifierDecl
ruleEClassifierDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getEClassifierDeclAccess().getEClassDeclParserRuleCall_0(), currentNode); 
    }
    this_EClassDecl_0=ruleEClassDecl
    { 
        $current = $this_EClassDecl_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getEClassifierDeclAccess().getEDataTypeDeclParserRuleCall_1(), currentNode); 
    }
    this_EDataTypeDecl_1=ruleEDataTypeDecl
    { 
        $current = $this_EDataTypeDecl_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleEDataTypeDecl
entryRuleEDataTypeDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEDataTypeDeclRule(), currentNode); }
	 iv_ruleEDataTypeDecl=ruleEDataTypeDecl 
	 { $current=$iv_ruleEDataTypeDecl.current; } 
	 EOF 
;

// Rule EDataTypeDecl
ruleEDataTypeDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEDataTypeDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEDataTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		lv_serializable_1_0=RULE_SERIALIZABLE
		{
			createLeafNode(lv_serializable_1_0, grammarAccess.getEDataTypeDeclAccess().getSerializableSerializableTerminalRuleCall_0_1_0(), "serializable"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEDataTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"serializable",
	        		lv_serializable_1_0, 
	        		"Serializable", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	otherlv_2='datatype' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getEDataTypeDeclAccess().getDatatypeKeyword_0_2_0(), null);
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(lv_name_3_0, grammarAccess.getEDataTypeDeclAccess().getNameIDTerminalRuleCall_0_2_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEDataTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_4=':' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getEDataTypeDeclAccess().getColonKeyword_0_2_2(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEDataTypeDeclAccess().getInstanceClassNameSTRING_OR_QIDParserRuleCall_0_2_3_0(), currentNode); 
	    }
		lv_instanceClassName_5_0=ruleSTRING_OR_QID		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEDataTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"instanceClassName",
	        		lv_instanceClassName_5_0, 
	        		"STRING_OR_QID", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	otherlv_6=';' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getEDataTypeDeclAccess().getSemicolonKeyword_0_2_4(), null);
    }
))
    |
    { 
        currentNode=createCompositeNode(grammarAccess.getEDataTypeDeclAccess().getEEnumDeclParserRuleCall_1(), currentNode); 
    }
    this_EEnumDecl_7=ruleEEnumDecl
    { 
        $current = $this_EEnumDecl_7.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleEAnnotationDecl
entryRuleEAnnotationDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEAnnotationDeclRule(), currentNode); }
	 iv_ruleEAnnotationDecl=ruleEAnnotationDecl 
	 { $current=$iv_ruleEAnnotationDecl.current; } 
	 EOF 
;

// Rule EAnnotationDecl
ruleEAnnotationDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='@' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getEAnnotationDeclAccess().getCommercialAtKeyword_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEAnnotationDeclAccess().getSourceSTRING_OR_QIDParserRuleCall_1_0(), currentNode); 
	    }
		lv_source_1_0=ruleSTRING_OR_QID		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAnnotationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"source",
	        		lv_source_1_0, 
	        		"STRING_OR_QID", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_2='(' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getEAnnotationDeclAccess().getLeftParenthesisKeyword_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEAnnotationDeclAccess().getDetailsMapEntryParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_details_3_0=ruleMapEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAnnotationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"details",
	        		lv_details_3_0, 
	        		"MapEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_4=',' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getEAnnotationDeclAccess().getCommaKeyword_2_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEAnnotationDeclAccess().getDetailsMapEntryParserRuleCall_2_2_1_0(), currentNode); 
	    }
		lv_details_5_0=ruleMapEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAnnotationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"details",
	        		lv_details_5_0, 
	        		"MapEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	otherlv_6=')' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getEAnnotationDeclAccess().getRightParenthesisKeyword_2_3(), null);
    }
)?)
;





// Entry rule entryRuleEClassDecl
entryRuleEClassDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEClassDeclRule(), currentNode); }
	 iv_ruleEClassDecl=ruleEClassDecl 
	 { $current=$iv_ruleEClassDecl.current; } 
	 EOF 
;

// Rule EClassDecl
ruleEClassDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEClassDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		lv_abstract_1_0=	'abstract' 
    {
        createLeafNode(lv_abstract_1_0, grammarAccess.getEClassDeclAccess().getAbstractAbstractKeyword_1_0(), "abstract");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "abstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?((
(
		lv_interface_2_0=	'interface' 
    {
        createLeafNode(lv_interface_2_0, grammarAccess.getEClassDeclAccess().getInterfaceInterfaceKeyword_2_0_0(), "interface");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "interface", true, "interface", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |	otherlv_3='class' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getEClassDeclAccess().getClassKeyword_2_1(), null);
    }
)(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(lv_name_4_0, grammarAccess.getEClassDeclAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_5='<' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getEClassDeclAccess().getLessThanSignKeyword_4_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEClassDeclAccess().getETypeParametersETypeParameterDeclParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_eTypeParameters_6_0=ruleETypeParameterDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eTypeParameters",
	        		lv_eTypeParameters_6_0, 
	        		"ETypeParameterDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_7=',' 
    {
    	createLeafNode(otherlv_7, grammarAccess.getEClassDeclAccess().getCommaKeyword_4_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEClassDeclAccess().getETypeParametersETypeParameterDeclParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_eTypeParameters_8_0=ruleETypeParameterDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eTypeParameters",
	        		lv_eTypeParameters_8_0, 
	        		"ETypeParameterDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	otherlv_9='>' 
    {
    	createLeafNode(otherlv_9, grammarAccess.getEClassDeclAccess().getGreaterThanSignKeyword_4_3(), null);
    }
)?(	otherlv_10='extends' 
    {
    	createLeafNode(otherlv_10, grammarAccess.getEClassDeclAccess().getExtendsKeyword_5_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEClassDeclAccess().getEGenericSuperTypesEGenericTypeReferenceDeclParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_eGenericSuperTypes_11_0=ruleEGenericTypeReferenceDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eGenericSuperTypes",
	        		lv_eGenericSuperTypes_11_0, 
	        		"EGenericTypeReferenceDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_12=',' 
    {
    	createLeafNode(otherlv_12, grammarAccess.getEClassDeclAccess().getCommaKeyword_5_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEClassDeclAccess().getEGenericSuperTypesEGenericTypeReferenceDeclParserRuleCall_5_2_1_0(), currentNode); 
	    }
		lv_eGenericSuperTypes_13_0=ruleEGenericTypeReferenceDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eGenericSuperTypes",
	        		lv_eGenericSuperTypes_13_0, 
	        		"EGenericTypeReferenceDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?(	otherlv_14=':' 
    {
    	createLeafNode(otherlv_14, grammarAccess.getEClassDeclAccess().getColonKeyword_6_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEClassDeclAccess().getInstanceClassNameSTRING_OR_QIDParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_instanceClassName_15_0=ruleSTRING_OR_QID		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"instanceClassName",
	        		lv_instanceClassName_15_0, 
	        		"STRING_OR_QID", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	otherlv_16='{' 
    {
    	createLeafNode(otherlv_16, grammarAccess.getEClassDeclAccess().getLeftCurlyBracketKeyword_7(), null);
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEClassDeclAccess().getEStructuralFeaturesEStructuralFeatureDeclParserRuleCall_8_0_0(), currentNode); 
	    }
		lv_eStructuralFeatures_17_0=ruleEStructuralFeatureDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eStructuralFeatures",
	        		lv_eStructuralFeatures_17_0, 
	        		"EStructuralFeatureDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEClassDeclAccess().getEOperationsEOperationDeclParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_eOperations_18_0=ruleEOperationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEClassDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eOperations",
	        		lv_eOperations_18_0, 
	        		"EOperationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	otherlv_19='}' 
    {
    	createLeafNode(otherlv_19, grammarAccess.getEClassDeclAccess().getRightCurlyBracketKeyword_9(), null);
    }
)
;





// Entry rule entryRuleEStructuralFeatureDecl
entryRuleEStructuralFeatureDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEStructuralFeatureDeclRule(), currentNode); }
	 iv_ruleEStructuralFeatureDecl=ruleEStructuralFeatureDecl 
	 { $current=$iv_ruleEStructuralFeatureDecl.current; } 
	 EOF 
;

// Rule EStructuralFeatureDecl
ruleEStructuralFeatureDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getEStructuralFeatureDeclAccess().getEAttributeDeclParserRuleCall_0(), currentNode); 
    }
    this_EAttributeDecl_0=ruleEAttributeDecl
    { 
        $current = $this_EAttributeDecl_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getEStructuralFeatureDeclAccess().getEReferenceDeclParserRuleCall_1(), currentNode); 
    }
    this_EReferenceDecl_1=ruleEReferenceDecl
    { 
        $current = $this_EReferenceDecl_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleEAttributeDecl
entryRuleEAttributeDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEAttributeDeclRule(), currentNode); }
	 iv_ruleEAttributeDecl=ruleEAttributeDecl 
	 { $current=$iv_ruleEAttributeDecl.current; } 
	 EOF 
;

// Rule EAttributeDecl
ruleEAttributeDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEAttributeDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*((
(
		lv_iD_1_0=	'ID' 
    {
        createLeafNode(lv_iD_1_0, grammarAccess.getEAttributeDeclAccess().getIDIDKeyword_1_0_0(), "iD");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "iD", true, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_unique_2_0=RULE_BAG
		{
			createLeafNode(lv_unique_2_0, grammarAccess.getEAttributeDeclAccess().getUniqueBagTerminalRuleCall_1_1_0(), "unique"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"unique",
	        		lv_unique_2_0, 
	        		"Bag", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_ordered_3_0=RULE_RANDOM
		{
			createLeafNode(lv_ordered_3_0, grammarAccess.getEAttributeDeclAccess().getOrderedRandomTerminalRuleCall_1_2_0(), "ordered"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"ordered",
	        		lv_ordered_3_0, 
	        		"Random", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_changeable_4_0=RULE_READONLY
		{
			createLeafNode(lv_changeable_4_0, grammarAccess.getEAttributeDeclAccess().getChangeableReadonlyTerminalRuleCall_1_3_0(), "changeable"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"changeable",
	        		lv_changeable_4_0, 
	        		"Readonly", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_volatile_5_0=	'volatile' 
    {
        createLeafNode(lv_volatile_5_0, grammarAccess.getEAttributeDeclAccess().getVolatileVolatileKeyword_1_4_0(), "volatile");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "volatile", true, "volatile", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_transient_6_0=	'transient' 
    {
        createLeafNode(lv_transient_6_0, grammarAccess.getEAttributeDeclAccess().getTransientTransientKeyword_1_5_0(), "transient");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "transient", true, "transient", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_unsettable_7_0=	'unsettable' 
    {
        createLeafNode(lv_unsettable_7_0, grammarAccess.getEAttributeDeclAccess().getUnsettableUnsettableKeyword_1_6_0(), "unsettable");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unsettable", true, "unsettable", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_derived_8_0=	'derived' 
    {
        createLeafNode(lv_derived_8_0, grammarAccess.getEAttributeDeclAccess().getDerivedDerivedKeyword_1_7_0(), "derived");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "derived", true, "derived", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))*	otherlv_9='attr' 
    {
    	createLeafNode(otherlv_9, grammarAccess.getEAttributeDeclAccess().getAttrKeyword_2(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEAttributeDeclAccess().getEGenericTypeEGenericTypeReferenceDeclParserRuleCall_3_0(), currentNode); 
	    }
		lv_eGenericType_10_0=ruleEGenericTypeReferenceDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"eGenericType",
	        		lv_eGenericType_10_0, 
	        		"EGenericTypeReferenceDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_11='[' 
    {
    	createLeafNode(otherlv_11, grammarAccess.getEAttributeDeclAccess().getLeftSquareBracketKeyword_4_0(), null);
    }
(
(
		lv_lowerBound_12_0=RULE_INT
		{
			createLeafNode(lv_lowerBound_12_0, grammarAccess.getEAttributeDeclAccess().getLowerBoundINTTerminalRuleCall_4_1_0(), "lowerBound"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerBound",
	        		lv_lowerBound_12_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_13='..' 
    {
    	createLeafNode(otherlv_13, grammarAccess.getEAttributeDeclAccess().getFullStopFullStopKeyword_4_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEAttributeDeclAccess().getUpperBoundSINTParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_upperBound_14_0=ruleSINT		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperBound",
	        		lv_upperBound_14_0, 
	        		"SINT", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	otherlv_15=']' 
    {
    	createLeafNode(otherlv_15, grammarAccess.getEAttributeDeclAccess().getRightSquareBracketKeyword_4_3(), null);
    }
)?(
(
		lv_name_16_0=RULE_ID
		{
			createLeafNode(lv_name_16_0, grammarAccess.getEAttributeDeclAccess().getNameIDTerminalRuleCall_5_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_16_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_17='=' 
    {
    	createLeafNode(otherlv_17, grammarAccess.getEAttributeDeclAccess().getEqualsSignKeyword_6_0(), null);
    }
(
(
		lv_defaultValueLiteral_18_0=RULE_STRING
		{
			createLeafNode(lv_defaultValueLiteral_18_0, grammarAccess.getEAttributeDeclAccess().getDefaultValueLiteralSTRINGTerminalRuleCall_6_1_0(), "defaultValueLiteral"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEAttributeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultValueLiteral",
	        		lv_defaultValueLiteral_18_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	otherlv_19=';' 
    {
    	createLeafNode(otherlv_19, grammarAccess.getEAttributeDeclAccess().getSemicolonKeyword_7(), null);
    }
)
;





// Entry rule entryRuleEReferenceDecl
entryRuleEReferenceDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEReferenceDeclRule(), currentNode); }
	 iv_ruleEReferenceDecl=ruleEReferenceDecl 
	 { $current=$iv_ruleEReferenceDecl.current; } 
	 EOF 
;

// Rule EReferenceDecl
ruleEReferenceDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEReferenceDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*((
(
		lv_resolveProxies_1_0=RULE_LOCAL
		{
			createLeafNode(lv_resolveProxies_1_0, grammarAccess.getEReferenceDeclAccess().getResolveProxiesLocalTerminalRuleCall_1_0_0(), "resolveProxies"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"resolveProxies",
	        		lv_resolveProxies_1_0, 
	        		"Local", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_unique_2_0=RULE_BAG
		{
			createLeafNode(lv_unique_2_0, grammarAccess.getEReferenceDeclAccess().getUniqueBagTerminalRuleCall_1_1_0(), "unique"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"unique",
	        		lv_unique_2_0, 
	        		"Bag", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_ordered_3_0=RULE_RANDOM
		{
			createLeafNode(lv_ordered_3_0, grammarAccess.getEReferenceDeclAccess().getOrderedRandomTerminalRuleCall_1_2_0(), "ordered"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"ordered",
	        		lv_ordered_3_0, 
	        		"Random", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_changeable_4_0=RULE_READONLY
		{
			createLeafNode(lv_changeable_4_0, grammarAccess.getEReferenceDeclAccess().getChangeableReadonlyTerminalRuleCall_1_3_0(), "changeable"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"changeable",
	        		lv_changeable_4_0, 
	        		"Readonly", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_volatile_5_0=	'volatile' 
    {
        createLeafNode(lv_volatile_5_0, grammarAccess.getEReferenceDeclAccess().getVolatileVolatileKeyword_1_4_0(), "volatile");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "volatile", true, "volatile", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_transient_6_0=	'transient' 
    {
        createLeafNode(lv_transient_6_0, grammarAccess.getEReferenceDeclAccess().getTransientTransientKeyword_1_5_0(), "transient");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "transient", true, "transient", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_unsettable_7_0=	'unsettable' 
    {
        createLeafNode(lv_unsettable_7_0, grammarAccess.getEReferenceDeclAccess().getUnsettableUnsettableKeyword_1_6_0(), "unsettable");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unsettable", true, "unsettable", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_derived_8_0=	'derived' 
    {
        createLeafNode(lv_derived_8_0, grammarAccess.getEReferenceDeclAccess().getDerivedDerivedKeyword_1_7_0(), "derived");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "derived", true, "derived", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))*((
(
		lv_containment_9_0=	'val' 
    {
        createLeafNode(lv_containment_9_0, grammarAccess.getEReferenceDeclAccess().getContainmentValKeyword_2_0_0(), "containment");
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "containment", true, "val", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |	otherlv_10='ref' 
    {
    	createLeafNode(otherlv_10, grammarAccess.getEReferenceDeclAccess().getRefKeyword_2_1(), null);
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEReferenceDeclAccess().getEGenericTypeEGenericTypeReferenceDeclParserRuleCall_3_0(), currentNode); 
	    }
		lv_eGenericType_11_0=ruleEGenericTypeReferenceDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"eGenericType",
	        		lv_eGenericType_11_0, 
	        		"EGenericTypeReferenceDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_12='[' 
    {
    	createLeafNode(otherlv_12, grammarAccess.getEReferenceDeclAccess().getLeftSquareBracketKeyword_4_0(), null);
    }
(
(
		lv_lowerBound_13_0=RULE_INT
		{
			createLeafNode(lv_lowerBound_13_0, grammarAccess.getEReferenceDeclAccess().getLowerBoundINTTerminalRuleCall_4_1_0(), "lowerBound"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerBound",
	        		lv_lowerBound_13_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_14='..' 
    {
    	createLeafNode(otherlv_14, grammarAccess.getEReferenceDeclAccess().getFullStopFullStopKeyword_4_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEReferenceDeclAccess().getUpperBoundSINTParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_upperBound_15_0=ruleSINT		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperBound",
	        		lv_upperBound_15_0, 
	        		"SINT", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	otherlv_16=']' 
    {
    	createLeafNode(otherlv_16, grammarAccess.getEReferenceDeclAccess().getRightSquareBracketKeyword_4_3(), null);
    }
)?(	otherlv_17='#' 
    {
    	createLeafNode(otherlv_17, grammarAccess.getEReferenceDeclAccess().getNumberSignKeyword_5_0(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_18=RULE_ID
	{
		createLeafNode(otherlv_18, grammarAccess.getEReferenceDeclAccess().getEOppositeEReferenceCrossReference_5_1_0(), "eOpposite"); 
	}

)
))?(
(
		lv_name_19_0=RULE_ID
		{
			createLeafNode(lv_name_19_0, grammarAccess.getEReferenceDeclAccess().getNameIDTerminalRuleCall_6_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_19_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_20=';' 
    {
    	createLeafNode(otherlv_20, grammarAccess.getEReferenceDeclAccess().getSemicolonKeyword_7(), null);
    }
)
;





// Entry rule entryRuleEEnumDecl
entryRuleEEnumDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEEnumDeclRule(), currentNode); }
	 iv_ruleEEnumDecl=ruleEEnumDecl 
	 { $current=$iv_ruleEEnumDecl.current; } 
	 EOF 
;

// Rule EEnumDecl
ruleEEnumDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEEnumDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEEnumDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	otherlv_1='enum' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getEEnumDeclAccess().getEnumKeyword_1(), null);
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(lv_name_2_0, grammarAccess.getEEnumDeclAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEEnumDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_3='{' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getEEnumDeclAccess().getLeftCurlyBracketKeyword_3(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEEnumDeclAccess().getELiteralsEEnumLiteralDeclParserRuleCall_4_0(), currentNode); 
	    }
		lv_eLiterals_4_0=ruleEEnumLiteralDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEEnumDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eLiterals",
	        		lv_eLiterals_4_0, 
	        		"EEnumLiteralDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	otherlv_5='}' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getEEnumDeclAccess().getRightCurlyBracketKeyword_5(), null);
    }
)
;





// Entry rule entryRuleEEnumLiteralDecl
entryRuleEEnumLiteralDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEEnumLiteralDeclRule(), currentNode); }
	 iv_ruleEEnumLiteralDecl=ruleEEnumLiteralDecl 
	 { $current=$iv_ruleEEnumLiteralDecl.current; } 
	 EOF 
;

// Rule EEnumLiteralDecl
ruleEEnumLiteralDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEEnumLiteralDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEEnumLiteralDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(lv_name_1_0, grammarAccess.getEEnumLiteralDeclAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEEnumLiteralDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_2='=' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getEEnumLiteralDeclAccess().getEqualsSignKeyword_2_0(), null);
    }
(
(
		lv_value_3_0=RULE_INT
		{
			createLeafNode(lv_value_3_0, grammarAccess.getEEnumLiteralDeclAccess().getValueINTTerminalRuleCall_2_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEEnumLiteralDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_3_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(
(
		lv_literal_4_0=RULE_STRING
		{
			createLeafNode(lv_literal_4_0, grammarAccess.getEEnumLiteralDeclAccess().getLiteralSTRINGTerminalRuleCall_3_0(), "literal"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEEnumLiteralDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"literal",
	        		lv_literal_4_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	otherlv_5=';' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getEEnumLiteralDeclAccess().getSemicolonKeyword_4(), null);
    }
)
;





// Entry rule entryRuleETypeParameterDecl
entryRuleETypeParameterDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getETypeParameterDeclRule(), currentNode); }
	 iv_ruleETypeParameterDecl=ruleETypeParameterDecl 
	 { $current=$iv_ruleETypeParameterDecl.current; } 
	 EOF 
;

// Rule ETypeParameterDecl
ruleETypeParameterDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_name_0_0=RULE_ID
		{
			createLeafNode(lv_name_0_0, grammarAccess.getETypeParameterDeclAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getETypeParameterDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_1='extends' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getETypeParameterDeclAccess().getExtendsKeyword_1_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getETypeParameterDeclAccess().getEBoundsEGenericTypeDeclParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_eBounds_2_0=ruleEGenericTypeDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getETypeParameterDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eBounds",
	        		lv_eBounds_2_0, 
	        		"EGenericTypeDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleEGenericTypeReferenceDecl
entryRuleEGenericTypeReferenceDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEGenericTypeReferenceDeclRule(), currentNode); }
	 iv_ruleEGenericTypeReferenceDecl=ruleEGenericTypeReferenceDecl 
	 { $current=$iv_ruleEGenericTypeReferenceDecl.current; } 
	 EOF 
;

// Rule EGenericTypeReferenceDecl
ruleEGenericTypeReferenceDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_0=RULE_ID
	{
		createLeafNode(otherlv_0, grammarAccess.getEGenericTypeReferenceDeclAccess().getEClassifierEClassifierCrossReference_0_0_0(), "eClassifier"); 
	}

)
)(	otherlv_1='<' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getEGenericTypeReferenceDeclAccess().getLessThanSignKeyword_0_1_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEGenericTypeReferenceDeclAccess().getETypeArgumentsEGenericTypeDeclParserRuleCall_0_1_1_0(), currentNode); 
	    }
		lv_eTypeArguments_2_0=ruleEGenericTypeDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eTypeArguments",
	        		lv_eTypeArguments_2_0, 
	        		"EGenericTypeDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_3=',' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getEGenericTypeReferenceDeclAccess().getCommaKeyword_0_1_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEGenericTypeReferenceDeclAccess().getETypeArgumentsEGenericTypeDeclParserRuleCall_0_1_2_1_0(), currentNode); 
	    }
		lv_eTypeArguments_4_0=ruleEGenericTypeDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eTypeArguments",
	        		lv_eTypeArguments_4_0, 
	        		"EGenericTypeDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	otherlv_5='>' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getEGenericTypeReferenceDeclAccess().getGreaterThanSignKeyword_0_1_3(), null);
    }
)?)
    |(	otherlv_6='#' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getEGenericTypeReferenceDeclAccess().getNumberSignKeyword_1_0(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeReferenceDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_7=RULE_ID
	{
		createLeafNode(otherlv_7, grammarAccess.getEGenericTypeReferenceDeclAccess().getETypeParameterETypeParameterCrossReference_1_1_0(), "eTypeParameter"); 
	}

)
)))
;





// Entry rule entryRuleEGenericTypeDecl
entryRuleEGenericTypeDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEGenericTypeDeclRule(), currentNode); }
	 iv_ruleEGenericTypeDecl=ruleEGenericTypeDecl 
	 { $current=$iv_ruleEGenericTypeDecl.current; } 
	 EOF 
;

// Rule EGenericTypeDecl
ruleEGenericTypeDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_0=RULE_ID
	{
		createLeafNode(otherlv_0, grammarAccess.getEGenericTypeDeclAccess().getEClassifierEClassifierCrossReference_0_0_0(), "eClassifier"); 
	}

)
)(	otherlv_1='<' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getEGenericTypeDeclAccess().getLessThanSignKeyword_0_1_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEGenericTypeDeclAccess().getETypeArgumentsEGenericTypeDeclParserRuleCall_0_1_1_0(), currentNode); 
	    }
		lv_eTypeArguments_2_0=ruleEGenericTypeDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eTypeArguments",
	        		lv_eTypeArguments_2_0, 
	        		"EGenericTypeDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_3=',' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getEGenericTypeDeclAccess().getCommaKeyword_0_1_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEGenericTypeDeclAccess().getETypeArgumentsEGenericTypeDeclParserRuleCall_0_1_2_1_0(), currentNode); 
	    }
		lv_eTypeArguments_4_0=ruleEGenericTypeDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eTypeArguments",
	        		lv_eTypeArguments_4_0, 
	        		"EGenericTypeDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	otherlv_5='>' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getEGenericTypeDeclAccess().getGreaterThanSignKeyword_0_1_3(), null);
    }
)?)
    |(	otherlv_6='#' 
    {
    	createLeafNode(otherlv_6, grammarAccess.getEGenericTypeDeclAccess().getNumberSignKeyword_1_0(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	otherlv_7=RULE_ID
	{
		createLeafNode(otherlv_7, grammarAccess.getEGenericTypeDeclAccess().getETypeParameterETypeParameterCrossReference_1_1_0(), "eTypeParameter"); 
	}

)
))
    |(	otherlv_8='?' 
    {
    	createLeafNode(otherlv_8, grammarAccess.getEGenericTypeDeclAccess().getQuestionMarkKeyword_2_0(), null);
    }
((	otherlv_9='extends' 
    {
    	createLeafNode(otherlv_9, grammarAccess.getEGenericTypeDeclAccess().getExtendsKeyword_2_1_0_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEGenericTypeDeclAccess().getEUpperBoundEGenericTypeDeclParserRuleCall_2_1_0_1_0(), currentNode); 
	    }
		lv_eUpperBound_10_0=ruleEGenericTypeDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"eUpperBound",
	        		lv_eUpperBound_10_0, 
	        		"EGenericTypeDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	otherlv_11='super' 
    {
    	createLeafNode(otherlv_11, grammarAccess.getEGenericTypeDeclAccess().getSuperKeyword_2_1_1_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEGenericTypeDeclAccess().getELowerBoundEGenericTypeDeclParserRuleCall_2_1_1_1_0(), currentNode); 
	    }
		lv_eLowerBound_12_0=ruleEGenericTypeDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEGenericTypeDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"eLowerBound",
	        		lv_eLowerBound_12_0, 
	        		"EGenericTypeDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))))
;





// Entry rule entryRuleEOperationDecl
entryRuleEOperationDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEOperationDeclRule(), currentNode); }
	 iv_ruleEOperationDecl=ruleEOperationDecl 
	 { $current=$iv_ruleEOperationDecl.current; } 
	 EOF 
;

// Rule EOperationDecl
ruleEOperationDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEOperationDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*((
(
		lv_unique_1_0=RULE_BAG
		{
			createLeafNode(lv_unique_1_0, grammarAccess.getEOperationDeclAccess().getUniqueBagTerminalRuleCall_1_0_0(), "unique"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"unique",
	        		true, 
	        		"Bag", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_ordered_2_0=RULE_RANDOM
		{
			createLeafNode(lv_ordered_2_0, grammarAccess.getEOperationDeclAccess().getOrderedRandomTerminalRuleCall_1_1_0(), "ordered"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"ordered",
	        		true, 
	        		"Random", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))*	otherlv_3='op' 
    {
    	createLeafNode(otherlv_3, grammarAccess.getEOperationDeclAccess().getOpKeyword_2(), null);
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEOperationDeclAccess().getEGenericTypeEGenericTypeReferenceDeclParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_eGenericType_4_0=ruleEGenericTypeReferenceDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"eGenericType",
	        		lv_eGenericType_4_0, 
	        		"EGenericTypeReferenceDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |	otherlv_5='void' 
    {
    	createLeafNode(otherlv_5, grammarAccess.getEOperationDeclAccess().getVoidKeyword_3_1(), null);
    }
)(
(
		lv_name_6_0=RULE_ID
		{
			createLeafNode(lv_name_6_0, grammarAccess.getEOperationDeclAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_6_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	otherlv_7='<' 
    {
    	createLeafNode(otherlv_7, grammarAccess.getEOperationDeclAccess().getLessThanSignKeyword_5_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEOperationDeclAccess().getETypeParametersETypeParameterDeclParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_eTypeParameters_8_0=ruleETypeParameterDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eTypeParameters",
	        		lv_eTypeParameters_8_0, 
	        		"ETypeParameterDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_9=',' 
    {
    	createLeafNode(otherlv_9, grammarAccess.getEOperationDeclAccess().getCommaKeyword_5_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEOperationDeclAccess().getETypeParametersETypeParameterDeclParserRuleCall_5_2_1_0(), currentNode); 
	    }
		lv_eTypeParameters_10_0=ruleETypeParameterDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eTypeParameters",
	        		lv_eTypeParameters_10_0, 
	        		"ETypeParameterDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	otherlv_11='>' 
    {
    	createLeafNode(otherlv_11, grammarAccess.getEOperationDeclAccess().getGreaterThanSignKeyword_5_3(), null);
    }
)?	otherlv_12='(' 
    {
    	createLeafNode(otherlv_12, grammarAccess.getEOperationDeclAccess().getLeftParenthesisKeyword_6(), null);
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEOperationDeclAccess().getEParametersEParameterDeclParserRuleCall_7_0_0(), currentNode); 
	    }
		lv_eParameters_13_0=ruleEParameterDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eParameters",
	        		lv_eParameters_13_0, 
	        		"EParameterDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_14=',' 
    {
    	createLeafNode(otherlv_14, grammarAccess.getEOperationDeclAccess().getCommaKeyword_7_1_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEOperationDeclAccess().getEParametersEParameterDeclParserRuleCall_7_1_1_0(), currentNode); 
	    }
		lv_eParameters_15_0=ruleEParameterDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eParameters",
	        		lv_eParameters_15_0, 
	        		"EParameterDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	otherlv_16=')' 
    {
    	createLeafNode(otherlv_16, grammarAccess.getEOperationDeclAccess().getRightParenthesisKeyword_8(), null);
    }
(	otherlv_17='throws' 
    {
    	createLeafNode(otherlv_17, grammarAccess.getEOperationDeclAccess().getThrowsKeyword_9_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEOperationDeclAccess().getEGenericExceptionsEGenericTypeReferenceDeclParserRuleCall_9_1_0(), currentNode); 
	    }
		lv_eGenericExceptions_18_0=ruleEGenericTypeReferenceDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eGenericExceptions",
	        		lv_eGenericExceptions_18_0, 
	        		"EGenericTypeReferenceDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	otherlv_19=',' 
    {
    	createLeafNode(otherlv_19, grammarAccess.getEOperationDeclAccess().getCommaKeyword_9_2_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEOperationDeclAccess().getEGenericExceptionsEGenericTypeReferenceDeclParserRuleCall_9_2_1_0(), currentNode); 
	    }
		lv_eGenericExceptions_20_0=ruleEGenericTypeReferenceDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEOperationDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eGenericExceptions",
	        		lv_eGenericExceptions_20_0, 
	        		"EGenericTypeReferenceDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	otherlv_21=';' 
    {
    	createLeafNode(otherlv_21, grammarAccess.getEOperationDeclAccess().getSemicolonKeyword_10(), null);
    }
)
;





// Entry rule entryRuleEParameterDecl
entryRuleEParameterDecl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEParameterDeclRule(), currentNode); }
	 iv_ruleEParameterDecl=ruleEParameterDecl 
	 { $current=$iv_ruleEParameterDecl.current; } 
	 EOF 
;

// Rule EParameterDecl
ruleEParameterDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEParameterDeclAccess().getEAnnotationsEAnnotationDeclParserRuleCall_0_0(), currentNode); 
	    }
		lv_eAnnotations_0_0=ruleEAnnotationDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEParameterDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"eAnnotations",
	        		lv_eAnnotations_0_0, 
	        		"EAnnotationDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEParameterDeclAccess().getEGenericTypeEGenericTypeReferenceDeclParserRuleCall_1_0(), currentNode); 
	    }
		lv_eGenericType_1_0=ruleEGenericTypeReferenceDecl		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEParameterDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"eGenericType",
	        		lv_eGenericType_1_0, 
	        		"EGenericTypeReferenceDecl", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(lv_name_2_0, grammarAccess.getEParameterDeclAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEParameterDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleMapEntry
entryRuleMapEntry returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMapEntryRule(), currentNode); }
	 iv_ruleMapEntry=ruleMapEntry 
	 { $current=$iv_ruleMapEntry.current; } 
	 EOF 
;

// Rule MapEntry
ruleMapEntry returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_key_0_0=RULE_ID
		{
			createLeafNode(lv_key_0_0, grammarAccess.getMapEntryAccess().getKeyIDTerminalRuleCall_0_0(), "key"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"key",
	        		lv_key_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	otherlv_1='=' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getEqualsSignKeyword_1(), null);
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			createLeafNode(lv_value_2_0, grammarAccess.getMapEntryAccess().getValueSTRINGTerminalRuleCall_2_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_2_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleQID
entryRuleQID returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQIDRule(), currentNode); } 
	 iv_ruleQID=ruleQID 
	 { $current=$iv_ruleQID.current.getText(); }  
	 EOF 
;

// Rule QID
ruleQID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(this_ID_0, grammarAccess.getQIDAccess().getIDTerminalRuleCall_0(), null); 
    }
((
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getQIDAccess().getFullStopKeyword_1_0_0(), null); 
    }

    |
	kw='$' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getQIDAccess().getDollarSignKeyword_1_0_1(), null); 
    }
)    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    createLeafNode(this_ID_3, grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_1(), null); 
    }
)*)
    ;





// Entry rule entryRuleSTRING_OR_QID
entryRuleSTRING_OR_QID returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSTRING_OR_QIDRule(), currentNode); } 
	 iv_ruleSTRING_OR_QID=ruleSTRING_OR_QID 
	 { $current=$iv_ruleSTRING_OR_QID.current.getText(); }  
	 EOF 
;

// Rule STRING_OR_QID
ruleSTRING_OR_QID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(this_STRING_0, grammarAccess.getSTRING_OR_QIDAccess().getSTRINGTerminalRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSTRING_OR_QIDAccess().getQIDParserRuleCall_1(), currentNode); 
    }
    this_QID_1=ruleQID    {
		$current.merge(this_QID_1);
    }

    { 
        currentNode = currentNode.getParent();
    }
)
    ;





// Entry rule entryRuleSINT
entryRuleSINT returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSINTRule(), currentNode); } 
	 iv_ruleSINT=ruleSINT 
	 { $current=$iv_ruleSINT.current.getText(); }  
	 EOF 
;

// Rule SINT
ruleSINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
((
	kw='-' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getSINTAccess().getHyphenMinusKeyword_0(), null); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(this_INT_1, grammarAccess.getSINTAccess().getINTTerminalRuleCall_1(), null); 
    }
)
    ;





RULE_BAG : 'bag';

RULE_RANDOM : 'random';

RULE_READONLY : 'readonly';

RULE_LOCAL : 'local';

RULE_SERIALIZABLE : '!serializable';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


