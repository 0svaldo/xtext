/**
 * generated by Xtext
 */
package org.eclipse.xtext.example.arithmetics.ui.quickfix;

import java.util.List;
import org.eclipse.xtext.example.arithmetics.validation.ArithmeticsValidator;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModification;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;

/**
 * Custom quickfixes.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
@SuppressWarnings("all")
public class ArithmeticsQuickfixProvider extends DefaultQuickfixProvider {
  @Fix(value = ArithmeticsValidator.NORMALIZABLE)
  public void normalize(final Issue issue, final IssueResolutionAcceptor acceptor) {
    String[] _data = issue.getData();
    final String string = ((List<String>)Conversions.doWrapArray(_data)).get(0);
    String _plus = ("Replace with " + string);
    String _plus_1 = ("Replace expression with \'" + string);
    String _plus_2 = (_plus_1 + "\'");
    final Procedure1<IModificationContext> _function = new Procedure1<IModificationContext>() {
        public void apply(final IModificationContext it) {
          try {
            IXtextDocument _xtextDocument = it.getXtextDocument();
            Integer _offset = issue.getOffset();
            Integer _length = issue.getLength();
            _xtextDocument.replace((_offset).intValue(), (_length).intValue(), string);
          } catch (Throwable _e) {
            throw Exceptions.sneakyThrow(_e);
          }
        }
      };
    acceptor.accept(issue, _plus, _plus_2, "upcase.png", new IModification() {
        public void apply(IModificationContext context) {
          _function.apply(context);
        }
    });
  }
}
