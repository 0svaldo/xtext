com.google.common.base.Function -> org.eclipse.xtext.xbase.lib.internal.a:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Joiner -> org.eclipse.xtext.xbase.lib.internal.b:
    java.lang.String separator -> separator
    71:71:com.google.common.base.Joiner on(java.lang.String) -> on
    122:130:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    172:172:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    184:188:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    230:230:java.lang.String join(java.lang.Iterable) -> join
    240:240:java.lang.String join(java.util.Iterator) -> join
    265:266:com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    328:328:com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    538:539:java.lang.CharSequence toString(java.lang.Object) -> toString
    66:66:java.lang.String access$100(com.google.common.base.Joiner) -> access$100
com.google.common.base.Joiner$1 -> org.eclipse.xtext.xbase.lib.internal.b$1:
    java.lang.String val$nullText -> val$nullText
    com.google.common.base.Joiner this$0 -> this$0
    268:268:java.lang.CharSequence toString(java.lang.Object) -> toString
    272:273:com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
com.google.common.base.Joiner$MapJoiner -> org.eclipse.xtext.xbase.lib.internal.b$a:
    com.google.common.base.Joiner joiner -> joiner
    java.lang.String keyValueSeparator -> keyValueSeparator
    372:372:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map) -> appendTo
    423:437:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    467:467:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    480:484:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
com.google.common.base.Objects -> org.eclipse.xtext.xbase.lib.internal.c:
    55:55:boolean equal(java.lang.Object,java.lang.Object) -> equal
com.google.common.base.Preconditions -> org.eclipse.xtext.xbase.lib.internal.d:
    75:78:void checkArgument(boolean) -> checkArgument
    91:94:void checkArgument(boolean,java.lang.Object) -> checkArgument
    118:122:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    132:135:void checkState(boolean) -> checkState
    148:151:void checkState(boolean,java.lang.Object) -> checkState
    190:193:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    207:210:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    233:238:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    284:284:int checkElementIndex(int,int) -> checkElementIndex
    304:307:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    311:316:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    334:334:int checkPositionIndex(int,int) -> checkPositionIndex
    354:357:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    361:366:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    387:390:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    393:400:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    418:447:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.google.common.base.Predicate -> org.eclipse.xtext.xbase.lib.internal.e:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates -> org.eclipse.xtext.xbase.lib.internal.f:
    com.google.common.base.Joiner COMMA_JOINER -> COMMA_JOINER
    85:85:com.google.common.base.Predicate notNull() -> notNull
    131:131:com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate) -> and
    201:201:com.google.common.base.Predicate instanceOf(java.lang.Class) -> instanceOf
    612:612:java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate) -> asList
    48:48:com.google.common.base.Joiner access$800() -> access$800
com.google.common.base.Predicates$1 -> org.eclipse.xtext.xbase.lib.internal.f$1:
com.google.common.base.Predicates$AndPredicate -> org.eclipse.xtext.xbase.lib.internal.f$a:
    java.util.List components -> components
    342:347:boolean apply(java.lang.Object) -> apply
    351:351:int hashCode() -> hashCode
    354:358:boolean equals(java.lang.Object) -> equals
    361:361:java.lang.String toString() -> toString
com.google.common.base.Predicates$InstanceOfPredicate -> org.eclipse.xtext.xbase.lib.internal.f$b:
    java.lang.Class clazz -> clazz
    439:439:boolean apply(java.lang.Object) -> apply
    442:442:int hashCode() -> hashCode
    445:449:boolean equals(java.lang.Object) -> equals
    452:452:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate -> org.eclipse.xtext.xbase.lib.internal.f$c:
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE -> ALWAYS_TRUE
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE -> ALWAYS_FALSE
    com.google.common.base.Predicates$ObjectPredicate IS_NULL -> IS_NULL
    com.google.common.base.Predicates$ObjectPredicate NOT_NULL -> NOT_NULL
    com.google.common.base.Predicates$ObjectPredicate[] $VALUES -> $VALUES
    299:299:com.google.common.base.Predicate withNarrowedType() -> withNarrowedType
com.google.common.base.Predicates$ObjectPredicate$1 -> org.eclipse.xtext.xbase.lib.internal.f$c$1:
    278:278:boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$2 -> org.eclipse.xtext.xbase.lib.internal.f$c$2:
    283:283:boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$3 -> org.eclipse.xtext.xbase.lib.internal.f$c$3:
    288:288:boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$4 -> org.eclipse.xtext.xbase.lib.internal.f$c$4:
    293:293:boolean apply(java.lang.Object) -> apply
com.google.common.base.Strings -> org.eclipse.xtext.xbase.lib.internal.g:
    154:177:java.lang.String repeat(java.lang.String,int) -> repeat
com.google.common.collect.AbstractIndexedListIterator -> org.eclipse.xtext.xbase.lib.internal.h:
    int size -> size
    int position -> position
    java.lang.Object get(int) -> get
    76:76:boolean hasNext() -> hasNext
    81:84:java.lang.Object next() -> next
    89:89:int nextIndex() -> nextIndex
    94:94:boolean hasPrevious() -> hasPrevious
    99:102:java.lang.Object previous() -> previous
    107:107:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> org.eclipse.xtext.xbase.lib.internal.i:
    com.google.common.collect.AbstractIterator$State state -> state
    java.lang.Object next -> next
    java.lang.Object computeNext() -> computeNext
    124:125:java.lang.Object endOfData() -> endOfData
    130:138:boolean hasNext() -> hasNext
    142:148:boolean tryToComputeNext() -> tryToComputeNext
    153:157:java.lang.Object next() -> next
    168:171:java.lang.Object peek() -> peek
com.google.common.collect.AbstractIterator$1 -> org.eclipse.xtext.xbase.lib.internal.i$1:
    int[] $SwitchMap$com$google$common$collect$AbstractIterator$State -> $SwitchMap$com$google$common$collect$AbstractIterator$State
com.google.common.collect.AbstractIterator$State -> org.eclipse.xtext.xbase.lib.internal.i$a:
    com.google.common.collect.AbstractIterator$State READY -> READY
    com.google.common.collect.AbstractIterator$State NOT_READY -> NOT_READY
    com.google.common.collect.AbstractIterator$State DONE -> DONE
    com.google.common.collect.AbstractIterator$State FAILED -> FAILED
    com.google.common.collect.AbstractIterator$State[] $VALUES -> $VALUES
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
com.google.common.collect.AbstractMapEntry -> org.eclipse.xtext.xbase.lib.internal.j:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    43:43:java.lang.Object setValue(java.lang.Object) -> setValue
    47:52:boolean equals(java.lang.Object) -> equals
    56:58:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
com.google.common.collect.BiMap -> org.eclipse.xtext.xbase.lib.internal.k:
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.Collections2 -> org.eclipse.xtext.xbase.lib.internal.l:
    com.google.common.base.Joiner STANDARD_JOINER -> STANDARD_JOINER
    337:343:boolean containsAllImpl(java.util.Collection,java.util.Collection) -> containsAllImpl
    350:358:java.lang.String toStringImpl(java.util.Collection) -> toStringImpl
    365:366:java.lang.StringBuilder newStringBuilderForCollection(int) -> newStringBuilderForCollection
    373:373:java.util.Collection cast(java.lang.Iterable) -> cast
com.google.common.collect.Collections2$1 -> org.eclipse.xtext.xbase.lib.internal.l$1:
    java.util.Collection val$collection -> val$collection
    355:355:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$FilteredCollection -> org.eclipse.xtext.xbase.lib.internal.l$a:
    java.util.Collection unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    146:147:boolean add(java.lang.Object) -> add
    152:155:boolean addAll(java.util.Collection) -> addAll
    160:161:void clear() -> clear
    172:183:boolean contains(java.lang.Object) -> contains
    189:194:boolean containsAll(java.util.Collection) -> containsAll
    199:199:boolean isEmpty() -> isEmpty
    204:204:java.util.Iterator iterator() -> iterator
    216:223:boolean remove(java.lang.Object) -> remove
    229:236:boolean removeAll(java.util.Collection) -> removeAll
    241:249:boolean retainAll(java.util.Collection) -> retainAll
    254:254:int size() -> size
    260:260:java.lang.Object[] toArray() -> toArray
    265:265:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    269:269:java.lang.String toString() -> toString
com.google.common.collect.Collections2$FilteredCollection$1 -> org.eclipse.xtext.xbase.lib.internal.l$a$1:
    java.util.Collection val$collection -> val$collection
    com.google.common.collect.Collections2$FilteredCollection this$0 -> this$0
    233:233:boolean apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$FilteredCollection$2 -> org.eclipse.xtext.xbase.lib.internal.l$a$2:
    java.util.Collection val$collection -> val$collection
    com.google.common.collect.Collections2$FilteredCollection this$0 -> this$0
    246:246:boolean apply(java.lang.Object) -> apply
com.google.common.collect.ComparatorOrdering -> org.eclipse.xtext.xbase.lib.internal.m:
    java.util.Comparator comparator -> comparator
    41:41:int compare(java.lang.Object,java.lang.Object) -> compare
    68:75:boolean equals(java.lang.Object) -> equals
    79:79:int hashCode() -> hashCode
    83:83:java.lang.String toString() -> toString
com.google.common.collect.DescendingImmutableSortedSet -> org.eclipse.xtext.xbase.lib.internal.n:
    com.google.common.collect.ImmutableSortedSet forward -> forward
    38:38:int size() -> size
    43:43:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    48:48:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    54:54:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    59:59:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    65:65:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    71:71:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    77:77:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    82:82:java.lang.Object lower(java.lang.Object) -> lower
    87:87:java.lang.Object floor(java.lang.Object) -> floor
    92:92:java.lang.Object ceiling(java.lang.Object) -> ceiling
    97:97:java.lang.Object higher(java.lang.Object) -> higher
    102:106:int indexOf(java.lang.Object) -> indexOf
    112:112:boolean isPartialView() -> isPartialView
    28:28:java.util.Iterator descendingIterator() -> descendingIterator
    28:28:java.util.NavigableSet descendingSet() -> descendingSet
    28:28:java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableBiMap -> org.eclipse.xtext.xbase.lib.internal.o:
    com.google.common.collect.EmptyImmutableBiMap INSTANCE -> INSTANCE
    36:36:com.google.common.collect.ImmutableBiMap inverse() -> inverse
    41:41:int size() -> size
    46:46:boolean isEmpty() -> isEmpty
    51:51:java.lang.Object get(java.lang.Object) -> get
    56:56:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    61:61:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    66:66:com.google.common.collect.ImmutableSet keySet() -> keySet
    71:71:boolean isPartialView() -> isPartialView
    28:28:com.google.common.collect.BiMap inverse() -> inverse
    28:28:java.util.Set entrySet() -> entrySet
    28:28:java.util.Set keySet() -> keySet
com.google.common.collect.EmptyImmutableList -> org.eclipse.xtext.xbase.lib.internal.p:
    com.google.common.collect.EmptyImmutableList INSTANCE -> INSTANCE
    43:43:int size() -> size
    47:47:boolean isEmpty() -> isEmpty
    51:51:boolean isPartialView() -> isPartialView
    55:55:boolean contains(java.lang.Object) -> contains
    59:59:boolean containsAll(java.util.Collection) -> containsAll
    63:63:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    67:67:java.lang.Object[] toArray() -> toArray
    71:74:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    80:81:java.lang.Object get(int) -> get
    85:85:int indexOf(java.lang.Object) -> indexOf
    89:89:int lastIndexOf(java.lang.Object) -> lastIndexOf
    93:94:com.google.common.collect.ImmutableList subList(int,int) -> subList
    98:98:com.google.common.collect.ImmutableList reverse() -> reverse
    102:102:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    106:107:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    111:115:boolean equals(java.lang.Object) -> equals
    119:119:int hashCode() -> hashCode
    123:123:java.lang.String toString() -> toString
    35:35:java.util.List subList(int,int) -> subList
    35:35:java.util.ListIterator listIterator(int) -> listIterator
    35:35:java.util.ListIterator listIterator() -> listIterator
    35:35:java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableSet -> org.eclipse.xtext.xbase.lib.internal.q:
    com.google.common.collect.EmptyImmutableSet INSTANCE -> INSTANCE
    39:39:int size() -> size
    43:43:boolean isEmpty() -> isEmpty
    47:47:boolean contains(java.lang.Object) -> contains
    51:51:boolean containsAll(java.util.Collection) -> containsAll
    55:55:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    59:59:boolean isPartialView() -> isPartialView
    63:63:java.lang.Object[] toArray() -> toArray
    67:67:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    72:72:com.google.common.collect.ImmutableList asList() -> asList
    76:80:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
    88:88:boolean isHashCodeFast() -> isHashCodeFast
    92:92:java.lang.String toString() -> toString
    31:31:java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableSortedMap -> org.eclipse.xtext.xbase.lib.internal.r:
    com.google.common.collect.ImmutableSortedSet keySet -> keySet
    48:48:java.lang.Object get(java.lang.Object) -> get
    53:53:com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    58:58:int size() -> size
    63:63:boolean isEmpty() -> isEmpty
    68:68:com.google.common.collect.ImmutableCollection values() -> values
    73:73:java.lang.String toString() -> toString
    78:78:boolean isPartialView() -> isPartialView
    83:83:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    88:88:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    93:94:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    99:100:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    105:105:com.google.common.collect.ImmutableSortedMap createDescendingMap() -> createDescendingMap
    31:31:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    31:31:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    31:31:java.util.Set entrySet() -> entrySet
    31:31:java.util.Collection values() -> values
    31:31:java.util.Set keySet() -> keySet
    31:31:com.google.common.collect.ImmutableSet keySet() -> keySet
com.google.common.collect.EmptyImmutableSortedSet -> org.eclipse.xtext.xbase.lib.internal.s:
    43:43:int size() -> size
    47:47:boolean isEmpty() -> isEmpty
    51:51:boolean contains(java.lang.Object) -> contains
    55:55:boolean containsAll(java.util.Collection) -> containsAll
    59:59:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    64:64:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    68:68:boolean isPartialView() -> isPartialView
    72:72:com.google.common.collect.ImmutableList asList() -> asList
    76:76:java.lang.Object[] toArray() -> toArray
    80:80:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    84:88:boolean equals(java.lang.Object) -> equals
    92:92:int hashCode() -> hashCode
    96:96:java.lang.String toString() -> toString
    101:101:java.lang.Object first() -> first
    106:106:java.lang.Object last() -> last
    111:111:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    117:117:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    122:122:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    126:126:int indexOf(java.lang.Object) -> indexOf
    131:131:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    34:34:java.util.Iterator descendingIterator() -> descendingIterator
    34:34:java.util.Iterator iterator() -> iterator
com.google.common.collect.FluentIterable -> org.eclipse.xtext.xbase.lib.internal.t:
    java.lang.Iterable iterable -> iterable
    117:117:java.lang.String toString() -> toString
com.google.common.collect.ForwardingCollection -> org.eclipse.xtext.xbase.lib.internal.u:
    java.util.Collection delegate() -> delegate
    59:59:java.util.Iterator iterator() -> iterator
    64:64:int size() -> size
    69:69:boolean removeAll(java.util.Collection) -> removeAll
    74:74:boolean isEmpty() -> isEmpty
    79:79:boolean contains(java.lang.Object) -> contains
    84:84:boolean add(java.lang.Object) -> add
    89:89:boolean remove(java.lang.Object) -> remove
    94:94:boolean containsAll(java.util.Collection) -> containsAll
    99:99:boolean addAll(java.util.Collection) -> addAll
    104:104:boolean retainAll(java.util.Collection) -> retainAll
    109:110:void clear() -> clear
    114:114:java.lang.Object[] toArray() -> toArray
    119:119:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    47:47:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMapEntry -> org.eclipse.xtext.xbase.lib.internal.v:
    java.util.Map$Entry delegate() -> delegate
    66:66:java.lang.Object getKey() -> getKey
    71:71:java.lang.Object getValue() -> getValue
    76:76:java.lang.Object setValue(java.lang.Object) -> setValue
    80:80:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
    54:54:java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingObject -> org.eclipse.xtext.xbase.lib.internal.w:
    java.lang.Object delegate() -> delegate
    72:72:java.lang.String toString() -> toString
com.google.common.collect.ForwardingSet -> org.eclipse.xtext.xbase.lib.internal.x:
    java.util.Set delegate() -> delegate
    59:59:boolean equals(java.lang.Object) -> equals
    63:63:int hashCode() -> hashCode
    48:48:java.util.Collection delegate() -> delegate
    48:48:java.lang.Object delegate() -> delegate
com.google.common.collect.Hashing -> org.eclipse.xtext.xbase.lib.internal.y:
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    45:45:int smear(int) -> smear
    53:60:int closedTableSize(int,double) -> closedTableSize
com.google.common.collect.ImmutableAsList -> org.eclipse.xtext.xbase.lib.internal.z:
    com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    41:41:boolean contains(java.lang.Object) -> contains
    46:46:int size() -> size
    51:51:boolean isEmpty() -> isEmpty
    56:56:boolean isPartialView() -> isPartialView
com.google.common.collect.ImmutableBiMap -> org.eclipse.xtext.xbase.lib.internal.aa:
    53:53:com.google.common.collect.ImmutableBiMap of() -> of
    60:62:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    249:249:com.google.common.collect.ImmutableSet values() -> values
    43:43:com.google.common.collect.ImmutableCollection values() -> values
    43:43:java.util.Collection values() -> values
    43:43:com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.ImmutableCollection -> org.eclipse.xtext.xbase.lib.internal.ab:
    com.google.common.collect.ImmutableCollection EMPTY_IMMUTABLE_COLLECTION -> EMPTY_IMMUTABLE_COLLECTION
    com.google.common.collect.ImmutableList asList -> asList
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    58:58:java.lang.Object[] toArray() -> toArray
    63:63:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    68:68:boolean contains(java.lang.Object) -> contains
    73:73:boolean containsAll(java.util.Collection) -> containsAll
    78:78:boolean isEmpty() -> isEmpty
    82:82:java.lang.String toString() -> toString
    94:94:boolean add(java.lang.Object) -> add
    106:106:boolean remove(java.lang.Object) -> remove
    118:118:boolean addAll(java.util.Collection) -> addAll
    130:130:boolean removeAll(java.util.Collection) -> removeAll
    142:142:boolean retainAll(java.util.Collection) -> retainAll
    154:154:void clear() -> clear
    169:170:com.google.common.collect.ImmutableList asList() -> asList
    174:180:com.google.common.collect.ImmutableList createAsList() -> createAsList
    boolean isPartialView() -> isPartialView
    41:41:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$1 -> org.eclipse.xtext.xbase.lib.internal.ab$1:
com.google.common.collect.ImmutableCollection$Builder -> org.eclipse.xtext.xbase.lib.internal.ab$a:
    292:304:int expandedCapacity(int,int) -> expandedCapacity
com.google.common.collect.ImmutableCollection$EmptyImmutableCollection -> org.eclipse.xtext.xbase.lib.internal.ab$b:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    190:190:int size() -> size
    194:194:boolean isEmpty() -> isEmpty
    198:198:boolean contains(java.lang.Object) -> contains
    202:202:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    208:208:java.lang.Object[] toArray() -> toArray
    212:215:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    219:219:com.google.common.collect.ImmutableList createAsList() -> createAsList
    223:223:boolean isPartialView() -> isPartialView
    186:186:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEntry -> org.eclipse.xtext.xbase.lib.internal.ac:
    java.lang.Object key -> key
    java.lang.Object value -> value
    40:40:java.lang.Object getKey() -> getKey
    44:44:java.lang.Object getValue() -> getValue
    48:48:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableEnumMap -> org.eclipse.xtext.xbase.lib.internal.ad:
    java.util.EnumMap delegate -> delegate
    38:46:com.google.common.collect.ImmutableMap asImmutable(java.util.EnumMap) -> asImmutable
    59:59:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    85:85:int size() -> size
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    95:95:java.lang.Object get(java.lang.Object) -> get
    100:100:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    129:129:boolean isPartialView() -> isPartialView
    36:36:java.util.EnumMap access$000(com.google.common.collect.ImmutableEnumMap) -> access$000
com.google.common.collect.ImmutableEnumMap$1 -> org.eclipse.xtext.xbase.lib.internal.ad$1:
    com.google.common.collect.ImmutableEnumMap this$0 -> this$0
    63:63:boolean contains(java.lang.Object) -> contains
    68:68:int size() -> size
    73:73:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    78:78:boolean isPartialView() -> isPartialView
    59:59:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumMap$2 -> org.eclipse.xtext.xbase.lib.internal.ad$2:
    com.google.common.collect.ImmutableEnumMap this$0 -> this$0
    104:104:com.google.common.collect.ImmutableMap map() -> map
    109:109:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    100:100:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumMap$2$1 -> org.eclipse.xtext.xbase.lib.internal.ad$2$1:
    java.util.Iterator backingIterator -> backingIterator
    com.google.common.collect.ImmutableEnumMap$2 this$1 -> this$1
    114:114:boolean hasNext() -> hasNext
    119:120:java.util.Map$Entry next() -> next
    109:109:java.lang.Object next() -> next
com.google.common.collect.ImmutableEnumSet -> org.eclipse.xtext.xbase.lib.internal.ae:
    java.util.EnumSet delegate -> delegate
    int hashCode -> hashCode
    35:41:com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet) -> asImmutable
    60:60:boolean isPartialView() -> isPartialView
    64:64:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    69:69:int size() -> size
    73:73:boolean contains(java.lang.Object) -> contains
    77:77:boolean containsAll(java.util.Collection) -> containsAll
    81:81:boolean isEmpty() -> isEmpty
    85:85:java.lang.Object[] toArray() -> toArray
    89:89:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    93:93:boolean equals(java.lang.Object) -> equals
    99:100:int hashCode() -> hashCode
    104:104:java.lang.String toString() -> toString
    31:31:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableList -> org.eclipse.xtext.xbase.lib.internal.af:
    74:74:com.google.common.collect.ImmutableList of() -> of
    86:86:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    248:253:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    284:290:com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    300:308:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    314:314:com.google.common.collect.ImmutableList copyFromCollection(java.util.Collection) -> copyFromCollection
    319:322:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    330:330:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    334:334:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    338:338:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    348:348:int indexOf(java.lang.Object) -> indexOf
    353:353:int lastIndexOf(java.lang.Object) -> lastIndexOf
    358:358:boolean contains(java.lang.Object) -> contains
    371:379:com.google.common.collect.ImmutableList subList(int,int) -> subList
    389:389:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    433:433:boolean addAll(int,java.util.Collection) -> addAll
    445:445:java.lang.Object set(int,java.lang.Object) -> set
    457:457:void add(int,java.lang.Object) -> add
    469:469:java.lang.Object remove(int) -> remove
    478:478:com.google.common.collect.ImmutableList asList() -> asList
    490:490:com.google.common.collect.ImmutableList reverse() -> reverse
    588:588:boolean equals(java.lang.Object) -> equals
    592:592:int hashCode() -> hashCode
    624:624:com.google.common.collect.ImmutableList$Builder builder() -> builder
    62:62:java.util.Iterator iterator() -> iterator
    62:62:java.util.List subList(int,int) -> subList
    62:62:java.util.ListIterator listIterator(int) -> listIterator
    62:62:java.util.ListIterator listIterator() -> listIterator
com.google.common.collect.ImmutableList$1 -> org.eclipse.xtext.xbase.lib.internal.af$1:
    com.google.common.collect.ImmutableList this$0 -> this$0
    341:341:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$Builder -> org.eclipse.xtext.xbase.lib.internal.af$a:
    java.lang.Object[] contents -> contents
    int size -> size
    666:670:com.google.common.collect.ImmutableList$Builder ensureCapacity(int) -> ensureCapacity
    681:684:com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    740:752:com.google.common.collect.ImmutableList build() -> build
com.google.common.collect.ImmutableList$ReverseImmutableList -> org.eclipse.xtext.xbase.lib.internal.af$b:
    com.google.common.collect.ImmutableList forwardList -> forwardList
    int size -> size
    503:503:int reverseIndex(int) -> reverseIndex
    507:507:int reversePosition(int) -> reversePosition
    511:511:com.google.common.collect.ImmutableList reverse() -> reverse
    515:515:boolean contains(java.lang.Object) -> contains
    519:519:boolean containsAll(java.util.Collection) -> containsAll
    523:524:int indexOf(java.lang.Object) -> indexOf
    528:529:int lastIndexOf(java.lang.Object) -> lastIndexOf
    533:534:com.google.common.collect.ImmutableList subList(int,int) -> subList
    539:540:java.lang.Object get(int) -> get
    544:547:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    575:575:int size() -> size
    579:579:boolean isEmpty() -> isEmpty
    583:583:boolean isPartialView() -> isPartialView
    493:493:java.util.List subList(int,int) -> subList
    493:493:java.util.ListIterator listIterator(int) -> listIterator
    493:493:java.util.ListIterator listIterator() -> listIterator
    493:493:java.util.Iterator iterator() -> iterator
    493:493:int access$000(com.google.common.collect.ImmutableList$ReverseImmutableList,int) -> access$000
com.google.common.collect.ImmutableList$ReverseImmutableList$1 -> org.eclipse.xtext.xbase.lib.internal.af$b$1:
    com.google.common.collect.UnmodifiableListIterator val$forward -> val$forward
    com.google.common.collect.ImmutableList$ReverseImmutableList this$0 -> this$0
    549:549:boolean hasNext() -> hasNext
    553:553:boolean hasPrevious() -> hasPrevious
    557:557:java.lang.Object next() -> next
    561:561:int nextIndex() -> nextIndex
    565:565:java.lang.Object previous() -> previous
    569:569:int previousIndex() -> previousIndex
com.google.common.collect.ImmutableList$SubList -> org.eclipse.xtext.xbase.lib.internal.af$c:
    int offset -> offset
    int length -> length
    com.google.common.collect.ImmutableList this$0 -> this$0
    403:403:int size() -> size
    408:409:java.lang.Object get(int) -> get
    414:415:com.google.common.collect.ImmutableList subList(int,int) -> subList
    420:420:boolean isPartialView() -> isPartialView
    392:392:java.util.List subList(int,int) -> subList
    392:392:java.util.ListIterator listIterator(int) -> listIterator
    392:392:java.util.ListIterator listIterator() -> listIterator
    392:392:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMap -> org.eclipse.xtext.xbase.lib.internal.ag:
    com.google.common.collect.ImmutableSet entrySet -> entrySet
    com.google.common.collect.ImmutableSet keySet -> keySet
    com.google.common.collect.ImmutableCollection values -> values
    70:70:com.google.common.collect.ImmutableMap of() -> of
    80:80:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object) -> of
    132:132:com.google.common.collect.ImmutableMap$Builder builder() -> builder
    143:145:java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object) -> entryOf
    268:303:com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    318:318:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    330:330:java.lang.Object remove(java.lang.Object) -> remove
    342:342:void putAll(java.util.Map) -> putAll
    354:354:void clear() -> clear
    359:359:boolean isEmpty() -> isEmpty
    364:364:boolean containsKey(java.lang.Object) -> containsKey
    369:369:boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    384:385:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    398:399:com.google.common.collect.ImmutableSet keySet() -> keySet
    403:403:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    414:415:com.google.common.collect.ImmutableCollection values() -> values
    492:492:boolean equals(java.lang.Object) -> equals
    boolean isPartialView() -> isPartialView
    500:500:int hashCode() -> hashCode
    504:504:java.lang.String toString() -> toString
    61:61:java.util.Set entrySet() -> entrySet
    61:61:java.util.Collection values() -> values
    61:61:java.util.Set keySet() -> keySet
com.google.common.collect.ImmutableMap$Builder -> org.eclipse.xtext.xbase.lib.internal.ag$a:
    java.util.ArrayList entries -> entries
    182:183:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    235:235:com.google.common.collect.ImmutableMap build() -> build
    240:249:com.google.common.collect.ImmutableMap fromEntryList(java.util.List) -> fromEntryList
com.google.common.collect.ImmutableMapEntrySet -> org.eclipse.xtext.xbase.lib.internal.ah:
    com.google.common.collect.ImmutableMap map() -> map
    41:41:int size() -> size
    46:51:boolean contains(java.lang.Object) -> contains
    56:56:boolean isPartialView() -> isPartialView
com.google.common.collect.ImmutableMapKeySet -> org.eclipse.xtext.xbase.lib.internal.ai:
    com.google.common.collect.ImmutableMap map -> map
    43:43:int size() -> size
    48:48:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    53:53:boolean contains(java.lang.Object) -> contains
    58:59:com.google.common.collect.ImmutableList createAsList() -> createAsList
    76:76:boolean isPartialView() -> isPartialView
    33:33:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapKeySet$1 -> org.eclipse.xtext.xbase.lib.internal.ai$1:
    com.google.common.collect.ImmutableList val$entryList -> val$entryList
    com.google.common.collect.ImmutableMapKeySet this$0 -> this$0
    63:63:java.lang.Object get(int) -> get
    68:68:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
com.google.common.collect.ImmutableMapValues -> org.eclipse.xtext.xbase.lib.internal.aj:
    com.google.common.collect.ImmutableMap map -> map
    41:41:int size() -> size
    46:46:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    51:51:boolean contains(java.lang.Object) -> contains
    56:56:boolean isPartialView() -> isPartialView
    61:62:com.google.common.collect.ImmutableList createAsList() -> createAsList
    31:31:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapValues$1 -> org.eclipse.xtext.xbase.lib.internal.aj$1:
    com.google.common.collect.ImmutableList val$entryList -> val$entryList
    com.google.common.collect.ImmutableMapValues this$0 -> this$0
    65:65:java.lang.Object get(int) -> get
    70:70:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
com.google.common.collect.ImmutableSet -> org.eclipse.xtext.xbase.lib.internal.ak:
    int CUTOFF -> CUTOFF
    84:84:com.google.common.collect.ImmutableSet of() -> of
    94:94:com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    179:225:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> construct
    249:260:int chooseTableSize(int) -> chooseTableSize
    274:280:com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    362:376:com.google.common.collect.ImmutableSet copyOf(java.util.Collection) -> copyOf
    381:392:com.google.common.collect.ImmutableSet copyFromCollection(java.util.Collection) -> copyFromCollection
    400:400:boolean isHashCodeFast() -> isHashCodeFast
    404:413:boolean equals(java.lang.Object) -> equals
    417:417:int hashCode() -> hashCode
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    72:72:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSet$ArrayImmutableSet -> org.eclipse.xtext.xbase.lib.internal.ak$a:
    java.lang.Object[] elements -> elements
    434:434:int size() -> size
    438:438:boolean isEmpty() -> isEmpty
    442:442:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    446:446:java.lang.Object[] toArray() -> toArray
    450:450:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    454:468:boolean containsAll(java.util.Collection) -> containsAll
    472:472:boolean isPartialView() -> isPartialView
    476:476:com.google.common.collect.ImmutableList createAsList() -> createAsList
    424:424:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSortedAsList -> org.eclipse.xtext.xbase.lib.internal.al:
    41:41:com.google.common.collect.ImmutableSortedSet delegateCollection() -> delegateCollection
    45:45:java.util.Comparator comparator() -> comparator
    53:60:int indexOf(java.lang.Object) -> indexOf
    65:65:int lastIndexOf(java.lang.Object) -> lastIndexOf
    71:71:boolean contains(java.lang.Object) -> contains
    82:82:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    30:30:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
com.google.common.collect.ImmutableSortedMap -> org.eclipse.xtext.xbase.lib.internal.am:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP -> NATURAL_EMPTY_MAP
    com.google.common.collect.ImmutableSortedMap descendingMap -> descendingMap
    73:76:com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> emptyMap
    83:94:com.google.common.collect.ImmutableSortedMap fromSortedEntries(java.util.Comparator,java.util.Collection) -> fromSortedEntries
    101:104:com.google.common.collect.ImmutableSortedMap from(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList) -> from
    117:117:com.google.common.collect.ImmutableSortedMap of() -> of
    236:242:com.google.common.collect.ImmutableSortedMap copyOfSorted(java.util.SortedMap) -> copyOfSorted
    247:284:com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator) -> copyOfInternal
    289:297:void sortEntries(java.util.List,java.util.Comparator) -> sortEntries
    301:309:void validateEntries(java.util.List,java.util.Comparator) -> validateEntries
    430:430:int size() -> size
    434:434:boolean containsValue(java.lang.Object) -> containsValue
    438:438:boolean isPartialView() -> isPartialView
    446:446:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    468:468:java.util.Comparator comparator() -> comparator
    473:473:java.lang.Object firstKey() -> firstKey
    478:478:java.lang.Object lastKey() -> lastKey
    493:493:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    526:526:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    547:551:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    566:566:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    587:587:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    592:592:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    597:597:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    602:602:java.lang.Object floorKey(java.lang.Object) -> floorKey
    607:607:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    612:612:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    617:617:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    622:622:java.lang.Object higherKey(java.lang.Object) -> higherKey
    627:627:java.util.Map$Entry firstEntry() -> firstEntry
    632:632:java.util.Map$Entry lastEntry() -> lastEntry
    644:644:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    656:656:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    663:667:com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    com.google.common.collect.ImmutableSortedMap createDescendingMap() -> createDescendingMap
    674:674:com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    679:679:com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    60:60:com.google.common.collect.ImmutableSet keySet() -> keySet
    60:60:java.util.Set entrySet() -> entrySet
    60:60:java.util.Collection values() -> values
    60:60:java.util.Set keySet() -> keySet
    60:60:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    60:60:java.util.SortedMap headMap(java.lang.Object) -> headMap
    60:60:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    60:60:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    60:60:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    60:60:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    60:60:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    60:60:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    60:60:java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.ImmutableSortedMap$1 -> org.eclipse.xtext.xbase.lib.internal.am$1:
    java.util.Comparator val$comparator -> val$comparator
    292:292:int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
    289:289:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.ImmutableSortedMapFauxverideShim -> org.eclipse.xtext.xbase.lib.internal.an:
com.google.common.collect.ImmutableSortedSet -> org.eclipse.xtext.xbase.lib.internal.ao:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    com.google.common.collect.ImmutableSortedSet NATURAL_EMPTY_SET -> NATURAL_EMPTY_SET
    java.util.Comparator comparator -> comparator
    com.google.common.collect.ImmutableSortedSet descendingSet -> descendingSet
    106:106:com.google.common.collect.ImmutableSortedSet emptySet() -> emptySet
    111:114:com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator) -> emptySet
    398:403:com.google.common.collect.ImmutableSortedSet copyOfSorted(java.util.SortedSet) -> copyOfSorted
    589:589:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    598:599:int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> unsafeCompare
    617:617:java.util.Comparator comparator() -> comparator
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    636:636:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    645:645:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    663:663:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    673:676:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    692:692:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    701:701:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    721:721:java.lang.Object lower(java.lang.Object) -> lower
    730:730:java.lang.Object floor(java.lang.Object) -> floor
    739:739:java.lang.Object ceiling(java.lang.Object) -> ceiling
    748:748:java.lang.Object higher(java.lang.Object) -> higher
    753:753:java.lang.Object first() -> first
    758:758:java.lang.Object last() -> last
    772:772:java.lang.Object pollFirst() -> pollFirst
    786:786:java.lang.Object pollLast() -> pollLast
    799:804:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    809:809:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    int indexOf(java.lang.Object) -> indexOf
    93:93:java.util.Iterator iterator() -> iterator
    93:93:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    93:93:java.util.SortedSet headSet(java.lang.Object) -> headSet
    93:93:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    93:93:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    93:93:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    93:93:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    93:93:java.util.Iterator descendingIterator() -> descendingIterator
    93:93:java.util.NavigableSet descendingSet() -> descendingSet
com.google.common.collect.ImmutableSortedSetFauxverideShim -> org.eclipse.xtext.xbase.lib.internal.ap:
com.google.common.collect.Iterables -> org.eclipse.xtext.xbase.lib.internal.aq:
    110:110:int size(java.lang.Iterable) -> size
    141:141:boolean removeAll(java.lang.Iterable,java.util.Collection) -> removeAll
    179:183:boolean removeIf(java.lang.Iterable,com.google.common.base.Predicate) -> removeIf
    190:210:boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate) -> removeIfFromRandomAccessList
    225:234:void slowRemoveIfForRemainingElements(java.util.List,com.google.common.base.Predicate,int,int) -> slowRemoveIfForRemainingElements
    245:252:boolean elementsEqual(java.lang.Iterable,java.lang.Iterable) -> elementsEqual
    260:260:java.lang.String toString(java.lang.Iterable) -> toString
    271:271:java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    297:299:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class) -> toArray
    319:319:java.util.Collection toCollection(java.lang.Iterable) -> toCollection
    332:336:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    419:421:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    489:490:java.lang.Iterable concat(java.lang.Iterable) -> concat
    503:505:com.google.common.collect.UnmodifiableIterator iterators(java.lang.Iterable) -> iterators
    584:586:java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate) -> filter
    608:610:java.lang.Iterable filter(java.lang.Iterable,java.lang.Class) -> filter
    708:710:java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function) -> transform
    790:790:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    62:62:com.google.common.collect.UnmodifiableIterator access$100(java.lang.Iterable) -> access$100
com.google.common.collect.Iterables$2 -> org.eclipse.xtext.xbase.lib.internal.aq$1:
    java.lang.Iterable val$inputs -> val$inputs
    493:493:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$3 -> org.eclipse.xtext.xbase.lib.internal.aq$2:
    java.util.Iterator val$iterableIterator -> val$iterableIterator
    508:508:boolean hasNext() -> hasNext
    512:512:java.util.Iterator next() -> next
    505:505:java.lang.Object next() -> next
com.google.common.collect.Iterables$6 -> org.eclipse.xtext.xbase.lib.internal.aq$3:
    java.lang.Iterable val$unfiltered -> val$unfiltered
    com.google.common.base.Predicate val$predicate -> val$predicate
    589:589:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$7 -> org.eclipse.xtext.xbase.lib.internal.aq$4:
    java.lang.Iterable val$unfiltered -> val$unfiltered
    java.lang.Class val$type -> val$type
    613:613:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$8 -> org.eclipse.xtext.xbase.lib.internal.aq$5:
    java.lang.Iterable val$fromIterable -> val$fromIterable
    com.google.common.base.Function val$function -> val$function
    713:713:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterators -> org.eclipse.xtext.xbase.lib.internal.ar:
    com.google.common.collect.UnmodifiableListIterator EMPTY_LIST_ITERATOR -> EMPTY_LIST_ITERATOR
    java.util.Iterator EMPTY_MODIFIABLE_ITERATOR -> EMPTY_MODIFIABLE_ITERATOR
    104:104:com.google.common.collect.UnmodifiableIterator emptyIterator() -> emptyIterator
    116:116:com.google.common.collect.UnmodifiableListIterator emptyListIterator() -> emptyListIterator
    149:153:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
    182:187:int size(java.util.Iterator) -> size
    195:208:boolean contains(java.util.Iterator,java.lang.Object) -> contains
    222:230:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    246:254:boolean removeIf(java.util.Iterator,com.google.common.base.Predicate) -> removeIf
    291:301:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    310:310:java.lang.String toString(java.util.Iterator) -> toString
    325:340:java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    381:386:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    492:494:java.util.Iterator concat(java.util.Iterator,java.util.Iterator) -> concat
    580:581:java.util.Iterator concat(java.util.Iterator) -> concat
    696:698:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate) -> filter
    725:725:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,java.lang.Class) -> filter
    735:742:boolean any(java.util.Iterator,com.google.common.base.Predicate) -> any
    856:857:java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function) -> transform
    935:935:java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    1114:1125:com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int) -> forArray
    1140:1140:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    1395:1395:java.util.ListIterator cast(java.util.Iterator) -> cast
com.google.common.collect.Iterators$1 -> org.eclipse.xtext.xbase.lib.internal.ar$1:
    73:73:boolean hasNext() -> hasNext
    77:77:java.lang.Object next() -> next
    81:81:boolean hasPrevious() -> hasPrevious
    85:85:java.lang.Object previous() -> previous
    89:89:int nextIndex() -> nextIndex
    93:93:int previousIndex() -> previousIndex
com.google.common.collect.Iterators$12 -> org.eclipse.xtext.xbase.lib.internal.ar$2:
    java.lang.Object[] val$array -> val$array
    int val$offset -> val$offset
    1127:1127:java.lang.Object get(int) -> get
com.google.common.collect.Iterators$13 -> org.eclipse.xtext.xbase.lib.internal.ar$3:
    boolean done -> done
    java.lang.Object val$value -> val$value
    1144:1144:boolean hasNext() -> hasNext
    1148:1152:java.lang.Object next() -> next
com.google.common.collect.Iterators$2 -> org.eclipse.xtext.xbase.lib.internal.ar$4:
    122:122:boolean hasNext() -> hasNext
    126:126:java.lang.Object next() -> next
    130:130:void remove() -> remove
com.google.common.collect.Iterators$3 -> org.eclipse.xtext.xbase.lib.internal.ar$5:
    java.util.Iterator val$iterator -> val$iterator
    156:156:boolean hasNext() -> hasNext
    160:160:java.lang.Object next() -> next
com.google.common.collect.Iterators$5 -> org.eclipse.xtext.xbase.lib.internal.ar$6:
    java.util.Iterator current -> current
    java.util.Iterator removeFrom -> removeFrom
    java.util.Iterator val$inputs -> val$inputs
    596:599:boolean hasNext() -> hasNext
    603:607:java.lang.Object next() -> next
    611:615:void remove() -> remove
com.google.common.collect.Iterators$7 -> org.eclipse.xtext.xbase.lib.internal.ar$7:
    java.util.Iterator val$unfiltered -> val$unfiltered
    com.google.common.base.Predicate val$predicate -> val$predicate
    700:706:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterators$8 -> org.eclipse.xtext.xbase.lib.internal.ar$8:
    com.google.common.base.Function val$function -> val$function
    860:860:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Lists -> org.eclipse.xtext.xbase.lib.internal.as:
    80:80:java.util.ArrayList newArrayList() -> newArrayList
    96:101:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    105:108:int computeArrayListCapacity(int) -> computeArrayListCapacity
    123:125:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    142:147:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    210:210:java.util.LinkedList newLinkedList() -> newLinkedList
    222:226:java.util.LinkedList newLinkedList(java.lang.Iterable) -> newLinkedList
    510:510:java.util.List transform(java.util.List,com.google.common.base.Function) -> transform
    844:849:java.util.List reverse(java.util.List) -> reverse
    1007:1014:int hashCodeImpl(java.util.List) -> hashCodeImpl
    1021:1030:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    1052:1058:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    1065:1071:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
com.google.common.collect.Lists$RandomAccessReverseList -> org.eclipse.xtext.xbase.lib.internal.as$a:
com.google.common.collect.Lists$ReverseList -> org.eclipse.xtext.xbase.lib.internal.as$b:
    java.util.List forwardList -> forwardList
    861:861:java.util.List getForwardList() -> getForwardList
    865:867:int reverseIndex(int) -> reverseIndex
    871:873:int reversePosition(int) -> reversePosition
    877:878:void add(int,java.lang.Object) -> add
    881:882:void clear() -> clear
    885:885:java.lang.Object remove(int) -> remove
    889:890:void removeRange(int,int) -> removeRange
    893:893:java.lang.Object set(int,java.lang.Object) -> set
    897:897:java.lang.Object get(int) -> get
    901:901:boolean isEmpty() -> isEmpty
    905:905:int size() -> size
    909:909:boolean contains(java.lang.Object) -> contains
    913:913:boolean containsAll(java.util.Collection) -> containsAll
    917:918:java.util.List subList(int,int) -> subList
    923:924:int indexOf(java.lang.Object) -> indexOf
    928:929:int lastIndexOf(java.lang.Object) -> lastIndexOf
    933:933:java.util.Iterator iterator() -> iterator
    937:939:java.util.ListIterator listIterator(int) -> listIterator
    853:853:int access$000(com.google.common.collect.Lists$ReverseList,int) -> access$000
com.google.common.collect.Lists$ReverseList$1 -> org.eclipse.xtext.xbase.lib.internal.as$b$1:
    boolean canRemove -> canRemove
    boolean canSet -> canSet
    java.util.ListIterator val$forwardIterator -> val$forwardIterator
    com.google.common.collect.Lists$ReverseList this$0 -> this$0
    945:948:void add(java.lang.Object) -> add
    951:951:boolean hasNext() -> hasNext
    955:955:boolean hasPrevious() -> hasPrevious
    959:963:java.lang.Object next() -> next
    967:967:int nextIndex() -> nextIndex
    971:975:java.lang.Object previous() -> previous
    979:979:int previousIndex() -> previousIndex
    983:986:void remove() -> remove
    989:991:void set(java.lang.Object) -> set
com.google.common.collect.Lists$TransformingRandomAccessList -> org.eclipse.xtext.xbase.lib.internal.as$c:
    java.util.List fromList -> fromList
    com.google.common.base.Function function -> function
    572:573:void clear() -> clear
    575:575:java.lang.Object get(int) -> get
    578:578:boolean isEmpty() -> isEmpty
    581:581:java.lang.Object remove(int) -> remove
    584:584:int size() -> size
com.google.common.collect.Lists$TransformingSequentialList -> org.eclipse.xtext.xbase.lib.internal.as$d:
    java.util.List fromList -> fromList
    com.google.common.base.Function function -> function
    536:537:void clear() -> clear
    539:539:int size() -> size
    542:542:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$TransformingSequentialList$1 -> org.eclipse.xtext.xbase.lib.internal.as$d$1:
    com.google.common.collect.Lists$TransformingSequentialList this$0 -> this$0
    545:545:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Maps -> org.eclipse.xtext.xbase.lib.internal.at:
    com.google.common.base.Joiner$MapJoiner STANDARD_JOINER -> STANDARD_JOINER
    163:163:java.util.HashMap newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    172:179:int capacity(int) -> capacity
    211:211:java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    295:295:java.util.TreeMap newTreeMap(java.util.Comparator) -> newTreeMap
    1209:1209:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    1462:1462:java.util.Map transformValues(java.util.Map,com.google.common.base.Function) -> transformValues
    1558:1559:com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function) -> asEntryTransformer
    1621:1624:java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1682:1682:java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1742:1742:java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1748:1748:java.util.SortedMap transformEntriesIgnoreNavigable(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntriesIgnoreNavigable
    2377:2383:java.util.Map filterEntries(java.util.Map,com.google.common.base.Predicate) -> filterEntries
    2422:2422:java.util.SortedMap filterEntries(java.util.SortedMap,com.google.common.base.Predicate) -> filterEntries
    2428:2429:java.util.SortedMap filterSortedIgnoreNavigable(java.util.SortedMap,com.google.common.base.Predicate) -> filterSortedIgnoreNavigable
    2469:2470:java.util.NavigableMap filterEntries(java.util.NavigableMap,com.google.common.base.Predicate) -> filterEntries
    2504:2506:com.google.common.collect.BiMap filterEntries(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterEntries
    2517:2519:java.util.Map filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap,com.google.common.base.Predicate) -> filterFiltered
    2664:2666:java.util.SortedMap filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap,com.google.common.base.Predicate) -> filterFiltered
    2725:2727:java.util.NavigableMap filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap,com.google.common.base.Predicate) -> filterFiltered
    2908:2909:com.google.common.collect.BiMap filterFiltered(com.google.common.collect.Maps$FilteredEntryBiMap,com.google.common.base.Predicate) -> filterFiltered
    3486:3493:boolean equalsImpl(java.util.Map,java.lang.Object) -> equalsImpl
    3500:3503:java.lang.String toStringImpl(java.util.Map) -> toStringImpl
    3527:3527:boolean containsValueImpl(java.util.Map,java.lang.Object) -> containsValueImpl
    3531:3531:java.util.Iterator keyIterator(java.util.Iterator) -> keyIterator
    3573:3573:java.lang.Object keyOrNull(java.util.Map$Entry) -> keyOrNull
    3685:3685:java.util.Iterator valueIterator(java.util.Iterator) -> valueIterator
    3695:3695:com.google.common.collect.UnmodifiableIterator valueIterator(com.google.common.collect.UnmodifiableIterator) -> valueIterator
com.google.common.collect.Maps$1 -> org.eclipse.xtext.xbase.lib.internal.at$1:
    com.google.common.base.Function val$function -> val$function
    839:839:java.util.Map$Entry transform(java.lang.Object) -> transform
    836:836:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Maps$6 -> org.eclipse.xtext.xbase.lib.internal.at$2:
    com.google.common.base.Function val$function -> val$function
    1562:1562:java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$7 -> org.eclipse.xtext.xbase.lib.internal.at$3:
    3534:3534:java.lang.Object transform(java.util.Map$Entry) -> transform
    3531:3531:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Maps$8 -> org.eclipse.xtext.xbase.lib.internal.at$4:
    3688:3688:java.lang.Object transform(java.util.Map$Entry) -> transform
    3685:3685:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Maps$9 -> org.eclipse.xtext.xbase.lib.internal.at$5:
    com.google.common.collect.UnmodifiableIterator val$entryIterator -> val$entryIterator
    3698:3698:boolean hasNext() -> hasNext
    3703:3703:java.lang.Object next() -> next
com.google.common.collect.Maps$AbstractFilteredMap -> org.eclipse.xtext.xbase.lib.internal.at$a:
    java.util.Map unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    java.util.Collection values -> values
    2537:2538:boolean apply(java.lang.Object,java.lang.Object) -> apply
    2542:2543:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2547:2551:void putAll(java.util.Map) -> putAll
    2554:2554:boolean containsKey(java.lang.Object) -> containsKey
    2558:2559:java.lang.Object get(java.lang.Object) -> get
    2563:2563:boolean isEmpty() -> isEmpty
    2567:2567:java.lang.Object remove(java.lang.Object) -> remove
    2573:2574:java.util.Collection values() -> values
com.google.common.collect.Maps$AbstractFilteredMap$Values -> org.eclipse.xtext.xbase.lib.internal.at$a$a:
    com.google.common.collect.Maps$AbstractFilteredMap this$0 -> this$0
    2579:2580:java.util.Iterator iterator() -> iterator
    2594:2594:int size() -> size
    2598:2599:void clear() -> clear
    2602:2602:boolean isEmpty() -> isEmpty
    2606:2614:boolean remove(java.lang.Object) -> remove
    2618:2628:boolean removeAll(java.util.Collection) -> removeAll
    2632:2643:boolean retainAll(java.util.Collection) -> retainAll
    2648:2648:java.lang.Object[] toArray() -> toArray
    2652:2652:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$AbstractFilteredMap$Values$1 -> org.eclipse.xtext.xbase.lib.internal.at$a$a$1:
    java.util.Iterator val$entryIterator -> val$entryIterator
    com.google.common.collect.Maps$AbstractFilteredMap$Values this$1 -> this$1
    2583:2583:boolean hasNext() -> hasNext
    2588:2588:java.lang.Object next() -> next
com.google.common.collect.Maps$EntrySet -> org.eclipse.xtext.xbase.lib.internal.at$b:
    java.util.Map map() -> map
    3779:3779:int size() -> size
    3783:3784:void clear() -> clear
    3787:3794:boolean contains(java.lang.Object) -> contains
    3798:3798:boolean isEmpty() -> isEmpty
    3802:3806:boolean remove(java.lang.Object) -> remove
    3811:3818:boolean removeAll(java.util.Collection) -> removeAll
    3824:3834:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$EntryTransformer -> org.eclipse.xtext.xbase.lib.internal.at$c:
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$FilteredEntryBiMap -> org.eclipse.xtext.xbase.lib.internal.at$d:
    com.google.common.collect.BiMap inverse -> inverse
    2918:2918:com.google.common.base.Predicate inversePredicate(com.google.common.base.Predicate) -> inversePredicate
    2942:2942:com.google.common.collect.BiMap unfiltered() -> unfiltered
    2953:2953:com.google.common.collect.BiMap inverse() -> inverse
    2958:2958:java.util.Set values() -> values
    2912:2912:java.util.Collection values() -> values
com.google.common.collect.Maps$FilteredEntryBiMap$1 -> org.eclipse.xtext.xbase.lib.internal.at$d$1:
    com.google.common.base.Predicate val$forwardPredicate -> val$forwardPredicate
    2921:2921:boolean apply(java.util.Map$Entry) -> apply
    2918:2918:boolean apply(java.lang.Object) -> apply
com.google.common.collect.Maps$FilteredEntryMap -> org.eclipse.xtext.xbase.lib.internal.at$e:
    java.util.Set filteredEntrySet -> filteredEntrySet
    java.util.Set entrySet -> entrySet
    java.util.Set keySet -> keySet
    3014:3015:java.util.Set entrySet() -> entrySet
    3052:3053:java.util.Set keySet() -> keySet
    3057:3057:java.util.Set createKeySet() -> createKeySet
com.google.common.collect.Maps$FilteredEntryMap$EntrySet -> org.eclipse.xtext.xbase.lib.internal.at$e$a:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> this$0
    3020:3020:java.util.Set delegate() -> delegate
    3024:3025:java.util.Iterator iterator() -> iterator
    3018:3018:java.util.Collection delegate() -> delegate
    3018:3018:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 -> org.eclipse.xtext.xbase.lib.internal.at$e$a$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet this$1 -> this$1
    3028:3028:boolean hasNext() -> hasNext
    3033:3034:java.util.Map$Entry next() -> next
    3025:3025:java.lang.Object next() -> next
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1 -> org.eclipse.xtext.xbase.lib.internal.at$e$a$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 this$2 -> this$2
    3036:3036:java.util.Map$Entry delegate() -> delegate
    3040:3041:java.lang.Object setValue(java.lang.Object) -> setValue
    3034:3034:java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$KeySet -> org.eclipse.xtext.xbase.lib.internal.at$e$b:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> this$0
    3062:3063:java.util.Iterator iterator() -> iterator
    3077:3077:int size() -> size
    3081:3082:void clear() -> clear
    3085:3085:boolean contains(java.lang.Object) -> contains
    3089:3093:boolean remove(java.lang.Object) -> remove
    3097:3107:boolean retainAll(java.util.Collection) -> retainAll
    3112:3112:java.lang.Object[] toArray() -> toArray
    3116:3116:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$FilteredEntryMap$KeySet$1 -> org.eclipse.xtext.xbase.lib.internal.at$e$b$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Maps$FilteredEntryMap$KeySet this$1 -> this$1
    3066:3066:boolean hasNext() -> hasNext
    3071:3071:java.lang.Object next() -> next
com.google.common.collect.Maps$FilteredEntryNavigableMap -> org.eclipse.xtext.xbase.lib.internal.at$f:
    2741:2741:java.util.NavigableMap sortedMap() -> sortedMap
    2746:2746:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    2751:2751:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    2756:2756:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    2761:2761:java.lang.Object floorKey(java.lang.Object) -> floorKey
    2766:2766:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    2771:2771:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    2776:2776:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    2781:2781:java.lang.Object higherKey(java.lang.Object) -> higherKey
    2786:2786:java.util.Map$Entry firstEntry() -> firstEntry
    2791:2791:java.util.Map$Entry lastEntry() -> lastEntry
    2796:2796:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    2801:2801:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    2806:2813:java.util.Map$Entry pollFirstSatisfyingEntry(java.util.Iterator) -> pollFirstSatisfyingEntry
    2818:2818:java.util.NavigableMap descendingMap() -> descendingMap
    2823:2823:java.util.NavigableSet keySet() -> keySet
    2828:2828:java.util.NavigableSet createKeySet() -> createKeySet
    2861:2861:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    2866:2866:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    2871:2871:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2877:2877:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    2883:2883:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    2888:2888:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    2893:2893:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    2898:2898:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    2730:2730:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    2730:2730:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2730:2730:java.util.SortedMap headMap(java.lang.Object) -> headMap
    2730:2730:java.util.SortedMap sortedMap() -> sortedMap
    2730:2730:java.util.Set keySet() -> keySet
    2730:2730:java.util.Set createKeySet() -> createKeySet
com.google.common.collect.Maps$FilteredEntryNavigableMap$1 -> org.eclipse.xtext.xbase.lib.internal.at$f$1:
    com.google.common.collect.Maps$FilteredEntryNavigableMap this$0 -> this$0
    2831:2840:boolean removeAll(java.util.Collection) -> removeAll
    2845:2854:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$FilteredEntrySortedMap -> org.eclipse.xtext.xbase.lib.internal.at$g:
    2678:2678:java.util.SortedMap sortedMap() -> sortedMap
    2682:2682:java.util.Comparator comparator() -> comparator
    2687:2687:java.lang.Object firstKey() -> firstKey
    2691:2699:java.lang.Object lastKey() -> lastKey
    2703:2703:java.util.SortedMap headMap(java.lang.Object) -> headMap
    2707:2707:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2712:2712:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$KeySet -> org.eclipse.xtext.xbase.lib.internal.at$h:
    java.util.Map map() -> map
    3543:3543:java.util.Iterator iterator() -> iterator
    3547:3547:int size() -> size
    3551:3551:boolean isEmpty() -> isEmpty
    3555:3555:boolean contains(java.lang.Object) -> contains
    3559:3563:boolean remove(java.lang.Object) -> remove
    3567:3568:void clear() -> clear
com.google.common.collect.Maps$NavigableKeySet -> org.eclipse.xtext.xbase.lib.internal.at$i:
    java.util.NavigableMap map -> map
    3591:3591:java.util.NavigableMap map() -> map
    3596:3596:java.util.Comparator comparator() -> comparator
    3601:3601:java.lang.Object first() -> first
    3606:3606:java.lang.Object last() -> last
    3611:3611:java.lang.Object lower(java.lang.Object) -> lower
    3616:3616:java.lang.Object floor(java.lang.Object) -> floor
    3621:3621:java.lang.Object ceiling(java.lang.Object) -> ceiling
    3626:3626:java.lang.Object higher(java.lang.Object) -> higher
    3631:3631:java.lang.Object pollFirst() -> pollFirst
    3636:3636:java.lang.Object pollLast() -> pollLast
    3641:3641:java.util.NavigableSet descendingSet() -> descendingSet
    3646:3646:java.util.Iterator descendingIterator() -> descendingIterator
    3655:3655:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    3660:3660:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    3665:3665:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    3670:3670:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3675:3675:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3680:3680:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    3581:3581:java.util.Map map() -> map
com.google.common.collect.Maps$TransformedEntriesMap -> org.eclipse.xtext.xbase.lib.internal.at$j:
    java.util.Map fromMap -> fromMap
    com.google.common.collect.Maps$EntryTransformer transformer -> transformer
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    1795:1795:int size() -> size
    1799:1799:boolean containsKey(java.lang.Object) -> containsKey
    1805:1806:java.lang.Object get(java.lang.Object) -> get
    1814:1814:java.lang.Object remove(java.lang.Object) -> remove
    1820:1821:void clear() -> clear
    1824:1824:java.util.Set keySet() -> keySet
    1830:1858:java.util.Set entrySet() -> entrySet
    1864:1872:java.util.Collection values() -> values
com.google.common.collect.Maps$TransformedEntriesMap$1 -> org.eclipse.xtext.xbase.lib.internal.at$j$1:
    com.google.common.collect.Maps$TransformedEntriesMap this$0 -> this$0
    1834:1834:java.util.Map map() -> map
    1838:1838:java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$TransformedEntriesMap$1$1 -> org.eclipse.xtext.xbase.lib.internal.at$j$1$1:
    com.google.common.collect.Maps$TransformedEntriesMap$1 this$1 -> this$1
    1842:1842:java.util.Map$Entry transform(java.util.Map$Entry) -> transform
    1839:1839:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Maps$TransformedEntriesMap$1$1$1 -> org.eclipse.xtext.xbase.lib.internal.at$j$1$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Maps$TransformedEntriesMap$1$1 this$2 -> this$2
    1845:1845:java.lang.Object getKey() -> getKey
    1850:1850:java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$TransformedEntriesMap$2 -> org.eclipse.xtext.xbase.lib.internal.at$j$2:
    com.google.common.collect.Maps$TransformedEntriesMap this$0 -> this$0
    1868:1868:java.util.Map map() -> map
com.google.common.collect.Maps$TransformedEntriesNavigableMap -> org.eclipse.xtext.xbase.lib.internal.at$k:
    1925:1925:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1929:1929:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1933:1933:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1937:1937:java.util.NavigableMap descendingMap() -> descendingMap
    1941:1941:java.util.Map$Entry firstEntry() -> firstEntry
    1944:1944:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1948:1948:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1952:1952:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    1956:1956:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1961:1961:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1965:1965:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1969:1969:java.util.Map$Entry lastEntry() -> lastEntry
    1973:1973:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1977:1977:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1981:1981:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1985:1985:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1989:1989:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1994:1994:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    2000:2000:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2004:2004:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    2008:2008:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    2013:2018:java.util.Map$Entry transformEntry(java.util.Map$Entry) -> transformEntry
    2022:2022:java.util.NavigableMap fromMap() -> fromMap
    1914:1914:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1914:1914:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1914:1914:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1914:1914:java.util.SortedMap fromMap() -> fromMap
com.google.common.collect.Maps$TransformedEntriesSortedMap -> org.eclipse.xtext.xbase.lib.internal.at$l:
    1880:1880:java.util.SortedMap fromMap() -> fromMap
    1889:1889:java.util.Comparator comparator() -> comparator
    1893:1893:java.lang.Object firstKey() -> firstKey
    1897:1897:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1901:1901:java.lang.Object lastKey() -> lastKey
    1905:1905:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1910:1910:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$Values -> org.eclipse.xtext.xbase.lib.internal.at$m:
    java.util.Map map() -> map
    3712:3712:java.util.Iterator iterator() -> iterator
    3717:3725:boolean remove(java.lang.Object) -> remove
    3731:3739:boolean removeAll(java.util.Collection) -> removeAll
    3745:3753:boolean retainAll(java.util.Collection) -> retainAll
    3758:3758:int size() -> size
    3762:3762:boolean isEmpty() -> isEmpty
    3766:3766:boolean contains(java.lang.Object) -> contains
    3770:3771:void clear() -> clear
com.google.common.collect.Multiset -> org.eclipse.xtext.xbase.lib.internal.au:
    java.util.Set elementSet() -> elementSet
com.google.common.collect.NaturalOrdering -> org.eclipse.xtext.xbase.lib.internal.av:
    com.google.common.collect.NaturalOrdering INSTANCE -> INSTANCE
    35:41:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    45:45:com.google.common.collect.Ordering reverse() -> reverse
    68:68:java.lang.String toString() -> toString
    28:28:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.ObjectArrays -> org.eclipse.xtext.xbase.lib.internal.aw:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    48:48:java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    59:59:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    110:113:java.lang.Object[] arraysCopyOf(java.lang.Object[],int) -> arraysCopyOf
    141:149:java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> toArrayImpl
    167:167:java.lang.Object[] toArrayImpl(java.util.Collection) -> toArrayImpl
    171:175:java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> fillArray
    190:193:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
com.google.common.collect.Ordering -> org.eclipse.xtext.xbase.lib.internal.ax:
    89:89:com.google.common.collect.Ordering natural() -> natural
    106:106:com.google.common.collect.Ordering from(java.util.Comparator) -> from
    313:313:com.google.common.collect.Ordering reverse() -> reverse
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Platform -> org.eclipse.xtext.xbase.lib.internal.ay:
    54:60:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    76:76:java.util.SortedMap mapsTransformEntriesSortedMap(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> mapsTransformEntriesSortedMap
    90:90:java.util.SortedSet setsFilterSortedSet(java.util.SortedSet,com.google.common.base.Predicate) -> setsFilterSortedSet
    97:97:java.util.SortedMap mapsFilterSortedMap(java.util.SortedMap,com.google.common.base.Predicate) -> mapsFilterSortedMap
com.google.common.collect.RegularImmutableAsList -> org.eclipse.xtext.xbase.lib.internal.az:
    com.google.common.collect.ImmutableCollection delegate -> delegate
    com.google.common.collect.ImmutableList delegateList -> delegateList
    44:44:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    54:54:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    59:59:java.lang.Object[] toArray() -> toArray
    64:64:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    69:69:int indexOf(java.lang.Object) -> indexOf
    74:74:int lastIndexOf(java.lang.Object) -> lastIndexOf
    79:79:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
    89:89:java.lang.Object get(int) -> get
    27:27:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableList -> org.eclipse.xtext.xbase.lib.internal.ba:
    int offset -> offset
    int size -> size
    java.lang.Object[] array -> array
    50:50:int size() -> size
    54:54:boolean isEmpty() -> isEmpty
    58:58:boolean isPartialView() -> isPartialView
    62:64:java.lang.Object[] toArray() -> toArray
    68:74:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    81:82:java.lang.Object get(int) -> get
    87:87:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    96:96:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    101:128:boolean equals(java.lang.Object) -> equals
    132:137:java.lang.String toString() -> toString
    31:31:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableMap -> org.eclipse.xtext.xbase.lib.internal.bb:
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] entries -> entries
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] table -> table
    int mask -> mask
    87:87:com.google.common.collect.RegularImmutableMap$LinkedEntry[] createEntryArray(int) -> createEntryArray
    92:92:com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry) -> newLinkedEntry
    137:156:java.lang.Object get(java.lang.Object) -> get
    161:161:int size() -> size
    165:165:boolean isPartialView() -> isPartialView
    170:170:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    34:34:com.google.common.collect.RegularImmutableMap$LinkedEntry[] access$100(com.google.common.collect.RegularImmutableMap) -> access$100
com.google.common.collect.RegularImmutableMap$1 -> org.eclipse.xtext.xbase.lib.internal.bb$1:
com.google.common.collect.RegularImmutableMap$EntrySet -> org.eclipse.xtext.xbase.lib.internal.bb$a:
    com.google.common.collect.RegularImmutableMap this$0 -> this$0
    176:176:com.google.common.collect.ImmutableMap map() -> map
    181:181:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    186:186:com.google.common.collect.ImmutableList createAsList() -> createAsList
    173:173:java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableMap$LinkedEntry -> org.eclipse.xtext.xbase.lib.internal.bb$b:
    com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> next
com.google.common.collect.RegularImmutableMap$NonTerminalEntry -> org.eclipse.xtext.xbase.lib.internal.bb$c:
    com.google.common.collect.RegularImmutableMap$LinkedEntry next -> next
    115:115:com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> next
com.google.common.collect.RegularImmutableMap$TerminalEntry -> org.eclipse.xtext.xbase.lib.internal.bb$d:
    132:132:com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> next
com.google.common.collect.RegularImmutableSet -> org.eclipse.xtext.xbase.lib.internal.bc:
    java.lang.Object[] table -> table
    int mask -> mask
    int hashCode -> hashCode
    46:55:boolean contains(java.lang.Object) -> contains
    61:61:int hashCode() -> hashCode
    65:65:boolean isHashCodeFast() -> isHashCodeFast
com.google.common.collect.RegularImmutableSortedMap -> org.eclipse.xtext.xbase.lib.internal.bd:
    com.google.common.collect.RegularImmutableSortedSet keySet -> keySet
    com.google.common.collect.ImmutableList valueList -> valueList
    51:51:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    86:86:com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    91:91:com.google.common.collect.ImmutableCollection values() -> values
    96:97:java.lang.Object get(java.lang.Object) -> get
    101:106:com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> getSubMap
    114:114:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    119:119:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    124:124:com.google.common.collect.ImmutableSortedMap createDescendingMap() -> createDescendingMap
    29:29:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    29:29:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    29:29:java.util.Collection values() -> values
    29:29:java.util.Set keySet() -> keySet
    29:29:com.google.common.collect.ImmutableSet keySet() -> keySet
    31:31:com.google.common.collect.ImmutableList access$100(com.google.common.collect.RegularImmutableSortedMap) -> access$100
com.google.common.collect.RegularImmutableSortedMap$1 -> org.eclipse.xtext.xbase.lib.internal.bd$1:
com.google.common.collect.RegularImmutableSortedMap$EntrySet -> org.eclipse.xtext.xbase.lib.internal.bd$a:
    com.google.common.collect.RegularImmutableSortedMap this$0 -> this$0
    57:57:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    62:62:com.google.common.collect.ImmutableList createAsList() -> createAsList
    80:80:com.google.common.collect.ImmutableMap map() -> map
    54:54:java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableSortedMap$EntrySet$1 -> org.eclipse.xtext.xbase.lib.internal.bd$a$1:
    com.google.common.collect.ImmutableList keyList -> keyList
    com.google.common.collect.RegularImmutableSortedMap$EntrySet this$1 -> this$1
    68:68:java.util.Map$Entry get(int) -> get
    73:73:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    62:62:java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableSortedSet -> org.eclipse.xtext.xbase.lib.internal.be:
    com.google.common.collect.ImmutableList elements -> elements
    60:60:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    65:65:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    69:69:boolean isEmpty() -> isEmpty
    74:74:int size() -> size
    79:81:boolean contains(java.lang.Object) -> contains
    90:128:boolean containsAll(java.util.Collection) -> containsAll
    132:132:int unsafeBinarySearch(java.lang.Object) -> unsafeBinarySearch
    136:136:boolean isPartialView() -> isPartialView
    140:140:java.lang.Object[] toArray() -> toArray
    144:144:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    148:179:boolean equals(java.lang.Object) -> equals
    184:184:java.lang.Object first() -> first
    189:189:java.lang.Object last() -> last
    194:195:java.lang.Object lower(java.lang.Object) -> lower
    200:201:java.lang.Object floor(java.lang.Object) -> floor
    206:207:java.lang.Object ceiling(java.lang.Object) -> ceiling
    212:213:java.lang.Object higher(java.lang.Object) -> higher
    218:218:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    222:222:int headIndex(java.lang.Object,boolean) -> headIndex
    230:230:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    236:236:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    240:240:int tailIndex(java.lang.Object,boolean) -> tailIndex
    252:252:java.util.Comparator unsafeComparator() -> unsafeComparator
    256:262:com.google.common.collect.ImmutableSortedSet getSubSet(int,int) -> getSubSet
    267:277:int indexOf(java.lang.Object) -> indexOf
    281:281:com.google.common.collect.ImmutableList createAsList() -> createAsList
    286:286:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    46:46:java.util.Iterator descendingIterator() -> descendingIterator
    46:46:java.util.Iterator iterator() -> iterator
com.google.common.collect.ReverseNaturalOrdering -> org.eclipse.xtext.xbase.lib.internal.bf:
    com.google.common.collect.ReverseNaturalOrdering INSTANCE -> INSTANCE
    34:39:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    43:43:com.google.common.collect.Ordering reverse() -> reverse
    86:86:java.lang.String toString() -> toString
    27:27:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.ReverseOrdering -> org.eclipse.xtext.xbase.lib.internal.bg:
    com.google.common.collect.Ordering forwardOrder -> forwardOrder
    38:38:int compare(java.lang.Object,java.lang.Object) -> compare
    43:43:com.google.common.collect.Ordering reverse() -> reverse
    81:81:int hashCode() -> hashCode
    85:92:boolean equals(java.lang.Object) -> equals
    96:96:java.lang.String toString() -> toString
com.google.common.collect.Sets -> org.eclipse.xtext.xbase.lib.internal.bh:
    165:165:java.util.HashSet newHashSet() -> newHashSet
    183:185:java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    202:202:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    219:219:java.util.HashSet newHashSet(java.lang.Iterable) -> newHashSet
    238:242:java.util.HashSet newHashSet(java.util.Iterator) -> newHashSet
    256:256:java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    291:298:java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable) -> newLinkedHashSet
    795:808:java.util.Set filter(java.util.Set,com.google.common.base.Predicate) -> filter
    858:858:java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate) -> filter
    863:873:java.util.SortedSet filterSortedIgnoreNavigable(java.util.SortedSet,com.google.common.base.Predicate) -> filterSortedIgnoreNavigable
    956:966:java.util.NavigableSet filter(java.util.NavigableSet,com.google.common.base.Predicate) -> filter
    1398:1405:int hashCodeImpl(java.util.Set) -> hashCodeImpl
    1412:1426:boolean equalsImpl(java.util.Set,java.lang.Object) -> equalsImpl
    1597:1601:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1605:1627:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
com.google.common.collect.Sets$FilteredNavigableSet -> org.eclipse.xtext.xbase.lib.internal.bh$a:
    978:978:java.util.NavigableSet unfiltered() -> unfiltered
    984:984:java.lang.Object lower(java.lang.Object) -> lower
    990:990:java.lang.Object floor(java.lang.Object) -> floor
    995:995:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1000:1000:java.lang.Object higher(java.lang.Object) -> higher
    1005:1013:java.lang.Object pollFirst() -> pollFirst
    1018:1026:java.lang.Object pollLast() -> pollLast
    1031:1031:java.util.NavigableSet descendingSet() -> descendingSet
    1036:1036:java.util.Iterator descendingIterator() -> descendingIterator
    1041:1041:java.lang.Object last() -> last
    1047:1047:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1053:1053:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1058:1058:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.Sets$FilteredSet -> org.eclipse.xtext.xbase.lib.internal.bh$b:
    819:819:boolean equals(java.lang.Object) -> equals
    823:823:int hashCode() -> hashCode
com.google.common.collect.Sets$FilteredSortedSet -> org.eclipse.xtext.xbase.lib.internal.bh$c:
    886:886:java.util.Comparator comparator() -> comparator
    891:891:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    897:897:java.util.SortedSet headSet(java.lang.Object) -> headSet
    902:902:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    907:907:java.lang.Object first() -> first
    912:919:java.lang.Object last() -> last
com.google.common.collect.Sets$ImprovedAbstractSet -> org.eclipse.xtext.xbase.lib.internal.bh$d:
    75:75:boolean removeAll(java.util.Collection) -> removeAll
    80:80:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.SingletonImmutableBiMap -> org.eclipse.xtext.xbase.lib.internal.bi:
    java.lang.Object singleKey -> singleKey
    java.lang.Object singleValue -> singleValue
    com.google.common.collect.ImmutableBiMap inverse -> inverse
    53:53:java.lang.Object get(java.lang.Object) -> get
    58:58:int size() -> size
    62:62:boolean containsKey(java.lang.Object) -> containsKey
    66:66:boolean containsValue(java.lang.Object) -> containsValue
    70:70:boolean isPartialView() -> isPartialView
    75:75:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    80:80:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    88:93:com.google.common.collect.ImmutableBiMap inverse() -> inverse
    29:29:com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.SingletonImmutableList -> org.eclipse.xtext.xbase.lib.internal.bj:
    java.lang.Object element -> element
    45:46:java.lang.Object get(int) -> get
    50:50:int indexOf(java.lang.Object) -> indexOf
    54:54:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    58:58:int lastIndexOf(java.lang.Object) -> lastIndexOf
    63:63:int size() -> size
    67:68:com.google.common.collect.ImmutableList subList(int,int) -> subList
    72:72:com.google.common.collect.ImmutableList reverse() -> reverse
    76:76:boolean contains(java.lang.Object) -> contains
    80:87:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    97:98:java.lang.String toString() -> toString
    106:106:boolean isEmpty() -> isEmpty
    110:110:boolean isPartialView() -> isPartialView
    114:114:java.lang.Object[] toArray() -> toArray
    118:126:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    33:33:java.util.List subList(int,int) -> subList
    33:33:java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableSet -> org.eclipse.xtext.xbase.lib.internal.bk:
    java.lang.Object element -> element
    int cachedHashCode -> cachedHashCode
    58:58:int size() -> size
    62:62:boolean isEmpty() -> isEmpty
    66:66:boolean contains(java.lang.Object) -> contains
    70:70:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    74:74:boolean isPartialView() -> isPartialView
    78:78:java.lang.Object[] toArray() -> toArray
    82:90:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    94:101:boolean equals(java.lang.Object) -> equals
    106:110:int hashCode() -> hashCode
    114:114:boolean isHashCodeFast() -> isHashCodeFast
    118:119:java.lang.String toString() -> toString
    32:32:java.util.Iterator iterator() -> iterator
com.google.common.collect.SortedIterable -> org.eclipse.xtext.xbase.lib.internal.bl:
    java.util.Comparator comparator() -> comparator
com.google.common.collect.SortedIterables -> org.eclipse.xtext.xbase.lib.internal.bm:
    38:48:boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> hasSameComparator
    54:58:java.util.Comparator comparator(java.util.SortedSet) -> comparator
com.google.common.collect.SortedLists -> org.eclipse.xtext.xbase.lib.internal.bn:
    258:282:int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
com.google.common.collect.SortedLists$1 -> org.eclipse.xtext.xbase.lib.internal.bn$1:
com.google.common.collect.SortedLists$KeyAbsentBehavior -> org.eclipse.xtext.xbase.lib.internal.bn$a:
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER -> NEXT_LOWER
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER -> NEXT_HIGHER
    com.google.common.collect.SortedLists$KeyAbsentBehavior INVERTED_INSERTION_INDEX -> INVERTED_INSERTION_INDEX
    com.google.common.collect.SortedLists$KeyAbsentBehavior[] $VALUES -> $VALUES
    int resultIndex(int) -> resultIndex
com.google.common.collect.SortedLists$KeyAbsentBehavior$1 -> org.eclipse.xtext.xbase.lib.internal.bn$a$1:
    147:147:int resultIndex(int) -> resultIndex
com.google.common.collect.SortedLists$KeyAbsentBehavior$2 -> org.eclipse.xtext.xbase.lib.internal.bn$a$2:
    157:157:int resultIndex(int) -> resultIndex
com.google.common.collect.SortedLists$KeyAbsentBehavior$3 -> org.eclipse.xtext.xbase.lib.internal.bn$a$3:
    175:175:int resultIndex(int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior -> org.eclipse.xtext.xbase.lib.internal.bn$b:
    com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT -> ANY_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_PRESENT -> LAST_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_PRESENT -> FIRST_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_AFTER -> FIRST_AFTER
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_BEFORE -> LAST_BEFORE
    com.google.common.collect.SortedLists$KeyPresentBehavior[] $VALUES -> $VALUES
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$1 -> org.eclipse.xtext.xbase.lib.internal.bn$b$1:
    57:57:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$2 -> org.eclipse.xtext.xbase.lib.internal.bn$b$2:
    69:81:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$3 -> org.eclipse.xtext.xbase.lib.internal.bn$b$3:
    93:106:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$4 -> org.eclipse.xtext.xbase.lib.internal.bn$b$4:
    117:117:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$5 -> org.eclipse.xtext.xbase.lib.internal.bn$b$5:
    128:128:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.TransformedIterator -> org.eclipse.xtext.xbase.lib.internal.bo:
    java.util.Iterator backingIterator -> backingIterator
    java.lang.Object transform(java.lang.Object) -> transform
    43:43:boolean hasNext() -> hasNext
    48:48:java.lang.Object next() -> next
    53:54:void remove() -> remove
com.google.common.collect.TransformedListIterator -> org.eclipse.xtext.xbase.lib.internal.bp:
    39:39:java.util.ListIterator backingIterator() -> backingIterator
    44:44:boolean hasPrevious() -> hasPrevious
    49:49:java.lang.Object previous() -> previous
    54:54:int nextIndex() -> nextIndex
    59:59:int previousIndex() -> previousIndex
    64:64:void set(java.lang.Object) -> set
    69:69:void add(java.lang.Object) -> add
com.google.common.collect.UnmodifiableIterator -> org.eclipse.xtext.xbase.lib.internal.bq:
    43:43:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> org.eclipse.xtext.xbase.lib.internal.br:
    43:43:void add(java.lang.Object) -> add
    53:53:void set(java.lang.Object) -> set
com.google.common.primitives.Booleans -> org.eclipse.xtext.xbase.lib.internal.bs:
    73:73:int compare(boolean,boolean) -> compare
com.google.common.primitives.Ints -> org.eclipse.xtext.xbase.lib.internal.bt:
    101:107:int saturatedCast(long) -> saturatedCast
org.eclipse.xtend2.lib.StringConcatenation -> org.eclipse.xtend2.lib.StringConcatenation:
    java.lang.String DEFAULT_LINE_DELIMITER -> DEFAULT_LINE_DELIMITER
    java.util.ArrayList segments -> segments
    java.lang.String cachedToString -> cachedToString
    java.lang.String lineDelimiter -> lineDelimiter
    108:109:void append(java.lang.Object) -> append
    121:136:void append(java.lang.Object,int) -> append
    148:149:void append(java.lang.Object,java.lang.String) -> append
    163:181:void append(java.lang.Object,java.lang.String,int) -> append
    193:193:java.lang.String getStringRepresentation(java.lang.Object) -> getStringRepresentation
    208:218:void appendImmediate(java.lang.Object,java.lang.String) -> appendImmediate
    234:246:void appendSegments(java.lang.String,int,java.util.List,java.lang.String) -> appendSegments
    261:277:void appendSegments(int,java.util.List,java.lang.String) -> appendSegments
    290:293:void appendSegments(int,java.util.List) -> appendSegments
    299:301:void newLine() -> newLine
    308:324:void newLineIfNotEmpty() -> newLineIfNotEmpty
    328:336:java.lang.String toString() -> toString
    347:358:java.util.List getSignificantContent() -> getSignificantContent
    368:368:java.lang.String getLineDelimiter() -> getLineDelimiter
    379:379:int length() -> length
    390:390:char charAt(int) -> charAt
    401:401:java.lang.CharSequence subSequence(int,int) -> subSequence
    414:455:java.util.List splitLinesAndNewLines(java.lang.String) -> splitLinesAndNewLines
    62:62:java.util.ArrayList access$0(org.eclipse.xtend2.lib.StringConcatenation) -> access$0
org.eclipse.xtend2.lib.StringConcatenation$IndentedTarget -> org.eclipse.xtend2.lib.StringConcatenation$IndentedTarget:
    java.lang.String indentation -> indentation
    531:532:void appendImmediate(java.lang.Object,java.lang.String) -> appendImmediate
    536:537:void append(java.lang.Object,java.lang.String) -> append
    541:542:void append(java.lang.Object) -> append
org.eclipse.xtend2.lib.StringConcatenation$SimpleTarget -> org.eclipse.xtend2.lib.StringConcatenation$SimpleTarget:
    org.eclipse.xtend2.lib.StringConcatenation target -> target
    int offsetFixup -> offsetFixup
    476:476:int length() -> length
    480:480:char charAt(int) -> charAt
    484:484:java.lang.CharSequence subSequence(int,int) -> subSequence
    488:489:void newLineIfNotEmpty() -> newLineIfNotEmpty
    492:493:void newLine() -> newLine
    496:497:void appendImmediate(java.lang.Object,java.lang.String) -> appendImmediate
    500:504:void append(java.lang.Object,java.lang.String) -> append
    507:508:void append(java.lang.Object) -> append
org.eclipse.xtend2.lib.StringConcatenationClient -> org.eclipse.xtend2.lib.StringConcatenationClient:
    33:33:void appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation) -> appendTo
org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation -> org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation:
    void newLineIfNotEmpty() -> newLineIfNotEmpty
    void newLine() -> newLine
    void appendImmediate(java.lang.Object,java.lang.String) -> appendImmediate
    void append(java.lang.Object,java.lang.String) -> append
    void append(java.lang.Object) -> append
org.eclipse.xtext.xbase.lib.ArrayExtensions -> org.eclipse.xtext.xbase.lib.ArrayExtensions:
    33:34:void set(java.lang.Object[],int,java.lang.Object) -> set
    46:46:java.lang.Object get(java.lang.Object[],int) -> get
    60:60:java.lang.Object[] clone(java.lang.Object[]) -> clone
    73:73:int length(java.lang.Object[]) -> length
    87:87:int hashCode(java.lang.Object[]) -> hashCode
    105:105:boolean equals(java.lang.Object[],java.lang.Object) -> equals
    118:118:boolean get(boolean[],int) -> get
    131:132:void set(boolean[],int,boolean) -> set
    142:142:int length(boolean[]) -> length
    156:156:int hashCode(boolean[]) -> hashCode
    174:174:boolean equals(boolean[],java.lang.Object) -> equals
    188:188:boolean[] clone(boolean[]) -> clone
    201:201:double get(double[],int) -> get
    214:215:void set(double[],int,double) -> set
    225:225:int length(double[]) -> length
    239:239:int hashCode(double[]) -> hashCode
    257:257:boolean equals(double[],java.lang.Object) -> equals
    271:271:double[] clone(double[]) -> clone
    284:284:float get(float[],int) -> get
    297:298:void set(float[],int,float) -> set
    308:308:int length(float[]) -> length
    322:322:int hashCode(float[]) -> hashCode
    340:340:boolean equals(float[],java.lang.Object) -> equals
    354:354:float[] clone(float[]) -> clone
    367:367:long get(long[],int) -> get
    380:381:void set(long[],int,long) -> set
    391:391:int length(long[]) -> length
    405:405:int hashCode(long[]) -> hashCode
    423:423:boolean equals(long[],java.lang.Object) -> equals
    437:437:long[] clone(long[]) -> clone
    450:450:int get(int[],int) -> get
    463:464:void set(int[],int,int) -> set
    474:474:int length(int[]) -> length
    488:488:int hashCode(int[]) -> hashCode
    506:506:boolean equals(int[],java.lang.Object) -> equals
    520:520:int[] clone(int[]) -> clone
    533:533:char get(char[],int) -> get
    546:547:void set(char[],int,char) -> set
    557:557:int length(char[]) -> length
    571:571:int hashCode(char[]) -> hashCode
    589:589:boolean equals(char[],java.lang.Object) -> equals
    603:603:char[] clone(char[]) -> clone
    616:616:short get(short[],int) -> get
    629:630:void set(short[],int,short) -> set
    640:640:int length(short[]) -> length
    654:654:int hashCode(short[]) -> hashCode
    672:672:boolean equals(short[],java.lang.Object) -> equals
    686:686:short[] clone(short[]) -> clone
    699:699:byte get(byte[],int) -> get
    712:713:void set(byte[],int,byte) -> set
    723:723:int length(byte[]) -> length
    737:737:int hashCode(byte[]) -> hashCode
    755:755:boolean equals(byte[],java.lang.Object) -> equals
    769:769:byte[] clone(byte[]) -> clone
org.eclipse.xtext.xbase.lib.ArrayLiterals -> org.eclipse.xtext.xbase.lib.ArrayLiterals:
    30:31:java.lang.Object[] newArrayOfSize(int) -> newArrayOfSize
    43:43:char[] newCharArrayOfSize(int) -> newCharArrayOfSize
    55:55:int[] newIntArrayOfSize(int) -> newIntArrayOfSize
    67:67:boolean[] newBooleanArrayOfSize(int) -> newBooleanArrayOfSize
    79:79:short[] newShortArrayOfSize(int) -> newShortArrayOfSize
    91:91:long[] newLongArrayOfSize(int) -> newLongArrayOfSize
    103:103:float[] newFloatArrayOfSize(int) -> newFloatArrayOfSize
    115:115:double[] newDoubleArrayOfSize(int) -> newDoubleArrayOfSize
    127:127:byte[] newByteArrayOfSize(int) -> newByteArrayOfSize
org.eclipse.xtext.xbase.lib.BigDecimalExtensions -> org.eclipse.xtext.xbase.lib.BigDecimalExtensions:
    35:35:java.math.BigDecimal operator_minus(java.math.BigDecimal) -> operator_minus
    52:52:java.math.BigDecimal operator_plus(java.math.BigDecimal,java.math.BigDecimal) -> operator_plus
    69:69:java.math.BigDecimal operator_minus(java.math.BigDecimal,java.math.BigDecimal) -> operator_minus
    86:86:java.math.BigDecimal operator_power(java.math.BigDecimal,int) -> operator_power
    103:103:java.math.BigDecimal operator_multiply(java.math.BigDecimal,java.math.BigDecimal) -> operator_multiply
    120:120:java.math.BigDecimal operator_divide(java.math.BigDecimal,java.math.BigDecimal) -> operator_divide
org.eclipse.xtext.xbase.lib.BigIntegerExtensions -> org.eclipse.xtext.xbase.lib.BigIntegerExtensions:
    34:34:java.math.BigInteger operator_minus(java.math.BigInteger) -> operator_minus
    51:51:java.math.BigInteger operator_plus(java.math.BigInteger,java.math.BigInteger) -> operator_plus
    68:68:java.math.BigInteger operator_minus(java.math.BigInteger,java.math.BigInteger) -> operator_minus
    85:85:java.math.BigInteger operator_power(java.math.BigInteger,int) -> operator_power
    102:102:java.math.BigInteger operator_multiply(java.math.BigInteger,java.math.BigInteger) -> operator_multiply
    119:119:java.math.BigInteger operator_divide(java.math.BigInteger,java.math.BigInteger) -> operator_divide
    136:136:java.math.BigInteger operator_modulo(java.math.BigInteger,java.math.BigInteger) -> operator_modulo
org.eclipse.xtext.xbase.lib.BooleanExtensions -> org.eclipse.xtext.xbase.lib.BooleanExtensions:
    33:33:boolean operator_and(boolean,boolean) -> operator_and
    48:48:boolean operator_or(boolean,boolean) -> operator_or
    61:61:boolean operator_not(boolean) -> operator_not
    76:76:boolean operator_equals(boolean,boolean) -> operator_equals
    91:91:boolean operator_notEquals(boolean,boolean) -> operator_notEquals
    106:106:boolean xor(boolean,boolean) -> xor
    123:123:boolean operator_lessThan(boolean,boolean) -> operator_lessThan
    140:140:boolean operator_lessEqualsThan(boolean,boolean) -> operator_lessEqualsThan
    157:157:boolean operator_greaterThan(boolean,boolean) -> operator_greaterThan
    174:174:boolean operator_greaterEqualsThan(boolean,boolean) -> operator_greaterEqualsThan
org.eclipse.xtext.xbase.lib.ByteExtensions -> org.eclipse.xtext.xbase.lib.ByteExtensions:
    31:31:int operator_minus(byte) -> operator_minus
    43:43:byte operator_minusMinus(byte) -> operator_minusMinus
    55:55:java.lang.Byte operator_minusMinus(java.lang.Byte) -> operator_minusMinus
    67:67:byte operator_plusPlus(byte) -> operator_plusPlus
    79:79:java.lang.Byte operator_plusPlus(java.lang.Byte) -> operator_plusPlus
    92:92:double operator_plus(byte,double) -> operator_plus
    106:106:double operator_minus(byte,double) -> operator_minus
    120:120:double operator_multiply(byte,double) -> operator_multiply
    134:134:double operator_divide(byte,double) -> operator_divide
    148:148:double operator_modulo(byte,double) -> operator_modulo
    162:162:boolean operator_lessThan(byte,double) -> operator_lessThan
    176:176:boolean operator_lessEqualsThan(byte,double) -> operator_lessEqualsThan
    190:190:boolean operator_greaterThan(byte,double) -> operator_greaterThan
    204:204:boolean operator_greaterEqualsThan(byte,double) -> operator_greaterEqualsThan
    218:218:boolean operator_equals(byte,double) -> operator_equals
    232:232:boolean operator_notEquals(byte,double) -> operator_notEquals
    246:246:double operator_power(byte,double) -> operator_power
    261:261:boolean operator_tripleEquals(byte,double) -> operator_tripleEquals
    276:276:boolean operator_tripleNotEquals(byte,double) -> operator_tripleNotEquals
    290:290:float operator_plus(byte,float) -> operator_plus
    304:304:float operator_minus(byte,float) -> operator_minus
    318:318:float operator_multiply(byte,float) -> operator_multiply
    332:332:float operator_divide(byte,float) -> operator_divide
    346:346:float operator_modulo(byte,float) -> operator_modulo
    360:360:boolean operator_lessThan(byte,float) -> operator_lessThan
    374:374:boolean operator_lessEqualsThan(byte,float) -> operator_lessEqualsThan
    388:388:boolean operator_greaterThan(byte,float) -> operator_greaterThan
    402:402:boolean operator_greaterEqualsThan(byte,float) -> operator_greaterEqualsThan
    416:416:boolean operator_equals(byte,float) -> operator_equals
    430:430:boolean operator_notEquals(byte,float) -> operator_notEquals
    444:444:double operator_power(byte,float) -> operator_power
    459:459:boolean operator_tripleEquals(byte,float) -> operator_tripleEquals
    474:474:boolean operator_tripleNotEquals(byte,float) -> operator_tripleNotEquals
    488:488:long operator_plus(byte,long) -> operator_plus
    502:502:long operator_minus(byte,long) -> operator_minus
    516:516:long operator_multiply(byte,long) -> operator_multiply
    530:530:long operator_divide(byte,long) -> operator_divide
    544:544:long operator_modulo(byte,long) -> operator_modulo
    558:558:boolean operator_lessThan(byte,long) -> operator_lessThan
    572:572:boolean operator_lessEqualsThan(byte,long) -> operator_lessEqualsThan
    586:586:boolean operator_greaterThan(byte,long) -> operator_greaterThan
    600:600:boolean operator_greaterEqualsThan(byte,long) -> operator_greaterEqualsThan
    614:614:boolean operator_equals(byte,long) -> operator_equals
    628:628:boolean operator_notEquals(byte,long) -> operator_notEquals
    642:642:double operator_power(byte,long) -> operator_power
    657:657:boolean operator_tripleEquals(byte,long) -> operator_tripleEquals
    672:672:boolean operator_tripleNotEquals(byte,long) -> operator_tripleNotEquals
    686:686:int operator_plus(byte,int) -> operator_plus
    700:700:int operator_minus(byte,int) -> operator_minus
    714:714:int operator_multiply(byte,int) -> operator_multiply
    728:728:int operator_divide(byte,int) -> operator_divide
    742:742:int operator_modulo(byte,int) -> operator_modulo
    756:756:boolean operator_lessThan(byte,int) -> operator_lessThan
    770:770:boolean operator_lessEqualsThan(byte,int) -> operator_lessEqualsThan
    784:784:boolean operator_greaterThan(byte,int) -> operator_greaterThan
    798:798:boolean operator_greaterEqualsThan(byte,int) -> operator_greaterEqualsThan
    812:812:boolean operator_equals(byte,int) -> operator_equals
    826:826:boolean operator_notEquals(byte,int) -> operator_notEquals
    840:840:double operator_power(byte,int) -> operator_power
    855:855:boolean operator_tripleEquals(byte,int) -> operator_tripleEquals
    870:870:boolean operator_tripleNotEquals(byte,int) -> operator_tripleNotEquals
    884:884:int operator_plus(byte,char) -> operator_plus
    898:898:int operator_minus(byte,char) -> operator_minus
    912:912:int operator_multiply(byte,char) -> operator_multiply
    926:926:int operator_divide(byte,char) -> operator_divide
    940:940:int operator_modulo(byte,char) -> operator_modulo
    954:954:boolean operator_lessThan(byte,char) -> operator_lessThan
    968:968:boolean operator_lessEqualsThan(byte,char) -> operator_lessEqualsThan
    982:982:boolean operator_greaterThan(byte,char) -> operator_greaterThan
    996:996:boolean operator_greaterEqualsThan(byte,char) -> operator_greaterEqualsThan
    1010:1010:boolean operator_equals(byte,char) -> operator_equals
    1024:1024:boolean operator_notEquals(byte,char) -> operator_notEquals
    1038:1038:double operator_power(byte,char) -> operator_power
    1053:1053:boolean operator_tripleEquals(byte,char) -> operator_tripleEquals
    1068:1068:boolean operator_tripleNotEquals(byte,char) -> operator_tripleNotEquals
    1082:1082:int operator_plus(byte,short) -> operator_plus
    1096:1096:int operator_minus(byte,short) -> operator_minus
    1110:1110:int operator_multiply(byte,short) -> operator_multiply
    1124:1124:int operator_divide(byte,short) -> operator_divide
    1138:1138:int operator_modulo(byte,short) -> operator_modulo
    1152:1152:boolean operator_lessThan(byte,short) -> operator_lessThan
    1166:1166:boolean operator_lessEqualsThan(byte,short) -> operator_lessEqualsThan
    1180:1180:boolean operator_greaterThan(byte,short) -> operator_greaterThan
    1194:1194:boolean operator_greaterEqualsThan(byte,short) -> operator_greaterEqualsThan
    1208:1208:boolean operator_equals(byte,short) -> operator_equals
    1222:1222:boolean operator_notEquals(byte,short) -> operator_notEquals
    1236:1236:double operator_power(byte,short) -> operator_power
    1251:1251:boolean operator_tripleEquals(byte,short) -> operator_tripleEquals
    1266:1266:boolean operator_tripleNotEquals(byte,short) -> operator_tripleNotEquals
    1280:1280:int operator_plus(byte,byte) -> operator_plus
    1294:1294:int operator_minus(byte,byte) -> operator_minus
    1308:1308:int operator_multiply(byte,byte) -> operator_multiply
    1322:1322:int operator_divide(byte,byte) -> operator_divide
    1336:1336:int operator_modulo(byte,byte) -> operator_modulo
    1350:1350:boolean operator_lessThan(byte,byte) -> operator_lessThan
    1364:1364:boolean operator_lessEqualsThan(byte,byte) -> operator_lessEqualsThan
    1378:1378:boolean operator_greaterThan(byte,byte) -> operator_greaterThan
    1392:1392:boolean operator_greaterEqualsThan(byte,byte) -> operator_greaterEqualsThan
    1406:1406:boolean operator_equals(byte,byte) -> operator_equals
    1420:1420:boolean operator_notEquals(byte,byte) -> operator_notEquals
    1434:1434:double operator_power(byte,byte) -> operator_power
    1449:1449:boolean operator_tripleEquals(byte,byte) -> operator_tripleEquals
    1464:1464:boolean operator_tripleNotEquals(byte,byte) -> operator_tripleNotEquals
org.eclipse.xtext.xbase.lib.CharacterExtensions -> org.eclipse.xtext.xbase.lib.CharacterExtensions:
    31:31:int operator_minus(char) -> operator_minus
    43:43:char operator_minusMinus(char) -> operator_minusMinus
    55:55:java.lang.Character operator_minusMinus(java.lang.Character) -> operator_minusMinus
    67:67:char operator_plusPlus(char) -> operator_plusPlus
    79:79:java.lang.Character operator_plusPlus(java.lang.Character) -> operator_plusPlus
    92:92:double operator_plus(char,double) -> operator_plus
    106:106:double operator_minus(char,double) -> operator_minus
    120:120:double operator_multiply(char,double) -> operator_multiply
    134:134:double operator_divide(char,double) -> operator_divide
    148:148:double operator_modulo(char,double) -> operator_modulo
    162:162:boolean operator_lessThan(char,double) -> operator_lessThan
    176:176:boolean operator_lessEqualsThan(char,double) -> operator_lessEqualsThan
    190:190:boolean operator_greaterThan(char,double) -> operator_greaterThan
    204:204:boolean operator_greaterEqualsThan(char,double) -> operator_greaterEqualsThan
    218:218:boolean operator_equals(char,double) -> operator_equals
    232:232:boolean operator_notEquals(char,double) -> operator_notEquals
    246:246:double operator_power(char,double) -> operator_power
    261:261:boolean operator_tripleEquals(char,double) -> operator_tripleEquals
    276:276:boolean operator_tripleNotEquals(char,double) -> operator_tripleNotEquals
    290:290:float operator_plus(char,float) -> operator_plus
    304:304:float operator_minus(char,float) -> operator_minus
    318:318:float operator_multiply(char,float) -> operator_multiply
    332:332:float operator_divide(char,float) -> operator_divide
    346:346:float operator_modulo(char,float) -> operator_modulo
    360:360:boolean operator_lessThan(char,float) -> operator_lessThan
    374:374:boolean operator_lessEqualsThan(char,float) -> operator_lessEqualsThan
    388:388:boolean operator_greaterThan(char,float) -> operator_greaterThan
    402:402:boolean operator_greaterEqualsThan(char,float) -> operator_greaterEqualsThan
    416:416:boolean operator_equals(char,float) -> operator_equals
    430:430:boolean operator_notEquals(char,float) -> operator_notEquals
    444:444:double operator_power(char,float) -> operator_power
    459:459:boolean operator_tripleEquals(char,float) -> operator_tripleEquals
    474:474:boolean operator_tripleNotEquals(char,float) -> operator_tripleNotEquals
    488:488:long operator_plus(char,long) -> operator_plus
    502:502:long operator_minus(char,long) -> operator_minus
    516:516:long operator_multiply(char,long) -> operator_multiply
    530:530:long operator_divide(char,long) -> operator_divide
    544:544:long operator_modulo(char,long) -> operator_modulo
    558:558:boolean operator_lessThan(char,long) -> operator_lessThan
    572:572:boolean operator_lessEqualsThan(char,long) -> operator_lessEqualsThan
    586:586:boolean operator_greaterThan(char,long) -> operator_greaterThan
    600:600:boolean operator_greaterEqualsThan(char,long) -> operator_greaterEqualsThan
    614:614:boolean operator_equals(char,long) -> operator_equals
    628:628:boolean operator_notEquals(char,long) -> operator_notEquals
    642:642:double operator_power(char,long) -> operator_power
    657:657:boolean operator_tripleEquals(char,long) -> operator_tripleEquals
    672:672:boolean operator_tripleNotEquals(char,long) -> operator_tripleNotEquals
    686:686:int operator_plus(char,int) -> operator_plus
    700:700:int operator_minus(char,int) -> operator_minus
    714:714:int operator_multiply(char,int) -> operator_multiply
    728:728:int operator_divide(char,int) -> operator_divide
    742:742:int operator_modulo(char,int) -> operator_modulo
    756:756:boolean operator_lessThan(char,int) -> operator_lessThan
    770:770:boolean operator_lessEqualsThan(char,int) -> operator_lessEqualsThan
    784:784:boolean operator_greaterThan(char,int) -> operator_greaterThan
    798:798:boolean operator_greaterEqualsThan(char,int) -> operator_greaterEqualsThan
    812:812:boolean operator_equals(char,int) -> operator_equals
    826:826:boolean operator_notEquals(char,int) -> operator_notEquals
    840:840:double operator_power(char,int) -> operator_power
    855:855:boolean operator_tripleEquals(char,int) -> operator_tripleEquals
    870:870:boolean operator_tripleNotEquals(char,int) -> operator_tripleNotEquals
    884:884:int operator_plus(char,char) -> operator_plus
    898:898:int operator_minus(char,char) -> operator_minus
    912:912:int operator_multiply(char,char) -> operator_multiply
    926:926:int operator_divide(char,char) -> operator_divide
    940:940:int operator_modulo(char,char) -> operator_modulo
    954:954:boolean operator_lessThan(char,char) -> operator_lessThan
    968:968:boolean operator_lessEqualsThan(char,char) -> operator_lessEqualsThan
    982:982:boolean operator_greaterThan(char,char) -> operator_greaterThan
    996:996:boolean operator_greaterEqualsThan(char,char) -> operator_greaterEqualsThan
    1010:1010:boolean operator_equals(char,char) -> operator_equals
    1024:1024:boolean operator_notEquals(char,char) -> operator_notEquals
    1038:1038:double operator_power(char,char) -> operator_power
    1053:1053:boolean operator_tripleEquals(char,char) -> operator_tripleEquals
    1068:1068:boolean operator_tripleNotEquals(char,char) -> operator_tripleNotEquals
    1082:1082:int operator_plus(char,short) -> operator_plus
    1096:1096:int operator_minus(char,short) -> operator_minus
    1110:1110:int operator_multiply(char,short) -> operator_multiply
    1124:1124:int operator_divide(char,short) -> operator_divide
    1138:1138:int operator_modulo(char,short) -> operator_modulo
    1152:1152:boolean operator_lessThan(char,short) -> operator_lessThan
    1166:1166:boolean operator_lessEqualsThan(char,short) -> operator_lessEqualsThan
    1180:1180:boolean operator_greaterThan(char,short) -> operator_greaterThan
    1194:1194:boolean operator_greaterEqualsThan(char,short) -> operator_greaterEqualsThan
    1208:1208:boolean operator_equals(char,short) -> operator_equals
    1222:1222:boolean operator_notEquals(char,short) -> operator_notEquals
    1236:1236:double operator_power(char,short) -> operator_power
    1251:1251:boolean operator_tripleEquals(char,short) -> operator_tripleEquals
    1266:1266:boolean operator_tripleNotEquals(char,short) -> operator_tripleNotEquals
    1280:1280:int operator_plus(char,byte) -> operator_plus
    1294:1294:int operator_minus(char,byte) -> operator_minus
    1308:1308:int operator_multiply(char,byte) -> operator_multiply
    1322:1322:int operator_divide(char,byte) -> operator_divide
    1336:1336:int operator_modulo(char,byte) -> operator_modulo
    1350:1350:boolean operator_lessThan(char,byte) -> operator_lessThan
    1364:1364:boolean operator_lessEqualsThan(char,byte) -> operator_lessEqualsThan
    1378:1378:boolean operator_greaterThan(char,byte) -> operator_greaterThan
    1392:1392:boolean operator_greaterEqualsThan(char,byte) -> operator_greaterEqualsThan
    1406:1406:boolean operator_equals(char,byte) -> operator_equals
    1420:1420:boolean operator_notEquals(char,byte) -> operator_notEquals
    1434:1434:double operator_power(char,byte) -> operator_power
    1449:1449:boolean operator_tripleEquals(char,byte) -> operator_tripleEquals
    1464:1464:boolean operator_tripleNotEquals(char,byte) -> operator_tripleNotEquals
org.eclipse.xtext.xbase.lib.CollectionExtensions -> org.eclipse.xtext.xbase.lib.CollectionExtensions:
    50:50:boolean operator_add(java.util.Collection,java.lang.Object) -> operator_add
    67:67:boolean operator_add(java.util.Collection,java.lang.Iterable) -> operator_add
    84:84:boolean operator_remove(java.util.Collection,java.lang.Object) -> operator_remove
    102:102:boolean operator_remove(java.util.Collection,java.util.Collection) -> operator_remove
    115:115:java.util.List unmodifiableView(java.util.List) -> unmodifiableView
    128:128:java.util.Collection unmodifiableView(java.util.Collection) -> unmodifiableView
    141:141:java.util.Set unmodifiableView(java.util.Set) -> unmodifiableView
    154:154:java.util.SortedSet unmodifiableView(java.util.SortedSet) -> unmodifiableView
    167:167:java.util.Map unmodifiableView(java.util.Map) -> unmodifiableView
    180:180:java.util.SortedMap unmodifiableView(java.util.SortedMap) -> unmodifiableView
    192:192:java.util.List immutableCopy(java.util.List) -> immutableCopy
    204:204:java.util.Set immutableCopy(java.util.Set) -> immutableCopy
    216:216:java.util.SortedSet immutableCopy(java.util.SortedSet) -> immutableCopy
    228:228:java.util.Map immutableCopy(java.util.Map) -> immutableCopy
    240:240:java.util.SortedMap immutableCopy(java.util.SortedMap) -> immutableCopy
    254:254:boolean addAll(java.util.Collection,java.lang.Object[]) -> addAll
    269:269:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    284:284:boolean removeAll(java.util.Collection,java.lang.Object[]) -> removeAll
    300:300:boolean removeAll(java.util.Collection,java.util.Collection) -> removeAll
    315:315:boolean removeAll(java.util.Collection,java.lang.Iterable) -> removeAll
org.eclipse.xtext.xbase.lib.CollectionLiterals -> org.eclipse.xtext.xbase.lib.CollectionLiterals:
    48:48:java.util.List emptyList() -> emptyList
    59:59:java.util.Set emptySet() -> emptySet
    70:70:java.util.Map emptyMap() -> emptyMap
    85:85:java.util.List newImmutableList(java.lang.Object[]) -> newImmutableList
    101:101:java.util.Set newImmutableSet(java.lang.Object[]) -> newImmutableSet
    119:125:java.util.Map newImmutableMap(org.eclipse.xtext.xbase.lib.Pair[]) -> newImmutableMap
    138:138:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    151:153:java.util.LinkedList newLinkedList(java.lang.Object[]) -> newLinkedList
    166:166:java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    179:181:java.util.LinkedHashSet newLinkedHashSet(java.lang.Object[]) -> newLinkedHashSet
    197:200:java.util.TreeSet newTreeSet(java.util.Comparator,java.lang.Object[]) -> newTreeSet
    216:218:java.util.HashMap newHashMap(org.eclipse.xtext.xbase.lib.Pair[]) -> newHashMap
    234:236:java.util.LinkedHashMap newLinkedHashMap(org.eclipse.xtext.xbase.lib.Pair[]) -> newLinkedHashMap
    255:257:java.util.TreeMap newTreeMap(java.util.Comparator,org.eclipse.xtext.xbase.lib.Pair[]) -> newTreeMap
    261:266:void putAll(java.util.Map,org.eclipse.xtext.xbase.lib.Pair[]) -> putAll
org.eclipse.xtext.xbase.lib.ComparableExtensions -> org.eclipse.xtext.xbase.lib.ComparableExtensions:
    31:31:boolean operator_lessThan(java.lang.Comparable,java.lang.Object) -> operator_lessThan
    45:45:boolean operator_greaterThan(java.lang.Comparable,java.lang.Object) -> operator_greaterThan
    59:59:boolean operator_lessEqualsThan(java.lang.Comparable,java.lang.Object) -> operator_lessEqualsThan
    73:73:boolean operator_greaterEqualsThan(java.lang.Comparable,java.lang.Object) -> operator_greaterEqualsThan
    88:88:int operator_spaceship(java.lang.Comparable,java.lang.Object) -> operator_spaceship
org.eclipse.xtext.xbase.lib.Conversions -> org.eclipse.xtext.xbase.lib.Conversions:
    41:52:java.lang.Object doWrapArray(java.lang.Object) -> doWrapArray
    67:67:java.lang.Object unwrapArray(java.lang.Object) -> unwrapArray
    85:115:java.lang.Object unwrapArray(java.lang.Object,java.lang.Class) -> unwrapArray
    130:136:java.lang.Object checkComponentType(java.lang.Object,java.lang.Class) -> checkComponentType
org.eclipse.xtext.xbase.lib.Conversions$WrappedArray -> org.eclipse.xtext.xbase.lib.Conversions$WrappedArray:
    java.lang.Object[] array -> array
    158:158:org.eclipse.xtext.xbase.lib.Conversions$WrappedArray create(java.lang.Object[]) -> create
    184:184:java.lang.Object get(int) -> get
    203:206:java.lang.Object set(int,java.lang.Object) -> set
    217:217:int size() -> size
    222:222:java.lang.Object[] toArray() -> toArray
    233:234:java.lang.Object[] internalToArray() -> internalToArray
org.eclipse.xtext.xbase.lib.Conversions$WrappedPrimitiveArray -> org.eclipse.xtext.xbase.lib.Conversions$WrappedPrimitiveArray:
    java.lang.Object array -> array
    int size -> size
    255:255:org.eclipse.xtext.xbase.lib.Conversions$WrappedPrimitiveArray create(java.lang.Object) -> create
    284:286:java.lang.Object get(int) -> get
    305:310:java.lang.Object set(int,java.lang.Object) -> set
    321:323:int size() -> size
    334:335:java.lang.Object internalToArray() -> internalToArray
org.eclipse.xtext.xbase.lib.DoubleExtensions -> org.eclipse.xtext.xbase.lib.DoubleExtensions:
    32:32:double operator_minus(java.lang.Double) -> operator_minus
    48:48:double operator_plus(java.lang.Double,java.lang.Number) -> operator_plus
    64:64:double operator_minus(java.lang.Double,java.lang.Number) -> operator_minus
    80:80:double operator_power(java.lang.Double,java.lang.Number) -> operator_power
    95:95:double operator_multiply(java.lang.Double,java.lang.Number) -> operator_multiply
    113:113:double operator_divide(java.lang.Double,java.lang.Number) -> operator_divide
    127:127:double operator_minus(double) -> operator_minus
    139:139:double operator_minusMinus(double) -> operator_minusMinus
    151:151:java.lang.Double operator_minusMinus(java.lang.Double) -> operator_minusMinus
    163:163:double operator_plusPlus(double) -> operator_plusPlus
    175:175:java.lang.Double operator_plusPlus(java.lang.Double) -> operator_plusPlus
    188:188:double operator_plus(double,double) -> operator_plus
    202:202:double operator_minus(double,double) -> operator_minus
    216:216:double operator_multiply(double,double) -> operator_multiply
    230:230:double operator_divide(double,double) -> operator_divide
    244:244:double operator_modulo(double,double) -> operator_modulo
    258:258:boolean operator_lessThan(double,double) -> operator_lessThan
    272:272:boolean operator_lessEqualsThan(double,double) -> operator_lessEqualsThan
    286:286:boolean operator_greaterThan(double,double) -> operator_greaterThan
    300:300:boolean operator_greaterEqualsThan(double,double) -> operator_greaterEqualsThan
    314:314:boolean operator_equals(double,double) -> operator_equals
    328:328:boolean operator_notEquals(double,double) -> operator_notEquals
    342:342:double operator_power(double,double) -> operator_power
    357:357:boolean operator_tripleEquals(double,double) -> operator_tripleEquals
    372:372:boolean operator_tripleNotEquals(double,double) -> operator_tripleNotEquals
    386:386:double operator_plus(double,float) -> operator_plus
    400:400:double operator_minus(double,float) -> operator_minus
    414:414:double operator_multiply(double,float) -> operator_multiply
    428:428:double operator_divide(double,float) -> operator_divide
    442:442:double operator_modulo(double,float) -> operator_modulo
    456:456:boolean operator_lessThan(double,float) -> operator_lessThan
    470:470:boolean operator_lessEqualsThan(double,float) -> operator_lessEqualsThan
    484:484:boolean operator_greaterThan(double,float) -> operator_greaterThan
    498:498:boolean operator_greaterEqualsThan(double,float) -> operator_greaterEqualsThan
    512:512:boolean operator_equals(double,float) -> operator_equals
    526:526:boolean operator_notEquals(double,float) -> operator_notEquals
    540:540:double operator_power(double,float) -> operator_power
    555:555:boolean operator_tripleEquals(double,float) -> operator_tripleEquals
    570:570:boolean operator_tripleNotEquals(double,float) -> operator_tripleNotEquals
    584:584:double operator_plus(double,long) -> operator_plus
    598:598:double operator_minus(double,long) -> operator_minus
    612:612:double operator_multiply(double,long) -> operator_multiply
    626:626:double operator_divide(double,long) -> operator_divide
    640:640:double operator_modulo(double,long) -> operator_modulo
    654:654:boolean operator_lessThan(double,long) -> operator_lessThan
    668:668:boolean operator_lessEqualsThan(double,long) -> operator_lessEqualsThan
    682:682:boolean operator_greaterThan(double,long) -> operator_greaterThan
    696:696:boolean operator_greaterEqualsThan(double,long) -> operator_greaterEqualsThan
    710:710:boolean operator_equals(double,long) -> operator_equals
    724:724:boolean operator_notEquals(double,long) -> operator_notEquals
    738:738:double operator_power(double,long) -> operator_power
    753:753:boolean operator_tripleEquals(double,long) -> operator_tripleEquals
    768:768:boolean operator_tripleNotEquals(double,long) -> operator_tripleNotEquals
    782:782:double operator_plus(double,int) -> operator_plus
    796:796:double operator_minus(double,int) -> operator_minus
    810:810:double operator_multiply(double,int) -> operator_multiply
    824:824:double operator_divide(double,int) -> operator_divide
    838:838:double operator_modulo(double,int) -> operator_modulo
    852:852:boolean operator_lessThan(double,int) -> operator_lessThan
    866:866:boolean operator_lessEqualsThan(double,int) -> operator_lessEqualsThan
    880:880:boolean operator_greaterThan(double,int) -> operator_greaterThan
    894:894:boolean operator_greaterEqualsThan(double,int) -> operator_greaterEqualsThan
    908:908:boolean operator_equals(double,int) -> operator_equals
    922:922:boolean operator_notEquals(double,int) -> operator_notEquals
    936:936:double operator_power(double,int) -> operator_power
    951:951:boolean operator_tripleEquals(double,int) -> operator_tripleEquals
    966:966:boolean operator_tripleNotEquals(double,int) -> operator_tripleNotEquals
    980:980:double operator_plus(double,char) -> operator_plus
    994:994:double operator_minus(double,char) -> operator_minus
    1008:1008:double operator_multiply(double,char) -> operator_multiply
    1022:1022:double operator_divide(double,char) -> operator_divide
    1036:1036:double operator_modulo(double,char) -> operator_modulo
    1050:1050:boolean operator_lessThan(double,char) -> operator_lessThan
    1064:1064:boolean operator_lessEqualsThan(double,char) -> operator_lessEqualsThan
    1078:1078:boolean operator_greaterThan(double,char) -> operator_greaterThan
    1092:1092:boolean operator_greaterEqualsThan(double,char) -> operator_greaterEqualsThan
    1106:1106:boolean operator_equals(double,char) -> operator_equals
    1120:1120:boolean operator_notEquals(double,char) -> operator_notEquals
    1134:1134:double operator_power(double,char) -> operator_power
    1149:1149:boolean operator_tripleEquals(double,char) -> operator_tripleEquals
    1164:1164:boolean operator_tripleNotEquals(double,char) -> operator_tripleNotEquals
    1178:1178:double operator_plus(double,short) -> operator_plus
    1192:1192:double operator_minus(double,short) -> operator_minus
    1206:1206:double operator_multiply(double,short) -> operator_multiply
    1220:1220:double operator_divide(double,short) -> operator_divide
    1234:1234:double operator_modulo(double,short) -> operator_modulo
    1248:1248:boolean operator_lessThan(double,short) -> operator_lessThan
    1262:1262:boolean operator_lessEqualsThan(double,short) -> operator_lessEqualsThan
    1276:1276:boolean operator_greaterThan(double,short) -> operator_greaterThan
    1290:1290:boolean operator_greaterEqualsThan(double,short) -> operator_greaterEqualsThan
    1304:1304:boolean operator_equals(double,short) -> operator_equals
    1318:1318:boolean operator_notEquals(double,short) -> operator_notEquals
    1332:1332:double operator_power(double,short) -> operator_power
    1347:1347:boolean operator_tripleEquals(double,short) -> operator_tripleEquals
    1362:1362:boolean operator_tripleNotEquals(double,short) -> operator_tripleNotEquals
    1376:1376:double operator_plus(double,byte) -> operator_plus
    1390:1390:double operator_minus(double,byte) -> operator_minus
    1404:1404:double operator_multiply(double,byte) -> operator_multiply
    1418:1418:double operator_divide(double,byte) -> operator_divide
    1432:1432:double operator_modulo(double,byte) -> operator_modulo
    1446:1446:boolean operator_lessThan(double,byte) -> operator_lessThan
    1460:1460:boolean operator_lessEqualsThan(double,byte) -> operator_lessEqualsThan
    1474:1474:boolean operator_greaterThan(double,byte) -> operator_greaterThan
    1488:1488:boolean operator_greaterEqualsThan(double,byte) -> operator_greaterEqualsThan
    1502:1502:boolean operator_equals(double,byte) -> operator_equals
    1516:1516:boolean operator_notEquals(double,byte) -> operator_notEquals
    1530:1530:double operator_power(double,byte) -> operator_power
    1545:1545:boolean operator_tripleEquals(double,byte) -> operator_tripleEquals
    1560:1560:boolean operator_tripleNotEquals(double,byte) -> operator_tripleNotEquals
org.eclipse.xtext.xbase.lib.Exceptions -> org.eclipse.xtext.xbase.lib.Exceptions:
    36:39:java.lang.RuntimeException sneakyThrow(java.lang.Throwable) -> sneakyThrow
    44:44:void sneakyThrow0(java.lang.Throwable) -> sneakyThrow0
org.eclipse.xtext.xbase.lib.ExclusiveRange -> org.eclipse.xtext.xbase.lib.ExclusiveRange:
    int first -> first
    int last -> last
    int step -> step
    java.util.ListIterator EMPTY_LIST_ITERATOR -> EMPTY_LIST_ITERATOR
    99:99:java.util.ListIterator iterator() -> iterator
    131:131:int size() -> size
    142:142:boolean isEmpty() -> isEmpty
    155:160:boolean contains(int) -> contains
    1:1:java.util.Iterator iterator() -> iterator
    51:51:int access$1(org.eclipse.xtext.xbase.lib.ExclusiveRange) -> access$1
    53:53:int access$2(org.eclipse.xtext.xbase.lib.ExclusiveRange) -> access$2
    52:52:int access$3(org.eclipse.xtext.xbase.lib.ExclusiveRange) -> access$3
org.eclipse.xtext.xbase.lib.ExclusiveRange$1 -> org.eclipse.xtext.xbase.lib.ExclusiveRange$1:
    58:58:boolean hasNext() -> hasNext
    62:62:java.lang.Integer next() -> next
    66:66:boolean hasPrevious() -> hasPrevious
    70:70:java.lang.Integer previous() -> previous
    74:74:int nextIndex() -> nextIndex
    78:78:int previousIndex() -> previousIndex
    82:82:void remove() -> remove
    86:86:void set(java.lang.Integer) -> set
    90:90:void add(java.lang.Integer) -> add
    1:1:java.lang.Object next() -> next
    1:1:java.lang.Object previous() -> previous
    1:1:void add(java.lang.Object) -> add
    1:1:void set(java.lang.Object) -> set
org.eclipse.xtext.xbase.lib.ExclusiveRange$RangeIterator -> org.eclipse.xtext.xbase.lib.ExclusiveRange$RangeIterator:
    int next -> next
    int nextIndex -> nextIndex
    org.eclipse.xtext.xbase.lib.ExclusiveRange this$0 -> this$0
    169:172:boolean hasNext() -> hasNext
    176:182:java.lang.Integer next() -> next
    186:186:boolean hasPrevious() -> hasPrevious
    190:194:java.lang.Integer previous() -> previous
    198:198:int nextIndex() -> nextIndex
    202:202:int previousIndex() -> previousIndex
    206:206:void remove() -> remove
    210:210:void set(java.lang.Integer) -> set
    214:214:void add(java.lang.Integer) -> add
    1:1:java.lang.Object next() -> next
    1:1:java.lang.Object previous() -> previous
    1:1:void add(java.lang.Object) -> add
    1:1:void set(java.lang.Object) -> set
org.eclipse.xtext.xbase.lib.Extension -> org.eclipse.xtext.xbase.lib.Extension:
org.eclipse.xtext.xbase.lib.FloatExtensions -> org.eclipse.xtext.xbase.lib.FloatExtensions:
    31:31:float operator_minus(float) -> operator_minus
    43:43:float operator_minusMinus(float) -> operator_minusMinus
    55:55:java.lang.Float operator_minusMinus(java.lang.Float) -> operator_minusMinus
    67:67:float operator_plusPlus(float) -> operator_plusPlus
    79:79:java.lang.Float operator_plusPlus(java.lang.Float) -> operator_plusPlus
    92:92:double operator_plus(float,double) -> operator_plus
    106:106:double operator_minus(float,double) -> operator_minus
    120:120:double operator_multiply(float,double) -> operator_multiply
    134:134:double operator_divide(float,double) -> operator_divide
    148:148:double operator_modulo(float,double) -> operator_modulo
    162:162:boolean operator_lessThan(float,double) -> operator_lessThan
    176:176:boolean operator_lessEqualsThan(float,double) -> operator_lessEqualsThan
    190:190:boolean operator_greaterThan(float,double) -> operator_greaterThan
    204:204:boolean operator_greaterEqualsThan(float,double) -> operator_greaterEqualsThan
    218:218:boolean operator_equals(float,double) -> operator_equals
    232:232:boolean operator_notEquals(float,double) -> operator_notEquals
    246:246:double operator_power(float,double) -> operator_power
    261:261:boolean operator_tripleEquals(float,double) -> operator_tripleEquals
    276:276:boolean operator_tripleNotEquals(float,double) -> operator_tripleNotEquals
    290:290:float operator_plus(float,float) -> operator_plus
    304:304:float operator_minus(float,float) -> operator_minus
    318:318:float operator_multiply(float,float) -> operator_multiply
    332:332:float operator_divide(float,float) -> operator_divide
    346:346:float operator_modulo(float,float) -> operator_modulo
    360:360:boolean operator_lessThan(float,float) -> operator_lessThan
    374:374:boolean operator_lessEqualsThan(float,float) -> operator_lessEqualsThan
    388:388:boolean operator_greaterThan(float,float) -> operator_greaterThan
    402:402:boolean operator_greaterEqualsThan(float,float) -> operator_greaterEqualsThan
    416:416:boolean operator_equals(float,float) -> operator_equals
    430:430:boolean operator_notEquals(float,float) -> operator_notEquals
    444:444:double operator_power(float,float) -> operator_power
    459:459:boolean operator_tripleEquals(float,float) -> operator_tripleEquals
    474:474:boolean operator_tripleNotEquals(float,float) -> operator_tripleNotEquals
    488:488:float operator_plus(float,long) -> operator_plus
    502:502:float operator_minus(float,long) -> operator_minus
    516:516:float operator_multiply(float,long) -> operator_multiply
    530:530:float operator_divide(float,long) -> operator_divide
    544:544:float operator_modulo(float,long) -> operator_modulo
    558:558:boolean operator_lessThan(float,long) -> operator_lessThan
    572:572:boolean operator_lessEqualsThan(float,long) -> operator_lessEqualsThan
    586:586:boolean operator_greaterThan(float,long) -> operator_greaterThan
    600:600:boolean operator_greaterEqualsThan(float,long) -> operator_greaterEqualsThan
    614:614:boolean operator_equals(float,long) -> operator_equals
    628:628:boolean operator_notEquals(float,long) -> operator_notEquals
    642:642:double operator_power(float,long) -> operator_power
    657:657:boolean operator_tripleEquals(float,long) -> operator_tripleEquals
    672:672:boolean operator_tripleNotEquals(float,long) -> operator_tripleNotEquals
    686:686:float operator_plus(float,int) -> operator_plus
    700:700:float operator_minus(float,int) -> operator_minus
    714:714:float operator_multiply(float,int) -> operator_multiply
    728:728:float operator_divide(float,int) -> operator_divide
    742:742:float operator_modulo(float,int) -> operator_modulo
    756:756:boolean operator_lessThan(float,int) -> operator_lessThan
    770:770:boolean operator_lessEqualsThan(float,int) -> operator_lessEqualsThan
    784:784:boolean operator_greaterThan(float,int) -> operator_greaterThan
    798:798:boolean operator_greaterEqualsThan(float,int) -> operator_greaterEqualsThan
    812:812:boolean operator_equals(float,int) -> operator_equals
    826:826:boolean operator_notEquals(float,int) -> operator_notEquals
    840:840:double operator_power(float,int) -> operator_power
    855:855:boolean operator_tripleEquals(float,int) -> operator_tripleEquals
    870:870:boolean operator_tripleNotEquals(float,int) -> operator_tripleNotEquals
    884:884:float operator_plus(float,char) -> operator_plus
    898:898:float operator_minus(float,char) -> operator_minus
    912:912:float operator_multiply(float,char) -> operator_multiply
    926:926:float operator_divide(float,char) -> operator_divide
    940:940:float operator_modulo(float,char) -> operator_modulo
    954:954:boolean operator_lessThan(float,char) -> operator_lessThan
    968:968:boolean operator_lessEqualsThan(float,char) -> operator_lessEqualsThan
    982:982:boolean operator_greaterThan(float,char) -> operator_greaterThan
    996:996:boolean operator_greaterEqualsThan(float,char) -> operator_greaterEqualsThan
    1010:1010:boolean operator_equals(float,char) -> operator_equals
    1024:1024:boolean operator_notEquals(float,char) -> operator_notEquals
    1038:1038:double operator_power(float,char) -> operator_power
    1053:1053:boolean operator_tripleEquals(float,char) -> operator_tripleEquals
    1068:1068:boolean operator_tripleNotEquals(float,char) -> operator_tripleNotEquals
    1082:1082:float operator_plus(float,short) -> operator_plus
    1096:1096:float operator_minus(float,short) -> operator_minus
    1110:1110:float operator_multiply(float,short) -> operator_multiply
    1124:1124:float operator_divide(float,short) -> operator_divide
    1138:1138:float operator_modulo(float,short) -> operator_modulo
    1152:1152:boolean operator_lessThan(float,short) -> operator_lessThan
    1166:1166:boolean operator_lessEqualsThan(float,short) -> operator_lessEqualsThan
    1180:1180:boolean operator_greaterThan(float,short) -> operator_greaterThan
    1194:1194:boolean operator_greaterEqualsThan(float,short) -> operator_greaterEqualsThan
    1208:1208:boolean operator_equals(float,short) -> operator_equals
    1222:1222:boolean operator_notEquals(float,short) -> operator_notEquals
    1236:1236:double operator_power(float,short) -> operator_power
    1251:1251:boolean operator_tripleEquals(float,short) -> operator_tripleEquals
    1266:1266:boolean operator_tripleNotEquals(float,short) -> operator_tripleNotEquals
    1280:1280:float operator_plus(float,byte) -> operator_plus
    1294:1294:float operator_minus(float,byte) -> operator_minus
    1308:1308:float operator_multiply(float,byte) -> operator_multiply
    1322:1322:float operator_divide(float,byte) -> operator_divide
    1336:1336:float operator_modulo(float,byte) -> operator_modulo
    1350:1350:boolean operator_lessThan(float,byte) -> operator_lessThan
    1364:1364:boolean operator_lessEqualsThan(float,byte) -> operator_lessEqualsThan
    1378:1378:boolean operator_greaterThan(float,byte) -> operator_greaterThan
    1392:1392:boolean operator_greaterEqualsThan(float,byte) -> operator_greaterEqualsThan
    1406:1406:boolean operator_equals(float,byte) -> operator_equals
    1420:1420:boolean operator_notEquals(float,byte) -> operator_notEquals
    1434:1434:double operator_power(float,byte) -> operator_power
    1449:1449:boolean operator_tripleEquals(float,byte) -> operator_tripleEquals
    1464:1464:boolean operator_tripleNotEquals(float,byte) -> operator_tripleNotEquals
org.eclipse.xtext.xbase.lib.FunctionExtensions -> org.eclipse.xtext.xbase.lib.FunctionExtensions:
    39:41:org.eclipse.xtext.xbase.lib.Functions$Function0 curry(org.eclipse.xtext.xbase.lib.Functions$Function1,java.lang.Object) -> curry
    60:62:org.eclipse.xtext.xbase.lib.Functions$Function1 curry(org.eclipse.xtext.xbase.lib.Functions$Function2,java.lang.Object) -> curry
    81:83:org.eclipse.xtext.xbase.lib.Functions$Function2 curry(org.eclipse.xtext.xbase.lib.Functions$Function3,java.lang.Object) -> curry
    102:104:org.eclipse.xtext.xbase.lib.Functions$Function3 curry(org.eclipse.xtext.xbase.lib.Functions$Function4,java.lang.Object) -> curry
    123:125:org.eclipse.xtext.xbase.lib.Functions$Function4 curry(org.eclipse.xtext.xbase.lib.Functions$Function5,java.lang.Object) -> curry
    144:146:org.eclipse.xtext.xbase.lib.Functions$Function5 curry(org.eclipse.xtext.xbase.lib.Functions$Function6,java.lang.Object) -> curry
org.eclipse.xtext.xbase.lib.FunctionExtensions$1 -> org.eclipse.xtext.xbase.lib.FunctionExtensions$1:
    org.eclipse.xtext.xbase.lib.Functions$Function1 val$function -> val$function
    java.lang.Object val$argument -> val$argument
    43:43:java.lang.Object apply() -> apply
org.eclipse.xtext.xbase.lib.FunctionExtensions$2 -> org.eclipse.xtext.xbase.lib.FunctionExtensions$2:
    org.eclipse.xtext.xbase.lib.Functions$Function2 val$function -> val$function
    java.lang.Object val$argument -> val$argument
    64:64:java.lang.Object apply(java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.FunctionExtensions$3 -> org.eclipse.xtext.xbase.lib.FunctionExtensions$3:
    org.eclipse.xtext.xbase.lib.Functions$Function3 val$function -> val$function
    java.lang.Object val$argument -> val$argument
    85:85:java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.FunctionExtensions$4 -> org.eclipse.xtext.xbase.lib.FunctionExtensions$4:
    org.eclipse.xtext.xbase.lib.Functions$Function4 val$function -> val$function
    java.lang.Object val$argument -> val$argument
    106:106:java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.FunctionExtensions$5 -> org.eclipse.xtext.xbase.lib.FunctionExtensions$5:
    org.eclipse.xtext.xbase.lib.Functions$Function5 val$function -> val$function
    java.lang.Object val$argument -> val$argument
    127:127:java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.FunctionExtensions$6 -> org.eclipse.xtext.xbase.lib.FunctionExtensions$6:
    org.eclipse.xtext.xbase.lib.Functions$Function6 val$function -> val$function
    java.lang.Object val$argument -> val$argument
    148:148:java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Functions -> org.eclipse.xtext.xbase.lib.Functions:
org.eclipse.xtext.xbase.lib.Functions$Function0 -> org.eclipse.xtext.xbase.lib.Functions$Function0:
    java.lang.Object apply() -> apply
org.eclipse.xtext.xbase.lib.Functions$Function1 -> org.eclipse.xtext.xbase.lib.Functions$Function1:
    java.lang.Object apply(java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Functions$Function2 -> org.eclipse.xtext.xbase.lib.Functions$Function2:
    java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Functions$Function3 -> org.eclipse.xtext.xbase.lib.Functions$Function3:
    java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Functions$Function4 -> org.eclipse.xtext.xbase.lib.Functions$Function4:
    java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Functions$Function5 -> org.eclipse.xtext.xbase.lib.Functions$Function5:
    java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Functions$Function6 -> org.eclipse.xtext.xbase.lib.Functions$Function6:
    java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.HardcodedInInterpreterException -> org.eclipse.xtext.xbase.lib.HardcodedInInterpreterException:
    long serialVersionUID -> serialVersionUID
org.eclipse.xtext.xbase.lib.Inline -> org.eclipse.xtext.xbase.lib.Inline:
    java.lang.String value() -> value
    java.lang.Class[] imported() -> imported
    boolean statementExpression() -> statementExpression
    boolean constantExpression() -> constantExpression
org.eclipse.xtext.xbase.lib.InputOutput -> org.eclipse.xtext.xbase.lib.InputOutput:
    24:25:void println() -> println
    35:36:java.lang.Object println(java.lang.Object) -> println
    48:49:java.lang.Object print(java.lang.Object) -> print
org.eclipse.xtext.xbase.lib.IntegerExtensions -> org.eclipse.xtext.xbase.lib.IntegerExtensions:
    34:34:org.eclipse.xtext.xbase.lib.IntegerRange operator_upTo(int,int) -> operator_upTo
    48:48:org.eclipse.xtext.xbase.lib.ExclusiveRange operator_doubleDotLessThan(int,int) -> operator_doubleDotLessThan
    62:62:org.eclipse.xtext.xbase.lib.ExclusiveRange operator_greaterThanDoubleDot(int,int) -> operator_greaterThanDoubleDot
    77:77:int bitwiseOr(int,int) -> bitwiseOr
    92:92:int bitwiseXor(int,int) -> bitwiseXor
    107:107:int bitwiseAnd(int,int) -> bitwiseAnd
    120:120:int bitwiseNot(int) -> bitwiseNot
    138:138:int shiftLeft(int,int) -> shiftLeft
    155:155:int operator_doubleLessThan(int,int) -> operator_doubleLessThan
    173:173:int shiftRight(int,int) -> shiftRight
    190:190:int operator_doubleGreaterThan(int,int) -> operator_doubleGreaterThan
    208:208:int shiftRightUnsigned(int,int) -> shiftRightUnsigned
    225:225:int operator_tripleGreaterThan(int,int) -> operator_tripleGreaterThan
    239:239:int operator_minus(int) -> operator_minus
    251:251:int operator_minusMinus(int) -> operator_minusMinus
    263:263:java.lang.Integer operator_minusMinus(java.lang.Integer) -> operator_minusMinus
    275:275:int operator_plusPlus(int) -> operator_plusPlus
    287:287:java.lang.Integer operator_plusPlus(java.lang.Integer) -> operator_plusPlus
    300:300:double operator_plus(int,double) -> operator_plus
    314:314:double operator_minus(int,double) -> operator_minus
    328:328:double operator_multiply(int,double) -> operator_multiply
    342:342:double operator_divide(int,double) -> operator_divide
    356:356:double operator_modulo(int,double) -> operator_modulo
    370:370:boolean operator_lessThan(int,double) -> operator_lessThan
    384:384:boolean operator_lessEqualsThan(int,double) -> operator_lessEqualsThan
    398:398:boolean operator_greaterThan(int,double) -> operator_greaterThan
    412:412:boolean operator_greaterEqualsThan(int,double) -> operator_greaterEqualsThan
    426:426:boolean operator_equals(int,double) -> operator_equals
    440:440:boolean operator_notEquals(int,double) -> operator_notEquals
    454:454:double operator_power(int,double) -> operator_power
    469:469:boolean operator_tripleEquals(int,double) -> operator_tripleEquals
    484:484:boolean operator_tripleNotEquals(int,double) -> operator_tripleNotEquals
    498:498:float operator_plus(int,float) -> operator_plus
    512:512:float operator_minus(int,float) -> operator_minus
    526:526:float operator_multiply(int,float) -> operator_multiply
    540:540:float operator_divide(int,float) -> operator_divide
    554:554:float operator_modulo(int,float) -> operator_modulo
    568:568:boolean operator_lessThan(int,float) -> operator_lessThan
    582:582:boolean operator_lessEqualsThan(int,float) -> operator_lessEqualsThan
    596:596:boolean operator_greaterThan(int,float) -> operator_greaterThan
    610:610:boolean operator_greaterEqualsThan(int,float) -> operator_greaterEqualsThan
    624:624:boolean operator_equals(int,float) -> operator_equals
    638:638:boolean operator_notEquals(int,float) -> operator_notEquals
    652:652:double operator_power(int,float) -> operator_power
    667:667:boolean operator_tripleEquals(int,float) -> operator_tripleEquals
    682:682:boolean operator_tripleNotEquals(int,float) -> operator_tripleNotEquals
    696:696:long operator_plus(int,long) -> operator_plus
    710:710:long operator_minus(int,long) -> operator_minus
    724:724:long operator_multiply(int,long) -> operator_multiply
    738:738:long operator_divide(int,long) -> operator_divide
    752:752:long operator_modulo(int,long) -> operator_modulo
    766:766:boolean operator_lessThan(int,long) -> operator_lessThan
    780:780:boolean operator_lessEqualsThan(int,long) -> operator_lessEqualsThan
    794:794:boolean operator_greaterThan(int,long) -> operator_greaterThan
    808:808:boolean operator_greaterEqualsThan(int,long) -> operator_greaterEqualsThan
    822:822:boolean operator_equals(int,long) -> operator_equals
    836:836:boolean operator_notEquals(int,long) -> operator_notEquals
    850:850:double operator_power(int,long) -> operator_power
    865:865:boolean operator_tripleEquals(int,long) -> operator_tripleEquals
    880:880:boolean operator_tripleNotEquals(int,long) -> operator_tripleNotEquals
    894:894:int operator_plus(int,int) -> operator_plus
    908:908:int operator_minus(int,int) -> operator_minus
    922:922:int operator_multiply(int,int) -> operator_multiply
    936:936:int operator_divide(int,int) -> operator_divide
    950:950:int operator_modulo(int,int) -> operator_modulo
    964:964:boolean operator_lessThan(int,int) -> operator_lessThan
    978:978:boolean operator_lessEqualsThan(int,int) -> operator_lessEqualsThan
    992:992:boolean operator_greaterThan(int,int) -> operator_greaterThan
    1006:1006:boolean operator_greaterEqualsThan(int,int) -> operator_greaterEqualsThan
    1020:1020:boolean operator_equals(int,int) -> operator_equals
    1034:1034:boolean operator_notEquals(int,int) -> operator_notEquals
    1048:1048:double operator_power(int,int) -> operator_power
    1063:1063:boolean operator_tripleEquals(int,int) -> operator_tripleEquals
    1078:1078:boolean operator_tripleNotEquals(int,int) -> operator_tripleNotEquals
    1092:1092:int operator_plus(int,char) -> operator_plus
    1106:1106:int operator_minus(int,char) -> operator_minus
    1120:1120:int operator_multiply(int,char) -> operator_multiply
    1134:1134:int operator_divide(int,char) -> operator_divide
    1148:1148:int operator_modulo(int,char) -> operator_modulo
    1162:1162:boolean operator_lessThan(int,char) -> operator_lessThan
    1176:1176:boolean operator_lessEqualsThan(int,char) -> operator_lessEqualsThan
    1190:1190:boolean operator_greaterThan(int,char) -> operator_greaterThan
    1204:1204:boolean operator_greaterEqualsThan(int,char) -> operator_greaterEqualsThan
    1218:1218:boolean operator_equals(int,char) -> operator_equals
    1232:1232:boolean operator_notEquals(int,char) -> operator_notEquals
    1246:1246:double operator_power(int,char) -> operator_power
    1261:1261:boolean operator_tripleEquals(int,char) -> operator_tripleEquals
    1276:1276:boolean operator_tripleNotEquals(int,char) -> operator_tripleNotEquals
    1290:1290:int operator_plus(int,short) -> operator_plus
    1304:1304:int operator_minus(int,short) -> operator_minus
    1318:1318:int operator_multiply(int,short) -> operator_multiply
    1332:1332:int operator_divide(int,short) -> operator_divide
    1346:1346:int operator_modulo(int,short) -> operator_modulo
    1360:1360:boolean operator_lessThan(int,short) -> operator_lessThan
    1374:1374:boolean operator_lessEqualsThan(int,short) -> operator_lessEqualsThan
    1388:1388:boolean operator_greaterThan(int,short) -> operator_greaterThan
    1402:1402:boolean operator_greaterEqualsThan(int,short) -> operator_greaterEqualsThan
    1416:1416:boolean operator_equals(int,short) -> operator_equals
    1430:1430:boolean operator_notEquals(int,short) -> operator_notEquals
    1444:1444:double operator_power(int,short) -> operator_power
    1459:1459:boolean operator_tripleEquals(int,short) -> operator_tripleEquals
    1474:1474:boolean operator_tripleNotEquals(int,short) -> operator_tripleNotEquals
    1488:1488:int operator_plus(int,byte) -> operator_plus
    1502:1502:int operator_minus(int,byte) -> operator_minus
    1516:1516:int operator_multiply(int,byte) -> operator_multiply
    1530:1530:int operator_divide(int,byte) -> operator_divide
    1544:1544:int operator_modulo(int,byte) -> operator_modulo
    1558:1558:boolean operator_lessThan(int,byte) -> operator_lessThan
    1572:1572:boolean operator_lessEqualsThan(int,byte) -> operator_lessEqualsThan
    1586:1586:boolean operator_greaterThan(int,byte) -> operator_greaterThan
    1600:1600:boolean operator_greaterEqualsThan(int,byte) -> operator_greaterEqualsThan
    1614:1614:boolean operator_equals(int,byte) -> operator_equals
    1628:1628:boolean operator_notEquals(int,byte) -> operator_notEquals
    1642:1642:double operator_power(int,byte) -> operator_power
    1657:1657:boolean operator_tripleEquals(int,byte) -> operator_tripleEquals
    1672:1672:boolean operator_tripleNotEquals(int,byte) -> operator_tripleNotEquals
org.eclipse.xtext.xbase.lib.IntegerRange -> org.eclipse.xtext.xbase.lib.IntegerRange:
    int start -> start
    int end -> end
    int step -> step
    35:35:java.util.ListIterator iterator() -> iterator
    78:78:int getStart() -> getStart
    86:86:int getStep() -> getStep
    94:94:int getEnd() -> getEnd
    104:104:int getSize() -> getSize
    114:114:org.eclipse.xtext.xbase.lib.IntegerRange withStep(int) -> withStep
    127:130:boolean contains(int) -> contains
    1:1:java.util.Iterator iterator() -> iterator
    26:26:int access$1(org.eclipse.xtext.xbase.lib.IntegerRange) -> access$1
    28:28:int access$2(org.eclipse.xtext.xbase.lib.IntegerRange) -> access$2
    27:27:int access$3(org.eclipse.xtext.xbase.lib.IntegerRange) -> access$3
org.eclipse.xtext.xbase.lib.IntegerRange$RangeIterator -> org.eclipse.xtext.xbase.lib.IntegerRange$RangeIterator:
    int next -> next
    int nextIndex -> nextIndex
    org.eclipse.xtext.xbase.lib.IntegerRange this$0 -> this$0
    142:145:boolean hasNext() -> hasNext
    149:155:java.lang.Integer next() -> next
    159:159:boolean hasPrevious() -> hasPrevious
    163:167:java.lang.Integer previous() -> previous
    171:171:int nextIndex() -> nextIndex
    175:175:int previousIndex() -> previousIndex
    179:179:void remove() -> remove
    183:183:void set(java.lang.Integer) -> set
    187:187:void add(java.lang.Integer) -> add
    1:1:java.lang.Object next() -> next
    1:1:java.lang.Object previous() -> previous
    1:1:void add(java.lang.Object) -> add
    1:1:void set(java.lang.Object) -> set
org.eclipse.xtext.xbase.lib.IterableExtensions -> org.eclipse.xtext.xbase.lib.IterableExtensions:
    67:67:java.lang.Iterable operator_plus(java.lang.Iterable,java.lang.Iterable) -> operator_plus
    82:88:java.lang.Object findFirst(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> findFirst
    103:120:java.lang.Object findLast(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> findLast
    132:135:java.lang.Object head(java.lang.Iterable) -> head
    147:147:java.lang.Iterable tail(java.lang.Iterable) -> tail
    158:173:java.lang.Object last(java.lang.Iterable) -> last
    189:196:java.lang.Iterable take(java.lang.Iterable,int) -> take
    231:238:java.lang.Iterable drop(java.lang.Iterable,int) -> drop
    273:279:boolean exists(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> exists
    294:300:boolean forall(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> forall
    316:316:java.lang.Iterable filter(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> filter
    336:336:java.lang.Iterable filter(java.lang.Iterable,java.lang.Class) -> filter
    348:348:java.lang.Iterable filterNull(java.lang.Iterable) -> filterNull
    367:367:java.lang.Iterable map(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> map
    384:384:java.lang.Iterable flatten(java.lang.Iterable) -> flatten
    396:401:void forEach(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Procedures$Procedure1) -> forEach
    415:423:void forEach(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Procedures$Procedure2) -> forEach
    434:434:java.lang.String join(java.lang.Iterable) -> join
    450:450:java.lang.String join(java.lang.Iterable,java.lang.CharSequence) -> join
    470:483:java.lang.String join(java.lang.Iterable,java.lang.CharSequence,org.eclipse.xtext.xbase.lib.Functions$Function1) -> join
    507:523:java.lang.String join(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,org.eclipse.xtext.xbase.lib.Functions$Function1) -> join
    538:538:boolean elementsEqual(java.lang.Iterable,java.lang.Iterable) -> elementsEqual
    549:549:boolean isNullOrEmpty(java.lang.Iterable) -> isNullOrEmpty
    561:563:boolean isEmpty(java.lang.Iterable) -> isEmpty
    574:574:int size(java.lang.Iterable) -> size
    603:613:java.lang.Object reduce(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function2) -> reduce
    650:655:java.lang.Object fold(java.lang.Iterable,java.lang.Object,org.eclipse.xtext.xbase.lib.Functions$Function2) -> fold
    670:674:java.util.List toList(java.lang.Iterable) -> toList
    689:693:java.util.Set toSet(java.lang.Iterable) -> toSet
    709:713:java.util.Map toInvertedMap(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> toInvertedMap
    729:735:java.util.Map toMap(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> toMap
    751:751:java.util.List sort(java.lang.Iterable) -> sort
    770:770:java.util.List sort(java.lang.Iterable,java.util.Comparator) -> sort
    788:788:java.util.List sortBy(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1) -> sortBy
org.eclipse.xtext.xbase.lib.IterableExtensions$1 -> org.eclipse.xtext.xbase.lib.IterableExtensions$1:
    int val$count -> val$count
    java.lang.Iterable val$iterable -> val$iterable
    198:198:java.util.Iterator iterator() -> iterator
org.eclipse.xtext.xbase.lib.IterableExtensions$1$1 -> org.eclipse.xtext.xbase.lib.IterableExtensions$1$1:
    int remaining -> remaining
    java.util.Iterator delegate -> delegate
    org.eclipse.xtext.xbase.lib.IterableExtensions$1 this$1 -> this$1
    206:211:java.lang.Object computeNext() -> computeNext
org.eclipse.xtext.xbase.lib.IterableExtensions$2 -> org.eclipse.xtext.xbase.lib.IterableExtensions$2:
    java.lang.Iterable val$iterable -> val$iterable
    int val$count -> val$count
    240:240:java.util.Iterator iterator() -> iterator
org.eclipse.xtext.xbase.lib.IterableExtensions$2$1 -> org.eclipse.xtext.xbase.lib.IterableExtensions$2$1:
    java.util.Iterator delegate -> delegate
    org.eclipse.xtext.xbase.lib.IterableExtensions$2 this$1 -> this$1
    254:256:java.lang.Object computeNext() -> computeNext
org.eclipse.xtext.xbase.lib.IteratorExtensions -> org.eclipse.xtext.xbase.lib.IteratorExtensions:
    46:48:java.lang.Iterable toIterable(java.util.Iterator) -> toIterable
    75:75:java.util.Iterator operator_plus(java.util.Iterator,java.util.Iterator) -> operator_plus
    90:97:java.lang.Object findFirst(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function1) -> findFirst
    112:120:java.lang.Object findLast(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function1) -> findLast
    131:133:java.lang.Object head(java.util.Iterator) -> head
    145:145:java.util.Iterator tail(java.util.Iterator) -> tail
    156:160:java.lang.Object last(java.util.Iterator) -> last
    176:183:java.util.Iterator take(java.util.Iterator,int) -> take
    211:218:java.util.Iterator drop(java.util.Iterator,int) -> drop
    246:252:boolean exists(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function1) -> exists
    267:273:boolean forall(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function1) -> forall
    289:289:java.util.Iterator filter(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function1) -> filter
    308:308:java.util.Iterator filter(java.util.Iterator,java.lang.Class) -> filter
    321:321:java.util.Iterator filterNull(java.util.Iterator) -> filterNull
    339:339:java.util.Iterator map(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function1) -> map
    351:356:void forEach(java.util.Iterator,org.eclipse.xtext.xbase.lib.Procedures$Procedure1) -> forEach
    369:377:void forEach(java.util.Iterator,org.eclipse.xtext.xbase.lib.Procedures$Procedure2) -> forEach
    389:389:java.lang.String join(java.util.Iterator) -> join
    405:405:java.lang.String join(java.util.Iterator,java.lang.CharSequence) -> join
    425:437:java.lang.String join(java.util.Iterator,java.lang.CharSequence,org.eclipse.xtext.xbase.lib.Functions$Function1) -> join
    461:476:java.lang.String join(java.util.Iterator,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,org.eclipse.xtext.xbase.lib.Functions$Function1) -> join
    491:491:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    506:506:boolean elementsEqual(java.util.Iterator,java.lang.Iterable) -> elementsEqual
    517:517:boolean isNullOrEmpty(java.util.Iterator) -> isNullOrEmpty
    529:529:boolean isEmpty(java.util.Iterator) -> isEmpty
    541:541:int size(java.util.Iterator) -> size
    570:579:java.lang.Object reduce(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function2) -> reduce
    616:620:java.lang.Object fold(java.util.Iterator,java.lang.Object,org.eclipse.xtext.xbase.lib.Functions$Function2) -> fold
    631:631:java.util.List toList(java.util.Iterator) -> toList
    643:643:java.util.Set toSet(java.util.Iterator) -> toSet
    660:665:java.util.Map toInvertedMap(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function1) -> toInvertedMap
    681:688:java.util.Map toMap(java.util.Iterator,org.eclipse.xtext.xbase.lib.Functions$Function1) -> toMap
org.eclipse.xtext.xbase.lib.IteratorExtensions$1 -> org.eclipse.xtext.xbase.lib.IteratorExtensions$1:
    java.util.Iterator val$iterator -> val$iterator
    50:50:java.util.Iterator iterator() -> iterator
org.eclipse.xtext.xbase.lib.IteratorExtensions$2 -> org.eclipse.xtext.xbase.lib.IteratorExtensions$2:
    int remaining -> remaining
    java.util.Iterator val$iterator -> val$iterator
    189:194:java.lang.Object computeNext() -> computeNext
org.eclipse.xtext.xbase.lib.IteratorExtensions$3 -> org.eclipse.xtext.xbase.lib.IteratorExtensions$3:
    java.util.Iterator val$iterator -> val$iterator
    229:231:java.lang.Object computeNext() -> computeNext
org.eclipse.xtext.xbase.lib.ListExtensions -> org.eclipse.xtext.xbase.lib.ListExtensions:
    44:45:java.util.List sortInplace(java.util.List) -> sortInplace
    62:63:java.util.List sortInplace(java.util.List,java.util.Comparator) -> sortInplace
    79:89:java.util.List sortInplaceBy(java.util.List,org.eclipse.xtext.xbase.lib.Functions$Function1) -> sortInplaceBy
    102:102:java.util.List reverseView(java.util.List) -> reverseView
    115:116:java.util.List reverse(java.util.List) -> reverse
    134:134:java.util.List map(java.util.List,org.eclipse.xtext.xbase.lib.Functions$Function1) -> map
org.eclipse.xtext.xbase.lib.ListExtensions$1 -> org.eclipse.xtext.xbase.lib.ListExtensions$1:
    org.eclipse.xtext.xbase.lib.Functions$Function1 val$key -> val$key
    83:85:int compare(java.lang.Object,java.lang.Object) -> compare
org.eclipse.xtext.xbase.lib.LongExtensions -> org.eclipse.xtext.xbase.lib.LongExtensions:
    33:33:long bitwiseOr(long,long) -> bitwiseOr
    48:48:long bitwiseXor(long,long) -> bitwiseXor
    63:63:long bitwiseAnd(long,long) -> bitwiseAnd
    76:76:long bitwiseNot(long) -> bitwiseNot
    94:94:long shiftLeft(long,int) -> shiftLeft
    110:110:long operator_doubleLessThan(long,int) -> operator_doubleLessThan
    128:128:long shiftRight(long,int) -> shiftRight
    144:144:long operator_doubleGreaterThan(long,int) -> operator_doubleGreaterThan
    162:162:long shiftRightUnsigned(long,int) -> shiftRightUnsigned
    178:178:long operator_tripleGreaterThan(long,int) -> operator_tripleGreaterThan
    192:192:long operator_minus(long) -> operator_minus
    204:204:long operator_minusMinus(long) -> operator_minusMinus
    216:216:java.lang.Long operator_minusMinus(java.lang.Long) -> operator_minusMinus
    228:228:long operator_plusPlus(long) -> operator_plusPlus
    240:240:java.lang.Long operator_plusPlus(java.lang.Long) -> operator_plusPlus
    253:253:double operator_plus(long,double) -> operator_plus
    267:267:double operator_minus(long,double) -> operator_minus
    281:281:double operator_multiply(long,double) -> operator_multiply
    295:295:double operator_divide(long,double) -> operator_divide
    309:309:double operator_modulo(long,double) -> operator_modulo
    323:323:boolean operator_lessThan(long,double) -> operator_lessThan
    337:337:boolean operator_lessEqualsThan(long,double) -> operator_lessEqualsThan
    351:351:boolean operator_greaterThan(long,double) -> operator_greaterThan
    365:365:boolean operator_greaterEqualsThan(long,double) -> operator_greaterEqualsThan
    379:379:boolean operator_equals(long,double) -> operator_equals
    393:393:boolean operator_notEquals(long,double) -> operator_notEquals
    407:407:double operator_power(long,double) -> operator_power
    422:422:boolean operator_tripleEquals(long,double) -> operator_tripleEquals
    437:437:boolean operator_tripleNotEquals(long,double) -> operator_tripleNotEquals
    451:451:float operator_plus(long,float) -> operator_plus
    465:465:float operator_minus(long,float) -> operator_minus
    479:479:float operator_multiply(long,float) -> operator_multiply
    493:493:float operator_divide(long,float) -> operator_divide
    507:507:float operator_modulo(long,float) -> operator_modulo
    521:521:boolean operator_lessThan(long,float) -> operator_lessThan
    535:535:boolean operator_lessEqualsThan(long,float) -> operator_lessEqualsThan
    549:549:boolean operator_greaterThan(long,float) -> operator_greaterThan
    563:563:boolean operator_greaterEqualsThan(long,float) -> operator_greaterEqualsThan
    577:577:boolean operator_equals(long,float) -> operator_equals
    591:591:boolean operator_notEquals(long,float) -> operator_notEquals
    605:605:double operator_power(long,float) -> operator_power
    620:620:boolean operator_tripleEquals(long,float) -> operator_tripleEquals
    635:635:boolean operator_tripleNotEquals(long,float) -> operator_tripleNotEquals
    649:649:long operator_plus(long,long) -> operator_plus
    663:663:long operator_minus(long,long) -> operator_minus
    677:677:long operator_multiply(long,long) -> operator_multiply
    691:691:long operator_divide(long,long) -> operator_divide
    705:705:long operator_modulo(long,long) -> operator_modulo
    719:719:boolean operator_lessThan(long,long) -> operator_lessThan
    733:733:boolean operator_lessEqualsThan(long,long) -> operator_lessEqualsThan
    747:747:boolean operator_greaterThan(long,long) -> operator_greaterThan
    761:761:boolean operator_greaterEqualsThan(long,long) -> operator_greaterEqualsThan
    775:775:boolean operator_equals(long,long) -> operator_equals
    789:789:boolean operator_notEquals(long,long) -> operator_notEquals
    803:803:double operator_power(long,long) -> operator_power
    818:818:boolean operator_tripleEquals(long,long) -> operator_tripleEquals
    833:833:boolean operator_tripleNotEquals(long,long) -> operator_tripleNotEquals
    847:847:long operator_plus(long,int) -> operator_plus
    861:861:long operator_minus(long,int) -> operator_minus
    875:875:long operator_multiply(long,int) -> operator_multiply
    889:889:long operator_divide(long,int) -> operator_divide
    903:903:long operator_modulo(long,int) -> operator_modulo
    917:917:boolean operator_lessThan(long,int) -> operator_lessThan
    931:931:boolean operator_lessEqualsThan(long,int) -> operator_lessEqualsThan
    945:945:boolean operator_greaterThan(long,int) -> operator_greaterThan
    959:959:boolean operator_greaterEqualsThan(long,int) -> operator_greaterEqualsThan
    973:973:boolean operator_equals(long,int) -> operator_equals
    987:987:boolean operator_notEquals(long,int) -> operator_notEquals
    1001:1001:double operator_power(long,int) -> operator_power
    1016:1016:boolean operator_tripleEquals(long,int) -> operator_tripleEquals
    1031:1031:boolean operator_tripleNotEquals(long,int) -> operator_tripleNotEquals
    1045:1045:long operator_plus(long,char) -> operator_plus
    1059:1059:long operator_minus(long,char) -> operator_minus
    1073:1073:long operator_multiply(long,char) -> operator_multiply
    1087:1087:long operator_divide(long,char) -> operator_divide
    1101:1101:long operator_modulo(long,char) -> operator_modulo
    1115:1115:boolean operator_lessThan(long,char) -> operator_lessThan
    1129:1129:boolean operator_lessEqualsThan(long,char) -> operator_lessEqualsThan
    1143:1143:boolean operator_greaterThan(long,char) -> operator_greaterThan
    1157:1157:boolean operator_greaterEqualsThan(long,char) -> operator_greaterEqualsThan
    1171:1171:boolean operator_equals(long,char) -> operator_equals
    1185:1185:boolean operator_notEquals(long,char) -> operator_notEquals
    1199:1199:double operator_power(long,char) -> operator_power
    1214:1214:boolean operator_tripleEquals(long,char) -> operator_tripleEquals
    1229:1229:boolean operator_tripleNotEquals(long,char) -> operator_tripleNotEquals
    1243:1243:long operator_plus(long,short) -> operator_plus
    1257:1257:long operator_minus(long,short) -> operator_minus
    1271:1271:long operator_multiply(long,short) -> operator_multiply
    1285:1285:long operator_divide(long,short) -> operator_divide
    1299:1299:long operator_modulo(long,short) -> operator_modulo
    1313:1313:boolean operator_lessThan(long,short) -> operator_lessThan
    1327:1327:boolean operator_lessEqualsThan(long,short) -> operator_lessEqualsThan
    1341:1341:boolean operator_greaterThan(long,short) -> operator_greaterThan
    1355:1355:boolean operator_greaterEqualsThan(long,short) -> operator_greaterEqualsThan
    1369:1369:boolean operator_equals(long,short) -> operator_equals
    1383:1383:boolean operator_notEquals(long,short) -> operator_notEquals
    1397:1397:double operator_power(long,short) -> operator_power
    1412:1412:boolean operator_tripleEquals(long,short) -> operator_tripleEquals
    1427:1427:boolean operator_tripleNotEquals(long,short) -> operator_tripleNotEquals
    1441:1441:long operator_plus(long,byte) -> operator_plus
    1455:1455:long operator_minus(long,byte) -> operator_minus
    1469:1469:long operator_multiply(long,byte) -> operator_multiply
    1483:1483:long operator_divide(long,byte) -> operator_divide
    1497:1497:long operator_modulo(long,byte) -> operator_modulo
    1511:1511:boolean operator_lessThan(long,byte) -> operator_lessThan
    1525:1525:boolean operator_lessEqualsThan(long,byte) -> operator_lessEqualsThan
    1539:1539:boolean operator_greaterThan(long,byte) -> operator_greaterThan
    1553:1553:boolean operator_greaterEqualsThan(long,byte) -> operator_greaterEqualsThan
    1567:1567:boolean operator_equals(long,byte) -> operator_equals
    1581:1581:boolean operator_notEquals(long,byte) -> operator_notEquals
    1595:1595:double operator_power(long,byte) -> operator_power
    1610:1610:boolean operator_tripleEquals(long,byte) -> operator_tripleEquals
    1625:1625:boolean operator_tripleNotEquals(long,byte) -> operator_tripleNotEquals
org.eclipse.xtext.xbase.lib.MapExtensions -> org.eclipse.xtext.xbase.lib.MapExtensions:
    38:43:void forEach(java.util.Map,org.eclipse.xtext.xbase.lib.Procedures$Procedure2) -> forEach
    56:64:void forEach(java.util.Map,org.eclipse.xtext.xbase.lib.Procedures$Procedure3) -> forEach
    84:86:java.util.Map filter(java.util.Map,org.eclipse.xtext.xbase.lib.Functions$Function2) -> filter
    109:109:java.util.Map mapValues(java.util.Map,org.eclipse.xtext.xbase.lib.Functions$Function1) -> mapValues
org.eclipse.xtext.xbase.lib.MapExtensions$1 -> org.eclipse.xtext.xbase.lib.MapExtensions$1:
    org.eclipse.xtext.xbase.lib.Functions$Function2 val$predicate -> val$predicate
    88:89:boolean apply(java.util.Map$Entry) -> apply
    1:1:boolean apply(java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.ObjectExtensions -> org.eclipse.xtext.xbase.lib.ObjectExtensions:
    33:33:boolean operator_notEquals(java.lang.Object,java.lang.Object) -> operator_notEquals
    49:49:boolean operator_equals(java.lang.Object,java.lang.Object) -> operator_equals
    66:66:boolean identityEquals(java.lang.Object,java.lang.Object) -> identityEquals
    83:83:boolean operator_tripleEquals(java.lang.Object,java.lang.Object) -> operator_tripleEquals
    100:100:boolean operator_tripleNotEquals(java.lang.Object,java.lang.Object) -> operator_tripleNotEquals
    116:116:org.eclipse.xtext.xbase.lib.Pair operator_mappedTo(java.lang.Object,java.lang.Object) -> operator_mappedTo
    139:140:java.lang.Object operator_doubleArrow(java.lang.Object,org.eclipse.xtext.xbase.lib.Procedures$Procedure1) -> operator_doubleArrow
    156:156:java.lang.String operator_plus(java.lang.Object,java.lang.String) -> operator_plus
    179:181:java.lang.Object operator_elvis(java.lang.Object,java.lang.Object) -> operator_elvis
org.eclipse.xtext.xbase.lib.Pair -> org.eclipse.xtext.xbase.lib.Pair:
    java.lang.Object k -> k
    java.lang.Object v -> v
    41:41:org.eclipse.xtext.xbase.lib.Pair of(java.lang.Object,java.lang.Object) -> of
    66:66:java.lang.Object getKey() -> getKey
    76:76:java.lang.Object getValue() -> getValue
    81:86:boolean equals(java.lang.Object) -> equals
    91:91:int hashCode() -> hashCode
    96:96:java.lang.String toString() -> toString
org.eclipse.xtext.xbase.lib.ProcedureExtensions -> org.eclipse.xtext.xbase.lib.ProcedureExtensions:
    39:41:org.eclipse.xtext.xbase.lib.Procedures$Procedure0 curry(org.eclipse.xtext.xbase.lib.Procedures$Procedure1,java.lang.Object) -> curry
    59:61:org.eclipse.xtext.xbase.lib.Procedures$Procedure1 curry(org.eclipse.xtext.xbase.lib.Procedures$Procedure2,java.lang.Object) -> curry
    79:81:org.eclipse.xtext.xbase.lib.Procedures$Procedure2 curry(org.eclipse.xtext.xbase.lib.Procedures$Procedure3,java.lang.Object) -> curry
    100:102:org.eclipse.xtext.xbase.lib.Procedures$Procedure3 curry(org.eclipse.xtext.xbase.lib.Procedures$Procedure4,java.lang.Object) -> curry
    121:123:org.eclipse.xtext.xbase.lib.Procedures$Procedure4 curry(org.eclipse.xtext.xbase.lib.Procedures$Procedure5,java.lang.Object) -> curry
    142:144:org.eclipse.xtext.xbase.lib.Procedures$Procedure5 curry(org.eclipse.xtext.xbase.lib.Procedures$Procedure6,java.lang.Object) -> curry
org.eclipse.xtext.xbase.lib.ProcedureExtensions$1 -> org.eclipse.xtext.xbase.lib.ProcedureExtensions$1:
    org.eclipse.xtext.xbase.lib.Procedures$Procedure1 val$procedure -> val$procedure
    java.lang.Object val$argument -> val$argument
    43:44:void apply() -> apply
org.eclipse.xtext.xbase.lib.ProcedureExtensions$2 -> org.eclipse.xtext.xbase.lib.ProcedureExtensions$2:
    org.eclipse.xtext.xbase.lib.Procedures$Procedure2 val$procedure -> val$procedure
    java.lang.Object val$argument -> val$argument
    63:64:void apply(java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.ProcedureExtensions$3 -> org.eclipse.xtext.xbase.lib.ProcedureExtensions$3:
    org.eclipse.xtext.xbase.lib.Procedures$Procedure3 val$procedure -> val$procedure
    java.lang.Object val$argument -> val$argument
    83:84:void apply(java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.ProcedureExtensions$4 -> org.eclipse.xtext.xbase.lib.ProcedureExtensions$4:
    org.eclipse.xtext.xbase.lib.Procedures$Procedure4 val$procedure -> val$procedure
    java.lang.Object val$argument -> val$argument
    104:105:void apply(java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.ProcedureExtensions$5 -> org.eclipse.xtext.xbase.lib.ProcedureExtensions$5:
    org.eclipse.xtext.xbase.lib.Procedures$Procedure5 val$procedure -> val$procedure
    java.lang.Object val$argument -> val$argument
    125:126:void apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.ProcedureExtensions$6 -> org.eclipse.xtext.xbase.lib.ProcedureExtensions$6:
    org.eclipse.xtext.xbase.lib.Procedures$Procedure6 val$procedure -> val$procedure
    java.lang.Object val$argument -> val$argument
    146:147:void apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Procedures -> org.eclipse.xtext.xbase.lib.Procedures:
org.eclipse.xtext.xbase.lib.Procedures$Procedure0 -> org.eclipse.xtext.xbase.lib.Procedures$Procedure0:
    void apply() -> apply
org.eclipse.xtext.xbase.lib.Procedures$Procedure1 -> org.eclipse.xtext.xbase.lib.Procedures$Procedure1:
    void apply(java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Procedures$Procedure2 -> org.eclipse.xtext.xbase.lib.Procedures$Procedure2:
    void apply(java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Procedures$Procedure3 -> org.eclipse.xtext.xbase.lib.Procedures$Procedure3:
    void apply(java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Procedures$Procedure4 -> org.eclipse.xtext.xbase.lib.Procedures$Procedure4:
    void apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Procedures$Procedure5 -> org.eclipse.xtext.xbase.lib.Procedures$Procedure5:
    void apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Procedures$Procedure6 -> org.eclipse.xtext.xbase.lib.Procedures$Procedure6:
    void apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.Pure -> org.eclipse.xtext.xbase.lib.Pure:
org.eclipse.xtext.xbase.lib.ReassignFirstArgument -> org.eclipse.xtext.xbase.lib.ReassignFirstArgument:
org.eclipse.xtext.xbase.lib.ShortExtensions -> org.eclipse.xtext.xbase.lib.ShortExtensions:
    31:31:int operator_minus(short) -> operator_minus
    43:43:short operator_minusMinus(short) -> operator_minusMinus
    55:55:java.lang.Short operator_minusMinus(java.lang.Short) -> operator_minusMinus
    67:67:short operator_plusPlus(short) -> operator_plusPlus
    79:79:java.lang.Short operator_plusPlus(java.lang.Short) -> operator_plusPlus
    92:92:double operator_plus(short,double) -> operator_plus
    106:106:double operator_minus(short,double) -> operator_minus
    120:120:double operator_multiply(short,double) -> operator_multiply
    134:134:double operator_divide(short,double) -> operator_divide
    148:148:double operator_modulo(short,double) -> operator_modulo
    162:162:boolean operator_lessThan(short,double) -> operator_lessThan
    176:176:boolean operator_lessEqualsThan(short,double) -> operator_lessEqualsThan
    190:190:boolean operator_greaterThan(short,double) -> operator_greaterThan
    204:204:boolean operator_greaterEqualsThan(short,double) -> operator_greaterEqualsThan
    218:218:boolean operator_equals(short,double) -> operator_equals
    232:232:boolean operator_notEquals(short,double) -> operator_notEquals
    246:246:double operator_power(short,double) -> operator_power
    261:261:boolean operator_tripleEquals(short,double) -> operator_tripleEquals
    276:276:boolean operator_tripleNotEquals(short,double) -> operator_tripleNotEquals
    290:290:float operator_plus(short,float) -> operator_plus
    304:304:float operator_minus(short,float) -> operator_minus
    318:318:float operator_multiply(short,float) -> operator_multiply
    332:332:float operator_divide(short,float) -> operator_divide
    346:346:float operator_modulo(short,float) -> operator_modulo
    360:360:boolean operator_lessThan(short,float) -> operator_lessThan
    374:374:boolean operator_lessEqualsThan(short,float) -> operator_lessEqualsThan
    388:388:boolean operator_greaterThan(short,float) -> operator_greaterThan
    402:402:boolean operator_greaterEqualsThan(short,float) -> operator_greaterEqualsThan
    416:416:boolean operator_equals(short,float) -> operator_equals
    430:430:boolean operator_notEquals(short,float) -> operator_notEquals
    444:444:double operator_power(short,float) -> operator_power
    459:459:boolean operator_tripleEquals(short,float) -> operator_tripleEquals
    474:474:boolean operator_tripleNotEquals(short,float) -> operator_tripleNotEquals
    488:488:long operator_plus(short,long) -> operator_plus
    502:502:long operator_minus(short,long) -> operator_minus
    516:516:long operator_multiply(short,long) -> operator_multiply
    530:530:long operator_divide(short,long) -> operator_divide
    544:544:long operator_modulo(short,long) -> operator_modulo
    558:558:boolean operator_lessThan(short,long) -> operator_lessThan
    572:572:boolean operator_lessEqualsThan(short,long) -> operator_lessEqualsThan
    586:586:boolean operator_greaterThan(short,long) -> operator_greaterThan
    600:600:boolean operator_greaterEqualsThan(short,long) -> operator_greaterEqualsThan
    614:614:boolean operator_equals(short,long) -> operator_equals
    628:628:boolean operator_notEquals(short,long) -> operator_notEquals
    642:642:double operator_power(short,long) -> operator_power
    657:657:boolean operator_tripleEquals(short,long) -> operator_tripleEquals
    672:672:boolean operator_tripleNotEquals(short,long) -> operator_tripleNotEquals
    686:686:int operator_plus(short,int) -> operator_plus
    700:700:int operator_minus(short,int) -> operator_minus
    714:714:int operator_multiply(short,int) -> operator_multiply
    728:728:int operator_divide(short,int) -> operator_divide
    742:742:int operator_modulo(short,int) -> operator_modulo
    756:756:boolean operator_lessThan(short,int) -> operator_lessThan
    770:770:boolean operator_lessEqualsThan(short,int) -> operator_lessEqualsThan
    784:784:boolean operator_greaterThan(short,int) -> operator_greaterThan
    798:798:boolean operator_greaterEqualsThan(short,int) -> operator_greaterEqualsThan
    812:812:boolean operator_equals(short,int) -> operator_equals
    826:826:boolean operator_notEquals(short,int) -> operator_notEquals
    840:840:double operator_power(short,int) -> operator_power
    855:855:boolean operator_tripleEquals(short,int) -> operator_tripleEquals
    870:870:boolean operator_tripleNotEquals(short,int) -> operator_tripleNotEquals
    884:884:int operator_plus(short,char) -> operator_plus
    898:898:int operator_minus(short,char) -> operator_minus
    912:912:int operator_multiply(short,char) -> operator_multiply
    926:926:int operator_divide(short,char) -> operator_divide
    940:940:int operator_modulo(short,char) -> operator_modulo
    954:954:boolean operator_lessThan(short,char) -> operator_lessThan
    968:968:boolean operator_lessEqualsThan(short,char) -> operator_lessEqualsThan
    982:982:boolean operator_greaterThan(short,char) -> operator_greaterThan
    996:996:boolean operator_greaterEqualsThan(short,char) -> operator_greaterEqualsThan
    1010:1010:boolean operator_equals(short,char) -> operator_equals
    1024:1024:boolean operator_notEquals(short,char) -> operator_notEquals
    1038:1038:double operator_power(short,char) -> operator_power
    1053:1053:boolean operator_tripleEquals(short,char) -> operator_tripleEquals
    1068:1068:boolean operator_tripleNotEquals(short,char) -> operator_tripleNotEquals
    1082:1082:int operator_plus(short,short) -> operator_plus
    1096:1096:int operator_minus(short,short) -> operator_minus
    1110:1110:int operator_multiply(short,short) -> operator_multiply
    1124:1124:int operator_divide(short,short) -> operator_divide
    1138:1138:int operator_modulo(short,short) -> operator_modulo
    1152:1152:boolean operator_lessThan(short,short) -> operator_lessThan
    1166:1166:boolean operator_lessEqualsThan(short,short) -> operator_lessEqualsThan
    1180:1180:boolean operator_greaterThan(short,short) -> operator_greaterThan
    1194:1194:boolean operator_greaterEqualsThan(short,short) -> operator_greaterEqualsThan
    1208:1208:boolean operator_equals(short,short) -> operator_equals
    1222:1222:boolean operator_notEquals(short,short) -> operator_notEquals
    1236:1236:double operator_power(short,short) -> operator_power
    1251:1251:boolean operator_tripleEquals(short,short) -> operator_tripleEquals
    1266:1266:boolean operator_tripleNotEquals(short,short) -> operator_tripleNotEquals
    1280:1280:int operator_plus(short,byte) -> operator_plus
    1294:1294:int operator_minus(short,byte) -> operator_minus
    1308:1308:int operator_multiply(short,byte) -> operator_multiply
    1322:1322:int operator_divide(short,byte) -> operator_divide
    1336:1336:int operator_modulo(short,byte) -> operator_modulo
    1350:1350:boolean operator_lessThan(short,byte) -> operator_lessThan
    1364:1364:boolean operator_lessEqualsThan(short,byte) -> operator_lessEqualsThan
    1378:1378:boolean operator_greaterThan(short,byte) -> operator_greaterThan
    1392:1392:boolean operator_greaterEqualsThan(short,byte) -> operator_greaterEqualsThan
    1406:1406:boolean operator_equals(short,byte) -> operator_equals
    1420:1420:boolean operator_notEquals(short,byte) -> operator_notEquals
    1434:1434:double operator_power(short,byte) -> operator_power
    1449:1449:boolean operator_tripleEquals(short,byte) -> operator_tripleEquals
    1464:1464:boolean operator_tripleNotEquals(short,byte) -> operator_tripleNotEquals
org.eclipse.xtext.xbase.lib.StringExtensions -> org.eclipse.xtext.xbase.lib.StringExtensions:
    33:33:java.lang.String operator_plus(java.lang.String,java.lang.Object) -> operator_plus
    50:50:java.lang.String operator_plus(java.lang.String,java.lang.String) -> operator_plus
    62:62:boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    76:82:java.lang.String toFirstUpper(java.lang.String) -> toFirstUpper
    96:102:java.lang.String toFirstLower(java.lang.String) -> toFirstLower
org.eclipse.xtext.xbase.lib.internal.BooleanFunctionDelegate -> org.eclipse.xtext.xbase.lib.internal.BooleanFunctionDelegate:
    org.eclipse.xtext.xbase.lib.Functions$Function1 delegate -> delegate
    40:41:boolean apply(java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.internal.FunctionDelegate -> org.eclipse.xtext.xbase.lib.internal.FunctionDelegate:
    org.eclipse.xtext.xbase.lib.Functions$Function1 delegate -> delegate
    41:42:java.lang.Object apply(java.lang.Object) -> apply
org.eclipse.xtext.xbase.lib.internal.ToStringHelper -> org.eclipse.xtext.xbase.lib.internal.ToStringHelper:
org.eclipse.xtext.xbase.lib.slim.Fake -> org.eclipse.xtext.xbase.lib.slim.Fake:
org.eclipse.xtext.xbase.lib.util.ReflectExtensions -> org.eclipse.xtext.xbase.lib.util.ReflectExtensions:
    40:47:void set(java.lang.Object,java.lang.String,java.lang.Object) -> set
    64:71:java.lang.Object get(java.lang.Object,java.lang.String) -> get
    75:86:java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String) -> getDeclaredField
    106:132:java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Object[]) -> invoke
    136:148:boolean isCompatible(java.lang.reflect.Method,java.lang.String,java.lang.Object[]) -> isCompatible
    152:162:java.lang.Class wrapperTypeFor(java.lang.Class) -> wrapperTypeFor
org.eclipse.xtext.xbase.lib.util.ToStringHelper -> org.eclipse.xtext.xbase.lib.util.ToStringHelper:
    java.lang.ThreadLocal currentlyProcessed -> currentlyProcessed
    83:84:boolean startProcessing(java.lang.Object) -> startProcessing
    88:90:void endProcessing(java.lang.Object) -> endProcessing
    99:119:java.lang.String toString(java.lang.Object) -> toString
    124:124:java.lang.String toSimpleReferenceString(java.lang.Object) -> toSimpleReferenceString
    134:144:void addField(java.lang.reflect.Field,java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringHelper$IndentationAwareStringBuilder) -> addField
    152:196:void internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringHelper$IndentationAwareStringBuilder) -> internalToString
    205:210:java.util.List getAllDeclaredFields(java.lang.Class) -> getAllDeclaredFields
org.eclipse.xtext.xbase.lib.util.ToStringHelper$1 -> org.eclipse.xtext.xbase.lib.util.ToStringHelper$1:
    75:75:java.util.IdentityHashMap initialValue() -> initialValue
    1:1:java.lang.Object initialValue() -> initialValue
org.eclipse.xtext.xbase.lib.util.ToStringHelper$IndentationAwareStringBuilder -> org.eclipse.xtext.xbase.lib.util.ToStringHelper$IndentationAwareStringBuilder:
    java.lang.StringBuilder builder -> builder
    int indentation -> indentation
    java.lang.String indentationString -> indentationString
    java.lang.String newLineString -> newLineString
    41:42:org.eclipse.xtext.xbase.lib.util.ToStringHelper$IndentationAwareStringBuilder increaseIndent() -> increaseIndent
    46:47:org.eclipse.xtext.xbase.lib.util.ToStringHelper$IndentationAwareStringBuilder decreaseIndent() -> decreaseIndent
    51:58:org.eclipse.xtext.xbase.lib.util.ToStringHelper$IndentationAwareStringBuilder append(java.lang.CharSequence) -> append
    62:63:org.eclipse.xtext.xbase.lib.util.ToStringHelper$IndentationAwareStringBuilder newLine() -> newLine
    68:68:java.lang.String toString() -> toString
