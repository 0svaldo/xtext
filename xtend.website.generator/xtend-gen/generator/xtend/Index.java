package generator.xtend;

import generator.xtend.AbstractXtendWebsite;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class Index extends AbstractXtendWebsite {
  public String path() {
    return "index.html";
  }
  
  protected boolean isPrettyPrint() {
    return true;
  }
  
  public CharSequence quickLinksAndTweets() {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _quickLinksAndTweets = super.quickLinksAndTweets();
    _builder.append(_quickLinksAndTweets, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<a href=\"http://dryicons.com/\">Icons by http://dryicons.com</a>");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence contents() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    _builder.append("<!--Container-->");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div id=\"header_wrapper\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div class=\"container\"> ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<div class=\"flexslider image-slider\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<div class=\"span6\" style=\"margin-left:7px;\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<h2 class=\"front-title\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Java 10, today!");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</h2>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<br />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<p>Xtend is a flexible and expressive dialect of Java, which compiles into readable Java&nbsp;5 compatible source code. ");
    _builder.newLine();
    _builder.append("\t\t\t   ");
    _builder.append("You can use any existing Java library seamlessly. The compiled output is readable ");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("and pretty-printed, and tends to run as fast as the equivalent");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("handwritten Java code.</p>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<p>Get productive and write beautiful code with <a href=\"documentation.html#activeAnnotations\">powerful macros</a>, <a href=\"documentation.html#lambdas\">lambdas</a>, <a href=\"documentation.html#operators\">operator overloading</a> and many more modern language features.</p>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<a href=\"download.html\" class=\"btn_download\"></a>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<a href=\"documentation.html\" class=\"btn_documentation\"></a>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<div class=\"span4\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<iframe class=\"embedded-video\" src=\"http://player.vimeo.com/video/31248257?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("</div>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("<div id=\"intro\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div class=\"container\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<h1>Get the New Release!</h1>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<p style=\"font-family: \'Lato\', sans-serif; font-size: 16px; font-weight: 300; color: #fff;word-spacing: 3px;\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Get the new release and learn how to write efficient <a href=\"releasenotes_2_4.html#android_development\">Android applications</a> without the tedious boiler-plate code.<br/>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Leverage the full power of Xtend by enhancing the compiler with <a href=\"documentation.html#activeAnnotations\">Active Annotations</a> a unique macro system for Java.<br/>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Enjoy the many new IDE and language features and the much improved type inference algorithm. Read the <a href=\"releasenotes_2_4.html\">full release notes</a>.</p>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("</div>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("<div id=\"features\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div class=\"container\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<div class=\"row\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<br/>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<br />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<div class=\"span6 float\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span2\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<img src=\"images/android_logo.png\" alt=\"Android\" />");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span3\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<h4>Android Development</h4>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<p>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Xtend works great on Android, as it doesn\'t produce additional runtime overhead.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("The very thin lib and the advanced support for code generation are increasing productivity");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("while helping to keep your Android apps small.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</p>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<div class=\"span6 float\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span2\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<img src=\"images/gwt-logo.png\" alt=\"Google Web Toolkit\" />");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span3\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<h4>Web Development</h4>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<p>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("The Google Web Toolkit translates Java source code to fast Javascript code. Xtend makes typical");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("GWT programming a joy. There are many nice examples and cool enhancements <a href=\"https://github.com/DJCordhose/todomvc-xtend-gwt\">out there</a>.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</p>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<div class=\"span6 float\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span2\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<img src=\"images/Java_Duke_learning.png\" alt=\"Java FX\" />");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span3\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<h4>Fast Learning Curve!</h4>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<p>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("If you know Java, you will be productive with Xtend in a few hours.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Xtend is an extension to Java, so you can reuse all your knowledge about tools and libraries.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Also complicated language features like Generics remain unchanged.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</p>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<div class=\"span6 float\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span2\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<img src=\"images/eclipse_logo.png\" alt=\"Eclipse\" />");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span3\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<h4>Advanced IDE Support</h4>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<p>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Static typing is not only important for early error detection but even more so for good IDE support.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("To ensure a great and holistic user experience, Xtend\'s IDE and language have been designed side by side. And of course");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("the tools integrate seamlessly with the Eclipse Java IDE. ");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</p>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<div class=\"span6 float\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span2\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<img src=\"images/java8_logo.png\" alt=\"Java FX\" />");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span3\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<h4>Java 8 Ready</h4>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<p>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Xtend works well with Java 8 APIs as it does the same kind of target typing coercion for lambdas.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("With its additional syntactical flexibility of course Xtend code looks much better than the equivalent Java 8 code.");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<a href=\"http://blog.efftinge.de/2012/12/java-8-vs-xtend.html\">Here\'s are some examples</a>. ");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</p>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<div class=\"span6 float\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span2\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<img src=\"images/javafx_logo.jpg\" alt=\"Java FX\" />");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<div class=\"span3\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<h4>XtendFX</h4>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<p>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("UI programming in Java can be very tedious. ");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Checkout the <a href=\"https://github.com/svenefftinge/xtendfx\">XtendFX project</a> to see how you can get rid of");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Java boiler plate easily. It contains some very useful <a href=\"http://www.eclipse.org/xtend/documentation.html#activeAnnotations\">active annotations</a> for ");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("automatically generating JavaFX properties. ");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</p>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("</div>");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence comparison() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<div id=\"comparison\">");
    _builder.newLine();
    _builder.append("<div class=\"container\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div class=\"span12\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<br/> <br/>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<h1 align=\"center\">Code Comparison</h1>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<br/>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<table class=\"span12 table table-striped\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t  ");
    _builder.append("<th style=\"width:20%;\"></th>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<th style=\"width:40%;\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<h2 style=\"text-align:center;\">Xtend</h2>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</th>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<th style=\"width:40%;\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<h2 style=\"text-align:center;\">Java</h2>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</th>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<tbody>");
    _builder.newLine();
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("myStrings.filter[ length > 5 ]");
    _builder_1.newLine();
    StringConcatenation _builder_2 = new StringConcatenation();
    _builder_2.append("Iterables.filter(myStrings, new Predicate<String>() {");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("public boolean apply(String it) {");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("return it.length() > 5;");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("});");
    _builder_2.newLine();
    CharSequence _compare = this.compare("Google Guava", _builder_1.toString(), _builder_2.toString());
    _builder.append(_compare, "");
    _builder.newLineIfNotEmpty();
    StringConcatenation _builder_3 = new StringConcatenation();
    _builder_3.append("myStrings.filter[ length > 5 ]");
    _builder_3.newLine();
    StringConcatenation _builder_4 = new StringConcatenation();
    _builder_4.append("Iterables.filter(myStrings, new Predicate<String>() {");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("public boolean apply(String it) {");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("return it.length() > 5;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.append("}");
    _builder_4.newLine();
    CharSequence _compare_1 = this.compare("Java FX", _builder_3.toString(), _builder_4.toString());
    _builder.append(_compare_1, "");
    _builder.newLineIfNotEmpty();
    StringConcatenation _builder_5 = new StringConcatenation();
    _builder_5.append("myStrings.filter[ length > 5 ]");
    _builder_5.newLine();
    StringConcatenation _builder_6 = new StringConcatenation();
    _builder_6.append("Iterables.filter(myStrings, new Predicate<String>() {");
    _builder_6.newLine();
    _builder_6.append("\t");
    _builder_6.append("public boolean apply(String it) {");
    _builder_6.newLine();
    _builder_6.append("\t\t");
    _builder_6.append("return it.length() > 5;");
    _builder_6.newLine();
    _builder_6.append("\t");
    _builder_6.append("}");
    _builder_6.newLine();
    _builder_6.append("}");
    _builder_6.newLine();
    CharSequence _compare_2 = this.compare("Android", _builder_5.toString(), _builder_6.toString());
    _builder.append(_compare_2, "");
    _builder.newLineIfNotEmpty();
    StringConcatenation _builder_7 = new StringConcatenation();
    _builder_7.append("myStrings.filter[ length > 5 ]");
    _builder_7.newLine();
    StringConcatenation _builder_8 = new StringConcatenation();
    _builder_8.append("Iterables.filter(myStrings, new Predicate<String>() {");
    _builder_8.newLine();
    _builder_8.append("\t");
    _builder_8.append("public boolean apply(String it) {");
    _builder_8.newLine();
    _builder_8.append("\t\t");
    _builder_8.append("return it.length() > 5;");
    _builder_8.newLine();
    _builder_8.append("\t");
    _builder_8.append("}");
    _builder_8.newLine();
    _builder_8.append("}");
    _builder_8.newLine();
    CharSequence _compare_3 = this.compare("GWT", _builder_7.toString(), _builder_8.toString());
    _builder.append(_compare_3, "");
    _builder.newLineIfNotEmpty();
    StringConcatenation _builder_9 = new StringConcatenation();
    _builder_9.append("myStrings.filter[ length > 5 ]");
    _builder_9.newLine();
    StringConcatenation _builder_10 = new StringConcatenation();
    _builder_10.append("Iterables.filter(myStrings, new Predicate<String>() {");
    _builder_10.newLine();
    _builder_10.append("\t");
    _builder_10.append("public boolean apply(String it) {");
    _builder_10.newLine();
    _builder_10.append("\t\t");
    _builder_10.append("return it.length() > 5;");
    _builder_10.newLine();
    _builder_10.append("\t");
    _builder_10.append("}");
    _builder_10.newLine();
    _builder_10.append("});");
    _builder_10.newLine();
    CharSequence _compare_4 = this.compare("Java EE", _builder_9.toString(), _builder_10.toString());
    _builder.append(_compare_4, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("</div>");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compare(final String framework, final String xtendCode, final String javaCode) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<td><h2>");
    _builder.append(framework, "		");
    _builder.append("</h2></td>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<td class=\"code\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<pre class=\"prettyprint lang-Xtend\" >");
    _builder.newLine();
    String _trim = xtendCode.trim();
    _builder.append(_trim, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("</pre>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("\t \t");
    _builder.append("<td class=\"code\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<pre class=\"prettyprint lang-Java\" >");
    _builder.newLine();
    String _trim_1 = javaCode.trim();
    _builder.append(_trim_1, "");
    _builder.append("</pre>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t \t");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</tr>");
    _builder.newLine();
    return _builder;
  }
}
