chapter:template[Template Language]

Some introdcution

img[images/template_screenshot.png][][][]

Motivation
Why

section:templates_solution[Overview]

Why a DSL
How about expressions
DSL example, Java example, Client code example (if appropriate)

Approx 2 pages upto here

section:templates_running[Running the Example]

Details on how to run it: Prerequisites, additional plugins... 

section:templates_details[Implementation]

section:templates_grammar[Grammar]

code[Xtext][
grammar org.xtext.template.Template with org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations

generate template 'http://www.itemis.de/xtl/XTL'
import 'http://www.eclipse.org/xtext/xbase/Xbase' as xbase
import 'http://www.eclipse.org/emf/2002/Ecore' as ecore

TemplateFile:
	'<!--''«' 
		('package' package=QualifiedName)? 
		imports+=Import* 
		params+=Parameter* 
		body=RichString;

Import:
	'import' importedNamespace=QualifiedName;

Parameter:
	annotations+=XAnnotation* 
	'param' type=JvmTypeReference? name=ID ('=' defaultexp=XExpression)?;

RichString returns xbase::XBlockExpression:
	{RichString}  
	expressions+=RichStringLiteral 
	(expressions+=RichStringPart expressions+=RichStringLiteral)*;

RichStringLiteral returns xbase::XStringLiteral:
	{RichStringLiteral} value=TEXT;

RichStringPart returns xbase::XExpression:
	XExpressionInsideBlock |
	RichStringForLoop |
	RichStringIf;

RichStringForLoop returns xbase::XForLoopExpression:
	{RichStringForLoop}
	"FOR" declaredParam=JvmFormalParameter ':' forExpression=XExpression
		eachExpression=RichString
	"ENDFOR";

RichStringIf returns xbase::XIfExpression:
	{RichStringIf}
	"IF" if=XExpression
		then=RichString
	(else=RichStringElseIf | "ELSE" else=RichString)?
	"ENDIF";
	
RichStringElseIf returns xbase::XIfExpression:
	{RichStringIf}
	"ELSEIF"if=XExpression
		then=RichString
	(else=RichStringElseIf | "ELSE" else=RichString)?;

terminal TEXT : '»' (!'«')* (EOF|'«');
]

section:templates_inferrer[Translation to Java]

section:templates_additons[Additional Aspects]

Addtionally customized things: validation, scoping, code completion ...

