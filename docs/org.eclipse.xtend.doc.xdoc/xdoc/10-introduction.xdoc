chapter:Introduction[Introduction]

Xtend is a statically-typed programming language which translates to comprehensible Java source code. 
Syntactically and semantically Xtend has its roots in the Java programming language but improves on many aspects:   

ul[
  item[e[ref:extensionMethods[Extension methods]] - enhance closed types with new functionality]
  item[e[ref:lambdas[Lambda Expressions]] - concise syntax for anonymous function literals]
  item[e[ref:activeAnnotations[ActiveAnnotations]] - annotation processing on steroids]
  item[e[ref:operators[Operator overloading]] - make your libraries even more expressive]
  item[e[ref:switchExpression[Powerful switch expressions]] - type based switching with implicit casts]
  item[e[ref:polymorphicDispatch[Multiple dispatch]] - a.k.a. polymorphic method invocation]
  item[e[ref:templates[Template expressions]] - with intelligent white space handling]
  item[e[ref:Xtend_Expressions[No statements]] - everything is an expression]
  item[e[ref:propertyAccess[Properties]] - shorthands for accessing and defining getters and setter]
  item[e[Type inference] - you rarely need to write down type signatures anymore]
  item[e[Full support for Java generics] - including all conformance and conversion rules]
  item[e[Translates to Java] not bytecode - understand what is going on and use your code for platforms 
    such as Android or GWT]
] 

Unlike other JVM languages Xtend has ref:types[zero interoperability issues] with Java:
Everything you write interacts with Java exactly as expected. At the same time Xtend is much more concise, 
readable and expressive. Xtend's small library is just a thin layer that provides useful 
utilities and extensions on top of the Java Development Kit (JDK). 

Of course, you can call Xtend methods from Java, too, in a completely transparent way. Furthermore, Xtend provides a modern 
Eclipse-based IDE closely integrated with the Eclipse Java Development Tools (JDT), including features like call-hierarchies, rename refactoring,
debugging and many more.

