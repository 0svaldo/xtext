/*
* generated by Xtext
*/
package org.eclipse.xtext.xbase.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;

public class XbaseParser extends AbstractContentAssistParser {
	
	@Inject
	private XbaseGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.xtext.xbase.contentassist.antlr.internal.InternalXbaseParser createParser() {
		org.eclipse.xtext.xbase.contentassist.antlr.internal.InternalXbaseParser result = new org.eclipse.xtext.xbase.contentassist.antlr.internal.InternalXbaseParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getXFunctionAccess().getAlternatives_7(), "rule__XFunction__Alternatives_7");
					put(grammarAccess.getXAssignmentAccess().getOperatorAlternatives_1_1_0(), "rule__XAssignment__OperatorAlternatives_1_1_0");
					put(grammarAccess.getXEqualityExpressionAccess().getOperatorAlternatives_1_1_0(), "rule__XEqualityExpression__OperatorAlternatives_1_1_0");
					put(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1(), "rule__XRelationalExpression__Alternatives_1");
					put(grammarAccess.getXRelationalExpressionAccess().getOperatorAlternatives_1_1_1_0(), "rule__XRelationalExpression__OperatorAlternatives_1_1_1_0");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorAlternatives_1_1_0(), "rule__XOtherOperatorExpression__OperatorAlternatives_1_1_0");
					put(grammarAccess.getXAdditiveExpressionAccess().getOperatorAlternatives_1_1_0(), "rule__XAdditiveExpression__OperatorAlternatives_1_1_0");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAlternatives_1_1_0(), "rule__XMultiplicativeExpression__OperatorAlternatives_1_1_0");
					put(grammarAccess.getXUnaryOperationAccess().getAlternatives(), "rule__XUnaryOperation__Alternatives");
					put(grammarAccess.getXUnaryOperationAccess().getOperatorAlternatives_0_1_0(), "rule__XUnaryOperation__OperatorAlternatives_0_1_0");
					put(grammarAccess.getXPrimaryExpressionAccess().getAlternatives(), "rule__XPrimaryExpression__Alternatives");
					put(grammarAccess.getXExpressionInsideBlockAccess().getAlternatives(), "rule__XExpressionInsideBlock__Alternatives");
					put(grammarAccess.getXVariableDeclarationAccess().getAlternatives_0(), "rule__XVariableDeclaration__Alternatives_0");
					put(grammarAccess.getXBooleanLiteralAccess().getAlternatives(), "rule__XBooleanLiteral__Alternatives");
					put(grammarAccess.getXTypeRefAccess().getAlternatives(), "rule__XTypeRef__Alternatives");
					put(grammarAccess.getXTypeParamAccess().getAlternatives(), "rule__XTypeParam__Alternatives");
					put(grammarAccess.getXWildcardParamAccess().getAlternatives_2(), "rule__XWildcardParam__Alternatives_2");
					put(grammarAccess.getXTypeParamDeclarationAccess().getAlternatives_1(), "rule__XTypeParamDeclaration__Alternatives_1");
					put(grammarAccess.getXFileAccess().getGroup(), "rule__XFile__Group__0");
					put(grammarAccess.getXImportAccess().getGroup(), "rule__XImport__Group__0");
					put(grammarAccess.getXQualifiedNameWithWildCardAccess().getGroup(), "rule__XQualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getXQualifiedNameWithWildCardAccess().getGroup_1(), "rule__XQualifiedNameWithWildCard__Group_1__0");
					put(grammarAccess.getXClassAccess().getGroup(), "rule__XClass__Group__0");
					put(grammarAccess.getXClassAccess().getGroup_2(), "rule__XClass__Group_2__0");
					put(grammarAccess.getXClassAccess().getGroup_3(), "rule__XClass__Group_3__0");
					put(grammarAccess.getXFunctionAccess().getGroup(), "rule__XFunction__Group__0");
					put(grammarAccess.getXFunctionAccess().getGroup_1(), "rule__XFunction__Group_1__0");
					put(grammarAccess.getXFunctionAccess().getGroup_1_2(), "rule__XFunction__Group_1_2__0");
					put(grammarAccess.getXFunctionAccess().getGroup_5(), "rule__XFunction__Group_5__0");
					put(grammarAccess.getXFunctionAccess().getGroup_5_1(), "rule__XFunction__Group_5_1__0");
					put(grammarAccess.getXFunctionAccess().getGroup_7_0(), "rule__XFunction__Group_7_0__0");
					put(grammarAccess.getXAssignmentAccess().getGroup(), "rule__XAssignment__Group__0");
					put(grammarAccess.getXAssignmentAccess().getGroup_1(), "rule__XAssignment__Group_1__0");
					put(grammarAccess.getXOrExpressionAccess().getGroup(), "rule__XOrExpression__Group__0");
					put(grammarAccess.getXOrExpressionAccess().getGroup_1(), "rule__XOrExpression__Group_1__0");
					put(grammarAccess.getXAndExpressionAccess().getGroup(), "rule__XAndExpression__Group__0");
					put(grammarAccess.getXAndExpressionAccess().getGroup_1(), "rule__XAndExpression__Group_1__0");
					put(grammarAccess.getXEqualityExpressionAccess().getGroup(), "rule__XEqualityExpression__Group__0");
					put(grammarAccess.getXEqualityExpressionAccess().getGroup_1(), "rule__XEqualityExpression__Group_1__0");
					put(grammarAccess.getXRelationalExpressionAccess().getGroup(), "rule__XRelationalExpression__Group__0");
					put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0(), "rule__XRelationalExpression__Group_1_0__0");
					put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1(), "rule__XRelationalExpression__Group_1_1__0");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup(), "rule__XOtherOperatorExpression__Group__0");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1(), "rule__XOtherOperatorExpression__Group_1__0");
					put(grammarAccess.getXAdditiveExpressionAccess().getGroup(), "rule__XAdditiveExpression__Group__0");
					put(grammarAccess.getXAdditiveExpressionAccess().getGroup_1(), "rule__XAdditiveExpression__Group_1__0");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup(), "rule__XMultiplicativeExpression__Group__0");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1(), "rule__XMultiplicativeExpression__Group_1__0");
					put(grammarAccess.getXUnaryOperationAccess().getGroup_0(), "rule__XUnaryOperation__Group_0__0");
					put(grammarAccess.getXUnaryOperationAccess().getGroup_1(), "rule__XUnaryOperation__Group_1__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup(), "rule__XFeatureCall__Group__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup_1(), "rule__XFeatureCall__Group_1__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup_1_3(), "rule__XFeatureCall__Group_1_3__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup_1_3_1(), "rule__XFeatureCall__Group_1_3_1__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup_1_3_1_1(), "rule__XFeatureCall__Group_1_3_1_1__0");
					put(grammarAccess.getXClosureAccess().getGroup(), "rule__XClosure__Group__0");
					put(grammarAccess.getXClosureAccess().getGroup_1(), "rule__XClosure__Group_1__0");
					put(grammarAccess.getXClosureAccess().getGroup_1_1(), "rule__XClosure__Group_1_1__0");
					put(grammarAccess.getXParenthesizedExpressionAccess().getGroup(), "rule__XParenthesizedExpression__Group__0");
					put(grammarAccess.getXIfExpressionAccess().getGroup(), "rule__XIfExpression__Group__0");
					put(grammarAccess.getXIfExpressionAccess().getGroup_5(), "rule__XIfExpression__Group_5__0");
					put(grammarAccess.getXSwitchExpressionAccess().getGroup(), "rule__XSwitchExpression__Group__0");
					put(grammarAccess.getXSwitchExpressionAccess().getGroup_4(), "rule__XSwitchExpression__Group_4__0");
					put(grammarAccess.getXWhileExpressionAccess().getGroup(), "rule__XWhileExpression__Group__0");
					put(grammarAccess.getXCasePartAccess().getGroup(), "rule__XCasePart__Group__0");
					put(grammarAccess.getXBlockExpressionAccess().getGroup(), "rule__XBlockExpression__Group__0");
					put(grammarAccess.getXBlockExpressionAccess().getGroup_1(), "rule__XBlockExpression__Group_1__0");
					put(grammarAccess.getXVariableDeclarationAccess().getGroup(), "rule__XVariableDeclaration__Group__0");
					put(grammarAccess.getXDeclaredParameterAccess().getGroup(), "rule__XDeclaredParameter__Group__0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getGroup(), "rule__XSimpleFeatureCall__Group__0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1(), "rule__XSimpleFeatureCall__Group_1__0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1_1(), "rule__XSimpleFeatureCall__Group_1_1__0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1_1_1(), "rule__XSimpleFeatureCall__Group_1_1_1__0");
					put(grammarAccess.getXConstructorCallAccess().getGroup(), "rule__XConstructorCall__Group__0");
					put(grammarAccess.getXConstructorCallAccess().getGroup_2(), "rule__XConstructorCall__Group_2__0");
					put(grammarAccess.getXConstructorCallAccess().getGroup_2_1(), "rule__XConstructorCall__Group_2_1__0");
					put(grammarAccess.getXConstructorCallAccess().getGroup_2_1_1(), "rule__XConstructorCall__Group_2_1_1__0");
					put(grammarAccess.getXBooleanLiteralAccess().getGroup_0(), "rule__XBooleanLiteral__Group_0__0");
					put(grammarAccess.getXNullLiteralAccess().getGroup(), "rule__XNullLiteral__Group__0");
					put(grammarAccess.getXTypeLiteralAccess().getGroup(), "rule__XTypeLiteral__Group__0");
					put(grammarAccess.getXRichStringAccess().getGroup(), "rule__XRichString__Group__0");
					put(grammarAccess.getXRichStringAccess().getGroup_1(), "rule__XRichString__Group_1__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup(), "rule__XFunctionTypeRef__Group__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0(), "rule__XFunctionTypeRef__Group_0__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_2(), "rule__XFunctionTypeRef__Group_0_2__0");
					put(grammarAccess.getXSimpleTypeRefAccess().getGroup(), "rule__XSimpleTypeRef__Group__0");
					put(grammarAccess.getXSimpleTypeRefAccess().getGroup_1(), "rule__XSimpleTypeRef__Group_1__0");
					put(grammarAccess.getXSimpleTypeRefAccess().getGroup_1_2(), "rule__XSimpleTypeRef__Group_1_2__0");
					put(grammarAccess.getXWildcardParamAccess().getGroup(), "rule__XWildcardParam__Group__0");
					put(grammarAccess.getXWildcardParamAccess().getGroup_2_0(), "rule__XWildcardParam__Group_2_0__0");
					put(grammarAccess.getXWildcardParamAccess().getGroup_2_1(), "rule__XWildcardParam__Group_2_1__0");
					put(grammarAccess.getXTypeParamDeclarationAccess().getGroup(), "rule__XTypeParamDeclaration__Group__0");
					put(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_0(), "rule__XTypeParamDeclaration__Group_1_0__0");
					put(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_0_2(), "rule__XTypeParamDeclaration__Group_1_0_2__0");
					put(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_1(), "rule__XTypeParamDeclaration__Group_1_1__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getXFileAccess().getPackageAssignment_0(), "rule__XFile__PackageAssignment_0");
					put(grammarAccess.getXFileAccess().getImportsAssignment_1(), "rule__XFile__ImportsAssignment_1");
					put(grammarAccess.getXFileAccess().getClassesAssignment_2(), "rule__XFile__ClassesAssignment_2");
					put(grammarAccess.getXImportAccess().getImportedNamespaceAssignment_1(), "rule__XImport__ImportedNamespaceAssignment_1");
					put(grammarAccess.getXClassAccess().getNameAssignment_1(), "rule__XClass__NameAssignment_1");
					put(grammarAccess.getXClassAccess().getExtendsAssignment_2_1(), "rule__XClass__ExtendsAssignment_2_1");
					put(grammarAccess.getXClassAccess().getImplementsAssignment_3_1(), "rule__XClass__ImplementsAssignment_3_1");
					put(grammarAccess.getXClassAccess().getFunctionsAssignment_5(), "rule__XClass__FunctionsAssignment_5");
					put(grammarAccess.getXFunctionAccess().getPrivateAssignment_0(), "rule__XFunction__PrivateAssignment_0");
					put(grammarAccess.getXFunctionAccess().getTypeParamsAssignment_1_1(), "rule__XFunction__TypeParamsAssignment_1_1");
					put(grammarAccess.getXFunctionAccess().getTypeParamsAssignment_1_2_1(), "rule__XFunction__TypeParamsAssignment_1_2_1");
					put(grammarAccess.getXFunctionAccess().getReturnTypeAssignment_2(), "rule__XFunction__ReturnTypeAssignment_2");
					put(grammarAccess.getXFunctionAccess().getNameAssignment_3(), "rule__XFunction__NameAssignment_3");
					put(grammarAccess.getXFunctionAccess().getDeclaredParamsAssignment_5_0(), "rule__XFunction__DeclaredParamsAssignment_5_0");
					put(grammarAccess.getXFunctionAccess().getDeclaredParamsAssignment_5_1_1(), "rule__XFunction__DeclaredParamsAssignment_5_1_1");
					put(grammarAccess.getXFunctionAccess().getExpressionAssignment_7_0_1(), "rule__XFunction__ExpressionAssignment_7_0_1");
					put(grammarAccess.getXFunctionAccess().getExpressionAssignment_7_1(), "rule__XFunction__ExpressionAssignment_7_1");
					put(grammarAccess.getXAssignmentAccess().getOperatorAssignment_1_1(), "rule__XAssignment__OperatorAssignment_1_1");
					put(grammarAccess.getXAssignmentAccess().getRightAssignment_1_2(), "rule__XAssignment__RightAssignment_1_2");
					put(grammarAccess.getXOrExpressionAccess().getOperatorAssignment_1_1(), "rule__XOrExpression__OperatorAssignment_1_1");
					put(grammarAccess.getXOrExpressionAccess().getRightAssignment_1_2(), "rule__XOrExpression__RightAssignment_1_2");
					put(grammarAccess.getXAndExpressionAccess().getOperatorAssignment_1_1(), "rule__XAndExpression__OperatorAssignment_1_1");
					put(grammarAccess.getXAndExpressionAccess().getRightAssignment_1_2(), "rule__XAndExpression__RightAssignment_1_2");
					put(grammarAccess.getXEqualityExpressionAccess().getOperatorAssignment_1_1(), "rule__XEqualityExpression__OperatorAssignment_1_1");
					put(grammarAccess.getXEqualityExpressionAccess().getRightAssignment_1_2(), "rule__XEqualityExpression__RightAssignment_1_2");
					put(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_2(), "rule__XRelationalExpression__TypeAssignment_1_0_2");
					put(grammarAccess.getXRelationalExpressionAccess().getOperatorAssignment_1_1_1(), "rule__XRelationalExpression__OperatorAssignment_1_1_1");
					put(grammarAccess.getXRelationalExpressionAccess().getRightAssignment_1_1_2(), "rule__XRelationalExpression__RightAssignment_1_1_2");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorAssignment_1_1(), "rule__XOtherOperatorExpression__OperatorAssignment_1_1");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getRightAssignment_1_2(), "rule__XOtherOperatorExpression__RightAssignment_1_2");
					put(grammarAccess.getXAdditiveExpressionAccess().getOperatorAssignment_1_1(), "rule__XAdditiveExpression__OperatorAssignment_1_1");
					put(grammarAccess.getXAdditiveExpressionAccess().getRightAssignment_1_2(), "rule__XAdditiveExpression__RightAssignment_1_2");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAssignment_1_1(), "rule__XMultiplicativeExpression__OperatorAssignment_1_1");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getRightAssignment_1_2(), "rule__XMultiplicativeExpression__RightAssignment_1_2");
					put(grammarAccess.getXUnaryOperationAccess().getOperatorAssignment_0_1(), "rule__XUnaryOperation__OperatorAssignment_0_1");
					put(grammarAccess.getXUnaryOperationAccess().getTargetAssignment_0_2(), "rule__XUnaryOperation__TargetAssignment_0_2");
					put(grammarAccess.getXUnaryOperationAccess().getTypeAssignment_1_2(), "rule__XUnaryOperation__TypeAssignment_1_2");
					put(grammarAccess.getXUnaryOperationAccess().getTargetAssignment_1_4(), "rule__XUnaryOperation__TargetAssignment_1_4");
					put(grammarAccess.getXFeatureCallAccess().getNameAssignment_1_2(), "rule__XFeatureCall__NameAssignment_1_2");
					put(grammarAccess.getXFeatureCallAccess().getParamsAssignment_1_3_1_0(), "rule__XFeatureCall__ParamsAssignment_1_3_1_0");
					put(grammarAccess.getXFeatureCallAccess().getParamsAssignment_1_3_1_1_1(), "rule__XFeatureCall__ParamsAssignment_1_3_1_1_1");
					put(grammarAccess.getXClosureAccess().getParamsAssignment_1_0(), "rule__XClosure__ParamsAssignment_1_0");
					put(grammarAccess.getXClosureAccess().getParamsAssignment_1_1_1(), "rule__XClosure__ParamsAssignment_1_1_1");
					put(grammarAccess.getXClosureAccess().getExpressionAssignment_3(), "rule__XClosure__ExpressionAssignment_3");
					put(grammarAccess.getXIfExpressionAccess().getIfAssignment_2(), "rule__XIfExpression__IfAssignment_2");
					put(grammarAccess.getXIfExpressionAccess().getThenAssignment_4(), "rule__XIfExpression__ThenAssignment_4");
					put(grammarAccess.getXIfExpressionAccess().getElseAssignment_5_1(), "rule__XIfExpression__ElseAssignment_5_1");
					put(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_1(), "rule__XSwitchExpression__SwitchAssignment_1");
					put(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_3(), "rule__XSwitchExpression__CasesAssignment_3");
					put(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_4_2(), "rule__XSwitchExpression__DefaultAssignment_4_2");
					put(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_1(), "rule__XWhileExpression__PredicateAssignment_1");
					put(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_2(), "rule__XWhileExpression__BodyAssignment_2");
					put(grammarAccess.getXCasePartAccess().getCaseAssignment_1(), "rule__XCasePart__CaseAssignment_1");
					put(grammarAccess.getXCasePartAccess().getThenAssignment_3(), "rule__XCasePart__ThenAssignment_3");
					put(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_1_0(), "rule__XBlockExpression__ExpressionsAssignment_1_0");
					put(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_0_1(), "rule__XVariableDeclaration__TypeAssignment_0_1");
					put(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_1(), "rule__XVariableDeclaration__NameAssignment_1");
					put(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3(), "rule__XVariableDeclaration__RightAssignment_3");
					put(grammarAccess.getXDeclaredParameterAccess().getTypeAssignment_0(), "rule__XDeclaredParameter__TypeAssignment_0");
					put(grammarAccess.getXDeclaredParameterAccess().getNameAssignment_1(), "rule__XDeclaredParameter__NameAssignment_1");
					put(grammarAccess.getXSimpleFeatureCallAccess().getNameAssignment_0(), "rule__XSimpleFeatureCall__NameAssignment_0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getParamsAssignment_1_1_0(), "rule__XSimpleFeatureCall__ParamsAssignment_1_1_0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getParamsAssignment_1_1_1_1(), "rule__XSimpleFeatureCall__ParamsAssignment_1_1_1_1");
					put(grammarAccess.getXConstructorCallAccess().getTypeAssignment_1(), "rule__XConstructorCall__TypeAssignment_1");
					put(grammarAccess.getXConstructorCallAccess().getParamsAssignment_2_1_0(), "rule__XConstructorCall__ParamsAssignment_2_1_0");
					put(grammarAccess.getXConstructorCallAccess().getParamsAssignment_2_1_1_1(), "rule__XConstructorCall__ParamsAssignment_2_1_1_1");
					put(grammarAccess.getXConstructorCallAccess().getInitializerAssignment_3(), "rule__XConstructorCall__InitializerAssignment_3");
					put(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1(), "rule__XBooleanLiteral__IsTrueAssignment_1");
					put(grammarAccess.getXIntLiteralAccess().getValueAssignment(), "rule__XIntLiteral__ValueAssignment");
					put(grammarAccess.getXStringLiteralAccess().getValueAssignment(), "rule__XStringLiteral__ValueAssignment");
					put(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_0(), "rule__XTypeLiteral__TypeAssignment_0");
					put(grammarAccess.getXRichStringAccess().getExpressionsAssignment_0(), "rule__XRichString__ExpressionsAssignment_0");
					put(grammarAccess.getXRichStringAccess().getExpressionsAssignment_1_0(), "rule__XRichString__ExpressionsAssignment_1_0");
					put(grammarAccess.getXRichStringAccess().getExpressionsAssignment_1_1(), "rule__XRichString__ExpressionsAssignment_1_1");
					put(grammarAccess.getXRichStringLiteralAccess().getValueAssignment(), "rule__XRichStringLiteral__ValueAssignment");
					put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_1");
					put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_2_1(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_2_1");
					put(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2(), "rule__XFunctionTypeRef__ReturnTypeAssignment_2");
					put(grammarAccess.getXSimpleTypeRefAccess().getTypeAssignment_0(), "rule__XSimpleTypeRef__TypeAssignment_0");
					put(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsAssignment_1_1(), "rule__XSimpleTypeRef__TypeParamsAssignment_1_1");
					put(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsAssignment_1_2_1(), "rule__XSimpleTypeRef__TypeParamsAssignment_1_2_1");
					put(grammarAccess.getXWildcardParamAccess().getExtendsAssignment_2_0_1(), "rule__XWildcardParam__ExtendsAssignment_2_0_1");
					put(grammarAccess.getXWildcardParamAccess().getSuperAssignment_2_1_1(), "rule__XWildcardParam__SuperAssignment_2_1_1");
					put(grammarAccess.getXTypeParamDeclarationAccess().getNameAssignment_0(), "rule__XTypeParamDeclaration__NameAssignment_0");
					put(grammarAccess.getXTypeParamDeclarationAccess().getExtendsAssignment_1_0_1(), "rule__XTypeParamDeclaration__ExtendsAssignment_1_0_1");
					put(grammarAccess.getXTypeParamDeclarationAccess().getExtendsAssignment_1_0_2_1(), "rule__XTypeParamDeclaration__ExtendsAssignment_1_0_2_1");
					put(grammarAccess.getXTypeParamDeclarationAccess().getSuperAssignment_1_1_1(), "rule__XTypeParamDeclaration__SuperAssignment_1_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.xtext.xbase.contentassist.antlr.internal.InternalXbaseParser typedParser = (org.eclipse.xtext.xbase.contentassist.antlr.internal.InternalXbaseParser) parser;
			typedParser.entryRuleXFile();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public XbaseGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(XbaseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
