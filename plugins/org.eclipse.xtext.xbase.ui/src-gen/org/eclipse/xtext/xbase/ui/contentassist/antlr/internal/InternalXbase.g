/*
* generated by Xtext
*/
grammar InternalXbase;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.xtext.xbase.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.xtext.xbase.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;

}

@parser::members {
 
 	private XbaseGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(XbaseGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleXFile
entryRuleXFile 
:
{ before(grammarAccess.getXFileRule()); }
	 ruleXFile
{ after(grammarAccess.getXFileRule()); } 
	 EOF 
;

// Rule XFile
ruleXFile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFileAccess().getGroup()); }
(rule__XFile__Group__0)
{ after(grammarAccess.getXFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXImport
entryRuleXImport 
:
{ before(grammarAccess.getXImportRule()); }
	 ruleXImport
{ after(grammarAccess.getXImportRule()); } 
	 EOF 
;

// Rule XImport
ruleXImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXImportAccess().getGroup()); }
(rule__XImport__Group__0)
{ after(grammarAccess.getXImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXQualifiedNameWithWildCard
entryRuleXQualifiedNameWithWildCard 
:
{ before(grammarAccess.getXQualifiedNameWithWildCardRule()); }
	 ruleXQualifiedNameWithWildCard
{ after(grammarAccess.getXQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule XQualifiedNameWithWildCard
ruleXQualifiedNameWithWildCard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXQualifiedNameWithWildCardAccess().getGroup()); }
(rule__XQualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getXQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXClass
entryRuleXClass 
:
{ before(grammarAccess.getXClassRule()); }
	 ruleXClass
{ after(grammarAccess.getXClassRule()); } 
	 EOF 
;

// Rule XClass
ruleXClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXClassAccess().getGroup()); }
(rule__XClass__Group__0)
{ after(grammarAccess.getXClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFunction
entryRuleXFunction 
:
{ before(grammarAccess.getXFunctionRule()); }
	 ruleXFunction
{ after(grammarAccess.getXFunctionRule()); } 
	 EOF 
;

// Rule XFunction
ruleXFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFunctionAccess().getGroup()); }
(rule__XFunction__Group__0)
{ after(grammarAccess.getXFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression
entryRuleXExpression 
:
{ before(grammarAccess.getXExpressionRule()); }
	 ruleXExpression
{ after(grammarAccess.getXExpressionRule()); } 
	 EOF 
;

// Rule XExpression
ruleXExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); }
	ruleXAssignment
{ after(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAssignment
entryRuleXAssignment 
:
{ before(grammarAccess.getXAssignmentRule()); }
	 ruleXAssignment
{ after(grammarAccess.getXAssignmentRule()); } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup()); }
(rule__XAssignment__Group__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOrExpression
entryRuleXOrExpression 
:
{ before(grammarAccess.getXOrExpressionRule()); }
	 ruleXOrExpression
{ after(grammarAccess.getXOrExpressionRule()); } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup()); }
(rule__XOrExpression__Group__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAndExpression
entryRuleXAndExpression 
:
{ before(grammarAccess.getXAndExpressionRule()); }
	 ruleXAndExpression
{ after(grammarAccess.getXAndExpressionRule()); } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup()); }
(rule__XAndExpression__Group__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression 
:
{ before(grammarAccess.getXEqualityExpressionRule()); }
	 ruleXEqualityExpression
{ after(grammarAccess.getXEqualityExpressionRule()); } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
(rule__XEqualityExpression__Group__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression 
:
{ before(grammarAccess.getXRelationalExpressionRule()); }
	 ruleXRelationalExpression
{ after(grammarAccess.getXRelationalExpressionRule()); } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
(rule__XRelationalExpression__Group__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression 
:
{ before(grammarAccess.getXOtherOperatorExpressionRule()); }
	 ruleXOtherOperatorExpression
{ after(grammarAccess.getXOtherOperatorExpressionRule()); } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
(rule__XOtherOperatorExpression__Group__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression 
:
{ before(grammarAccess.getXAdditiveExpressionRule()); }
	 ruleXAdditiveExpression
{ after(grammarAccess.getXAdditiveExpressionRule()); } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
(rule__XAdditiveExpression__Group__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression 
:
{ before(grammarAccess.getXMultiplicativeExpressionRule()); }
	 ruleXMultiplicativeExpression
{ after(grammarAccess.getXMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
(rule__XMultiplicativeExpression__Group__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation 
:
{ before(grammarAccess.getXUnaryOperationRule()); }
	 ruleXUnaryOperation
{ after(grammarAccess.getXUnaryOperationRule()); } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
(rule__XUnaryOperation__Alternatives)
{ after(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall 
:
{ before(grammarAccess.getXFeatureCallRule()); }
	 ruleXFeatureCall
{ after(grammarAccess.getXFeatureCallRule()); } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup()); }
(rule__XFeatureCall__Group__0)
{ after(grammarAccess.getXFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression 
:
{ before(grammarAccess.getXPrimaryExpressionRule()); }
	 ruleXPrimaryExpression
{ after(grammarAccess.getXPrimaryExpressionRule()); } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
(rule__XPrimaryExpression__Alternatives)
{ after(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXClosure
entryRuleXClosure 
:
{ before(grammarAccess.getXClosureRule()); }
	 ruleXClosure
{ after(grammarAccess.getXClosureRule()); } 
	 EOF 
;

// Rule XClosure
ruleXClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXClosureAccess().getGroup()); }
(rule__XClosure__Group__0)
{ after(grammarAccess.getXClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression 
:
{ before(grammarAccess.getXParenthesizedExpressionRule()); }
	 ruleXParenthesizedExpression
{ after(grammarAccess.getXParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
(rule__XParenthesizedExpression__Group__0)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIfExpression
entryRuleXIfExpression 
:
{ before(grammarAccess.getXIfExpressionRule()); }
	 ruleXIfExpression
{ after(grammarAccess.getXIfExpressionRule()); } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup()); }
(rule__XIfExpression__Group__0)
{ after(grammarAccess.getXIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression 
:
{ before(grammarAccess.getXSwitchExpressionRule()); }
	 ruleXSwitchExpression
{ after(grammarAccess.getXSwitchExpressionRule()); } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
(rule__XSwitchExpression__Group__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression 
:
{ before(grammarAccess.getXWhileExpressionRule()); }
	 ruleXWhileExpression
{ after(grammarAccess.getXWhileExpressionRule()); } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXWhileExpressionAccess().getGroup()); }
(rule__XWhileExpression__Group__0)
{ after(grammarAccess.getXWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCasePart
entryRuleXCasePart 
:
{ before(grammarAccess.getXCasePartRule()); }
	 ruleXCasePart
{ after(grammarAccess.getXCasePartRule()); } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCasePartAccess().getGroup()); }
(rule__XCasePart__Group__0)
{ after(grammarAccess.getXCasePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression 
:
{ before(grammarAccess.getXBlockExpressionRule()); }
	 ruleXBlockExpression
{ after(grammarAccess.getXBlockExpressionRule()); } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup()); }
(rule__XBlockExpression__Group__0)
{ after(grammarAccess.getXBlockExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionInsideBlock
entryRuleXExpressionInsideBlock 
:
{ before(grammarAccess.getXExpressionInsideBlockRule()); }
	 ruleXExpressionInsideBlock
{ after(grammarAccess.getXExpressionInsideBlockRule()); } 
	 EOF 
;

// Rule XExpressionInsideBlock
ruleXExpressionInsideBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getAlternatives()); }
(rule__XExpressionInsideBlock__Alternatives)
{ after(grammarAccess.getXExpressionInsideBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration 
:
{ before(grammarAccess.getXVariableDeclarationRule()); }
	 ruleXVariableDeclaration
{ after(grammarAccess.getXVariableDeclarationRule()); } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup()); }
(rule__XVariableDeclaration__Group__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXDeclaredParameter
entryRuleXDeclaredParameter 
:
{ before(grammarAccess.getXDeclaredParameterRule()); }
	 ruleXDeclaredParameter
{ after(grammarAccess.getXDeclaredParameterRule()); } 
	 EOF 
;

// Rule XDeclaredParameter
ruleXDeclaredParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXDeclaredParameterAccess().getGroup()); }
(rule__XDeclaredParameter__Group__0)
{ after(grammarAccess.getXDeclaredParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSimpleFeatureCall
entryRuleXSimpleFeatureCall 
:
{ before(grammarAccess.getXSimpleFeatureCallRule()); }
	 ruleXSimpleFeatureCall
{ after(grammarAccess.getXSimpleFeatureCallRule()); } 
	 EOF 
;

// Rule XSimpleFeatureCall
ruleXSimpleFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getGroup()); }
(rule__XSimpleFeatureCall__Group__0)
{ after(grammarAccess.getXSimpleFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall 
:
{ before(grammarAccess.getXConstructorCallRule()); }
	 ruleXConstructorCall
{ after(grammarAccess.getXConstructorCallRule()); } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup()); }
(rule__XConstructorCall__Group__0)
{ after(grammarAccess.getXConstructorCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral 
:
{ before(grammarAccess.getXBooleanLiteralRule()); }
	 ruleXBooleanLiteral
{ after(grammarAccess.getXBooleanLiteralRule()); } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getAlternatives()); }
(rule__XBooleanLiteral__Alternatives)
{ after(grammarAccess.getXBooleanLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral 
:
{ before(grammarAccess.getXNullLiteralRule()); }
	 ruleXNullLiteral
{ after(grammarAccess.getXNullLiteralRule()); } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXNullLiteralAccess().getGroup()); }
(rule__XNullLiteral__Group__0)
{ after(grammarAccess.getXNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIntLiteral
entryRuleXIntLiteral 
:
{ before(grammarAccess.getXIntLiteralRule()); }
	 ruleXIntLiteral
{ after(grammarAccess.getXIntLiteralRule()); } 
	 EOF 
;

// Rule XIntLiteral
ruleXIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXIntLiteralAccess().getValueAssignment()); }
(rule__XIntLiteral__ValueAssignment)
{ after(grammarAccess.getXIntLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral 
:
{ before(grammarAccess.getXStringLiteralRule()); }
	 ruleXStringLiteral
{ after(grammarAccess.getXStringLiteralRule()); } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueAssignment()); }
(rule__XStringLiteral__ValueAssignment)
{ after(grammarAccess.getXStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral 
:
{ before(grammarAccess.getXTypeLiteralRule()); }
	 ruleXTypeLiteral
{ after(grammarAccess.getXTypeLiteralRule()); } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTypeLiteralAccess().getGroup()); }
(rule__XTypeLiteral__Group__0)
{ after(grammarAccess.getXTypeLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRichString
entryRuleXRichString 
:
{ before(grammarAccess.getXRichStringRule()); }
	 ruleXRichString
{ after(grammarAccess.getXRichStringRule()); } 
	 EOF 
;

// Rule XRichString
ruleXRichString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXRichStringAccess().getGroup()); }
(rule__XRichString__Group__0)
{ after(grammarAccess.getXRichStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRichStringLiteral
entryRuleXRichStringLiteral 
:
{ before(grammarAccess.getXRichStringLiteralRule()); }
	 ruleXRichStringLiteral
{ after(grammarAccess.getXRichStringLiteralRule()); } 
	 EOF 
;

// Rule XRichStringLiteral
ruleXRichStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXRichStringLiteralAccess().getValueAssignment()); }
(rule__XRichStringLiteral__ValueAssignment)
{ after(grammarAccess.getXRichStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTypeRef
entryRuleXTypeRef 
:
{ before(grammarAccess.getXTypeRefRule()); }
	 ruleXTypeRef
{ after(grammarAccess.getXTypeRefRule()); } 
	 EOF 
;

// Rule XTypeRef
ruleXTypeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTypeRefAccess().getAlternatives()); }
(rule__XTypeRef__Alternatives)
{ after(grammarAccess.getXTypeRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef 
:
{ before(grammarAccess.getXFunctionTypeRefRule()); }
	 ruleXFunctionTypeRef
{ after(grammarAccess.getXFunctionTypeRefRule()); } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
(rule__XFunctionTypeRef__Group__0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSimpleTypeRef
entryRuleXSimpleTypeRef 
:
{ before(grammarAccess.getXSimpleTypeRefRule()); }
	 ruleXSimpleTypeRef
{ after(grammarAccess.getXSimpleTypeRefRule()); } 
	 EOF 
;

// Rule XSimpleTypeRef
ruleXSimpleTypeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getGroup()); }
(rule__XSimpleTypeRef__Group__0)
{ after(grammarAccess.getXSimpleTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTypeParam
entryRuleXTypeParam 
:
{ before(grammarAccess.getXTypeParamRule()); }
	 ruleXTypeParam
{ after(grammarAccess.getXTypeParamRule()); } 
	 EOF 
;

// Rule XTypeParam
ruleXTypeParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTypeParamAccess().getAlternatives()); }
(rule__XTypeParam__Alternatives)
{ after(grammarAccess.getXTypeParamAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXWildcardParam
entryRuleXWildcardParam 
:
{ before(grammarAccess.getXWildcardParamRule()); }
	 ruleXWildcardParam
{ after(grammarAccess.getXWildcardParamRule()); } 
	 EOF 
;

// Rule XWildcardParam
ruleXWildcardParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXWildcardParamAccess().getGroup()); }
(rule__XWildcardParam__Group__0)
{ after(grammarAccess.getXWildcardParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTypeParamDeclaration
entryRuleXTypeParamDeclaration 
:
{ before(grammarAccess.getXTypeParamDeclarationRule()); }
	 ruleXTypeParamDeclaration
{ after(grammarAccess.getXTypeParamDeclarationRule()); } 
	 EOF 
;

// Rule XTypeParamDeclaration
ruleXTypeParamDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getGroup()); }
(rule__XTypeParamDeclaration__Group__0)
{ after(grammarAccess.getXTypeParamDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XFunction__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getGroup_7_0()); }
(rule__XFunction__Group_7_0__0)
{ after(grammarAccess.getXFunctionAccess().getGroup_7_0()); }
)

    |(
{ before(grammarAccess.getXFunctionAccess().getExpressionAssignment_7_1()); }
(rule__XFunction__ExpressionAssignment_7_1)
{ after(grammarAccess.getXFunctionAccess().getExpressionAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getXAssignmentAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getXAssignmentAccess().getOperatorPlusSignEqualsSignKeyword_1_1_0_1()); }

	'+=' 

{ after(grammarAccess.getXAssignmentAccess().getOperatorPlusSignEqualsSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_0()); }

	'==' 

{ after(grammarAccess.getXEqualityExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getXEqualityExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1()); }

	'!=' 

{ after(grammarAccess.getXEqualityExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
(rule__XRelationalExpression__Group_1_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1()); }
(rule__XRelationalExpression__Group_1_1__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__OperatorAlternatives_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_1_0_0()); }

	'>=' 

{ after(grammarAccess.getXRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getXRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_1_0_1()); }

	'<=' 

{ after(grammarAccess.getXRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getXRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_1_0_2()); }

	'>' 

{ after(grammarAccess.getXRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getXRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_1_0_3()); }

	'<' 

{ after(grammarAccess.getXRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorHyphenMinusGreaterThanSignKeyword_1_1_0_0()); }

	'->' 

{ after(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorHyphenMinusGreaterThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0_1()); }

	'..' 

{ after(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getOperatorPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getXAdditiveExpressionAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getXAdditiveExpressionAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getXAdditiveExpressionAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAsteriskAsteriskKeyword_1_1_0_1()); }

	'**' 

{ after(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAsteriskAsteriskKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorSolidusKeyword_1_1_0_2()); }

	'/' 

{ after(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorSolidusKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorPercentSignKeyword_1_1_0_3()); }

	'%' 

{ after(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorPercentSignKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
(rule__XUnaryOperation__Group_0__0)
{ after(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXUnaryOperationAccess().getGroup_1()); }
(rule__XUnaryOperation__Group_1__0)
{ after(grammarAccess.getXUnaryOperationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getXUnaryOperationAccess().getXFeatureCallParserRuleCall_2()); }
	ruleXFeatureCall
{ after(grammarAccess.getXUnaryOperationAccess().getXFeatureCallParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__OperatorAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperatorExclamationMarkKeyword_0_1_0_0()); }

	'!' 

{ after(grammarAccess.getXUnaryOperationAccess().getOperatorExclamationMarkKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getXUnaryOperationAccess().getOperatorHyphenMinusKeyword_0_1_0_1()); }

	'-' 

{ after(grammarAccess.getXUnaryOperationAccess().getOperatorHyphenMinusKeyword_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getXUnaryOperationAccess().getOperatorPlusSignKeyword_0_1_0_2()); }

	'+' 

{ after(grammarAccess.getXUnaryOperationAccess().getOperatorPlusSignKeyword_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXClosureParserRuleCall_0()); }
	ruleXClosure
{ after(grammarAccess.getXPrimaryExpressionAccess().getXClosureParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXBooleanLiteralParserRuleCall_1()); }
	ruleXBooleanLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXBooleanLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXIntLiteralParserRuleCall_2()); }
	ruleXIntLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXIntLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXNullLiteralParserRuleCall_3()); }
	ruleXNullLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXNullLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXStringLiteralParserRuleCall_4()); }
	ruleXStringLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXStringLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXTypeLiteralParserRuleCall_5()); }
	ruleXTypeLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXTypeLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_6()); }
	ruleXConstructorCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_7()); }
	ruleXBlockExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXRichStringParserRuleCall_8()); }
	ruleXRichString
{ after(grammarAccess.getXPrimaryExpressionAccess().getXRichStringParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_9()); }
	ruleXIfExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_10()); }
	ruleXSwitchExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_11()); }
	ruleXWhileExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSimpleFeatureCallParserRuleCall_12()); }
	ruleXSimpleFeatureCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSimpleFeatureCallParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_13()); }
	ruleXParenthesizedExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInsideBlock__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); }
	ruleXVariableDeclaration
{ after(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getDefKeyword_0_0()); }

	'def' 

{ after(grammarAccess.getXVariableDeclarationAccess().getDefKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_0_1()); }
(rule__XVariableDeclaration__TypeAssignment_0_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getGroup_0()); }
(rule__XBooleanLiteral__Group_0__0)
{ after(grammarAccess.getXBooleanLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1()); }
(rule__XBooleanLiteral__IsTrueAssignment_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeRefAccess().getXSimpleTypeRefParserRuleCall_0()); }
	ruleXSimpleTypeRef
{ after(grammarAccess.getXTypeRefAccess().getXSimpleTypeRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXTypeRefAccess().getXFunctionTypeRefParserRuleCall_1()); }
	ruleXFunctionTypeRef
{ after(grammarAccess.getXTypeRefAccess().getXFunctionTypeRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeParam__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamAccess().getXTypeRefParserRuleCall_0()); }
	ruleXTypeRef
{ after(grammarAccess.getXTypeParamAccess().getXTypeRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXTypeParamAccess().getXWildcardParamParserRuleCall_1()); }
	ruleXWildcardParam
{ after(grammarAccess.getXTypeParamAccess().getXWildcardParamParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWildcardParam__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getGroup_2_0()); }
(rule__XWildcardParam__Group_2_0__0)
{ after(grammarAccess.getXWildcardParamAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getXWildcardParamAccess().getGroup_2_1()); }
(rule__XWildcardParam__Group_2_1__0)
{ after(grammarAccess.getXWildcardParamAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeParamDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_0()); }
(rule__XTypeParamDeclaration__Group_1_0__0)
{ after(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_1()); }
(rule__XTypeParamDeclaration__Group_1_1__0)
{ after(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__XFile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFileAccess().getPackageAssignment_0()); }
(rule__XFile__PackageAssignment_0)?
{ after(grammarAccess.getXFileAccess().getPackageAssignment_0()); }
)

	rule__XFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFileAccess().getImportsAssignment_1()); }
(rule__XFile__ImportsAssignment_1)*
{ after(grammarAccess.getXFileAccess().getImportsAssignment_1()); }
)

	rule__XFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XFile__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFileAccess().getClassesAssignment_2()); }
(rule__XFile__ClassesAssignment_2)*
{ after(grammarAccess.getXFileAccess().getClassesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getXImportAccess().getImportKeyword_0()); }
)

	rule__XImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportAccess().getImportedNamespaceAssignment_1()); }
(rule__XImport__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getXImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XQualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getXQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

	rule__XQualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XQualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXQualifiedNameWithWildCardAccess().getGroup_1()); }
(rule__XQualifiedNameWithWildCard__Group_1__0)?
{ after(grammarAccess.getXQualifiedNameWithWildCardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XQualifiedNameWithWildCard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getXQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); }
)

	rule__XQualifiedNameWithWildCard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XQualifiedNameWithWildCard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getXQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getXClassAccess().getClassKeyword_0()); }
)

	rule__XClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getNameAssignment_1()); }
(rule__XClass__NameAssignment_1)
{ after(grammarAccess.getXClassAccess().getNameAssignment_1()); }
)

	rule__XClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getGroup_2()); }
(rule__XClass__Group_2__0)?
{ after(grammarAccess.getXClassAccess().getGroup_2()); }
)

	rule__XClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getGroup_3()); }
(rule__XClass__Group_3__0)*
{ after(grammarAccess.getXClassAccess().getGroup_3()); }
)

	rule__XClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__XClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getXClassAccess().getLeftCurlyBracketKeyword_4()); }
)

	rule__XClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__XClass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getFunctionsAssignment_5()); }
(rule__XClass__FunctionsAssignment_5)*
{ after(grammarAccess.getXClassAccess().getFunctionsAssignment_5()); }
)

	rule__XClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__XClass__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getXClassAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XClass__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getXClassAccess().getExtendsKeyword_2_0()); }
)

	rule__XClass__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XClass__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getExtendsAssignment_2_1()); }
(rule__XClass__ExtendsAssignment_2_1)
{ after(grammarAccess.getXClassAccess().getExtendsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClass__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getImplementsKeyword_3_0()); }

	'implements' 

{ after(grammarAccess.getXClassAccess().getImplementsKeyword_3_0()); }
)

	rule__XClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XClass__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getImplementsAssignment_3_1()); }
(rule__XClass__ImplementsAssignment_3_1)
{ after(grammarAccess.getXClassAccess().getImplementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getPrivateAssignment_0()); }
(rule__XFunction__PrivateAssignment_0)?
{ after(grammarAccess.getXFunctionAccess().getPrivateAssignment_0()); }
)

	rule__XFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getGroup_1()); }
(rule__XFunction__Group_1__0)?
{ after(grammarAccess.getXFunctionAccess().getGroup_1()); }
)

	rule__XFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getReturnTypeAssignment_2()); }
(rule__XFunction__ReturnTypeAssignment_2)?
{ after(grammarAccess.getXFunctionAccess().getReturnTypeAssignment_2()); }
)

	rule__XFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getNameAssignment_3()); }
(rule__XFunction__NameAssignment_3)
{ after(grammarAccess.getXFunctionAccess().getNameAssignment_3()); }
)

	rule__XFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getXFunctionAccess().getLeftParenthesisKeyword_4()); }
)

	rule__XFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getGroup_5()); }
(rule__XFunction__Group_5__0)?
{ after(grammarAccess.getXFunctionAccess().getGroup_5()); }
)

	rule__XFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getXFunctionAccess().getRightParenthesisKeyword_6()); }
)

	rule__XFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getAlternatives_7()); }
(rule__XFunction__Alternatives_7)
{ after(grammarAccess.getXFunctionAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__XFunction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getXFunctionAccess().getLessThanSignKeyword_1_0()); }
)

	rule__XFunction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getTypeParamsAssignment_1_1()); }
(rule__XFunction__TypeParamsAssignment_1_1)
{ after(grammarAccess.getXFunctionAccess().getTypeParamsAssignment_1_1()); }
)

	rule__XFunction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getGroup_1_2()); }
(rule__XFunction__Group_1_2__0)*
{ after(grammarAccess.getXFunctionAccess().getGroup_1_2()); }
)

	rule__XFunction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getXFunctionAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XFunction__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getXFunctionAccess().getCommaKeyword_1_2_0()); }
)

	rule__XFunction__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getTypeParamsAssignment_1_2_1()); }
(rule__XFunction__TypeParamsAssignment_1_2_1)
{ after(grammarAccess.getXFunctionAccess().getTypeParamsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunction__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getDeclaredParamsAssignment_5_0()); }
(rule__XFunction__DeclaredParamsAssignment_5_0)
{ after(grammarAccess.getXFunctionAccess().getDeclaredParamsAssignment_5_0()); }
)

	rule__XFunction__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getGroup_5_1()); }
(rule__XFunction__Group_5_1__0)*
{ after(grammarAccess.getXFunctionAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunction__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getXFunctionAccess().getCommaKeyword_5_1_0()); }
)

	rule__XFunction__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getDeclaredParamsAssignment_5_1_1()); }
(rule__XFunction__DeclaredParamsAssignment_5_1_1)
{ after(grammarAccess.getXFunctionAccess().getDeclaredParamsAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunction__Group_7_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getColonKeyword_7_0_0()); }

	':' 

{ after(grammarAccess.getXFunctionAccess().getColonKeyword_7_0_0()); }
)

	rule__XFunction__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group_7_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getExpressionAssignment_7_0_1()); }
(rule__XFunction__ExpressionAssignment_7_0_1)
{ after(grammarAccess.getXFunctionAccess().getExpressionAssignment_7_0_1()); }
)

	rule__XFunction__Group_7_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunction__Group_7_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getSemicolonKeyword_7_0_2()); }

	';' 

{ after(grammarAccess.getXFunctionAccess().getSemicolonKeyword_7_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_0()); }
	ruleXOrExpression
{ after(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_0()); }
)

	rule__XAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1()); }
(rule__XAssignment__Group_1__0)?
{ after(grammarAccess.getXAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftAction_1_0()); }
)

	rule__XAssignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getOperatorAssignment_1_1()); }
(rule__XAssignment__OperatorAssignment_1_1)
{ after(grammarAccess.getXAssignmentAccess().getOperatorAssignment_1_1()); }
)

	rule__XAssignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getRightAssignment_1_2()); }
(rule__XAssignment__RightAssignment_1_2)
{ after(grammarAccess.getXAssignmentAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
	ruleXAndExpression
{ after(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
)

	rule__XOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
(rule__XOrExpression__Group_1__0)*
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
)

	rule__XOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__XOrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getXOrExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__XOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightAssignment_1_2()); }
(rule__XOrExpression__RightAssignment_1_2)
{ after(grammarAccess.getXOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
	ruleXEqualityExpression
{ after(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
)

	rule__XAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
(rule__XAndExpression__Group_1__0)*
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
)

	rule__XAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__XAndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getXAndExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__XAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightAssignment_1_2()); }
(rule__XAndExpression__RightAssignment_1_2)
{ after(grammarAccess.getXAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
	ruleXRelationalExpression
{ after(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
)

	rule__XEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
(rule__XEqualityExpression__Group_1__0)*
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
)

	rule__XEqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getOperatorAssignment_1_1()); }
(rule__XEqualityExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__XEqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightAssignment_1_2()); }
(rule__XEqualityExpression__RightAssignment_1_2)
{ after(grammarAccess.getXEqualityExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XRelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
	ruleXOtherOperatorExpression
{ after(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
)

	rule__XRelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1()); }
(rule__XRelationalExpression__Alternatives_1)*
{ after(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0()); }
)

	rule__XRelationalExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_1()); }

	'instanceof' 

{ after(grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_1()); }
)

	rule__XRelationalExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_2()); }
(rule__XRelationalExpression__TypeAssignment_1_0_2)
{ after(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XRelationalExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftAction_1_1_0()); }
)

	rule__XRelationalExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getOperatorAssignment_1_1_1()); }
(rule__XRelationalExpression__OperatorAssignment_1_1_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getOperatorAssignment_1_1_1()); }
)

	rule__XRelationalExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightAssignment_1_1_2()); }
(rule__XRelationalExpression__RightAssignment_1_1_2)
{ after(grammarAccess.getXRelationalExpressionAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XOtherOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
	ruleXAdditiveExpression
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
)

	rule__XOtherOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
(rule__XOtherOperatorExpression__Group_1__0)*
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
)

	rule__XOtherOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorAssignment_1_1()); }
(rule__XOtherOperatorExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__XOtherOperatorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightAssignment_1_2()); }
(rule__XOtherOperatorExpression__RightAssignment_1_2)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XAdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
	ruleXMultiplicativeExpression
{ after(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
)

	rule__XAdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
(rule__XAdditiveExpression__Group_1__0)*
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
)

	rule__XAdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
(rule__XAdditiveExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__XAdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightAssignment_1_2()); }
(rule__XAdditiveExpression__RightAssignment_1_2)
{ after(grammarAccess.getXAdditiveExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XMultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
	ruleXUnaryOperation
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
)

	rule__XMultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
(rule__XMultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftAction_1_0()); }
)

	rule__XMultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
(rule__XMultiplicativeExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
)

	rule__XMultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
(rule__XMultiplicativeExpression__RightAssignment_1_2)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XUnaryOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
)

	rule__XUnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperatorAssignment_0_1()); }
(rule__XUnaryOperation__OperatorAssignment_0_1)
{ after(grammarAccess.getXUnaryOperationAccess().getOperatorAssignment_0_1()); }
)

	rule__XUnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getTargetAssignment_0_2()); }
(rule__XUnaryOperation__TargetAssignment_0_2)
{ after(grammarAccess.getXUnaryOperationAccess().getTargetAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XUnaryOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionAction_1_0()); }
)

	rule__XUnaryOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getXUnaryOperationAccess().getLeftParenthesisKeyword_1_1()); }
)

	rule__XUnaryOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getTypeAssignment_1_2()); }
(rule__XUnaryOperation__TypeAssignment_1_2)
{ after(grammarAccess.getXUnaryOperationAccess().getTypeAssignment_1_2()); }
)

	rule__XUnaryOperation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getXUnaryOperationAccess().getRightParenthesisKeyword_1_3()); }
)

	rule__XUnaryOperation__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getTargetAssignment_1_4()); }
(rule__XUnaryOperation__TargetAssignment_1_4)
{ after(grammarAccess.getXUnaryOperationAccess().getTargetAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); }
	ruleXPrimaryExpression
{ after(grammarAccess.getXFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); }
)

	rule__XFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_1()); }
(rule__XFeatureCall__Group_1__0)*
{ after(grammarAccess.getXFeatureCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getXFeatureCallTargetAction_1_0()); }
(

)
{ after(grammarAccess.getXFeatureCallAccess().getXFeatureCallTargetAction_1_0()); }
)

	rule__XFeatureCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getXFeatureCallAccess().getFullStopKeyword_1_1()); }
)

	rule__XFeatureCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getNameAssignment_1_2()); }
(rule__XFeatureCall__NameAssignment_1_2)
{ after(grammarAccess.getXFeatureCallAccess().getNameAssignment_1_2()); }
)

	rule__XFeatureCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_1_3()); }
(rule__XFeatureCall__Group_1_3__0)?
{ after(grammarAccess.getXFeatureCallAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XFeatureCall__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getLeftParenthesisKeyword_1_3_0()); }

	'(' 

{ after(grammarAccess.getXFeatureCallAccess().getLeftParenthesisKeyword_1_3_0()); }
)

	rule__XFeatureCall__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_1_3_1()); }
(rule__XFeatureCall__Group_1_3_1__0)?
{ after(grammarAccess.getXFeatureCallAccess().getGroup_1_3_1()); }
)

	rule__XFeatureCall__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_1_3_2()); }

	')' 

{ after(grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFeatureCall__Group_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getParamsAssignment_1_3_1_0()); }
(rule__XFeatureCall__ParamsAssignment_1_3_1_0)
{ after(grammarAccess.getXFeatureCallAccess().getParamsAssignment_1_3_1_0()); }
)

	rule__XFeatureCall__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_1_3_1_1()); }
(rule__XFeatureCall__Group_1_3_1_1__0)*
{ after(grammarAccess.getXFeatureCallAccess().getGroup_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group_1_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_3_1_1_0()); }

	',' 

{ after(grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_3_1_1_0()); }
)

	rule__XFeatureCall__Group_1_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getParamsAssignment_1_3_1_1_1()); }
(rule__XFeatureCall__ParamsAssignment_1_3_1_1_1)
{ after(grammarAccess.getXFeatureCallAccess().getParamsAssignment_1_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getXClosureAction_0()); }
(

)
{ after(grammarAccess.getXClosureAccess().getXClosureAction_0()); }
)

	rule__XClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1()); }
(rule__XClosure__Group_1__0)?
{ after(grammarAccess.getXClosureAccess().getGroup_1()); }
)

	rule__XClosure__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getVerticalLineKeyword_2()); }

	'|' 

{ after(grammarAccess.getXClosureAccess().getVerticalLineKeyword_2()); }
)

	rule__XClosure__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExpressionAssignment_3()); }
(rule__XClosure__ExpressionAssignment_3)
{ after(grammarAccess.getXClosureAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getParamsAssignment_1_0()); }
(rule__XClosure__ParamsAssignment_1_0)
{ after(grammarAccess.getXClosureAccess().getParamsAssignment_1_0()); }
)

	rule__XClosure__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_1()); }
(rule__XClosure__Group_1_1__0)*
{ after(grammarAccess.getXClosureAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getXClosureAccess().getCommaKeyword_1_1_0()); }
)

	rule__XClosure__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getParamsAssignment_1_1_1()); }
(rule__XClosure__ParamsAssignment_1_1_1)
{ after(grammarAccess.getXClosureAccess().getParamsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

	rule__XParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
)

	rule__XParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getXIfExpressionAccess().getIfKeyword_0()); }
)

	rule__XIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_1()); }
)

	rule__XIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfAssignment_2()); }
(rule__XIfExpression__IfAssignment_2)
{ after(grammarAccess.getXIfExpressionAccess().getIfAssignment_2()); }
)

	rule__XIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_3()); }
)

	rule__XIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenAssignment_4()); }
(rule__XIfExpression__ThenAssignment_4)
{ after(grammarAccess.getXIfExpressionAccess().getThenAssignment_4()); }
)

	rule__XIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup_5()); }
(rule__XIfExpression__Group_5__0)?
{ after(grammarAccess.getXIfExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XIfExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getXIfExpressionAccess().getElseKeyword_5_0()); }
)

	rule__XIfExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseAssignment_5_1()); }
(rule__XIfExpression__ElseAssignment_5_1)
{ after(grammarAccess.getXIfExpressionAccess().getElseAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_0()); }
)

	rule__XSwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_1()); }
(rule__XSwitchExpression__SwitchAssignment_1)?
{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_1()); }
)

	rule__XSwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__XSwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_3()); }
(rule__XSwitchExpression__CasesAssignment_3)
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_3()); }
)
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_3()); }
(rule__XSwitchExpression__CasesAssignment_3)*
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_3()); }
)
)

	rule__XSwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_4()); }
(rule__XSwitchExpression__Group_4__0)?
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_4()); }
)

	rule__XSwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XSwitchExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_4_0()); }

	'default' 

{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_4_0()); }
)

	rule__XSwitchExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_4_1()); }

	':' 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_4_1()); }
)

	rule__XSwitchExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_4_2()); }
(rule__XSwitchExpression__DefaultAssignment_4_2)
{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_0()); }
)

	rule__XWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_1()); }
(rule__XWhileExpression__PredicateAssignment_1)
{ after(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_1()); }
)

	rule__XWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_2()); }
(rule__XWhileExpression__BodyAssignment_2)
{ after(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCasePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getXCasePartAccess().getCaseKeyword_0()); }
)

	rule__XCasePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseAssignment_1()); }
(rule__XCasePart__CaseAssignment_1)
{ after(grammarAccess.getXCasePartAccess().getCaseAssignment_1()); }
)

	rule__XCasePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getXCasePartAccess().getColonKeyword_2()); }
)

	rule__XCasePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenAssignment_3()); }
(rule__XCasePart__ThenAssignment_3)
{ after(grammarAccess.getXCasePartAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XBlockExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_0()); }
)

	rule__XBlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup_1()); }
(rule__XBlockExpression__Group_1__0)
{ after(grammarAccess.getXBlockExpressionAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup_1()); }
(rule__XBlockExpression__Group_1__0)*
{ after(grammarAccess.getXBlockExpressionAccess().getGroup_1()); }
)
)

	rule__XBlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XBlockExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_1_0()); }
(rule__XBlockExpression__ExpressionsAssignment_1_0)
{ after(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_1_0()); }
)

	rule__XBlockExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getAlternatives_0()); }
(rule__XVariableDeclaration__Alternatives_0)
{ after(grammarAccess.getXVariableDeclarationAccess().getAlternatives_0()); }
)

	rule__XVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_1()); }
(rule__XVariableDeclaration__NameAssignment_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_1()); }
)

	rule__XVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_2()); }
)

	rule__XVariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3()); }
(rule__XVariableDeclaration__RightAssignment_3)
{ after(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XDeclaredParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDeclaredParameterAccess().getTypeAssignment_0()); }
(rule__XDeclaredParameter__TypeAssignment_0)?
{ after(grammarAccess.getXDeclaredParameterAccess().getTypeAssignment_0()); }
)

	rule__XDeclaredParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XDeclaredParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDeclaredParameterAccess().getNameAssignment_1()); }
(rule__XDeclaredParameter__NameAssignment_1)
{ after(grammarAccess.getXDeclaredParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSimpleFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getNameAssignment_0()); }
(rule__XSimpleFeatureCall__NameAssignment_0)
{ after(grammarAccess.getXSimpleFeatureCallAccess().getNameAssignment_0()); }
)

	rule__XSimpleFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1()); }
(rule__XSimpleFeatureCall__Group_1__0)?
{ after(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSimpleFeatureCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getXSimpleFeatureCallAccess().getLeftParenthesisKeyword_1_0()); }
)

	rule__XSimpleFeatureCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleFeatureCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1_1()); }
(rule__XSimpleFeatureCall__Group_1_1__0)?
{ after(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1_1()); }
)

	rule__XSimpleFeatureCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleFeatureCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getXSimpleFeatureCallAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XSimpleFeatureCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getParamsAssignment_1_1_0()); }
(rule__XSimpleFeatureCall__ParamsAssignment_1_1_0)
{ after(grammarAccess.getXSimpleFeatureCallAccess().getParamsAssignment_1_1_0()); }
)

	rule__XSimpleFeatureCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleFeatureCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1_1_1()); }
(rule__XSimpleFeatureCall__Group_1_1_1__0)*
{ after(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSimpleFeatureCall__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getXSimpleFeatureCallAccess().getCommaKeyword_1_1_1_0()); }
)

	rule__XSimpleFeatureCall__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleFeatureCall__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getParamsAssignment_1_1_1_1()); }
(rule__XSimpleFeatureCall__ParamsAssignment_1_1_1_1)
{ after(grammarAccess.getXSimpleFeatureCallAccess().getParamsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getXConstructorCallAccess().getNewKeyword_0()); }
)

	rule__XConstructorCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeAssignment_1()); }
(rule__XConstructorCall__TypeAssignment_1)
{ after(grammarAccess.getXConstructorCallAccess().getTypeAssignment_1()); }
)

	rule__XConstructorCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_2()); }
(rule__XConstructorCall__Group_2__0)?
{ after(grammarAccess.getXConstructorCallAccess().getGroup_2()); }
)

	rule__XConstructorCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getInitializerAssignment_3()); }
(rule__XConstructorCall__InitializerAssignment_3)?
{ after(grammarAccess.getXConstructorCallAccess().getInitializerAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XConstructorCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_2_0()); }
)

	rule__XConstructorCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_2_1()); }
(rule__XConstructorCall__Group_2_1__0)?
{ after(grammarAccess.getXConstructorCallAccess().getGroup_2_1()); }
)

	rule__XConstructorCall__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XConstructorCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getParamsAssignment_2_1_0()); }
(rule__XConstructorCall__ParamsAssignment_2_1_0)
{ after(grammarAccess.getXConstructorCallAccess().getParamsAssignment_2_1_0()); }
)

	rule__XConstructorCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_2_1_1()); }
(rule__XConstructorCall__Group_2_1_1__0)*
{ after(grammarAccess.getXConstructorCallAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getXConstructorCallAccess().getCommaKeyword_2_1_1_0()); }
)

	rule__XConstructorCall__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getParamsAssignment_2_1_1_1()); }
(rule__XConstructorCall__ParamsAssignment_2_1_1_1)
{ after(grammarAccess.getXConstructorCallAccess().getParamsAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XBooleanLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0_0()); }
)

	rule__XBooleanLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XBooleanLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_0_1()); }

	'false' 

{ after(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
)

	rule__XNullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XNullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTypeLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_0()); }
(rule__XTypeLiteral__TypeAssignment_0)
{ after(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_0()); }
)

	rule__XTypeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getXTypeLiteralAccess().getFullStopKeyword_1()); }
)

	rule__XTypeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getXTypeLiteralAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XRichString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRichStringAccess().getExpressionsAssignment_0()); }
(rule__XRichString__ExpressionsAssignment_0)
{ after(grammarAccess.getXRichStringAccess().getExpressionsAssignment_0()); }
)

	rule__XRichString__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XRichString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRichStringAccess().getGroup_1()); }
(rule__XRichString__Group_1__0)*
{ after(grammarAccess.getXRichStringAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRichString__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRichStringAccess().getExpressionsAssignment_1_0()); }
(rule__XRichString__ExpressionsAssignment_1_0)
{ after(grammarAccess.getXRichStringAccess().getExpressionsAssignment_1_0()); }
)

	rule__XRichString__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XRichString__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRichStringAccess().getExpressionsAssignment_1_1()); }
(rule__XRichString__ExpressionsAssignment_1_1)
{ after(grammarAccess.getXRichStringAccess().getExpressionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
(rule__XFunctionTypeRef__Group_0__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
)

	rule__XFunctionTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

	rule__XFunctionTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
(rule__XFunctionTypeRef__ReturnTypeAssignment_2)
{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }
)

	rule__XFunctionTypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1()); }
)

	rule__XFunctionTypeRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_2()); }
(rule__XFunctionTypeRef__Group_0_2__0)*
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_2()); }
)

	rule__XFunctionTypeRef__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XFunctionTypeRef__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_2_0()); }

	',' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_2_0()); }
)

	rule__XFunctionTypeRef__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_2_1()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_2_1)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSimpleTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getTypeAssignment_0()); }
(rule__XSimpleTypeRef__TypeAssignment_0)
{ after(grammarAccess.getXSimpleTypeRefAccess().getTypeAssignment_0()); }
)

	rule__XSimpleTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getGroup_1()); }
(rule__XSimpleTypeRef__Group_1__0)?
{ after(grammarAccess.getXSimpleTypeRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSimpleTypeRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getXSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); }
)

	rule__XSimpleTypeRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleTypeRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsAssignment_1_1()); }
(rule__XSimpleTypeRef__TypeParamsAssignment_1_1)
{ after(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsAssignment_1_1()); }
)

	rule__XSimpleTypeRef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleTypeRef__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getGroup_1_2()); }
(rule__XSimpleTypeRef__Group_1_2__0)*
{ after(grammarAccess.getXSimpleTypeRefAccess().getGroup_1_2()); }
)

	rule__XSimpleTypeRef__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleTypeRef__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getXSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XSimpleTypeRef__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getXSimpleTypeRefAccess().getCommaKeyword_1_2_0()); }
)

	rule__XSimpleTypeRef__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XSimpleTypeRef__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsAssignment_1_2_1()); }
(rule__XSimpleTypeRef__TypeParamsAssignment_1_2_1)
{ after(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XWildcardParam__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getXWildcardParamAction_0()); }
(

)
{ after(grammarAccess.getXWildcardParamAccess().getXWildcardParamAction_0()); }
)

	rule__XWildcardParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XWildcardParam__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getQuestionMarkKeyword_1()); }

	'?' 

{ after(grammarAccess.getXWildcardParamAccess().getQuestionMarkKeyword_1()); }
)

	rule__XWildcardParam__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XWildcardParam__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getAlternatives_2()); }
(rule__XWildcardParam__Alternatives_2)?
{ after(grammarAccess.getXWildcardParamAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XWildcardParam__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getExtendsKeyword_2_0_0()); }

	'extends' 

{ after(grammarAccess.getXWildcardParamAccess().getExtendsKeyword_2_0_0()); }
)

	rule__XWildcardParam__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XWildcardParam__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getExtendsAssignment_2_0_1()); }
(rule__XWildcardParam__ExtendsAssignment_2_0_1)
{ after(grammarAccess.getXWildcardParamAccess().getExtendsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XWildcardParam__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getSuperKeyword_2_1_0()); }

	'super' 

{ after(grammarAccess.getXWildcardParamAccess().getSuperKeyword_2_1_0()); }
)

	rule__XWildcardParam__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XWildcardParam__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getSuperAssignment_2_1_1()); }
(rule__XWildcardParam__SuperAssignment_2_1_1)
{ after(grammarAccess.getXWildcardParamAccess().getSuperAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTypeParamDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getNameAssignment_0()); }
(rule__XTypeParamDeclaration__NameAssignment_0)
{ after(grammarAccess.getXTypeParamDeclarationAccess().getNameAssignment_0()); }
)

	rule__XTypeParamDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeParamDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getAlternatives_1()); }
(rule__XTypeParamDeclaration__Alternatives_1)?
{ after(grammarAccess.getXTypeParamDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTypeParamDeclaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getExtendsKeyword_1_0_0()); }

	'extends' 

{ after(grammarAccess.getXTypeParamDeclarationAccess().getExtendsKeyword_1_0_0()); }
)

	rule__XTypeParamDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeParamDeclaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getExtendsAssignment_1_0_1()); }
(rule__XTypeParamDeclaration__ExtendsAssignment_1_0_1)
{ after(grammarAccess.getXTypeParamDeclarationAccess().getExtendsAssignment_1_0_1()); }
)

	rule__XTypeParamDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeParamDeclaration__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_0_2()); }
(rule__XTypeParamDeclaration__Group_1_0_2__0)*
{ after(grammarAccess.getXTypeParamDeclarationAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XTypeParamDeclaration__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getAmpersandKeyword_1_0_2_0()); }

	'&' 

{ after(grammarAccess.getXTypeParamDeclarationAccess().getAmpersandKeyword_1_0_2_0()); }
)

	rule__XTypeParamDeclaration__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeParamDeclaration__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getExtendsAssignment_1_0_2_1()); }
(rule__XTypeParamDeclaration__ExtendsAssignment_1_0_2_1)
{ after(grammarAccess.getXTypeParamDeclarationAccess().getExtendsAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTypeParamDeclaration__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getSuperKeyword_1_1_0()); }

	'super' 

{ after(grammarAccess.getXTypeParamDeclarationAccess().getSuperKeyword_1_1_0()); }
)

	rule__XTypeParamDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeParamDeclaration__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getSuperAssignment_1_1_1()); }
(rule__XTypeParamDeclaration__SuperAssignment_1_1_1)
{ after(grammarAccess.getXTypeParamDeclarationAccess().getSuperAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__XFile__PackageAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFileAccess().getPackageQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getXFileAccess().getPackageQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFile__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFileAccess().getImportsXImportParserRuleCall_1_0()); }
	ruleXImport{ after(grammarAccess.getXFileAccess().getImportsXImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFile__ClassesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFileAccess().getClassesXClassParserRuleCall_2_0()); }
	ruleXClass{ after(grammarAccess.getXFileAccess().getClassesXClassParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImport__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportAccess().getImportedNamespaceXQualifiedNameWithWildCardParserRuleCall_1_0()); }
	ruleXQualifiedNameWithWildCard{ after(grammarAccess.getXImportAccess().getImportedNamespaceXQualifiedNameWithWildCardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClass__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getXClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClass__ExtendsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getExtendsXTypeRefParserRuleCall_2_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXClassAccess().getExtendsXTypeRefParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClass__ImplementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getImplementsXTypeRefParserRuleCall_3_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXClassAccess().getImplementsXTypeRefParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClass__FunctionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClassAccess().getFunctionsXFunctionParserRuleCall_5_0()); }
	ruleXFunction{ after(grammarAccess.getXClassAccess().getFunctionsXFunctionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__PrivateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getPrivatePrivateKeyword_0_0()); }
(
{ before(grammarAccess.getXFunctionAccess().getPrivatePrivateKeyword_0_0()); }

	'private' 

{ after(grammarAccess.getXFunctionAccess().getPrivatePrivateKeyword_0_0()); }
)

{ after(grammarAccess.getXFunctionAccess().getPrivatePrivateKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__TypeParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getTypeParamsXTypeParamDeclarationParserRuleCall_1_1_0()); }
	ruleXTypeParamDeclaration{ after(grammarAccess.getXFunctionAccess().getTypeParamsXTypeParamDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__TypeParamsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getTypeParamsXTypeParamDeclarationParserRuleCall_1_2_1_0()); }
	ruleXTypeParamDeclaration{ after(grammarAccess.getXFunctionAccess().getTypeParamsXTypeParamDeclarationParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__ReturnTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getReturnTypeXTypeRefParserRuleCall_2_0()); }
	ruleXTypeRef{ after(grammarAccess.getXFunctionAccess().getReturnTypeXTypeRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getXFunctionAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__DeclaredParamsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getDeclaredParamsXDeclaredParameterParserRuleCall_5_0_0()); }
	ruleXDeclaredParameter{ after(grammarAccess.getXFunctionAccess().getDeclaredParamsXDeclaredParameterParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__DeclaredParamsAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getDeclaredParamsXDeclaredParameterParserRuleCall_5_1_1_0()); }
	ruleXDeclaredParameter{ after(grammarAccess.getXFunctionAccess().getDeclaredParamsXDeclaredParameterParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__ExpressionAssignment_7_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getExpressionXExpressionParserRuleCall_7_0_1_0()); }
	ruleXExpression{ after(grammarAccess.getXFunctionAccess().getExpressionXExpressionParserRuleCall_7_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunction__ExpressionAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionAccess().getExpressionXBlockExpressionParserRuleCall_7_1_0()); }
	ruleXBlockExpression{ after(grammarAccess.getXFunctionAccess().getExpressionXBlockExpressionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getOperatorAlternatives_1_1_0()); }
(rule__XAssignment__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getXAssignmentAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getRightXOrExpressionParserRuleCall_1_2_0()); }
	ruleXOrExpression{ after(grammarAccess.getXAssignmentAccess().getRightXOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getXOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getXOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getXOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightXAndExpressionParserRuleCall_1_2_0()); }
	ruleXAndExpression{ after(grammarAccess.getXOrExpressionAccess().getRightXAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getXAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }

	'&&' 

{ after(grammarAccess.getXAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getXAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightXEqualityExpressionParserRuleCall_1_2_0()); }
	ruleXEqualityExpression{ after(grammarAccess.getXAndExpressionAccess().getRightXEqualityExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__XEqualityExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getXEqualityExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightXRelationalExpressionParserRuleCall_1_2_0()); }
	ruleXRelationalExpression{ after(grammarAccess.getXEqualityExpressionAccess().getRightXRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__TypeAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeCrossReference_1_0_2_0()); }
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeQualifiedNameParserRuleCall_1_0_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeQualifiedNameParserRuleCall_1_0_2_0_1()); }
)
{ after(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeCrossReference_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__OperatorAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getOperatorAlternatives_1_1_1_0()); }
(rule__XRelationalExpression__OperatorAlternatives_1_1_1_0)
{ after(grammarAccess.getXRelationalExpressionAccess().getOperatorAlternatives_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightXOtherOperatorExpressionParserRuleCall_1_1_2_0()); }
	ruleXOtherOperatorExpression{ after(grammarAccess.getXRelationalExpressionAccess().getRightXOtherOperatorExpressionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__XOtherOperatorExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightXAdditiveExpressionParserRuleCall_1_2_0()); }
	ruleXAdditiveExpression{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightXAdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__XAdditiveExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightXMultiplicativeExpressionParserRuleCall_1_2_0()); }
	ruleXMultiplicativeExpression{ after(grammarAccess.getXAdditiveExpressionAccess().getRightXMultiplicativeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__XMultiplicativeExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightXUnaryOperationParserRuleCall_1_2_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightXUnaryOperationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperatorAlternatives_0_1_0()); }
(rule__XUnaryOperation__OperatorAlternatives_0_1_0)
{ after(grammarAccess.getXUnaryOperationAccess().getOperatorAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__TargetAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getTargetXFeatureCallParserRuleCall_0_2_0()); }
	ruleXFeatureCall{ after(grammarAccess.getXUnaryOperationAccess().getTargetXFeatureCallParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getTypeXTypeRefParserRuleCall_1_2_0()); }
	ruleXTypeRef{ after(grammarAccess.getXUnaryOperationAccess().getTypeXTypeRefParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__TargetAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getTargetXExpressionParserRuleCall_1_4_0()); }
	ruleXExpression{ after(grammarAccess.getXUnaryOperationAccess().getTargetXExpressionParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getNameIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getXFeatureCallAccess().getNameIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__ParamsAssignment_1_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getParamsXExpressionParserRuleCall_1_3_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXFeatureCallAccess().getParamsXExpressionParserRuleCall_1_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__ParamsAssignment_1_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getParamsXExpressionParserRuleCall_1_3_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXFeatureCallAccess().getParamsXExpressionParserRuleCall_1_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ParamsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getParamsXDeclaredParameterParserRuleCall_1_0_0()); }
	ruleXDeclaredParameter{ after(grammarAccess.getXClosureAccess().getParamsXDeclaredParameterParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ParamsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getParamsXDeclaredParameterParserRuleCall_1_1_1_0()); }
	ruleXDeclaredParameter{ after(grammarAccess.getXClosureAccess().getParamsXDeclaredParameterParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExpressionXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXClosureAccess().getExpressionXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__IfAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ThenAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_4_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ElseAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_5_1_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__SwitchAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__CasesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_3_0()); }
	ruleXCasePart{ after(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__DefaultAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_4_2_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__PredicateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getPredicateXParenthesizedExpressionParserRuleCall_1_0()); }
	ruleXParenthesizedExpression{ after(grammarAccess.getXWhileExpressionAccess().getPredicateXParenthesizedExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__CaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); }
	ruleXExpressionInsideBlock{ after(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getTypeXTypeRefParserRuleCall_0_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXVariableDeclarationAccess().getTypeXTypeRefParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getXVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__RightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XDeclaredParameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDeclaredParameterAccess().getTypeXTypeRefParserRuleCall_0_0()); }
	ruleXTypeRef{ after(grammarAccess.getXDeclaredParameterAccess().getTypeXTypeRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XDeclaredParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDeclaredParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getXDeclaredParameterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSimpleFeatureCall__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getXSimpleFeatureCallAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSimpleFeatureCall__ParamsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getParamsXExpressionParserRuleCall_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXSimpleFeatureCallAccess().getParamsXExpressionParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSimpleFeatureCall__ParamsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleFeatureCallAccess().getParamsXExpressionParserRuleCall_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSimpleFeatureCallAccess().getParamsXExpressionParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeXTypeRefParserRuleCall_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXConstructorCallAccess().getTypeXTypeRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ParamsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getParamsXExpressionParserRuleCall_2_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXConstructorCallAccess().getParamsXExpressionParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ParamsAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getParamsXExpressionParserRuleCall_2_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXConstructorCallAccess().getParamsXExpressionParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__InitializerAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getInitializerXBlockExpressionParserRuleCall_3_0()); }
	ruleXBlockExpression{ after(grammarAccess.getXConstructorCallAccess().getInitializerXBlockExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__IsTrueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_0()); }
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_0()); }

	'true' 

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_0()); }
)

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIntLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getXIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRichString__ExpressionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRichStringAccess().getExpressionsXRichStringLiteralParserRuleCall_0_0()); }
	ruleXRichStringLiteral{ after(grammarAccess.getXRichStringAccess().getExpressionsXRichStringLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRichString__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRichStringAccess().getExpressionsXExpressionParserRuleCall_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXRichStringAccess().getExpressionsXExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRichString__ExpressionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRichStringAccess().getExpressionsXRichStringLiteralParserRuleCall_1_1_0()); }
	ruleXRichStringLiteral{ after(grammarAccess.getXRichStringAccess().getExpressionsXRichStringLiteralParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRichStringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRichStringLiteralAccess().getValueRICH_STRINGTerminalRuleCall_0()); }
	RULE_RICH_STRING{ after(grammarAccess.getXRichStringLiteralAccess().getValueRICH_STRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesXTypeRefParserRuleCall_0_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesXTypeRefParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesXTypeRefParserRuleCall_0_2_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesXTypeRefParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ReturnTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeXTypeRefParserRuleCall_2_0()); }
	ruleXTypeRef{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeXTypeRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSimpleTypeRef__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXSimpleTypeRefAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getXSimpleTypeRefAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSimpleTypeRef__TypeParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsXTypeParamParserRuleCall_1_1_0()); }
	ruleXTypeParam{ after(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsXTypeParamParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSimpleTypeRef__TypeParamsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsXTypeParamParserRuleCall_1_2_1_0()); }
	ruleXTypeParam{ after(grammarAccess.getXSimpleTypeRefAccess().getTypeParamsXTypeParamParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWildcardParam__ExtendsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getExtendsXTypeRefParserRuleCall_2_0_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXWildcardParamAccess().getExtendsXTypeRefParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWildcardParam__SuperAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWildcardParamAccess().getSuperXTypeRefParserRuleCall_2_1_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXWildcardParamAccess().getSuperXTypeRefParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeParamDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getXTypeParamDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeParamDeclaration__ExtendsAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getExtendsXTypeRefParserRuleCall_1_0_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXTypeParamDeclarationAccess().getExtendsXTypeRefParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeParamDeclaration__ExtendsAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getExtendsXTypeRefParserRuleCall_1_0_2_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXTypeParamDeclarationAccess().getExtendsXTypeRefParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeParamDeclaration__SuperAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeParamDeclarationAccess().getSuperXTypeRefParserRuleCall_1_1_1_0()); }
	ruleXTypeRef{ after(grammarAccess.getXTypeParamDeclarationAccess().getSuperXTypeRefParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_RICH_STRING : '\u00BB' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\u00AB')))* '\u00AB';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


