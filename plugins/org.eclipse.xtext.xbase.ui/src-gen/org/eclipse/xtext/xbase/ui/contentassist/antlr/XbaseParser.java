/*
* generated by Xtext
*/
package org.eclipse.xtext.xbase.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;

public class XbaseParser extends AbstractContentAssistParser {
	
	@Inject
	private XbaseGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.xtext.xbase.ui.contentassist.antlr.internal.InternalXbaseParser createParser() {
		org.eclipse.xtext.xbase.ui.contentassist.antlr.internal.InternalXbaseParser result = new org.eclipse.xtext.xbase.ui.contentassist.antlr.internal.InternalXbaseParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getOpAssignAccess().getAlternatives(), "rule__OpAssign__Alternatives");
					put(grammarAccess.getOpEqualityAccess().getAlternatives(), "rule__OpEquality__Alternatives");
					put(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1(), "rule__XRelationalExpression__Alternatives_1");
					put(grammarAccess.getOpCompareAccess().getAlternatives(), "rule__OpCompare__Alternatives");
					put(grammarAccess.getOpOtherAccess().getAlternatives(), "rule__OpOther__Alternatives");
					put(grammarAccess.getOpAddAccess().getAlternatives(), "rule__OpAdd__Alternatives");
					put(grammarAccess.getOpMultiAccess().getAlternatives(), "rule__OpMulti__Alternatives");
					put(grammarAccess.getXUnaryOperationAccess().getAlternatives(), "rule__XUnaryOperation__Alternatives");
					put(grammarAccess.getOpUnaryAccess().getAlternatives(), "rule__OpUnary__Alternatives");
					put(grammarAccess.getXPrimaryExpressionAccess().getAlternatives(), "rule__XPrimaryExpression__Alternatives");
					put(grammarAccess.getXSwitchExpressionAccess().getAlternatives_4_2(), "rule__XSwitchExpression__Alternatives_4_2");
					put(grammarAccess.getXCasePartAccess().getAlternatives_3(), "rule__XCasePart__Alternatives_3");
					put(grammarAccess.getXExpressionInsideBlockAccess().getAlternatives(), "rule__XExpressionInsideBlock__Alternatives");
					put(grammarAccess.getXVariableDeclarationAccess().getAlternatives_0(), "rule__XVariableDeclaration__Alternatives_0");
					put(grammarAccess.getXBooleanLiteralAccess().getAlternatives(), "rule__XBooleanLiteral__Alternatives");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_2(), "rule__XTryCatchFinallyExpression__Alternatives_2");
					put(grammarAccess.getJvmTypeReferenceAccess().getAlternatives(), "rule__JvmTypeReference__Alternatives");
					put(grammarAccess.getJvmTypeArgumentAccess().getAlternatives(), "rule__JvmTypeArgument__Alternatives");
					put(grammarAccess.getJvmWildcardTypeArgumentAccess().getAlternatives_2(), "rule__JvmWildcardTypeArgument__Alternatives_2");
					put(grammarAccess.getJvmTypeParameterAccess().getAlternatives_1(), "rule__JvmTypeParameter__Alternatives_1");
					put(grammarAccess.getXAssignmentAccess().getGroup(), "rule__XAssignment__Group__0");
					put(grammarAccess.getXAssignmentAccess().getGroup_1(), "rule__XAssignment__Group_1__0");
					put(grammarAccess.getXOrExpressionAccess().getGroup(), "rule__XOrExpression__Group__0");
					put(grammarAccess.getXOrExpressionAccess().getGroup_1(), "rule__XOrExpression__Group_1__0");
					put(grammarAccess.getXAndExpressionAccess().getGroup(), "rule__XAndExpression__Group__0");
					put(grammarAccess.getXAndExpressionAccess().getGroup_1(), "rule__XAndExpression__Group_1__0");
					put(grammarAccess.getXEqualityExpressionAccess().getGroup(), "rule__XEqualityExpression__Group__0");
					put(grammarAccess.getXEqualityExpressionAccess().getGroup_1(), "rule__XEqualityExpression__Group_1__0");
					put(grammarAccess.getXRelationalExpressionAccess().getGroup(), "rule__XRelationalExpression__Group__0");
					put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0(), "rule__XRelationalExpression__Group_1_0__0");
					put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1(), "rule__XRelationalExpression__Group_1_1__0");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup(), "rule__XOtherOperatorExpression__Group__0");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1(), "rule__XOtherOperatorExpression__Group_1__0");
					put(grammarAccess.getXAdditiveExpressionAccess().getGroup(), "rule__XAdditiveExpression__Group__0");
					put(grammarAccess.getXAdditiveExpressionAccess().getGroup_1(), "rule__XAdditiveExpression__Group_1__0");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup(), "rule__XMultiplicativeExpression__Group__0");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1(), "rule__XMultiplicativeExpression__Group_1__0");
					put(grammarAccess.getXUnaryOperationAccess().getGroup_0(), "rule__XUnaryOperation__Group_0__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup(), "rule__XFeatureCall__Group__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup_1(), "rule__XFeatureCall__Group_1__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup_1_3(), "rule__XFeatureCall__Group_1_3__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup_1_3_1(), "rule__XFeatureCall__Group_1_3_1__0");
					put(grammarAccess.getXFeatureCallAccess().getGroup_1_3_1_1(), "rule__XFeatureCall__Group_1_3_1_1__0");
					put(grammarAccess.getXClosureAccess().getGroup(), "rule__XClosure__Group__0");
					put(grammarAccess.getXClosureAccess().getGroup_1(), "rule__XClosure__Group_1__0");
					put(grammarAccess.getXClosureAccess().getGroup_1_1(), "rule__XClosure__Group_1_1__0");
					put(grammarAccess.getXCastedExpressionAccess().getGroup(), "rule__XCastedExpression__Group__0");
					put(grammarAccess.getXParenthesizedExpressionAccess().getGroup(), "rule__XParenthesizedExpression__Group__0");
					put(grammarAccess.getXIfExpressionAccess().getGroup(), "rule__XIfExpression__Group__0");
					put(grammarAccess.getXIfExpressionAccess().getGroup_5(), "rule__XIfExpression__Group_5__0");
					put(grammarAccess.getXSwitchExpressionAccess().getGroup(), "rule__XSwitchExpression__Group__0");
					put(grammarAccess.getXSwitchExpressionAccess().getGroup_4(), "rule__XSwitchExpression__Group_4__0");
					put(grammarAccess.getXSwitchExpressionAccess().getGroup_4_2_0(), "rule__XSwitchExpression__Group_4_2_0__0");
					put(grammarAccess.getXCasePartAccess().getGroup(), "rule__XCasePart__Group__0");
					put(grammarAccess.getXCasePartAccess().getGroup_1(), "rule__XCasePart__Group_1__0");
					put(grammarAccess.getXCasePartAccess().getGroup_3_0(), "rule__XCasePart__Group_3_0__0");
					put(grammarAccess.getXForLoopExpressionAccess().getGroup(), "rule__XForLoopExpression__Group__0");
					put(grammarAccess.getXWhileExpressionAccess().getGroup(), "rule__XWhileExpression__Group__0");
					put(grammarAccess.getXDoWhileExpressionAccess().getGroup(), "rule__XDoWhileExpression__Group__0");
					put(grammarAccess.getXBlockExpressionAccess().getGroup(), "rule__XBlockExpression__Group__0");
					put(grammarAccess.getXBlockExpressionAccess().getGroup_1(), "rule__XBlockExpression__Group_1__0");
					put(grammarAccess.getXVariableDeclarationAccess().getGroup(), "rule__XVariableDeclaration__Group__0");
					put(grammarAccess.getJvmFormalParameterAccess().getGroup(), "rule__JvmFormalParameter__Group__0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getGroup(), "rule__XSimpleFeatureCall__Group__0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1(), "rule__XSimpleFeatureCall__Group_1__0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1_1(), "rule__XSimpleFeatureCall__Group_1_1__0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getGroup_1_1_1(), "rule__XSimpleFeatureCall__Group_1_1_1__0");
					put(grammarAccess.getXConstructorCallAccess().getGroup(), "rule__XConstructorCall__Group__0");
					put(grammarAccess.getXConstructorCallAccess().getGroup_3(), "rule__XConstructorCall__Group_3__0");
					put(grammarAccess.getXConstructorCallAccess().getGroup_3_1(), "rule__XConstructorCall__Group_3_1__0");
					put(grammarAccess.getXBooleanLiteralAccess().getGroup_0(), "rule__XBooleanLiteral__Group_0__0");
					put(grammarAccess.getXNullLiteralAccess().getGroup(), "rule__XNullLiteral__Group__0");
					put(grammarAccess.getXTypeLiteralAccess().getGroup(), "rule__XTypeLiteral__Group__0");
					put(grammarAccess.getXThrowExpressionAccess().getGroup(), "rule__XThrowExpression__Group__0");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup(), "rule__XTryCatchFinallyExpression__Group__0");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_2_0(), "rule__XTryCatchFinallyExpression__Group_2_0__0");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_2_0_1(), "rule__XTryCatchFinallyExpression__Group_2_0_1__0");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_2_1(), "rule__XTryCatchFinallyExpression__Group_2_1__0");
					put(grammarAccess.getXCatchClauseAccess().getGroup(), "rule__XCatchClause__Group__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup(), "rule__XFunctionTypeRef__Group__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0(), "rule__XFunctionTypeRef__Group_0__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_2(), "rule__XFunctionTypeRef__Group_0_2__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup(), "rule__JvmParameterizedTypeReference__Group__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1(), "rule__JvmParameterizedTypeReference__Group_1__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2(), "rule__JvmParameterizedTypeReference__Group_1_2__0");
					put(grammarAccess.getJvmWildcardTypeArgumentAccess().getGroup(), "rule__JvmWildcardTypeArgument__Group__0");
					put(grammarAccess.getJvmUpperBoundAccess().getGroup(), "rule__JvmUpperBound__Group__0");
					put(grammarAccess.getJvmUpperBoundAndedAccess().getGroup(), "rule__JvmUpperBoundAnded__Group__0");
					put(grammarAccess.getJvmLowerBoundAccess().getGroup(), "rule__JvmLowerBound__Group__0");
					put(grammarAccess.getJvmTypeParameterAccess().getGroup(), "rule__JvmTypeParameter__Group__0");
					put(grammarAccess.getJvmTypeParameterAccess().getGroup_1_0(), "rule__JvmTypeParameter__Group_1_0__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_1(), "rule__XAssignment__FeatureAssignment_1_1");
					put(grammarAccess.getXAssignmentAccess().getParamsAssignment_1_2(), "rule__XAssignment__ParamsAssignment_1_2");
					put(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_1(), "rule__XOrExpression__FeatureAssignment_1_1");
					put(grammarAccess.getXOrExpressionAccess().getParamsAssignment_1_2(), "rule__XOrExpression__ParamsAssignment_1_2");
					put(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_1(), "rule__XAndExpression__FeatureAssignment_1_1");
					put(grammarAccess.getXAndExpressionAccess().getParamsAssignment_1_2(), "rule__XAndExpression__ParamsAssignment_1_2");
					put(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_1(), "rule__XEqualityExpression__FeatureAssignment_1_1");
					put(grammarAccess.getXEqualityExpressionAccess().getParamsAssignment_1_2(), "rule__XEqualityExpression__ParamsAssignment_1_2");
					put(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_2(), "rule__XRelationalExpression__TypeAssignment_1_0_2");
					put(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_1(), "rule__XRelationalExpression__FeatureAssignment_1_1_1");
					put(grammarAccess.getXRelationalExpressionAccess().getParamsAssignment_1_1_2(), "rule__XRelationalExpression__ParamsAssignment_1_1_2");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_1(), "rule__XOtherOperatorExpression__FeatureAssignment_1_1");
					put(grammarAccess.getXOtherOperatorExpressionAccess().getParamsAssignment_1_2(), "rule__XOtherOperatorExpression__ParamsAssignment_1_2");
					put(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_1(), "rule__XAdditiveExpression__FeatureAssignment_1_1");
					put(grammarAccess.getXAdditiveExpressionAccess().getParamsAssignment_1_2(), "rule__XAdditiveExpression__ParamsAssignment_1_2");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_1(), "rule__XMultiplicativeExpression__FeatureAssignment_1_1");
					put(grammarAccess.getXMultiplicativeExpressionAccess().getParamsAssignment_1_2(), "rule__XMultiplicativeExpression__ParamsAssignment_1_2");
					put(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1(), "rule__XUnaryOperation__FeatureAssignment_0_1");
					put(grammarAccess.getXUnaryOperationAccess().getParamsAssignment_0_2(), "rule__XUnaryOperation__ParamsAssignment_0_2");
					put(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_1_2(), "rule__XFeatureCall__FeatureAssignment_1_2");
					put(grammarAccess.getXFeatureCallAccess().getParamsAssignment_1_3_1_0(), "rule__XFeatureCall__ParamsAssignment_1_3_1_0");
					put(grammarAccess.getXFeatureCallAccess().getParamsAssignment_1_3_1_1_1(), "rule__XFeatureCall__ParamsAssignment_1_3_1_1_1");
					put(grammarAccess.getXClosureAccess().getParamsAssignment_1_0(), "rule__XClosure__ParamsAssignment_1_0");
					put(grammarAccess.getXClosureAccess().getParamsAssignment_1_1_1(), "rule__XClosure__ParamsAssignment_1_1_1");
					put(grammarAccess.getXClosureAccess().getExpressionAssignment_3(), "rule__XClosure__ExpressionAssignment_3");
					put(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_1(), "rule__XCastedExpression__TypeAssignment_1");
					put(grammarAccess.getXCastedExpressionAccess().getTargetAssignment_3(), "rule__XCastedExpression__TargetAssignment_3");
					put(grammarAccess.getXIfExpressionAccess().getIfAssignment_2(), "rule__XIfExpression__IfAssignment_2");
					put(grammarAccess.getXIfExpressionAccess().getThenAssignment_4(), "rule__XIfExpression__ThenAssignment_4");
					put(grammarAccess.getXIfExpressionAccess().getElseAssignment_5_1(), "rule__XIfExpression__ElseAssignment_5_1");
					put(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_1(), "rule__XSwitchExpression__SwitchAssignment_1");
					put(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_3(), "rule__XSwitchExpression__CasesAssignment_3");
					put(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_4_2_0_0(), "rule__XSwitchExpression__DefaultAssignment_4_2_0_0");
					put(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_4_2_1(), "rule__XSwitchExpression__DefaultAssignment_4_2_1");
					put(grammarAccess.getXCasePartAccess().getTypeGuardAssignment_0(), "rule__XCasePart__TypeGuardAssignment_0");
					put(grammarAccess.getXCasePartAccess().getCaseAssignment_1_1(), "rule__XCasePart__CaseAssignment_1_1");
					put(grammarAccess.getXCasePartAccess().getThenAssignment_3_0_0(), "rule__XCasePart__ThenAssignment_3_0_0");
					put(grammarAccess.getXCasePartAccess().getThenAssignment_3_1(), "rule__XCasePart__ThenAssignment_3_1");
					put(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_2(), "rule__XForLoopExpression__DeclaredParamAssignment_2");
					put(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_4(), "rule__XForLoopExpression__ForExpressionAssignment_4");
					put(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_6(), "rule__XForLoopExpression__EachExpressionAssignment_6");
					put(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_2(), "rule__XWhileExpression__PredicateAssignment_2");
					put(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_4(), "rule__XWhileExpression__BodyAssignment_4");
					put(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_1(), "rule__XDoWhileExpression__BodyAssignment_1");
					put(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_4(), "rule__XDoWhileExpression__PredicateAssignment_4");
					put(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_1_0(), "rule__XBlockExpression__ExpressionsAssignment_1_0");
					put(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_1(), "rule__XVariableDeclaration__TypeAssignment_1");
					put(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2(), "rule__XVariableDeclaration__NameAssignment_2");
					put(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_4(), "rule__XVariableDeclaration__RightAssignment_4");
					put(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0(), "rule__JvmFormalParameter__ParameterTypeAssignment_0");
					put(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1(), "rule__JvmFormalParameter__NameAssignment_1");
					put(grammarAccess.getXSimpleFeatureCallAccess().getFeatureAssignment_0(), "rule__XSimpleFeatureCall__FeatureAssignment_0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getParamsAssignment_1_1_0(), "rule__XSimpleFeatureCall__ParamsAssignment_1_1_0");
					put(grammarAccess.getXSimpleFeatureCallAccess().getParamsAssignment_1_1_1_1(), "rule__XSimpleFeatureCall__ParamsAssignment_1_1_1_1");
					put(grammarAccess.getXConstructorCallAccess().getTypeAssignment_1(), "rule__XConstructorCall__TypeAssignment_1");
					put(grammarAccess.getXConstructorCallAccess().getParamsAssignment_3_0(), "rule__XConstructorCall__ParamsAssignment_3_0");
					put(grammarAccess.getXConstructorCallAccess().getParamsAssignment_3_1_1(), "rule__XConstructorCall__ParamsAssignment_3_1_1");
					put(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1(), "rule__XBooleanLiteral__IsTrueAssignment_1");
					put(grammarAccess.getXIntLiteralAccess().getValueAssignment(), "rule__XIntLiteral__ValueAssignment");
					put(grammarAccess.getXStringLiteralAccess().getValueAssignment(), "rule__XStringLiteral__ValueAssignment");
					put(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_0(), "rule__XTypeLiteral__TypeAssignment_0");
					put(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_1(), "rule__XThrowExpression__ExpressionAssignment_1");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_1(), "rule__XTryCatchFinallyExpression__ExpressionAssignment_1");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_2_0_0(), "rule__XTryCatchFinallyExpression__CatchClausesAssignment_2_0_0");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_2_0_1_1(), "rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_2_0_1_1");
					put(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_2_1_1(), "rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_2_1_1");
					put(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_2(), "rule__XCatchClause__DeclaredParamAssignment_2");
					put(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_4(), "rule__XCatchClause__ExpressionAssignment_4");
					put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_1");
					put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_2_1(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_2_1");
					put(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2(), "rule__XFunctionTypeRef__ReturnTypeAssignment_2");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0(), "rule__JvmParameterizedTypeReference__TypeAssignment_0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1");
					put(grammarAccess.getJvmReferenceTypeArgumentAccess().getTypeReferenceAssignment(), "rule__JvmReferenceTypeArgument__TypeReferenceAssignment");
					put(grammarAccess.getJvmWildcardTypeArgumentAccess().getConstraintsAssignment_2_0(), "rule__JvmWildcardTypeArgument__ConstraintsAssignment_2_0");
					put(grammarAccess.getJvmWildcardTypeArgumentAccess().getConstraintsAssignment_2_1(), "rule__JvmWildcardTypeArgument__ConstraintsAssignment_2_1");
					put(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1(), "rule__JvmUpperBound__TypeReferenceAssignment_1");
					put(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1(), "rule__JvmUpperBoundAnded__TypeReferenceAssignment_1");
					put(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1(), "rule__JvmLowerBound__TypeReferenceAssignment_1");
					put(grammarAccess.getJvmTypeParameterAccess().getNameAssignment_0(), "rule__JvmTypeParameter__NameAssignment_0");
					put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_0_0(), "rule__JvmTypeParameter__ConstraintsAssignment_1_0_0");
					put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_0_1(), "rule__JvmTypeParameter__ConstraintsAssignment_1_0_1");
					put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_1(), "rule__JvmTypeParameter__ConstraintsAssignment_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.xtext.xbase.ui.contentassist.antlr.internal.InternalXbaseParser typedParser = (org.eclipse.xtext.xbase.ui.contentassist.antlr.internal.InternalXbaseParser) parser;
			typedParser.entryRuleXExpression();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public XbaseGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(XbaseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
