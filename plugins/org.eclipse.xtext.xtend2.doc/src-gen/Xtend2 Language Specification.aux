\relax 
\ifx\hyper@anchor\@undefined
\global \let \oldcontentsline\contentsline
\gdef \contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global \let \oldnewlabel\newlabel
\gdef \newlabel#1#2{\newlabelxx{#1}#2}
\gdef \newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\let \contentsline\oldcontentsline
\let \newlabel\oldnewlabel}
\else
\global \let \hyper@last\relax 
\fi

\select@language{american}
\@writefile{toc}{\select@language{american}}
\@writefile{lof}{\select@language{american}}
\@writefile{lot}{\select@language{american}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Preface}{3}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{Preface}{{1}{3}{Preface\relax }{chapter.1}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Language Concepts}{4}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{LanguageConcepts}{{2}{4}{Language Concepts\relax }{chapter.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Package Declaration}{4}{section.2.1}}
\newlabel{packageDecl}{{2.1}{4}{Package Declaration\relax }{section.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Syntax}{4}{subsection.2.1.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Imports}{4}{section.2.2}}
\newlabel{imports}{{2.2}{4}{Imports\relax }{section.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Importing Extension Methods}{4}{subsection.2.2.1}}
\newlabel{importExtension}{{2.2.1}{4}{Importing Extension Methods\relax }{subsection.2.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Syntax}{5}{subsection.2.2.2}}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Dependency Injection}{5}{section.2.3}}
\newlabel{inject}{{2.3}{5}{Dependency Injection\relax }{section.2.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}Name can be inferred}{5}{subsection.2.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.2}Guice Keys}{5}{subsection.2.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.3}Injected Extension Methods}{6}{subsection.2.3.3}}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}Class Declaration}{6}{section.2.4}}
\newlabel{classDeclaration}{{2.4}{6}{Class Declaration\relax }{section.2.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.1}Inheritance}{6}{subsection.2.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.2}Generics}{7}{subsection.2.4.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.3}Abstract Classes}{7}{subsection.2.4.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.4}Syntax}{7}{subsection.2.4.4}}
\@writefile{toc}{\contentsline {section}{\numberline {2.5}Functions}{7}{section.2.5}}
\newlabel{Functions}{{2.5}{7}{Functions\relax }{section.2.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.1}Visibility}{7}{subsection.2.5.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.2}Overriding Functions}{7}{subsection.2.5.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.3}Abstract Functions}{7}{subsection.2.5.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.4}Inferred Return Types}{8}{subsection.2.5.4}}
\newlabel{inferredReturnTypes}{{2.5.4}{8}{Inferred Return Types\relax }{subsection.2.5.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.5}Generics}{8}{subsection.2.5.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.6}Polymorphic Method Overloading}{8}{subsection.2.5.6}}
\newlabel{polymorphicDispatch}{{2.5.6}{8}{Polymorphic Method Overloading\relax }{subsection.2.5.6}{}}
\@writefile{toc}{\contentsline {subsubsection}{How overloaded method are translated to Java}{8}{section*.2}}
\@writefile{toc}{\contentsline {subsubsection}{Overloading Functions from Super Types}{10}{section*.3}}
\@writefile{toc}{\contentsline {subsubsection}{Excluding functions from polymorphic dispatch}{10}{section*.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.7}Syntax}{10}{subsection.2.5.7}}
\@writefile{toc}{\contentsline {section}{\numberline {2.6}Expressions (in addition Xbase)}{10}{section.2.6}}
\newlabel{Expressions}{{2.6}{10}{Expressions (in addition Xbase)\relax }{section.2.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6.1}Rich Strings}{10}{subsection.2.6.1}}
\@writefile{toc}{\contentsline {subsubsection}{Conditions in Rich Strings}{11}{section*.5}}
\newlabel{RichStringIF}{{2.6.1}{11}{Conditions in Rich Strings\relax }{section*.5}{}}
\@writefile{toc}{\contentsline {subsubsection}{Loops in Rich Strings}{11}{section*.6}}
\newlabel{RichStringFOREACH}{{2.6.1}{11}{Loops in Rich Strings\relax }{section*.6}{}}
\@writefile{tdo}{\contentsline {todo}{{Think about whether we really want to stick to the verbose syntax form previous Xpand for SEPARATOR and ITERATOR}}{11}{section*.7}}
\pgfsyspdfmark {pgfid1}{19562755}{21391584}
\@writefile{tdo}{\contentsline {todo}{{It should be possible to use libraries to provide access to an iterator or to pass a separator by means of closures}}{11}{section*.8}}
\pgfsyspdfmark {pgfid2}{19562755}{19271042}
\@writefile{toc}{\contentsline {subsubsection}{Typing}{11}{section*.9}}
\newlabel{RichStringType}{{2.6.1}{11}{Typing\relax }{section*.9}{}}
\@writefile{toc}{\contentsline {subsubsection}{Whitespace Handling}{12}{section*.10}}
\newlabel{WhitespaceHandling}{{2.6.1}{12}{Whitespace Handling\relax }{section*.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6.2}Extension Method Syntax}{13}{subsection.2.6.2}}
\newlabel{extensionMethods}{{2.6.2}{13}{Extension Method Syntax\relax }{subsection.2.6.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6.3}Create Expression}{14}{subsection.2.6.3}}
\newlabel{CreateExpression}{{2.6.3}{14}{Create Expression\relax }{subsection.2.6.3}{}}
