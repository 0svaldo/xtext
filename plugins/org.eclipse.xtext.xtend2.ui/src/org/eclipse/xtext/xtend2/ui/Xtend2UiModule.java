/*
 * generated by Xtext
 */
package org.eclipse.xtext.xtend2.ui;

import org.eclipse.jface.text.rules.ITokenScanner;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.ui.refactoring.IRenameStrategy;
import org.eclipse.xtext.xtend2.ui.highlighting.HighlightingConfiguration;
import org.eclipse.xtext.xtend2.ui.highlighting.RichStringAwareTokenScanner;
import org.eclipse.xtext.xtend2.ui.highlighting.RichStringHighlightingCalculator;
import org.eclipse.xtext.xtend2.ui.highlighting.TokenToAttributeIdMapper;
import org.eclipse.xtext.xtend2.ui.refactoring.Xtend2RenameStrategy;

/**
 * Use this class to register components to be used within the IDE.
 */
public class Xtend2UiModule extends org.eclipse.xtext.xtend2.ui.AbstractXtend2UiModule {
	public Xtend2UiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}
	
	public Class<? extends IHighlightingConfiguration> bindHighlightingConfiguration() {
		return HighlightingConfiguration.class;
	}
	
	public Class<? extends AbstractAntlrTokenToAttributeIdMapper> bindTokenToAttributeIdMapper() {
		return TokenToAttributeIdMapper.class;
	}
	
	@Override
	public Class<? extends ITokenScanner> bindITokenScanner() {
		return RichStringAwareTokenScanner.class;
	}
	
	public Class<? extends ISemanticHighlightingCalculator> bindSemanticHighlightingCalculator() {
		return RichStringHighlightingCalculator.class;
	}
	
	public Class<? extends IRenameStrategy.Provider> bindIRenameStrategy$Provider() {
		return Xtend2RenameStrategy.Provider.class;
		
	}
}
