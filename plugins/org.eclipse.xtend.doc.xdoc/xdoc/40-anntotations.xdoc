chapter:processedAnnotations[Processed Annotations]

Xtend comes with annotations that help to steer the compilation process.
These annotations reside in the code[org.eclipse.xtend.lib] plug-in/jar which must be on the class path
of the project containing the Xtend files. 

section:propertyAnnotation[@Property]

For fields that are annotated as codeRef[org.eclipse.xtend.lib.Property][code[Xtend][@Property]], the Xtend compiler will generate a Java field, a
getter and, if the field is non-final, a setter method. The name of the Java field will be prefixed with 
an code[_] and have the visibility of the Xtend field. The accessors methods are always code[Xtend][public]. 
Thus, an Xtend field

code[Xtend][
  @Property String name
]

will compile to the Java code

code[Java][
  private String _name;
  
  public String getName() {
    return this._name;
  }
  
  public void setName(final String name) {
    this._name = name;
  }
]

section:dataAnnotation[@Data]

The annotation codeRef[org.eclipse.xtend.lib.Data][code[Xtend][@Data]], will turn an annotated class into a value object class. A class annotated with code[Xtend][@Data] 
has the following effect:

ul[
  item[all fields are flagged final,]
  item[getter methods will be generated (if not existent),]
  item[a constructor taking parameters for all non-initialized fields will be generated (if not existent),]
  item[equals(Object) / hashCode() methods will be generated (if not existent),]
  item[a toString() method will be generated (if not existent).]
]

Example:

code[Xtend][
@Data class Person {
  String firstName
  String lastName
}
]


