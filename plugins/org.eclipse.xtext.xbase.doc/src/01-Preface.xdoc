 chapter:Preface[Preface]

This document specifies the expression language library Xbase. Xbase is a partial programming language implemented in Xtext and is ment to be embedded and extended
 within other programming languages and domain-specific languages (DSL) written in Xtext. Xtext is a highly extendable language development framework 
covering all aspects of language infrastructure such as parsers, linkers, compilers, interpreters and even full-blown IDE support based on Eclipse.  

Developing DSLs has become incredibly easy with Xtext. Defining structural languages which introduce new coarse-grained concepts, such as services, entities, value objects or 
statemachines is no problem at all and can be done in minutes. However, software systems do not consist of structures solily. At some point a system needs to do something, hence
we want to specify some behavior which is usually done using so called expressions. Expressions are really the heart of a programming language and are not so easy to get right.
That is why most people don't add support for expressions in their DSL, but try to solve this differently. The most often used workaround is to only define the structural information in the DSL 
and add behavior by modifying or extending the generated code. It is not only unpleasant to write, read and maintain information which closely belongs together in two different places, abstraction levels 
and languages. Modifying the generated source code comes with a lot of additional problems. But still as of today this is the preferred solution since adding support for expressions (and
 a corresponding compiler) for your language is hard - even with Xtext.

Xbase serves as a language library providing a common expression language bound to the Java platform (i.e. Java Virtual Machine). It ships in form of an Xtext grammar, as well as 
reusable and adaptable implementations for the different aspects of a language infrastructure such as an AST structure, a compiler, an interpreter, a linker, and a static analyzer.
In addition it comes with implementations to integrate the expression language within an Xtext-based Eclipse IDE. Default implementations for aspects like content assistance, syntax coloring, 
hovering, folding and navigation can be easily integrated and reused within any Xtext based language. 

Conceptually and syntactically, Xbase is like Java statements+expressions, with the following differences:
ul[
	item[No checked exceptions]
	item[Pure OO, i.e. no built-in types (incl. arrays) ]
	item[Everything is an expression (no statements)]
	item[Closures]
	item[Type inference]
	item[Properties]
	item[Simple operator overloading]
	item[Powerful switch expression]
]
