package org.eclipse.xtend.core.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtend.core.idea.lang.XtendElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtend.core.services.XtendGrammarAccess;

import com.intellij.lang.PsiBuilder;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2010-2015 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
@SuppressWarnings("all")
public class PsiInternalXtendParser extends AbstractPsiAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KW_Package", "KW_Semicolon", "KW_Class", "KW_LessThanSign", "KW_Comma", "KW_GreaterThanSign", "KW_Extends", "KW_Implements", "KW_LeftCurlyBracket", "KW_RightCurlyBracket", "KW_Interface", "KW_Enum", "KW_Annotation", "KW_LeftParenthesis", "KW_RightParenthesis", "KW_EqualsSignGreaterThanSign", "KW_EqualsSign", "KW_Extension", "KW_Throws", "KW_New", "KW_FullStop", "KW_Public", "KW_Private", "KW_Protected", "KW_Abstract", "KW_Static", "KW_Dispatch", "KW_Final", "KW_Strictfp", "KW_Native", "KW_Volatile", "KW_Synchronized", "KW_Transient", "KW_Val", "KW_Var", "KW_Def", "KW_Override", "KW_Create", "KW_Colon", "KW_AFTER", "KW_BEFORE", "KW_SEPARATOR", "KW_Import", "KW_FullStopFullStopFullStop", "KW_Switch", "KW_Default", "KW_FOR", "KW_ENDFOR", "KW_IF", "KW_ELSE", "KW_ENDIF", "KW_ELSEIF", "KW_CommercialAt", "KW_NumberSign", "KW_LeftSquareBracket", "KW_RightSquareBracket", "KW_PlusSignEqualsSign", "KW_HyphenMinusEqualsSign", "KW_AsteriskEqualsSign", "KW_SolidusEqualsSign", "KW_PercentSignEqualsSign", "KW_GreaterThanSignEqualsSign", "KW_VerticalLineVerticalLine", "KW_AmpersandAmpersand", "KW_EqualsSignEqualsSign", "KW_ExclamationMarkEqualsSign", "KW_EqualsSignEqualsSignEqualsSign", "KW_ExclamationMarkEqualsSignEqualsSign", "KW_Instanceof", "KW_HyphenMinusGreaterThanSign", "KW_FullStopFullStopLessThanSign", "KW_FullStopFullStop", "KW_LessThanSignGreaterThanSign", "KW_QuestionMarkColon", "KW_PlusSign", "KW_HyphenMinus", "KW_Asterisk", "KW_AsteriskAsterisk", "KW_Solidus", "KW_PercentSign", "KW_ExclamationMark", "KW_As", "KW_PlusSignPlusSign", "KW_HyphenMinusHyphenMinus", "KW_ColonColon", "KW_QuestionMarkFullStop", "KW_VerticalLine", "KW_If", "KW_Else", "KW_Case", "KW_For", "KW_While", "KW_Do", "KW_Super", "KW_False", "KW_True", "KW_Null", "KW_Typeof", "KW_Throw", "KW_Return", "KW_Try", "KW_Finally", "KW_Catch", "KW_QuestionMark", "KW_Ampersand", "RULE_ID", "RULE_STRING", "RULE_RICH_TEXT", "RULE_RICH_TEXT_START", "RULE_RICH_TEXT_INBETWEEN", "RULE_COMMENT_RICH_TEXT_INBETWEEN", "RULE_RICH_TEXT_END", "RULE_COMMENT_RICH_TEXT_END", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_IDENTIFIER_START", "RULE_UNICODE_ESCAPE", "RULE_IDENTIFIER_PART", "RULE_HEX_DIGIT", "RULE_IN_RICH_STRING", "RULE_IDENTIFIER_PART_IMPL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int RULE_COMMENT_RICH_TEXT_INBETWEEN=114;
    public static final int RULE_ID=109;
    public static final int KW_Synchronized=35;
    public static final int KW_Enum=15;
    public static final int KW_SolidusEqualsSign=63;
    public static final int KW_True=99;
    public static final int KW_PlusSignPlusSign=86;
    public static final int RULE_ANY_OTHER=129;
    public static final int KW_LeftParenthesis=17;
    public static final int RULE_IDENTIFIER_PART_IMPL=125;
    public static final int RULE_COMMENT_RICH_TEXT_END=116;
    public static final int KW_Abstract=28;
    public static final int KW_CommercialAt=56;
    public static final int EOF=-1;
    public static final int KW_Extends=10;
    public static final int KW_Strictfp=32;
    public static final int RULE_IDENTIFIER_START=120;
    public static final int KW_Finally=105;
    public static final int KW_Native=33;
    public static final int KW_LessThanSignGreaterThanSign=76;
    public static final int RULE_HEX=117;
    public static final int KW_Import=46;
    public static final int KW_VerticalLineVerticalLine=66;
    public static final int KW_HyphenMinusEqualsSign=61;
    public static final int RULE_RICH_TEXT_END=115;
    public static final int KW_Static=29;
    public static final int RULE_DECIMAL=119;
    public static final int KW_Class=6;
    public static final int KW_HyphenMinusHyphenMinus=87;
    public static final int KW_Typeof=101;
    public static final int KW_Do=96;
    public static final int KW_FullStop=24;
    public static final int KW_Annotation=16;
    public static final int KW_LessThanSign=7;
    public static final int KW_EqualsSignEqualsSignEqualsSign=70;
    public static final int KW_PlusSignEqualsSign=60;
    public static final int KW_Solidus=82;
    public static final int KW_HyphenMinus=79;
    public static final int KW_VerticalLine=90;
    public static final int RULE_HEX_DIGIT=123;
    public static final int KW_ExclamationMarkEqualsSign=69;
    public static final int KW_ExclamationMarkEqualsSignEqualsSign=71;
    public static final int RULE_IN_RICH_STRING=124;
    public static final int KW_Semicolon=5;
    public static final int RULE_ML_COMMENT=126;
    public static final int KW_PercentSignEqualsSign=64;
    public static final int KW_Ampersand=108;
    public static final int KW_Final=31;
    public static final int KW_Comma=8;
    public static final int KW_As=85;
    public static final int KW_PlusSign=78;
    public static final int RULE_STRING=110;
    public static final int KW_Default=49;
    public static final int KW_ColonColon=88;
    public static final int KW_RightCurlyBracket=13;
    public static final int KW_LeftSquareBracket=58;
    public static final int KW_New=23;
    public static final int KW_FullStopFullStopFullStop=47;
    public static final int KW_Create=41;
    public static final int KW_False=98;
    public static final int KW_PercentSign=83;
    public static final int KW_Asterisk=80;
    public static final int RULE_RICH_TEXT_START=112;
    public static final int KW_ELSE=53;
    public static final int RULE_RICH_TEXT=111;
    public static final int KW_Super=97;
    public static final int KW_Def=39;
    public static final int KW_EqualsSignGreaterThanSign=19;
    public static final int KW_QuestionMarkColon=77;
    public static final int KW_Colon=42;
    public static final int KW_FullStopFullStop=75;
    public static final int KW_Implements=11;
    public static final int KW_If=91;
    public static final int KW_Protected=27;
    public static final int KW_Transient=36;
    public static final int KW_EqualsSignEqualsSign=68;
    public static final int KW_While=95;
    public static final int KW_HyphenMinusGreaterThanSign=73;
    public static final int KW_FOR=50;
    public static final int KW_AFTER=43;
    public static final int KW_AsteriskEqualsSign=62;
    public static final int RULE_UNICODE_ESCAPE=121;
    public static final int RULE_INT=118;
    public static final int KW_Dispatch=30;
    public static final int KW_IF=52;
    public static final int KW_EqualsSign=20;
    public static final int KW_FullStopFullStopLessThanSign=74;
    public static final int KW_NumberSign=57;
    public static final int KW_Throws=22;
    public static final int RULE_IDENTIFIER_PART=122;
    public static final int KW_ENDFOR=51;
    public static final int KW_Else=92;
    public static final int KW_Override=40;
    public static final int KW_Public=25;
    public static final int KW_AsteriskAsterisk=81;
    public static final int KW_Throw=102;
    public static final int KW_Volatile=34;
    public static final int RULE_SL_COMMENT=127;
    public static final int KW_GreaterThanSign=9;
    public static final int KW_Package=4;
    public static final int KW_Catch=106;
    public static final int KW_Private=26;
    public static final int KW_ExclamationMark=84;
    public static final int KW_For=94;
    public static final int KW_Extension=21;
    public static final int KW_RightSquareBracket=59;
    public static final int KW_Var=38;
    public static final int KW_LeftCurlyBracket=12;
    public static final int KW_ELSEIF=55;
    public static final int KW_GreaterThanSignEqualsSign=65;
    public static final int KW_Null=100;
    public static final int KW_QuestionMark=107;
    public static final int KW_RightParenthesis=18;
    public static final int KW_QuestionMarkFullStop=89;
    public static final int RULE_RICH_TEXT_INBETWEEN=113;
    public static final int KW_BEFORE=44;
    public static final int KW_Return=103;
    public static final int KW_SEPARATOR=45;
    public static final int KW_Switch=48;
    public static final int KW_ENDIF=54;
    public static final int KW_AmpersandAmpersand=67;
    public static final int RULE_WS=128;
    public static final int KW_Interface=14;
    public static final int KW_Case=93;
    public static final int KW_Val=37;
    public static final int KW_Try=104;
    public static final int KW_Instanceof=72;

    // delegates
    // delegators


        public PsiInternalXtendParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public PsiInternalXtendParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return PsiInternalXtendParser.tokenNames; }
    public String getGrammarFileName() { return "PsiInternalXtend.g"; }



    	protected XtendGrammarAccess grammarAccess;

    	protected XtendElementTypeProvider elementTypeProvider;

    	public PsiInternalXtendParser(PsiBuilder builder, TokenStream input, XtendElementTypeProvider elementTypeProvider, XtendGrammarAccess grammarAccess) {
    		this(input);
    		setPsiBuilder(builder);
        	this.grammarAccess = grammarAccess;
    		this.elementTypeProvider = elementTypeProvider;
    	}

    	@Override
    	protected String getFirstRuleName() {
    		return "File";
    	}




    // $ANTLR start "entryRuleFile"
    // PsiInternalXtend.g:164:1: entryRuleFile : ruleFile EOF ;
    public final void entryRuleFile() throws RecognitionException {
        try {
            // PsiInternalXtend.g:164:14: ( ruleFile EOF )
            // PsiInternalXtend.g:165:2: ruleFile EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFileElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleFile();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFile"


    // $ANTLR start "ruleFile"
    // PsiInternalXtend.g:170:1: ruleFile : ( (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* ) ;
    public final void ruleFile() throws RecognitionException {
        Token otherlv_0=null;
        Token otherlv_2=null;

        try {
            // PsiInternalXtend.g:170:9: ( ( (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* ) )
            // PsiInternalXtend.g:171:2: ( (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* )
            {
            // PsiInternalXtend.g:171:2: ( (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* )
            // PsiInternalXtend.g:172:3: (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )*
            {
            // PsiInternalXtend.g:172:3: (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==KW_Package) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==KW_Annotation) ) {
                    int LA2_3 = input.LA(3);

                    if ( (LA2_3==KW_Annotation) ) {
                        int LA2_5 = input.LA(4);

                        if ( (LA2_5==KW_Annotation||LA2_5==KW_Create||(LA2_5>=KW_AFTER && LA2_5<=KW_SEPARATOR)||LA2_5==RULE_ID) ) {
                            alt2=1;
                        }
                    }
                    else if ( (LA2_3==EOF||(LA2_3>=KW_Package && LA2_3<=KW_Class)||(LA2_3>=KW_Interface && LA2_3<=KW_Enum)||(LA2_3>=KW_FullStop && LA2_3<=KW_Transient)||LA2_3==KW_Import||LA2_3==KW_CommercialAt) ) {
                        alt2=1;
                    }
                }
                else if ( (LA2_1==KW_Create||(LA2_1>=KW_AFTER && LA2_1<=KW_SEPARATOR)||LA2_1==RULE_ID) ) {
                    alt2=1;
                }
            }
            switch (alt2) {
                case 1 :
                    // PsiInternalXtend.g:173:4: otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )?
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getFile_PackageKeyword_0_0ElementType());
                      			
                    }
                    otherlv_0=(Token)match(input,KW_Package,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_0);
                      			
                    }
                    // PsiInternalXtend.g:180:4: ( (lv_package_1_0= ruleQualifiedName ) )
                    // PsiInternalXtend.g:181:5: (lv_package_1_0= ruleQualifiedName )
                    {
                    // PsiInternalXtend.g:181:5: (lv_package_1_0= ruleQualifiedName )
                    // PsiInternalXtend.g:182:6: lv_package_1_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getFile_PackageQualifiedNameParserRuleCall_0_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:191:4: (otherlv_2= ';' )?
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==KW_Semicolon) ) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            // PsiInternalXtend.g:192:5: otherlv_2= ';'
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getFile_SemicolonKeyword_0_2ElementType());
                              				
                            }
                            otherlv_2=(Token)match(input,KW_Semicolon,FOLLOW_5); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(otherlv_2);
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:201:3: ( (lv_importSection_3_0= ruleXImportSection ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==KW_Import) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // PsiInternalXtend.g:202:4: (lv_importSection_3_0= ruleXImportSection )
                    {
                    // PsiInternalXtend.g:202:4: (lv_importSection_3_0= ruleXImportSection )
                    // PsiInternalXtend.g:203:5: lv_importSection_3_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getFile_ImportSectionXImportSectionParserRuleCall_1_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_6);
                    ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      				
                    }

                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:212:3: ( (lv_xtendTypes_4_0= ruleType ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==KW_Package||LA4_0==KW_Class||(LA4_0>=KW_Interface && LA4_0<=KW_Annotation)||(LA4_0>=KW_Public && LA4_0<=KW_Transient)||LA4_0==KW_CommercialAt) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // PsiInternalXtend.g:213:4: (lv_xtendTypes_4_0= ruleType )
            	    {
            	    // PsiInternalXtend.g:213:4: (lv_xtendTypes_4_0= ruleType )
            	    // PsiInternalXtend.g:214:5: lv_xtendTypes_4_0= ruleType
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getFile_XtendTypesTypeParserRuleCall_2_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_6);
            	    ruleType();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleFile"


    // $ANTLR start "entryRuleType"
    // PsiInternalXtend.g:227:1: entryRuleType : ruleType EOF ;
    public final void entryRuleType() throws RecognitionException {
        try {
            // PsiInternalXtend.g:227:14: ( ruleType EOF )
            // PsiInternalXtend.g:228:2: ruleType EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getTypeElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleType();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // PsiInternalXtend.g:233:1: ruleType : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) ) ) ;
    public final void ruleType() throws RecognitionException {
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;

        try {
            // PsiInternalXtend.g:233:9: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) ) ) )
            // PsiInternalXtend.g:234:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) ) )
            {
            // PsiInternalXtend.g:234:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) ) )
            // PsiInternalXtend.g:235:3: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) )
            {
            // PsiInternalXtend.g:235:3: ()
            // PsiInternalXtend.g:236:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getType_XtendTypeDeclarationAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:241:3: ( (lv_annotations_1_0= ruleXAnnotation ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==KW_CommercialAt) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // PsiInternalXtend.g:242:4: (lv_annotations_1_0= ruleXAnnotation )
            	    {
            	    // PsiInternalXtend.g:242:4: (lv_annotations_1_0= ruleXAnnotation )
            	    // PsiInternalXtend.g:243:5: lv_annotations_1_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getType_AnnotationsXAnnotationParserRuleCall_1_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_7);
            	    ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // PsiInternalXtend.g:252:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) )
            int alt25=4;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // PsiInternalXtend.g:253:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' )
                    {
                    // PsiInternalXtend.g:253:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' )
                    // PsiInternalXtend.g:254:5: () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}'
                    {
                    // PsiInternalXtend.g:254:5: ()
                    // PsiInternalXtend.g:255:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getType_XtendClassAnnotationInfoAction_2_0_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:260:5: ( (lv_modifiers_3_0= ruleCommonModifier ) )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==KW_Package||(LA6_0>=KW_Public && LA6_0<=KW_Transient)) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // PsiInternalXtend.g:261:6: (lv_modifiers_3_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:261:6: (lv_modifiers_3_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:262:7: lv_modifiers_3_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_ModifiersCommonModifierParserRuleCall_2_0_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_ClassKeyword_2_0_2ElementType());
                      				
                    }
                    otherlv_4=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_4);
                      				
                    }
                    // PsiInternalXtend.g:278:5: ( (lv_name_5_0= ruleValidID ) )
                    // PsiInternalXtend.g:279:6: (lv_name_5_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:279:6: (lv_name_5_0= ruleValidID )
                    // PsiInternalXtend.g:280:7: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getType_NameValidIDParserRuleCall_2_0_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:289:5: (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==KW_LessThanSign) ) {
                        alt8=1;
                    }
                    switch (alt8) {
                        case 1 :
                            // PsiInternalXtend.g:290:6: otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_LessThanSignKeyword_2_0_4_0ElementType());
                              					
                            }
                            otherlv_6=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_6);
                              					
                            }
                            // PsiInternalXtend.g:297:6: ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) )
                            // PsiInternalXtend.g:298:7: (lv_typeParameters_7_0= ruleJvmTypeParameter )
                            {
                            // PsiInternalXtend.g:298:7: (lv_typeParameters_7_0= ruleJvmTypeParameter )
                            // PsiInternalXtend.g:299:8: lv_typeParameters_7_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_TypeParametersJvmTypeParameterParserRuleCall_2_0_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:308:6: (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )*
                            loop7:
                            do {
                                int alt7=2;
                                int LA7_0 = input.LA(1);

                                if ( (LA7_0==KW_Comma) ) {
                                    alt7=1;
                                }


                                switch (alt7) {
                            	case 1 :
                            	    // PsiInternalXtend.g:309:7: otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_0_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_8=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_8);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:316:7: ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) )
                            	    // PsiInternalXtend.g:317:8: (lv_typeParameters_9_0= ruleJvmTypeParameter )
                            	    {
                            	    // PsiInternalXtend.g:317:8: (lv_typeParameters_9_0= ruleJvmTypeParameter )
                            	    // PsiInternalXtend.g:318:9: lv_typeParameters_9_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_TypeParametersJvmTypeParameterParserRuleCall_2_0_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop7;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_GreaterThanSignKeyword_2_0_4_3ElementType());
                              					
                            }
                            otherlv_10=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_10);
                              					
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:336:5: (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==KW_Extends) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // PsiInternalXtend.g:337:6: otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) )
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_ExtendsKeyword_2_0_5_0ElementType());
                              					
                            }
                            otherlv_11=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_11);
                              					
                            }
                            // PsiInternalXtend.g:344:6: ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) )
                            // PsiInternalXtend.g:345:7: (lv_extends_12_0= ruleJvmParameterizedTypeReference )
                            {
                            // PsiInternalXtend.g:345:7: (lv_extends_12_0= ruleJvmParameterizedTypeReference )
                            // PsiInternalXtend.g:346:8: lv_extends_12_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:356:5: (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )?
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==KW_Implements) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            // PsiInternalXtend.g:357:6: otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )*
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_ImplementsKeyword_2_0_6_0ElementType());
                              					
                            }
                            otherlv_13=(Token)match(input,KW_Implements,FOLLOW_13); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_13);
                              					
                            }
                            // PsiInternalXtend.g:364:6: ( (lv_implements_14_0= ruleJvmSuperTypeReference ) )
                            // PsiInternalXtend.g:365:7: (lv_implements_14_0= ruleJvmSuperTypeReference )
                            {
                            // PsiInternalXtend.g:365:7: (lv_implements_14_0= ruleJvmSuperTypeReference )
                            // PsiInternalXtend.g:366:8: lv_implements_14_0= ruleJvmSuperTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_ImplementsJvmSuperTypeReferenceParserRuleCall_2_0_6_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            ruleJvmSuperTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:375:6: (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )*
                            loop10:
                            do {
                                int alt10=2;
                                int LA10_0 = input.LA(1);

                                if ( (LA10_0==KW_Comma) ) {
                                    alt10=1;
                                }


                                switch (alt10) {
                            	case 1 :
                            	    // PsiInternalXtend.g:376:7: otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_0_6_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_15=(Token)match(input,KW_Comma,FOLLOW_13); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_15);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:383:7: ( (lv_implements_16_0= ruleJvmSuperTypeReference ) )
                            	    // PsiInternalXtend.g:384:8: (lv_implements_16_0= ruleJvmSuperTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:384:8: (lv_implements_16_0= ruleJvmSuperTypeReference )
                            	    // PsiInternalXtend.g:385:9: lv_implements_16_0= ruleJvmSuperTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_ImplementsJvmSuperTypeReferenceParserRuleCall_2_0_6_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    ruleJvmSuperTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop10;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_LeftCurlyBracketKeyword_2_0_7ElementType());
                      				
                    }
                    otherlv_17=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_17);
                      				
                    }
                    // PsiInternalXtend.g:403:5: ( (lv_members_18_0= ruleMember ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==KW_Package||LA12_0==KW_Class||(LA12_0>=KW_Interface && LA12_0<=KW_LeftParenthesis)||LA12_0==KW_EqualsSignGreaterThanSign||LA12_0==KW_Extension||LA12_0==KW_New||(LA12_0>=KW_Public && LA12_0<=KW_Create)||(LA12_0>=KW_AFTER && LA12_0<=KW_SEPARATOR)||LA12_0==KW_CommercialAt||LA12_0==RULE_ID) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // PsiInternalXtend.g:404:6: (lv_members_18_0= ruleMember )
                    	    {
                    	    // PsiInternalXtend.g:404:6: (lv_members_18_0= ruleMember )
                    	    // PsiInternalXtend.g:405:7: lv_members_18_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_MembersMemberParserRuleCall_2_0_8_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_RightCurlyBracketKeyword_2_0_9ElementType());
                      				
                    }
                    otherlv_19=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_19);
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:423:4: ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' )
                    {
                    // PsiInternalXtend.g:423:4: ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' )
                    // PsiInternalXtend.g:424:5: () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}'
                    {
                    // PsiInternalXtend.g:424:5: ()
                    // PsiInternalXtend.g:425:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getType_XtendInterfaceAnnotationInfoAction_2_1_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:430:5: ( (lv_modifiers_21_0= ruleCommonModifier ) )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==KW_Package||(LA13_0>=KW_Public && LA13_0<=KW_Transient)) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // PsiInternalXtend.g:431:6: (lv_modifiers_21_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:431:6: (lv_modifiers_21_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:432:7: lv_modifiers_21_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_ModifiersCommonModifierParserRuleCall_2_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_InterfaceKeyword_2_1_2ElementType());
                      				
                    }
                    otherlv_22=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_22);
                      				
                    }
                    // PsiInternalXtend.g:448:5: ( (lv_name_23_0= ruleValidID ) )
                    // PsiInternalXtend.g:449:6: (lv_name_23_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:449:6: (lv_name_23_0= ruleValidID )
                    // PsiInternalXtend.g:450:7: lv_name_23_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getType_NameValidIDParserRuleCall_2_1_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:459:5: (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )?
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==KW_LessThanSign) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            // PsiInternalXtend.g:460:6: otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_LessThanSignKeyword_2_1_4_0ElementType());
                              					
                            }
                            otherlv_24=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_24);
                              					
                            }
                            // PsiInternalXtend.g:467:6: ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) )
                            // PsiInternalXtend.g:468:7: (lv_typeParameters_25_0= ruleJvmTypeParameter )
                            {
                            // PsiInternalXtend.g:468:7: (lv_typeParameters_25_0= ruleJvmTypeParameter )
                            // PsiInternalXtend.g:469:8: lv_typeParameters_25_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:478:6: (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )*
                            loop14:
                            do {
                                int alt14=2;
                                int LA14_0 = input.LA(1);

                                if ( (LA14_0==KW_Comma) ) {
                                    alt14=1;
                                }


                                switch (alt14) {
                            	case 1 :
                            	    // PsiInternalXtend.g:479:7: otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_1_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_26=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_26);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:486:7: ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) )
                            	    // PsiInternalXtend.g:487:8: (lv_typeParameters_27_0= ruleJvmTypeParameter )
                            	    {
                            	    // PsiInternalXtend.g:487:8: (lv_typeParameters_27_0= ruleJvmTypeParameter )
                            	    // PsiInternalXtend.g:488:9: lv_typeParameters_27_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop14;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_GreaterThanSignKeyword_2_1_4_3ElementType());
                              					
                            }
                            otherlv_28=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_28);
                              					
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:506:5: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )?
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==KW_Extends) ) {
                        alt17=1;
                    }
                    switch (alt17) {
                        case 1 :
                            // PsiInternalXtend.g:507:6: otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )*
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_ExtendsKeyword_2_1_5_0ElementType());
                              					
                            }
                            otherlv_29=(Token)match(input,KW_Extends,FOLLOW_13); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_29);
                              					
                            }
                            // PsiInternalXtend.g:514:6: ( (lv_extends_30_0= ruleJvmSuperTypeReference ) )
                            // PsiInternalXtend.g:515:7: (lv_extends_30_0= ruleJvmSuperTypeReference )
                            {
                            // PsiInternalXtend.g:515:7: (lv_extends_30_0= ruleJvmSuperTypeReference )
                            // PsiInternalXtend.g:516:8: lv_extends_30_0= ruleJvmSuperTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_ExtendsJvmSuperTypeReferenceParserRuleCall_2_1_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            ruleJvmSuperTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:525:6: (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )*
                            loop16:
                            do {
                                int alt16=2;
                                int LA16_0 = input.LA(1);

                                if ( (LA16_0==KW_Comma) ) {
                                    alt16=1;
                                }


                                switch (alt16) {
                            	case 1 :
                            	    // PsiInternalXtend.g:526:7: otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_1_5_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_31=(Token)match(input,KW_Comma,FOLLOW_13); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_31);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:533:7: ( (lv_extends_32_0= ruleJvmSuperTypeReference ) )
                            	    // PsiInternalXtend.g:534:8: (lv_extends_32_0= ruleJvmSuperTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:534:8: (lv_extends_32_0= ruleJvmSuperTypeReference )
                            	    // PsiInternalXtend.g:535:9: lv_extends_32_0= ruleJvmSuperTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_ExtendsJvmSuperTypeReferenceParserRuleCall_2_1_5_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    ruleJvmSuperTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop16;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_LeftCurlyBracketKeyword_2_1_6ElementType());
                      				
                    }
                    otherlv_33=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_33);
                      				
                    }
                    // PsiInternalXtend.g:553:5: ( (lv_members_34_0= ruleMember ) )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==KW_Package||LA18_0==KW_Class||(LA18_0>=KW_Interface && LA18_0<=KW_LeftParenthesis)||LA18_0==KW_EqualsSignGreaterThanSign||LA18_0==KW_Extension||LA18_0==KW_New||(LA18_0>=KW_Public && LA18_0<=KW_Create)||(LA18_0>=KW_AFTER && LA18_0<=KW_SEPARATOR)||LA18_0==KW_CommercialAt||LA18_0==RULE_ID) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // PsiInternalXtend.g:554:6: (lv_members_34_0= ruleMember )
                    	    {
                    	    // PsiInternalXtend.g:554:6: (lv_members_34_0= ruleMember )
                    	    // PsiInternalXtend.g:555:7: lv_members_34_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_MembersMemberParserRuleCall_2_1_7_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_RightCurlyBracketKeyword_2_1_8ElementType());
                      				
                    }
                    otherlv_35=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_35);
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:573:4: ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' )
                    {
                    // PsiInternalXtend.g:573:4: ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' )
                    // PsiInternalXtend.g:574:5: () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}'
                    {
                    // PsiInternalXtend.g:574:5: ()
                    // PsiInternalXtend.g:575:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getType_XtendEnumAnnotationInfoAction_2_2_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:580:5: ( (lv_modifiers_37_0= ruleCommonModifier ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==KW_Package||(LA19_0>=KW_Public && LA19_0<=KW_Transient)) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // PsiInternalXtend.g:581:6: (lv_modifiers_37_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:581:6: (lv_modifiers_37_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:582:7: lv_modifiers_37_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_ModifiersCommonModifierParserRuleCall_2_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_EnumKeyword_2_2_2ElementType());
                      				
                    }
                    otherlv_38=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_38);
                      				
                    }
                    // PsiInternalXtend.g:598:5: ( (lv_name_39_0= ruleValidID ) )
                    // PsiInternalXtend.g:599:6: (lv_name_39_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:599:6: (lv_name_39_0= ruleValidID )
                    // PsiInternalXtend.g:600:7: lv_name_39_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getType_NameValidIDParserRuleCall_2_2_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_LeftCurlyBracketKeyword_2_2_4ElementType());
                      				
                    }
                    otherlv_40=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_40);
                      				
                    }
                    // PsiInternalXtend.g:616:5: ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==KW_Annotation||LA21_0==KW_Create||(LA21_0>=KW_AFTER && LA21_0<=KW_SEPARATOR)||LA21_0==RULE_ID) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // PsiInternalXtend.g:617:6: ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )*
                            {
                            // PsiInternalXtend.g:617:6: ( (lv_members_41_0= ruleXtendEnumLiteral ) )
                            // PsiInternalXtend.g:618:7: (lv_members_41_0= ruleXtendEnumLiteral )
                            {
                            // PsiInternalXtend.g:618:7: (lv_members_41_0= ruleXtendEnumLiteral )
                            // PsiInternalXtend.g:619:8: lv_members_41_0= ruleXtendEnumLiteral
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_MembersXtendEnumLiteralParserRuleCall_2_2_5_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_22);
                            ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:628:6: (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )*
                            loop20:
                            do {
                                int alt20=2;
                                int LA20_0 = input.LA(1);

                                if ( (LA20_0==KW_Comma) ) {
                                    alt20=1;
                                }


                                switch (alt20) {
                            	case 1 :
                            	    // PsiInternalXtend.g:629:7: otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_2_5_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_42=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_42);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:636:7: ( (lv_members_43_0= ruleXtendEnumLiteral ) )
                            	    // PsiInternalXtend.g:637:8: (lv_members_43_0= ruleXtendEnumLiteral )
                            	    {
                            	    // PsiInternalXtend.g:637:8: (lv_members_43_0= ruleXtendEnumLiteral )
                            	    // PsiInternalXtend.g:638:9: lv_members_43_0= ruleXtendEnumLiteral
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_MembersXtendEnumLiteralParserRuleCall_2_2_5_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop20;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // PsiInternalXtend.g:649:5: (otherlv_44= ';' )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==KW_Semicolon) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // PsiInternalXtend.g:650:6: otherlv_44= ';'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_SemicolonKeyword_2_2_6ElementType());
                              					
                            }
                            otherlv_44=(Token)match(input,KW_Semicolon,FOLLOW_23); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_44);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_RightCurlyBracketKeyword_2_2_7ElementType());
                      				
                    }
                    otherlv_45=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_45);
                      				
                    }

                    }


                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:667:4: ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' )
                    {
                    // PsiInternalXtend.g:667:4: ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' )
                    // PsiInternalXtend.g:668:5: () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}'
                    {
                    // PsiInternalXtend.g:668:5: ()
                    // PsiInternalXtend.g:669:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getType_XtendAnnotationTypeAnnotationInfoAction_2_3_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:674:5: ( (lv_modifiers_47_0= ruleCommonModifier ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==KW_Package||(LA23_0>=KW_Public && LA23_0<=KW_Transient)) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // PsiInternalXtend.g:675:6: (lv_modifiers_47_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:675:6: (lv_modifiers_47_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:676:7: lv_modifiers_47_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_ModifiersCommonModifierParserRuleCall_2_3_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_AnnotationKeyword_2_3_2ElementType());
                      				
                    }
                    otherlv_48=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_48);
                      				
                    }
                    // PsiInternalXtend.g:692:5: ( (lv_name_49_0= ruleValidID ) )
                    // PsiInternalXtend.g:693:6: (lv_name_49_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:693:6: (lv_name_49_0= ruleValidID )
                    // PsiInternalXtend.g:694:7: lv_name_49_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getType_NameValidIDParserRuleCall_2_3_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_LeftCurlyBracketKeyword_2_3_4ElementType());
                      				
                    }
                    otherlv_50=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_25); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_50);
                      				
                    }
                    // PsiInternalXtend.g:710:5: ( (lv_members_51_0= ruleAnnotationField ) )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==KW_Package||LA24_0==KW_Class||(LA24_0>=KW_Interface && LA24_0<=KW_LeftParenthesis)||LA24_0==KW_EqualsSignGreaterThanSign||(LA24_0>=KW_Public && LA24_0<=KW_Var)||LA24_0==KW_Create||(LA24_0>=KW_AFTER && LA24_0<=KW_SEPARATOR)||LA24_0==KW_CommercialAt||LA24_0==RULE_ID) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // PsiInternalXtend.g:711:6: (lv_members_51_0= ruleAnnotationField )
                    	    {
                    	    // PsiInternalXtend.g:711:6: (lv_members_51_0= ruleAnnotationField )
                    	    // PsiInternalXtend.g:712:7: lv_members_51_0= ruleAnnotationField
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_MembersAnnotationFieldParserRuleCall_2_3_5_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_RightCurlyBracketKeyword_2_3_6ElementType());
                      				
                    }
                    otherlv_52=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_52);
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleJvmSuperTypeReference"
    // PsiInternalXtend.g:734:1: entryRuleJvmSuperTypeReference : ruleJvmSuperTypeReference EOF ;
    public final void entryRuleJvmSuperTypeReference() throws RecognitionException {
        try {
            // PsiInternalXtend.g:734:31: ( ruleJvmSuperTypeReference EOF )
            // PsiInternalXtend.g:735:2: ruleJvmSuperTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmSuperTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmSuperTypeReference();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmSuperTypeReference"


    // $ANTLR start "ruleJvmSuperTypeReference"
    // PsiInternalXtend.g:740:1: ruleJvmSuperTypeReference : ( ruleJvmParameterizedTypeReference | ruleXFunctionSuperTypeRef ) ;
    public final void ruleJvmSuperTypeReference() throws RecognitionException {
        try {
            // PsiInternalXtend.g:740:26: ( ( ruleJvmParameterizedTypeReference | ruleXFunctionSuperTypeRef ) )
            // PsiInternalXtend.g:741:2: ( ruleJvmParameterizedTypeReference | ruleXFunctionSuperTypeRef )
            {
            // PsiInternalXtend.g:741:2: ( ruleJvmParameterizedTypeReference | ruleXFunctionSuperTypeRef )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==KW_Annotation||LA26_0==KW_Create||(LA26_0>=KW_AFTER && LA26_0<=KW_SEPARATOR)||LA26_0==RULE_ID) ) {
                alt26=1;
            }
            else if ( (LA26_0==KW_LeftParenthesis||LA26_0==KW_EqualsSignGreaterThanSign) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // PsiInternalXtend.g:742:3: ruleJvmParameterizedTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmSuperTypeReference_JvmParameterizedTypeReferenceParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:750:3: ruleXFunctionSuperTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmSuperTypeReference_XFunctionSuperTypeRefParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXFunctionSuperTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmSuperTypeReference"


    // $ANTLR start "entryRuleXFunctionSuperTypeRef"
    // PsiInternalXtend.g:761:1: entryRuleXFunctionSuperTypeRef : ruleXFunctionSuperTypeRef EOF ;
    public final void entryRuleXFunctionSuperTypeRef() throws RecognitionException {
        try {
            // PsiInternalXtend.g:761:31: ( ruleXFunctionSuperTypeRef EOF )
            // PsiInternalXtend.g:762:2: ruleXFunctionSuperTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXFunctionSuperTypeRefElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXFunctionSuperTypeRef();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXFunctionSuperTypeRef"


    // $ANTLR start "ruleXFunctionSuperTypeRef"
    // PsiInternalXtend.g:767:1: ruleXFunctionSuperTypeRef : ( ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final void ruleXFunctionSuperTypeRef() throws RecognitionException {
        Token lv_instanceContext_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;

        try {
            // PsiInternalXtend.g:767:26: ( ( ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // PsiInternalXtend.g:768:2: ( ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // PsiInternalXtend.g:768:2: ( ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // PsiInternalXtend.g:769:3: ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // PsiInternalXtend.g:769:3: ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==KW_LeftParenthesis) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // PsiInternalXtend.g:770:4: ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    // PsiInternalXtend.g:770:4: ( (lv_instanceContext_0_0= '(' ) )
                    // PsiInternalXtend.g:771:5: (lv_instanceContext_0_0= '(' )
                    {
                    // PsiInternalXtend.g:771:5: (lv_instanceContext_0_0= '(' )
                    // PsiInternalXtend.g:772:6: lv_instanceContext_0_0= '('
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXFunctionSuperTypeRef_InstanceContextLeftParenthesisKeyword_0_0_0ElementType());
                      					
                    }
                    lv_instanceContext_0_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_26); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_instanceContext_0_0);
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:781:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( ((LA28_0>=KW_Annotation && LA28_0<=KW_LeftParenthesis)||LA28_0==KW_EqualsSignGreaterThanSign||LA28_0==KW_Create||(LA28_0>=KW_AFTER && LA28_0<=KW_SEPARATOR)||LA28_0==RULE_ID) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // PsiInternalXtend.g:782:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // PsiInternalXtend.g:782:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:783:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:783:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:784:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXFunctionSuperTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_27);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }

                            // PsiInternalXtend.g:793:5: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop27:
                            do {
                                int alt27=2;
                                int LA27_0 = input.LA(1);

                                if ( (LA27_0==KW_Comma) ) {
                                    alt27=1;
                                }


                                switch (alt27) {
                            	case 1 :
                            	    // PsiInternalXtend.g:794:6: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXFunctionSuperTypeRef_CommaKeyword_0_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_28); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_2);
                            	      					
                            	    }
                            	    // PsiInternalXtend.g:801:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // PsiInternalXtend.g:802:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:802:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // PsiInternalXtend.g:803:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXFunctionSuperTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop27;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFunctionSuperTypeRef_RightParenthesisKeyword_0_2ElementType());
                      			
                    }
                    otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_29); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_4);
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXFunctionSuperTypeRef_EqualsSignGreaterThanSignKeyword_1ElementType());
              		
            }
            otherlv_5=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_28); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_5);
              		
            }
            // PsiInternalXtend.g:829:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // PsiInternalXtend.g:830:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // PsiInternalXtend.g:830:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // PsiInternalXtend.g:831:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXFunctionSuperTypeRef_ReturnTypeJvmTypeReferenceParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXFunctionSuperTypeRef"


    // $ANTLR start "entryRuleAnnotationField"
    // PsiInternalXtend.g:844:1: entryRuleAnnotationField : ruleAnnotationField EOF ;
    public final void entryRuleAnnotationField() throws RecognitionException {
        try {
            // PsiInternalXtend.g:844:25: ( ruleAnnotationField EOF )
            // PsiInternalXtend.g:845:2: ruleAnnotationField EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getAnnotationFieldElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnnotationField();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnnotationField"


    // $ANTLR start "ruleAnnotationField"
    // PsiInternalXtend.g:850:1: ruleAnnotationField : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) ) ) ;
    public final void ruleAnnotationField() throws RecognitionException {
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_55=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_61=null;
        Token otherlv_63=null;
        Token otherlv_65=null;

        try {
            // PsiInternalXtend.g:850:20: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) ) ) )
            // PsiInternalXtend.g:851:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) ) )
            {
            // PsiInternalXtend.g:851:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) ) )
            // PsiInternalXtend.g:852:3: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) )
            {
            // PsiInternalXtend.g:852:3: ()
            // PsiInternalXtend.g:853:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getAnnotationField_XtendMemberAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:858:3: ( (lv_annotations_1_0= ruleXAnnotation ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==KW_CommercialAt) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // PsiInternalXtend.g:859:4: (lv_annotations_1_0= ruleXAnnotation )
            	    {
            	    // PsiInternalXtend.g:859:4: (lv_annotations_1_0= ruleXAnnotation )
            	    // PsiInternalXtend.g:860:5: lv_annotations_1_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getAnnotationField_AnnotationsXAnnotationParserRuleCall_1_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_30);
            	    ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            // PsiInternalXtend.g:869:3: ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) )
            int alt57=5;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // PsiInternalXtend.g:870:4: ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? )
                    {
                    // PsiInternalXtend.g:870:4: ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? )
                    // PsiInternalXtend.g:871:5: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )?
                    {
                    // PsiInternalXtend.g:871:5: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) )
                    int alt35=2;
                    alt35 = dfa35.predict(input);
                    switch (alt35) {
                        case 1 :
                            // PsiInternalXtend.g:872:6: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) )
                            {
                            // PsiInternalXtend.g:872:6: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) )
                            // PsiInternalXtend.g:873:7: () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) )
                            {
                            // PsiInternalXtend.g:873:7: ()
                            // PsiInternalXtend.g:874:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								precedeComposite(elementTypeProvider.getAnnotationField_XtendFieldAnnotationInfoAction_2_0_0_0_0ElementType());
                              								doneComposite();
                              							
                            }

                            }

                            // PsiInternalXtend.g:879:7: ( (lv_modifiers_3_0= ruleCommonModifier ) )*
                            loop31:
                            do {
                                int alt31=2;
                                int LA31_0 = input.LA(1);

                                if ( (LA31_0==KW_Package||(LA31_0>=KW_Public && LA31_0<=KW_Transient)) ) {
                                    alt31=1;
                                }


                                switch (alt31) {
                            	case 1 :
                            	    // PsiInternalXtend.g:880:8: (lv_modifiers_3_0= ruleCommonModifier )
                            	    {
                            	    // PsiInternalXtend.g:880:8: (lv_modifiers_3_0= ruleCommonModifier )
                            	    // PsiInternalXtend.g:881:9: lv_modifiers_3_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_0_0_0_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_31);
                            	    ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop31;
                                }
                            } while (true);

                            // PsiInternalXtend.g:890:7: ( (lv_modifiers_4_0= ruleFieldModifier ) )
                            // PsiInternalXtend.g:891:8: (lv_modifiers_4_0= ruleFieldModifier )
                            {
                            // PsiInternalXtend.g:891:8: (lv_modifiers_4_0= ruleFieldModifier )
                            // PsiInternalXtend.g:892:9: lv_modifiers_4_0= ruleFieldModifier
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getAnnotationField_ModifiersFieldModifierParserRuleCall_2_0_0_0_2_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_28);
                            ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:901:7: ( (lv_modifiers_5_0= ruleCommonModifier ) )*
                            loop32:
                            do {
                                int alt32=2;
                                int LA32_0 = input.LA(1);

                                if ( (LA32_0==KW_Package||(LA32_0>=KW_Public && LA32_0<=KW_Transient)) ) {
                                    alt32=1;
                                }


                                switch (alt32) {
                            	case 1 :
                            	    // PsiInternalXtend.g:902:8: (lv_modifiers_5_0= ruleCommonModifier )
                            	    {
                            	    // PsiInternalXtend.g:902:8: (lv_modifiers_5_0= ruleCommonModifier )
                            	    // PsiInternalXtend.g:903:9: lv_modifiers_5_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_0_0_0_3_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop32;
                                }
                            } while (true);

                            // PsiInternalXtend.g:912:7: ( (lv_type_6_0= ruleJvmTypeReference ) )?
                            int alt33=2;
                            alt33 = dfa33.predict(input);
                            switch (alt33) {
                                case 1 :
                                    // PsiInternalXtend.g:913:8: (lv_type_6_0= ruleJvmTypeReference )
                                    {
                                    // PsiInternalXtend.g:913:8: (lv_type_6_0= ruleJvmTypeReference )
                                    // PsiInternalXtend.g:914:9: lv_type_6_0= ruleJvmTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markComposite(elementTypeProvider.getAnnotationField_TypeJvmTypeReferenceParserRuleCall_2_0_0_0_4_0ElementType());
                                      								
                                    }
                                    pushFollow(FOLLOW_3);
                                    ruleJvmTypeReference();

                                    state._fsp--;
                                    if (state.failed) return ;
                                    if ( state.backtracking==0 ) {

                                      									doneComposite();
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }

                            // PsiInternalXtend.g:923:7: ( (lv_name_7_0= ruleValidID ) )
                            // PsiInternalXtend.g:924:8: (lv_name_7_0= ruleValidID )
                            {
                            // PsiInternalXtend.g:924:8: (lv_name_7_0= ruleValidID )
                            // PsiInternalXtend.g:925:9: lv_name_7_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_0_0_0_5_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_32);
                            ruleValidID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:936:6: ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) )
                            {
                            // PsiInternalXtend.g:936:6: ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) )
                            // PsiInternalXtend.g:937:7: () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) )
                            {
                            // PsiInternalXtend.g:937:7: ()
                            // PsiInternalXtend.g:938:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								precedeComposite(elementTypeProvider.getAnnotationField_XtendFieldAnnotationInfoAction_2_0_0_1_0ElementType());
                              								doneComposite();
                              							
                            }

                            }

                            // PsiInternalXtend.g:943:7: ( (lv_modifiers_9_0= ruleCommonModifier ) )*
                            loop34:
                            do {
                                int alt34=2;
                                int LA34_0 = input.LA(1);

                                if ( (LA34_0==KW_Package||(LA34_0>=KW_Public && LA34_0<=KW_Transient)) ) {
                                    alt34=1;
                                }


                                switch (alt34) {
                            	case 1 :
                            	    // PsiInternalXtend.g:944:8: (lv_modifiers_9_0= ruleCommonModifier )
                            	    {
                            	    // PsiInternalXtend.g:944:8: (lv_modifiers_9_0= ruleCommonModifier )
                            	    // PsiInternalXtend.g:945:9: lv_modifiers_9_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_0_0_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop34;
                                }
                            } while (true);

                            // PsiInternalXtend.g:954:7: ( (lv_type_10_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:955:8: (lv_type_10_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:955:8: (lv_type_10_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:956:9: lv_type_10_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getAnnotationField_TypeJvmTypeReferenceParserRuleCall_2_0_0_1_2_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_3);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:965:7: ( (lv_name_11_0= ruleValidID ) )
                            // PsiInternalXtend.g:966:8: (lv_name_11_0= ruleValidID )
                            {
                            // PsiInternalXtend.g:966:8: (lv_name_11_0= ruleValidID )
                            // PsiInternalXtend.g:967:9: lv_name_11_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_0_0_1_3_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_32);
                            ruleValidID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:978:5: (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )?
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==KW_EqualsSign) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            // PsiInternalXtend.g:979:6: otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) )
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_EqualsSignKeyword_2_0_1_0ElementType());
                              					
                            }
                            otherlv_12=(Token)match(input,KW_EqualsSign,FOLLOW_33); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_12);
                              					
                            }
                            // PsiInternalXtend.g:986:6: ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) )
                            // PsiInternalXtend.g:987:7: (lv_initialValue_13_0= ruleXAnnotationElementValue )
                            {
                            // PsiInternalXtend.g:987:7: (lv_initialValue_13_0= ruleXAnnotationElementValue )
                            // PsiInternalXtend.g:988:8: lv_initialValue_13_0= ruleXAnnotationElementValue
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_InitialValueXAnnotationElementValueParserRuleCall_2_0_1_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_34);
                            ruleXAnnotationElementValue();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:998:5: (otherlv_14= ';' )?
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==KW_Semicolon) ) {
                        alt37=1;
                    }
                    switch (alt37) {
                        case 1 :
                            // PsiInternalXtend.g:999:6: otherlv_14= ';'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_SemicolonKeyword_2_0_2ElementType());
                              					
                            }
                            otherlv_14=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_14);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:1009:4: ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' )
                    {
                    // PsiInternalXtend.g:1009:4: ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' )
                    // PsiInternalXtend.g:1010:5: () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}'
                    {
                    // PsiInternalXtend.g:1010:5: ()
                    // PsiInternalXtend.g:1011:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getAnnotationField_XtendClassAnnotationInfoAction_2_1_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:1016:5: ( (lv_modifiers_16_0= ruleCommonModifier ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==KW_Package||(LA38_0>=KW_Public && LA38_0<=KW_Transient)) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1017:6: (lv_modifiers_16_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:1017:6: (lv_modifiers_16_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:1018:7: lv_modifiers_16_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_ClassKeyword_2_1_2ElementType());
                      				
                    }
                    otherlv_17=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_17);
                      				
                    }
                    // PsiInternalXtend.g:1034:5: ( (lv_name_18_0= ruleValidID ) )
                    // PsiInternalXtend.g:1035:6: (lv_name_18_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:1035:6: (lv_name_18_0= ruleValidID )
                    // PsiInternalXtend.g:1036:7: lv_name_18_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_1_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:1045:5: (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==KW_LessThanSign) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // PsiInternalXtend.g:1046:6: otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_LessThanSignKeyword_2_1_4_0ElementType());
                              					
                            }
                            otherlv_19=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_19);
                              					
                            }
                            // PsiInternalXtend.g:1053:6: ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) )
                            // PsiInternalXtend.g:1054:7: (lv_typeParameters_20_0= ruleJvmTypeParameter )
                            {
                            // PsiInternalXtend.g:1054:7: (lv_typeParameters_20_0= ruleJvmTypeParameter )
                            // PsiInternalXtend.g:1055:8: lv_typeParameters_20_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:1064:6: (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )*
                            loop39:
                            do {
                                int alt39=2;
                                int LA39_0 = input.LA(1);

                                if ( (LA39_0==KW_Comma) ) {
                                    alt39=1;
                                }


                                switch (alt39) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1065:7: otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_1_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_21=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_21);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:1072:7: ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) )
                            	    // PsiInternalXtend.g:1073:8: (lv_typeParameters_22_0= ruleJvmTypeParameter )
                            	    {
                            	    // PsiInternalXtend.g:1073:8: (lv_typeParameters_22_0= ruleJvmTypeParameter )
                            	    // PsiInternalXtend.g:1074:9: lv_typeParameters_22_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop39;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_GreaterThanSignKeyword_2_1_4_3ElementType());
                              					
                            }
                            otherlv_23=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_23);
                              					
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:1092:5: (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==KW_Extends) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // PsiInternalXtend.g:1093:6: otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) )
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_ExtendsKeyword_2_1_5_0ElementType());
                              					
                            }
                            otherlv_24=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_24);
                              					
                            }
                            // PsiInternalXtend.g:1100:6: ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) )
                            // PsiInternalXtend.g:1101:7: (lv_extends_25_0= ruleJvmParameterizedTypeReference )
                            {
                            // PsiInternalXtend.g:1101:7: (lv_extends_25_0= ruleJvmParameterizedTypeReference )
                            // PsiInternalXtend.g:1102:8: lv_extends_25_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:1112:5: (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==KW_Implements) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // PsiInternalXtend.g:1113:6: otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_ImplementsKeyword_2_1_6_0ElementType());
                              					
                            }
                            otherlv_26=(Token)match(input,KW_Implements,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_26);
                              					
                            }
                            // PsiInternalXtend.g:1120:6: ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) )
                            // PsiInternalXtend.g:1121:7: (lv_implements_27_0= ruleJvmParameterizedTypeReference )
                            {
                            // PsiInternalXtend.g:1121:7: (lv_implements_27_0= ruleJvmParameterizedTypeReference )
                            // PsiInternalXtend.g:1122:8: lv_implements_27_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_ImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:1131:6: (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop42:
                            do {
                                int alt42=2;
                                int LA42_0 = input.LA(1);

                                if ( (LA42_0==KW_Comma) ) {
                                    alt42=1;
                                }


                                switch (alt42) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1132:7: otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_1_6_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_28=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_28);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:1139:7: ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) )
                            	    // PsiInternalXtend.g:1140:8: (lv_implements_29_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:1140:8: (lv_implements_29_0= ruleJvmParameterizedTypeReference )
                            	    // PsiInternalXtend.g:1141:9: lv_implements_29_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop42;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_LeftCurlyBracketKeyword_2_1_7ElementType());
                      				
                    }
                    otherlv_30=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_30);
                      				
                    }
                    // PsiInternalXtend.g:1159:5: ( (lv_members_31_0= ruleMember ) )*
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==KW_Package||LA44_0==KW_Class||(LA44_0>=KW_Interface && LA44_0<=KW_LeftParenthesis)||LA44_0==KW_EqualsSignGreaterThanSign||LA44_0==KW_Extension||LA44_0==KW_New||(LA44_0>=KW_Public && LA44_0<=KW_Create)||(LA44_0>=KW_AFTER && LA44_0<=KW_SEPARATOR)||LA44_0==KW_CommercialAt||LA44_0==RULE_ID) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1160:6: (lv_members_31_0= ruleMember )
                    	    {
                    	    // PsiInternalXtend.g:1160:6: (lv_members_31_0= ruleMember )
                    	    // PsiInternalXtend.g:1161:7: lv_members_31_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_MembersMemberParserRuleCall_2_1_8_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_RightCurlyBracketKeyword_2_1_9ElementType());
                      				
                    }
                    otherlv_32=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_32);
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:1179:4: ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' )
                    {
                    // PsiInternalXtend.g:1179:4: ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' )
                    // PsiInternalXtend.g:1180:5: () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}'
                    {
                    // PsiInternalXtend.g:1180:5: ()
                    // PsiInternalXtend.g:1181:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getAnnotationField_XtendInterfaceAnnotationInfoAction_2_2_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:1186:5: ( (lv_modifiers_34_0= ruleCommonModifier ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==KW_Package||(LA45_0>=KW_Public && LA45_0<=KW_Transient)) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1187:6: (lv_modifiers_34_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:1187:6: (lv_modifiers_34_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:1188:7: lv_modifiers_34_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_InterfaceKeyword_2_2_2ElementType());
                      				
                    }
                    otherlv_35=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_35);
                      				
                    }
                    // PsiInternalXtend.g:1204:5: ( (lv_name_36_0= ruleValidID ) )
                    // PsiInternalXtend.g:1205:6: (lv_name_36_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:1205:6: (lv_name_36_0= ruleValidID )
                    // PsiInternalXtend.g:1206:7: lv_name_36_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_2_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:1215:5: (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==KW_LessThanSign) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // PsiInternalXtend.g:1216:6: otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_LessThanSignKeyword_2_2_4_0ElementType());
                              					
                            }
                            otherlv_37=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_37);
                              					
                            }
                            // PsiInternalXtend.g:1223:6: ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) )
                            // PsiInternalXtend.g:1224:7: (lv_typeParameters_38_0= ruleJvmTypeParameter )
                            {
                            // PsiInternalXtend.g:1224:7: (lv_typeParameters_38_0= ruleJvmTypeParameter )
                            // PsiInternalXtend.g:1225:8: lv_typeParameters_38_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_TypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:1234:6: (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )*
                            loop46:
                            do {
                                int alt46=2;
                                int LA46_0 = input.LA(1);

                                if ( (LA46_0==KW_Comma) ) {
                                    alt46=1;
                                }


                                switch (alt46) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1235:7: otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_2_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_39=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_39);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:1242:7: ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) )
                            	    // PsiInternalXtend.g:1243:8: (lv_typeParameters_40_0= ruleJvmTypeParameter )
                            	    {
                            	    // PsiInternalXtend.g:1243:8: (lv_typeParameters_40_0= ruleJvmTypeParameter )
                            	    // PsiInternalXtend.g:1244:9: lv_typeParameters_40_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_TypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop46;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_GreaterThanSignKeyword_2_2_4_3ElementType());
                              					
                            }
                            otherlv_41=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_41);
                              					
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:1262:5: (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==KW_Extends) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // PsiInternalXtend.g:1263:6: otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_ExtendsKeyword_2_2_5_0ElementType());
                              					
                            }
                            otherlv_42=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_42);
                              					
                            }
                            // PsiInternalXtend.g:1270:6: ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) )
                            // PsiInternalXtend.g:1271:7: (lv_extends_43_0= ruleJvmParameterizedTypeReference )
                            {
                            // PsiInternalXtend.g:1271:7: (lv_extends_43_0= ruleJvmParameterizedTypeReference )
                            // PsiInternalXtend.g:1272:8: lv_extends_43_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:1281:6: (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop48:
                            do {
                                int alt48=2;
                                int LA48_0 = input.LA(1);

                                if ( (LA48_0==KW_Comma) ) {
                                    alt48=1;
                                }


                                switch (alt48) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1282:7: otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_2_5_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_44=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_44);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:1289:7: ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) )
                            	    // PsiInternalXtend.g:1290:8: (lv_extends_45_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:1290:8: (lv_extends_45_0= ruleJvmParameterizedTypeReference )
                            	    // PsiInternalXtend.g:1291:9: lv_extends_45_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop48;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_LeftCurlyBracketKeyword_2_2_6ElementType());
                      				
                    }
                    otherlv_46=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_46);
                      				
                    }
                    // PsiInternalXtend.g:1309:5: ( (lv_members_47_0= ruleMember ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==KW_Package||LA50_0==KW_Class||(LA50_0>=KW_Interface && LA50_0<=KW_LeftParenthesis)||LA50_0==KW_EqualsSignGreaterThanSign||LA50_0==KW_Extension||LA50_0==KW_New||(LA50_0>=KW_Public && LA50_0<=KW_Create)||(LA50_0>=KW_AFTER && LA50_0<=KW_SEPARATOR)||LA50_0==KW_CommercialAt||LA50_0==RULE_ID) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1310:6: (lv_members_47_0= ruleMember )
                    	    {
                    	    // PsiInternalXtend.g:1310:6: (lv_members_47_0= ruleMember )
                    	    // PsiInternalXtend.g:1311:7: lv_members_47_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_MembersMemberParserRuleCall_2_2_7_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_RightCurlyBracketKeyword_2_2_8ElementType());
                      				
                    }
                    otherlv_48=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_48);
                      				
                    }

                    }


                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:1329:4: ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' )
                    {
                    // PsiInternalXtend.g:1329:4: ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' )
                    // PsiInternalXtend.g:1330:5: () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}'
                    {
                    // PsiInternalXtend.g:1330:5: ()
                    // PsiInternalXtend.g:1331:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getAnnotationField_XtendEnumAnnotationInfoAction_2_3_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:1336:5: ( (lv_modifiers_50_0= ruleCommonModifier ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==KW_Package||(LA51_0>=KW_Public && LA51_0<=KW_Transient)) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1337:6: (lv_modifiers_50_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:1337:6: (lv_modifiers_50_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:1338:7: lv_modifiers_50_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_3_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_EnumKeyword_2_3_2ElementType());
                      				
                    }
                    otherlv_51=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_51);
                      				
                    }
                    // PsiInternalXtend.g:1354:5: ( (lv_name_52_0= ruleValidID ) )
                    // PsiInternalXtend.g:1355:6: (lv_name_52_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:1355:6: (lv_name_52_0= ruleValidID )
                    // PsiInternalXtend.g:1356:7: lv_name_52_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_3_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_LeftCurlyBracketKeyword_2_3_4ElementType());
                      				
                    }
                    otherlv_53=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_53);
                      				
                    }
                    // PsiInternalXtend.g:1372:5: ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==KW_Annotation||LA53_0==KW_Create||(LA53_0>=KW_AFTER && LA53_0<=KW_SEPARATOR)||LA53_0==RULE_ID) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // PsiInternalXtend.g:1373:6: ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )*
                            {
                            // PsiInternalXtend.g:1373:6: ( (lv_members_54_0= ruleXtendEnumLiteral ) )
                            // PsiInternalXtend.g:1374:7: (lv_members_54_0= ruleXtendEnumLiteral )
                            {
                            // PsiInternalXtend.g:1374:7: (lv_members_54_0= ruleXtendEnumLiteral )
                            // PsiInternalXtend.g:1375:8: lv_members_54_0= ruleXtendEnumLiteral
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_MembersXtendEnumLiteralParserRuleCall_2_3_5_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_22);
                            ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:1384:6: (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )*
                            loop52:
                            do {
                                int alt52=2;
                                int LA52_0 = input.LA(1);

                                if ( (LA52_0==KW_Comma) ) {
                                    alt52=1;
                                }


                                switch (alt52) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1385:7: otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_3_5_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_55=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_55);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:1392:7: ( (lv_members_56_0= ruleXtendEnumLiteral ) )
                            	    // PsiInternalXtend.g:1393:8: (lv_members_56_0= ruleXtendEnumLiteral )
                            	    {
                            	    // PsiInternalXtend.g:1393:8: (lv_members_56_0= ruleXtendEnumLiteral )
                            	    // PsiInternalXtend.g:1394:9: lv_members_56_0= ruleXtendEnumLiteral
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_MembersXtendEnumLiteralParserRuleCall_2_3_5_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop52;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // PsiInternalXtend.g:1405:5: (otherlv_57= ';' )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==KW_Semicolon) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // PsiInternalXtend.g:1406:6: otherlv_57= ';'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_SemicolonKeyword_2_3_6ElementType());
                              					
                            }
                            otherlv_57=(Token)match(input,KW_Semicolon,FOLLOW_23); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_57);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_RightCurlyBracketKeyword_2_3_7ElementType());
                      				
                    }
                    otherlv_58=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_58);
                      				
                    }

                    }


                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:1423:4: ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' )
                    {
                    // PsiInternalXtend.g:1423:4: ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' )
                    // PsiInternalXtend.g:1424:5: () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}'
                    {
                    // PsiInternalXtend.g:1424:5: ()
                    // PsiInternalXtend.g:1425:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getAnnotationField_XtendAnnotationTypeAnnotationInfoAction_2_4_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:1430:5: ( (lv_modifiers_60_0= ruleCommonModifier ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==KW_Package||(LA55_0>=KW_Public && LA55_0<=KW_Transient)) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1431:6: (lv_modifiers_60_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:1431:6: (lv_modifiers_60_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:1432:7: lv_modifiers_60_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_4_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_AnnotationKeyword_2_4_2ElementType());
                      				
                    }
                    otherlv_61=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_61);
                      				
                    }
                    // PsiInternalXtend.g:1448:5: ( (lv_name_62_0= ruleValidID ) )
                    // PsiInternalXtend.g:1449:6: (lv_name_62_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:1449:6: (lv_name_62_0= ruleValidID )
                    // PsiInternalXtend.g:1450:7: lv_name_62_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_4_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_LeftCurlyBracketKeyword_2_4_4ElementType());
                      				
                    }
                    otherlv_63=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_25); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_63);
                      				
                    }
                    // PsiInternalXtend.g:1466:5: ( (lv_members_64_0= ruleAnnotationField ) )*
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==KW_Package||LA56_0==KW_Class||(LA56_0>=KW_Interface && LA56_0<=KW_LeftParenthesis)||LA56_0==KW_EqualsSignGreaterThanSign||(LA56_0>=KW_Public && LA56_0<=KW_Var)||LA56_0==KW_Create||(LA56_0>=KW_AFTER && LA56_0<=KW_SEPARATOR)||LA56_0==KW_CommercialAt||LA56_0==RULE_ID) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1467:6: (lv_members_64_0= ruleAnnotationField )
                    	    {
                    	    // PsiInternalXtend.g:1467:6: (lv_members_64_0= ruleAnnotationField )
                    	    // PsiInternalXtend.g:1468:7: lv_members_64_0= ruleAnnotationField
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_MembersAnnotationFieldParserRuleCall_2_4_5_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_RightCurlyBracketKeyword_2_4_6ElementType());
                      				
                    }
                    otherlv_65=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_65);
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleAnnotationField"


    // $ANTLR start "entryRuleMember"
    // PsiInternalXtend.g:1490:1: entryRuleMember : ruleMember EOF ;
    public final void entryRuleMember() throws RecognitionException {
        try {
            // PsiInternalXtend.g:1490:16: ( ruleMember EOF )
            // PsiInternalXtend.g:1491:2: ruleMember EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getMemberElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleMember();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMember"


    // $ANTLR start "ruleMember"
    // PsiInternalXtend.g:1496:1: ruleMember : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) ) ) ;
    public final void ruleMember() throws RecognitionException {
        Token lv_modifiers_8_0=null;
        Token lv_modifiers_15_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_37=null;
        Token otherlv_40=null;
        Token otherlv_43=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_55=null;
        Token otherlv_59=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token otherlv_75=null;
        Token otherlv_80=null;
        Token otherlv_82=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token otherlv_89=null;
        Token otherlv_91=null;
        Token otherlv_93=null;
        Token otherlv_95=null;
        Token otherlv_98=null;
        Token otherlv_100=null;
        Token otherlv_102=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_109=null;
        Token otherlv_111=null;
        Token otherlv_114=null;
        Token otherlv_116=null;
        Token otherlv_118=null;
        Token otherlv_120=null;
        Token otherlv_121=null;
        Token otherlv_124=null;
        Token otherlv_126=null;
        Token otherlv_128=null;

        try {
            // PsiInternalXtend.g:1496:11: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) ) ) )
            // PsiInternalXtend.g:1497:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) ) )
            {
            // PsiInternalXtend.g:1497:2: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) ) )
            // PsiInternalXtend.g:1498:3: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) )
            {
            // PsiInternalXtend.g:1498:3: ()
            // PsiInternalXtend.g:1499:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getMember_XtendMemberAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:1504:3: ( (lv_annotations_1_0= ruleXAnnotation ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==KW_CommercialAt) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // PsiInternalXtend.g:1505:4: (lv_annotations_1_0= ruleXAnnotation )
            	    {
            	    // PsiInternalXtend.g:1505:4: (lv_annotations_1_0= ruleXAnnotation )
            	    // PsiInternalXtend.g:1506:5: lv_annotations_1_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getMember_AnnotationsXAnnotationParserRuleCall_1_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_35);
            	    ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            // PsiInternalXtend.g:1515:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) )
            int alt106=7;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    // PsiInternalXtend.g:1516:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? )
                    {
                    // PsiInternalXtend.g:1516:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? )
                    // PsiInternalXtend.g:1517:5: () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )?
                    {
                    // PsiInternalXtend.g:1517:5: ()
                    // PsiInternalXtend.g:1518:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendFieldAnnotationInfoAction_2_0_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:1523:5: ( (lv_modifiers_3_0= ruleCommonModifier ) )*
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==KW_Package||(LA59_0>=KW_Public && LA59_0<=KW_Transient)) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1524:6: (lv_modifiers_3_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:1524:6: (lv_modifiers_3_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:1525:7: lv_modifiers_3_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop59;
                        }
                    } while (true);

                    // PsiInternalXtend.g:1534:5: ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) )
                    int alt67=4;
                    alt67 = dfa67.predict(input);
                    switch (alt67) {
                        case 1 :
                            // PsiInternalXtend.g:1535:6: ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) )
                            {
                            // PsiInternalXtend.g:1535:6: ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) )
                            // PsiInternalXtend.g:1536:7: ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) )
                            {
                            // PsiInternalXtend.g:1536:7: ( (lv_modifiers_4_0= ruleFieldModifier ) )
                            // PsiInternalXtend.g:1537:8: (lv_modifiers_4_0= ruleFieldModifier )
                            {
                            // PsiInternalXtend.g:1537:8: (lv_modifiers_4_0= ruleFieldModifier )
                            // PsiInternalXtend.g:1538:9: lv_modifiers_4_0= ruleFieldModifier
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_ModifiersFieldModifierParserRuleCall_2_0_2_0_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_28);
                            ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:1547:7: ( (lv_modifiers_5_0= ruleCommonModifier ) )*
                            loop60:
                            do {
                                int alt60=2;
                                int LA60_0 = input.LA(1);

                                if ( (LA60_0==KW_Package||(LA60_0>=KW_Public && LA60_0<=KW_Transient)) ) {
                                    alt60=1;
                                }


                                switch (alt60) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1548:8: (lv_modifiers_5_0= ruleCommonModifier )
                            	    {
                            	    // PsiInternalXtend.g:1548:8: (lv_modifiers_5_0= ruleCommonModifier )
                            	    // PsiInternalXtend.g:1549:9: lv_modifiers_5_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_2_0_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop60;
                                }
                            } while (true);

                            // PsiInternalXtend.g:1558:7: ( (lv_type_6_0= ruleJvmTypeReference ) )?
                            int alt61=2;
                            alt61 = dfa61.predict(input);
                            switch (alt61) {
                                case 1 :
                                    // PsiInternalXtend.g:1559:8: (lv_type_6_0= ruleJvmTypeReference )
                                    {
                                    // PsiInternalXtend.g:1559:8: (lv_type_6_0= ruleJvmTypeReference )
                                    // PsiInternalXtend.g:1560:9: lv_type_6_0= ruleJvmTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markComposite(elementTypeProvider.getMember_TypeJvmTypeReferenceParserRuleCall_2_0_2_0_2_0ElementType());
                                      								
                                    }
                                    pushFollow(FOLLOW_3);
                                    ruleJvmTypeReference();

                                    state._fsp--;
                                    if (state.failed) return ;
                                    if ( state.backtracking==0 ) {

                                      									doneComposite();
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }

                            // PsiInternalXtend.g:1569:7: ( (lv_name_7_0= ruleValidID ) )
                            // PsiInternalXtend.g:1570:8: (lv_name_7_0= ruleValidID )
                            {
                            // PsiInternalXtend.g:1570:8: (lv_name_7_0= ruleValidID )
                            // PsiInternalXtend.g:1571:9: lv_name_7_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_0_2_0_3_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_32);
                            ruleValidID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:1582:6: ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? )
                            {
                            // PsiInternalXtend.g:1582:6: ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? )
                            // PsiInternalXtend.g:1583:7: ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )?
                            {
                            // PsiInternalXtend.g:1583:7: ( (lv_modifiers_8_0= 'extension' ) )
                            // PsiInternalXtend.g:1584:8: (lv_modifiers_8_0= 'extension' )
                            {
                            // PsiInternalXtend.g:1584:8: (lv_modifiers_8_0= 'extension' )
                            // PsiInternalXtend.g:1585:9: lv_modifiers_8_0= 'extension'
                            {
                            if ( state.backtracking==0 ) {

                              									markLeaf(elementTypeProvider.getMember_ModifiersExtensionKeyword_2_0_2_1_0_0ElementType());
                              								
                            }
                            lv_modifiers_8_0=(Token)match(input,KW_Extension,FOLLOW_28); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneLeaf(lv_modifiers_8_0);
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:1594:7: ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )*
                            loop62:
                            do {
                                int alt62=3;
                                int LA62_0 = input.LA(1);

                                if ( ((LA62_0>=KW_Val && LA62_0<=KW_Var)) ) {
                                    alt62=1;
                                }
                                else if ( (LA62_0==KW_Package||(LA62_0>=KW_Public && LA62_0<=KW_Transient)) ) {
                                    alt62=2;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1595:8: ( (lv_modifiers_9_0= ruleFieldModifier ) )
                            	    {
                            	    // PsiInternalXtend.g:1595:8: ( (lv_modifiers_9_0= ruleFieldModifier ) )
                            	    // PsiInternalXtend.g:1596:9: (lv_modifiers_9_0= ruleFieldModifier )
                            	    {
                            	    // PsiInternalXtend.g:1596:9: (lv_modifiers_9_0= ruleFieldModifier )
                            	    // PsiInternalXtend.g:1597:10: lv_modifiers_9_0= ruleFieldModifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										markComposite(elementTypeProvider.getMember_ModifiersFieldModifierParserRuleCall_2_0_2_1_1_0_0ElementType());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    ruleFieldModifier();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      										doneComposite();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // PsiInternalXtend.g:1607:8: ( (lv_modifiers_10_0= ruleCommonModifier ) )
                            	    {
                            	    // PsiInternalXtend.g:1607:8: ( (lv_modifiers_10_0= ruleCommonModifier ) )
                            	    // PsiInternalXtend.g:1608:9: (lv_modifiers_10_0= ruleCommonModifier )
                            	    {
                            	    // PsiInternalXtend.g:1608:9: (lv_modifiers_10_0= ruleCommonModifier )
                            	    // PsiInternalXtend.g:1609:10: lv_modifiers_10_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_2_1_1_1_0ElementType());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      										doneComposite();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);

                            // PsiInternalXtend.g:1619:7: ( (lv_type_11_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:1620:8: (lv_type_11_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:1620:8: (lv_type_11_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:1621:9: lv_type_11_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_TypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_36);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:1630:7: ( (lv_name_12_0= ruleValidID ) )?
                            int alt63=2;
                            alt63 = dfa63.predict(input);
                            switch (alt63) {
                                case 1 :
                                    // PsiInternalXtend.g:1631:8: (lv_name_12_0= ruleValidID )
                                    {
                                    // PsiInternalXtend.g:1631:8: (lv_name_12_0= ruleValidID )
                                    // PsiInternalXtend.g:1632:9: lv_name_12_0= ruleValidID
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_0_2_1_3_0ElementType());
                                      								
                                    }
                                    pushFollow(FOLLOW_32);
                                    ruleValidID();

                                    state._fsp--;
                                    if (state.failed) return ;
                                    if ( state.backtracking==0 ) {

                                      									doneComposite();
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // PsiInternalXtend.g:1643:6: ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? )
                            {
                            // PsiInternalXtend.g:1643:6: ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? )
                            // PsiInternalXtend.g:1644:7: ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )?
                            {
                            // PsiInternalXtend.g:1644:7: ( (lv_modifiers_13_0= ruleFieldModifier ) )
                            // PsiInternalXtend.g:1645:8: (lv_modifiers_13_0= ruleFieldModifier )
                            {
                            // PsiInternalXtend.g:1645:8: (lv_modifiers_13_0= ruleFieldModifier )
                            // PsiInternalXtend.g:1646:9: lv_modifiers_13_0= ruleFieldModifier
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_ModifiersFieldModifierParserRuleCall_2_0_2_2_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_37);
                            ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:1655:7: ( (lv_modifiers_14_0= ruleCommonModifier ) )*
                            loop64:
                            do {
                                int alt64=2;
                                int LA64_0 = input.LA(1);

                                if ( (LA64_0==KW_Package||(LA64_0>=KW_Public && LA64_0<=KW_Transient)) ) {
                                    alt64=1;
                                }


                                switch (alt64) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1656:8: (lv_modifiers_14_0= ruleCommonModifier )
                            	    {
                            	    // PsiInternalXtend.g:1656:8: (lv_modifiers_14_0= ruleCommonModifier )
                            	    // PsiInternalXtend.g:1657:9: lv_modifiers_14_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_2_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_37);
                            	    ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop64;
                                }
                            } while (true);

                            // PsiInternalXtend.g:1666:7: ( (lv_modifiers_15_0= 'extension' ) )
                            // PsiInternalXtend.g:1667:8: (lv_modifiers_15_0= 'extension' )
                            {
                            // PsiInternalXtend.g:1667:8: (lv_modifiers_15_0= 'extension' )
                            // PsiInternalXtend.g:1668:9: lv_modifiers_15_0= 'extension'
                            {
                            if ( state.backtracking==0 ) {

                              									markLeaf(elementTypeProvider.getMember_ModifiersExtensionKeyword_2_0_2_2_2_0ElementType());
                              								
                            }
                            lv_modifiers_15_0=(Token)match(input,KW_Extension,FOLLOW_28); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneLeaf(lv_modifiers_15_0);
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:1677:7: ( (lv_modifiers_16_0= ruleCommonModifier ) )*
                            loop65:
                            do {
                                int alt65=2;
                                int LA65_0 = input.LA(1);

                                if ( (LA65_0==KW_Package||(LA65_0>=KW_Public && LA65_0<=KW_Transient)) ) {
                                    alt65=1;
                                }


                                switch (alt65) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1678:8: (lv_modifiers_16_0= ruleCommonModifier )
                            	    {
                            	    // PsiInternalXtend.g:1678:8: (lv_modifiers_16_0= ruleCommonModifier )
                            	    // PsiInternalXtend.g:1679:9: lv_modifiers_16_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_2_2_3_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop65;
                                }
                            } while (true);

                            // PsiInternalXtend.g:1688:7: ( (lv_type_17_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:1689:8: (lv_type_17_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:1689:8: (lv_type_17_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:1690:9: lv_type_17_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_TypeJvmTypeReferenceParserRuleCall_2_0_2_2_4_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_36);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:1699:7: ( (lv_name_18_0= ruleValidID ) )?
                            int alt66=2;
                            alt66 = dfa66.predict(input);
                            switch (alt66) {
                                case 1 :
                                    // PsiInternalXtend.g:1700:8: (lv_name_18_0= ruleValidID )
                                    {
                                    // PsiInternalXtend.g:1700:8: (lv_name_18_0= ruleValidID )
                                    // PsiInternalXtend.g:1701:9: lv_name_18_0= ruleValidID
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_0_2_2_5_0ElementType());
                                      								
                                    }
                                    pushFollow(FOLLOW_32);
                                    ruleValidID();

                                    state._fsp--;
                                    if (state.failed) return ;
                                    if ( state.backtracking==0 ) {

                                      									doneComposite();
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // PsiInternalXtend.g:1712:6: ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) )
                            {
                            // PsiInternalXtend.g:1712:6: ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) )
                            // PsiInternalXtend.g:1713:7: ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) )
                            {
                            // PsiInternalXtend.g:1713:7: ( (lv_type_19_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:1714:8: (lv_type_19_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:1714:8: (lv_type_19_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:1715:9: lv_type_19_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_TypeJvmTypeReferenceParserRuleCall_2_0_2_3_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_3);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            // PsiInternalXtend.g:1724:7: ( (lv_name_20_0= ruleValidID ) )
                            // PsiInternalXtend.g:1725:8: (lv_name_20_0= ruleValidID )
                            {
                            // PsiInternalXtend.g:1725:8: (lv_name_20_0= ruleValidID )
                            // PsiInternalXtend.g:1726:9: lv_name_20_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_0_2_3_1_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_32);
                            ruleValidID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:1737:5: (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==KW_EqualsSign) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // PsiInternalXtend.g:1738:6: otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) )
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_EqualsSignKeyword_2_0_3_0ElementType());
                              					
                            }
                            otherlv_21=(Token)match(input,KW_EqualsSign,FOLLOW_33); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_21);
                              					
                            }
                            // PsiInternalXtend.g:1745:6: ( (lv_initialValue_22_0= ruleXExpression ) )
                            // PsiInternalXtend.g:1746:7: (lv_initialValue_22_0= ruleXExpression )
                            {
                            // PsiInternalXtend.g:1746:7: (lv_initialValue_22_0= ruleXExpression )
                            // PsiInternalXtend.g:1747:8: lv_initialValue_22_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_InitialValueXExpressionParserRuleCall_2_0_3_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_34);
                            ruleXExpression();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:1757:5: (otherlv_23= ';' )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==KW_Semicolon) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // PsiInternalXtend.g:1758:6: otherlv_23= ';'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_SemicolonKeyword_2_0_4ElementType());
                              					
                            }
                            otherlv_23=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_23);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:1768:4: ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? )
                    {
                    // PsiInternalXtend.g:1768:4: ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? )
                    // PsiInternalXtend.g:1769:5: () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )?
                    {
                    // PsiInternalXtend.g:1769:5: ()
                    // PsiInternalXtend.g:1770:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendFunctionAnnotationInfoAction_2_1_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:1775:5: ( (lv_modifiers_25_0= ruleCommonModifier ) )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==KW_Package||(LA70_0>=KW_Public && LA70_0<=KW_Transient)) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1776:6: (lv_modifiers_25_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:1776:6: (lv_modifiers_25_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:1777:7: lv_modifiers_25_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_38);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);

                    // PsiInternalXtend.g:1786:5: ( (lv_modifiers_26_0= ruleMethodModifier ) )
                    // PsiInternalXtend.g:1787:6: (lv_modifiers_26_0= ruleMethodModifier )
                    {
                    // PsiInternalXtend.g:1787:6: (lv_modifiers_26_0= ruleMethodModifier )
                    // PsiInternalXtend.g:1788:7: lv_modifiers_26_0= ruleMethodModifier
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_ModifiersMethodModifierParserRuleCall_2_1_2_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_39);
                    ruleMethodModifier();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:1797:5: ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )*
                    loop71:
                    do {
                        int alt71=3;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==KW_Package||(LA71_0>=KW_Public && LA71_0<=KW_Transient)) ) {
                            alt71=1;
                        }
                        else if ( ((LA71_0>=KW_Def && LA71_0<=KW_Override)) ) {
                            alt71=2;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // PsiInternalXtend.g:1798:6: ( (lv_modifiers_27_0= ruleCommonModifier ) )
                    	    {
                    	    // PsiInternalXtend.g:1798:6: ( (lv_modifiers_27_0= ruleCommonModifier ) )
                    	    // PsiInternalXtend.g:1799:7: (lv_modifiers_27_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:1799:7: (lv_modifiers_27_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:1800:8: lv_modifiers_27_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_1_3_0_0ElementType());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      								doneComposite();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // PsiInternalXtend.g:1810:6: ( (lv_modifiers_28_0= ruleMethodModifier ) )
                    	    {
                    	    // PsiInternalXtend.g:1810:6: ( (lv_modifiers_28_0= ruleMethodModifier ) )
                    	    // PsiInternalXtend.g:1811:7: (lv_modifiers_28_0= ruleMethodModifier )
                    	    {
                    	    // PsiInternalXtend.g:1811:7: (lv_modifiers_28_0= ruleMethodModifier )
                    	    // PsiInternalXtend.g:1812:8: lv_modifiers_28_0= ruleMethodModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								markComposite(elementTypeProvider.getMember_ModifiersMethodModifierParserRuleCall_2_1_3_1_0ElementType());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    ruleMethodModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      								doneComposite();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);

                    // PsiInternalXtend.g:1822:5: (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==KW_LessThanSign) ) {
                        int LA73_1 = input.LA(2);

                        if ( (LA73_1==KW_Annotation||LA73_1==KW_Create||(LA73_1>=KW_AFTER && LA73_1<=KW_SEPARATOR)||LA73_1==RULE_ID) ) {
                            alt73=1;
                        }
                    }
                    switch (alt73) {
                        case 1 :
                            // PsiInternalXtend.g:1823:6: otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_LessThanSignKeyword_2_1_4_0ElementType());
                              					
                            }
                            otherlv_29=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_29);
                              					
                            }
                            // PsiInternalXtend.g:1830:6: ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) )
                            // PsiInternalXtend.g:1831:7: (lv_typeParameters_30_0= ruleJvmTypeParameter )
                            {
                            // PsiInternalXtend.g:1831:7: (lv_typeParameters_30_0= ruleJvmTypeParameter )
                            // PsiInternalXtend.g:1832:8: lv_typeParameters_30_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:1841:6: (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )*
                            loop72:
                            do {
                                int alt72=2;
                                int LA72_0 = input.LA(1);

                                if ( (LA72_0==KW_Comma) ) {
                                    alt72=1;
                                }


                                switch (alt72) {
                            	case 1 :
                            	    // PsiInternalXtend.g:1842:7: otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_1_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_31=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_31);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:1849:7: ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) )
                            	    // PsiInternalXtend.g:1850:8: (lv_typeParameters_32_0= ruleJvmTypeParameter )
                            	    {
                            	    // PsiInternalXtend.g:1850:8: (lv_typeParameters_32_0= ruleJvmTypeParameter )
                            	    // PsiInternalXtend.g:1851:9: lv_typeParameters_32_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop72;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_GreaterThanSignKeyword_2_1_4_3ElementType());
                              					
                            }
                            otherlv_33=(Token)match(input,KW_GreaterThanSign,FOLLOW_39); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_33);
                              					
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:1869:5: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) )
                    int alt74=5;
                    alt74 = dfa74.predict(input);
                    switch (alt74) {
                        case 1 :
                            // PsiInternalXtend.g:1870:6: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) )
                            {
                            // PsiInternalXtend.g:1870:6: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) )
                            // PsiInternalXtend.g:1871:7: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' )
                            {
                            // PsiInternalXtend.g:1890:7: ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' )
                            // PsiInternalXtend.g:1891:8: ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '('
                            {
                            // PsiInternalXtend.g:1891:8: ( (lv_returnType_34_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:1892:9: (lv_returnType_34_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:1892:9: (lv_returnType_34_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:1893:10: lv_returnType_34_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_ReturnTypeJvmTypeReferenceParserRuleCall_2_1_5_0_0_0_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_40);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            // PsiInternalXtend.g:1902:8: ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) )
                            // PsiInternalXtend.g:1903:9: (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo )
                            {
                            // PsiInternalXtend.g:1903:9: (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo )
                            // PsiInternalXtend.g:1904:10: lv_createExtensionInfo_35_0= ruleCreateExtensionInfo
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_CreateExtensionInfoCreateExtensionInfoParserRuleCall_2_1_5_0_0_1_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_3);
                            ruleCreateExtensionInfo();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            // PsiInternalXtend.g:1913:8: ( (lv_name_36_0= ruleValidID ) )
                            // PsiInternalXtend.g:1914:9: (lv_name_36_0= ruleValidID )
                            {
                            // PsiInternalXtend.g:1914:9: (lv_name_36_0= ruleValidID )
                            // PsiInternalXtend.g:1915:10: lv_name_36_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_1_5_0_0_2_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_41);
                            ruleValidID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_0_0_3ElementType());
                              							
                            }
                            otherlv_37=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_37);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:1934:6: ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) )
                            {
                            // PsiInternalXtend.g:1934:6: ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) )
                            // PsiInternalXtend.g:1935:7: ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' )
                            {
                            // PsiInternalXtend.g:1949:7: ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' )
                            // PsiInternalXtend.g:1950:8: ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '('
                            {
                            // PsiInternalXtend.g:1950:8: ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) )
                            // PsiInternalXtend.g:1951:9: (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs )
                            {
                            // PsiInternalXtend.g:1951:9: (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs )
                            // PsiInternalXtend.g:1952:10: lv_returnType_38_0= ruleTypeReferenceWithTypeArgs
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_ReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_1_5_1_0_0_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_39);
                            ruleTypeReferenceWithTypeArgs();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            // PsiInternalXtend.g:1961:8: ( (lv_name_39_0= ruleFunctionID ) )
                            // PsiInternalXtend.g:1962:9: (lv_name_39_0= ruleFunctionID )
                            {
                            // PsiInternalXtend.g:1962:9: (lv_name_39_0= ruleFunctionID )
                            // PsiInternalXtend.g:1963:10: lv_name_39_0= ruleFunctionID
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_NameFunctionIDParserRuleCall_2_1_5_1_0_1_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_41);
                            ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_1_0_2ElementType());
                              							
                            }
                            otherlv_40=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_40);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // PsiInternalXtend.g:1982:6: ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) )
                            {
                            // PsiInternalXtend.g:1982:6: ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) )
                            // PsiInternalXtend.g:1983:7: ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' )
                            {
                            // PsiInternalXtend.g:1997:7: ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' )
                            // PsiInternalXtend.g:1998:8: ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '('
                            {
                            // PsiInternalXtend.g:1998:8: ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) )
                            // PsiInternalXtend.g:1999:9: (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs )
                            {
                            // PsiInternalXtend.g:1999:9: (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs )
                            // PsiInternalXtend.g:2000:10: lv_returnType_41_0= ruleTypeReferenceNoTypeArgs
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_ReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_1_5_2_0_0_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_39);
                            ruleTypeReferenceNoTypeArgs();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            // PsiInternalXtend.g:2009:8: ( (lv_name_42_0= ruleFunctionID ) )
                            // PsiInternalXtend.g:2010:9: (lv_name_42_0= ruleFunctionID )
                            {
                            // PsiInternalXtend.g:2010:9: (lv_name_42_0= ruleFunctionID )
                            // PsiInternalXtend.g:2011:10: lv_name_42_0= ruleFunctionID
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_NameFunctionIDParserRuleCall_2_1_5_2_0_1_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_41);
                            ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_2_0_2ElementType());
                              							
                            }
                            otherlv_43=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_43);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // PsiInternalXtend.g:2030:6: ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) )
                            {
                            // PsiInternalXtend.g:2030:6: ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) )
                            // PsiInternalXtend.g:2031:7: ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' )
                            {
                            // PsiInternalXtend.g:2045:7: ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' )
                            // PsiInternalXtend.g:2046:8: ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '('
                            {
                            // PsiInternalXtend.g:2046:8: ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) )
                            // PsiInternalXtend.g:2047:9: (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo )
                            {
                            // PsiInternalXtend.g:2047:9: (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo )
                            // PsiInternalXtend.g:2048:10: lv_createExtensionInfo_44_0= ruleCreateExtensionInfo
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_CreateExtensionInfoCreateExtensionInfoParserRuleCall_2_1_5_3_0_0_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_3);
                            ruleCreateExtensionInfo();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            // PsiInternalXtend.g:2057:8: ( (lv_name_45_0= ruleValidID ) )
                            // PsiInternalXtend.g:2058:9: (lv_name_45_0= ruleValidID )
                            {
                            // PsiInternalXtend.g:2058:9: (lv_name_45_0= ruleValidID )
                            // PsiInternalXtend.g:2059:10: lv_name_45_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_1_5_3_0_1_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_41);
                            ruleValidID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              									
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_3_0_2ElementType());
                              							
                            }
                            otherlv_46=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_46);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 5 :
                            // PsiInternalXtend.g:2078:6: ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' )
                            {
                            // PsiInternalXtend.g:2078:6: ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' )
                            // PsiInternalXtend.g:2079:7: ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '('
                            {
                            // PsiInternalXtend.g:2079:7: ( (lv_name_47_0= ruleFunctionID ) )
                            // PsiInternalXtend.g:2080:8: (lv_name_47_0= ruleFunctionID )
                            {
                            // PsiInternalXtend.g:2080:8: (lv_name_47_0= ruleFunctionID )
                            // PsiInternalXtend.g:2081:9: lv_name_47_0= ruleFunctionID
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_NameFunctionIDParserRuleCall_2_1_5_4_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_41);
                            ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_4_1ElementType());
                              						
                            }
                            otherlv_48=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(otherlv_48);
                              						
                            }

                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:2099:5: ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( ((LA76_0>=KW_Annotation && LA76_0<=KW_LeftParenthesis)||LA76_0==KW_EqualsSignGreaterThanSign||LA76_0==KW_Extension||LA76_0==KW_Create||(LA76_0>=KW_AFTER && LA76_0<=KW_SEPARATOR)||LA76_0==KW_CommercialAt||LA76_0==RULE_ID) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // PsiInternalXtend.g:2100:6: ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )*
                            {
                            // PsiInternalXtend.g:2100:6: ( (lv_parameters_49_0= ruleParameter ) )
                            // PsiInternalXtend.g:2101:7: (lv_parameters_49_0= ruleParameter )
                            {
                            // PsiInternalXtend.g:2101:7: (lv_parameters_49_0= ruleParameter )
                            // PsiInternalXtend.g:2102:8: lv_parameters_49_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ParametersParameterParserRuleCall_2_1_6_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_27);
                            ruleParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2111:6: (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )*
                            loop75:
                            do {
                                int alt75=2;
                                int LA75_0 = input.LA(1);

                                if ( (LA75_0==KW_Comma) ) {
                                    alt75=1;
                                }


                                switch (alt75) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2112:7: otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_1_6_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_50=(Token)match(input,KW_Comma,FOLLOW_43); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_50);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2119:7: ( (lv_parameters_51_0= ruleParameter ) )
                            	    // PsiInternalXtend.g:2120:8: (lv_parameters_51_0= ruleParameter )
                            	    {
                            	    // PsiInternalXtend.g:2120:8: (lv_parameters_51_0= ruleParameter )
                            	    // PsiInternalXtend.g:2121:9: lv_parameters_51_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ParametersParameterParserRuleCall_2_1_6_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop75;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightParenthesisKeyword_2_1_7ElementType());
                      				
                    }
                    otherlv_52=(Token)match(input,KW_RightParenthesis,FOLLOW_44); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_52);
                      				
                    }
                    // PsiInternalXtend.g:2139:5: (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==KW_Throws) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // PsiInternalXtend.g:2140:6: otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )*
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ThrowsKeyword_2_1_8_0ElementType());
                              					
                            }
                            otherlv_53=(Token)match(input,KW_Throws,FOLLOW_28); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_53);
                              					
                            }
                            // PsiInternalXtend.g:2147:6: ( (lv_exceptions_54_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:2148:7: (lv_exceptions_54_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:2148:7: (lv_exceptions_54_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:2149:8: lv_exceptions_54_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExceptionsJvmTypeReferenceParserRuleCall_2_1_8_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_45);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2158:6: (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )*
                            loop77:
                            do {
                                int alt77=2;
                                int LA77_0 = input.LA(1);

                                if ( (LA77_0==KW_Comma) ) {
                                    alt77=1;
                                }


                                switch (alt77) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2159:7: otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_1_8_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_55=(Token)match(input,KW_Comma,FOLLOW_28); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_55);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2166:7: ( (lv_exceptions_56_0= ruleJvmTypeReference ) )
                            	    // PsiInternalXtend.g:2167:8: (lv_exceptions_56_0= ruleJvmTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:2167:8: (lv_exceptions_56_0= ruleJvmTypeReference )
                            	    // PsiInternalXtend.g:2168:9: lv_exceptions_56_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ExceptionsJvmTypeReferenceParserRuleCall_2_1_8_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_45);
                            	    ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop77;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // PsiInternalXtend.g:2179:5: ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )?
                    int alt79=4;
                    switch ( input.LA(1) ) {
                        case KW_LeftCurlyBracket:
                            {
                            alt79=1;
                            }
                            break;
                        case RULE_RICH_TEXT:
                        case RULE_RICH_TEXT_START:
                            {
                            alt79=2;
                            }
                            break;
                        case KW_Semicolon:
                            {
                            alt79=3;
                            }
                            break;
                    }

                    switch (alt79) {
                        case 1 :
                            // PsiInternalXtend.g:2180:6: ( (lv_expression_57_0= ruleXBlockExpression ) )
                            {
                            // PsiInternalXtend.g:2180:6: ( (lv_expression_57_0= ruleXBlockExpression ) )
                            // PsiInternalXtend.g:2181:7: (lv_expression_57_0= ruleXBlockExpression )
                            {
                            // PsiInternalXtend.g:2181:7: (lv_expression_57_0= ruleXBlockExpression )
                            // PsiInternalXtend.g:2182:8: lv_expression_57_0= ruleXBlockExpression
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExpressionXBlockExpressionParserRuleCall_2_1_9_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            ruleXBlockExpression();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:2192:6: ( (lv_expression_58_0= ruleRichString ) )
                            {
                            // PsiInternalXtend.g:2192:6: ( (lv_expression_58_0= ruleRichString ) )
                            // PsiInternalXtend.g:2193:7: (lv_expression_58_0= ruleRichString )
                            {
                            // PsiInternalXtend.g:2193:7: (lv_expression_58_0= ruleRichString )
                            // PsiInternalXtend.g:2194:8: lv_expression_58_0= ruleRichString
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExpressionRichStringParserRuleCall_2_1_9_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            ruleRichString();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // PsiInternalXtend.g:2204:6: otherlv_59= ';'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_SemicolonKeyword_2_1_9_2ElementType());
                              					
                            }
                            otherlv_59=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_59);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:2214:4: ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) )
                    {
                    // PsiInternalXtend.g:2214:4: ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) )
                    // PsiInternalXtend.g:2215:5: () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) )
                    {
                    // PsiInternalXtend.g:2215:5: ()
                    // PsiInternalXtend.g:2216:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendConstructorAnnotationInfoAction_2_2_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:2221:5: ( (lv_modifiers_61_0= ruleCommonModifier ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==KW_Package||(LA80_0>=KW_Public && LA80_0<=KW_Transient)) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2222:6: (lv_modifiers_61_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:2222:6: (lv_modifiers_61_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:2223:7: lv_modifiers_61_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_NewKeyword_2_2_2ElementType());
                      				
                    }
                    otherlv_62=(Token)match(input,KW_New,FOLLOW_47); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_62);
                      				
                    }
                    // PsiInternalXtend.g:2239:5: (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==KW_LessThanSign) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // PsiInternalXtend.g:2240:6: otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_LessThanSignKeyword_2_2_3_0ElementType());
                              					
                            }
                            otherlv_63=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_63);
                              					
                            }
                            // PsiInternalXtend.g:2247:6: ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) )
                            // PsiInternalXtend.g:2248:7: (lv_typeParameters_64_0= ruleJvmTypeParameter )
                            {
                            // PsiInternalXtend.g:2248:7: (lv_typeParameters_64_0= ruleJvmTypeParameter )
                            // PsiInternalXtend.g:2249:8: lv_typeParameters_64_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_2_3_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2258:6: (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )*
                            loop81:
                            do {
                                int alt81=2;
                                int LA81_0 = input.LA(1);

                                if ( (LA81_0==KW_Comma) ) {
                                    alt81=1;
                                }


                                switch (alt81) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2259:7: otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_2_3_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_65=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_65);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2266:7: ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) )
                            	    // PsiInternalXtend.g:2267:8: (lv_typeParameters_66_0= ruleJvmTypeParameter )
                            	    {
                            	    // PsiInternalXtend.g:2267:8: (lv_typeParameters_66_0= ruleJvmTypeParameter )
                            	    // PsiInternalXtend.g:2268:9: lv_typeParameters_66_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_2_3_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop81;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_GreaterThanSignKeyword_2_2_3_3ElementType());
                              					
                            }
                            otherlv_67=(Token)match(input,KW_GreaterThanSign,FOLLOW_41); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_67);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_2_4ElementType());
                      				
                    }
                    otherlv_68=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_68);
                      				
                    }
                    // PsiInternalXtend.g:2293:5: ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( ((LA84_0>=KW_Annotation && LA84_0<=KW_LeftParenthesis)||LA84_0==KW_EqualsSignGreaterThanSign||LA84_0==KW_Extension||LA84_0==KW_Create||(LA84_0>=KW_AFTER && LA84_0<=KW_SEPARATOR)||LA84_0==KW_CommercialAt||LA84_0==RULE_ID) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // PsiInternalXtend.g:2294:6: ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )*
                            {
                            // PsiInternalXtend.g:2294:6: ( (lv_parameters_69_0= ruleParameter ) )
                            // PsiInternalXtend.g:2295:7: (lv_parameters_69_0= ruleParameter )
                            {
                            // PsiInternalXtend.g:2295:7: (lv_parameters_69_0= ruleParameter )
                            // PsiInternalXtend.g:2296:8: lv_parameters_69_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ParametersParameterParserRuleCall_2_2_5_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_27);
                            ruleParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2305:6: (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )*
                            loop83:
                            do {
                                int alt83=2;
                                int LA83_0 = input.LA(1);

                                if ( (LA83_0==KW_Comma) ) {
                                    alt83=1;
                                }


                                switch (alt83) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2306:7: otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_2_5_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_70=(Token)match(input,KW_Comma,FOLLOW_43); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_70);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2313:7: ( (lv_parameters_71_0= ruleParameter ) )
                            	    // PsiInternalXtend.g:2314:8: (lv_parameters_71_0= ruleParameter )
                            	    {
                            	    // PsiInternalXtend.g:2314:8: (lv_parameters_71_0= ruleParameter )
                            	    // PsiInternalXtend.g:2315:9: lv_parameters_71_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ParametersParameterParserRuleCall_2_2_5_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop83;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightParenthesisKeyword_2_2_6ElementType());
                      				
                    }
                    otherlv_72=(Token)match(input,KW_RightParenthesis,FOLLOW_48); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_72);
                      				
                    }
                    // PsiInternalXtend.g:2333:5: (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==KW_Throws) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // PsiInternalXtend.g:2334:6: otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )*
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ThrowsKeyword_2_2_7_0ElementType());
                              					
                            }
                            otherlv_73=(Token)match(input,KW_Throws,FOLLOW_28); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_73);
                              					
                            }
                            // PsiInternalXtend.g:2341:6: ( (lv_exceptions_74_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:2342:7: (lv_exceptions_74_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:2342:7: (lv_exceptions_74_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:2343:8: lv_exceptions_74_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExceptionsJvmTypeReferenceParserRuleCall_2_2_7_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2352:6: (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )*
                            loop85:
                            do {
                                int alt85=2;
                                int LA85_0 = input.LA(1);

                                if ( (LA85_0==KW_Comma) ) {
                                    alt85=1;
                                }


                                switch (alt85) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2353:7: otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_2_7_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_75=(Token)match(input,KW_Comma,FOLLOW_28); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_75);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2360:7: ( (lv_exceptions_76_0= ruleJvmTypeReference ) )
                            	    // PsiInternalXtend.g:2361:8: (lv_exceptions_76_0= ruleJvmTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:2361:8: (lv_exceptions_76_0= ruleJvmTypeReference )
                            	    // PsiInternalXtend.g:2362:9: lv_exceptions_76_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ExceptionsJvmTypeReferenceParserRuleCall_2_2_7_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop85;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // PsiInternalXtend.g:2373:5: ( (lv_expression_77_0= ruleXBlockExpression ) )
                    // PsiInternalXtend.g:2374:6: (lv_expression_77_0= ruleXBlockExpression )
                    {
                    // PsiInternalXtend.g:2374:6: (lv_expression_77_0= ruleXBlockExpression )
                    // PsiInternalXtend.g:2375:7: lv_expression_77_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_ExpressionXBlockExpressionParserRuleCall_2_2_8_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:2386:4: ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' )
                    {
                    // PsiInternalXtend.g:2386:4: ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' )
                    // PsiInternalXtend.g:2387:5: () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}'
                    {
                    // PsiInternalXtend.g:2387:5: ()
                    // PsiInternalXtend.g:2388:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendClassAnnotationInfoAction_2_3_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:2393:5: ( (lv_modifiers_79_0= ruleCommonModifier ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==KW_Package||(LA87_0>=KW_Public && LA87_0<=KW_Transient)) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2394:6: (lv_modifiers_79_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:2394:6: (lv_modifiers_79_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:2395:7: lv_modifiers_79_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_3_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_ClassKeyword_2_3_2ElementType());
                      				
                    }
                    otherlv_80=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_80);
                      				
                    }
                    // PsiInternalXtend.g:2411:5: ( (lv_name_81_0= ruleValidID ) )
                    // PsiInternalXtend.g:2412:6: (lv_name_81_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:2412:6: (lv_name_81_0= ruleValidID )
                    // PsiInternalXtend.g:2413:7: lv_name_81_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_3_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:2422:5: (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==KW_LessThanSign) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // PsiInternalXtend.g:2423:6: otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_LessThanSignKeyword_2_3_4_0ElementType());
                              					
                            }
                            otherlv_82=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_82);
                              					
                            }
                            // PsiInternalXtend.g:2430:6: ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) )
                            // PsiInternalXtend.g:2431:7: (lv_typeParameters_83_0= ruleJvmTypeParameter )
                            {
                            // PsiInternalXtend.g:2431:7: (lv_typeParameters_83_0= ruleJvmTypeParameter )
                            // PsiInternalXtend.g:2432:8: lv_typeParameters_83_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_3_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2441:6: (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )*
                            loop88:
                            do {
                                int alt88=2;
                                int LA88_0 = input.LA(1);

                                if ( (LA88_0==KW_Comma) ) {
                                    alt88=1;
                                }


                                switch (alt88) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2442:7: otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_3_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_84=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_84);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2449:7: ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) )
                            	    // PsiInternalXtend.g:2450:8: (lv_typeParameters_85_0= ruleJvmTypeParameter )
                            	    {
                            	    // PsiInternalXtend.g:2450:8: (lv_typeParameters_85_0= ruleJvmTypeParameter )
                            	    // PsiInternalXtend.g:2451:9: lv_typeParameters_85_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_3_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop88;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_GreaterThanSignKeyword_2_3_4_3ElementType());
                              					
                            }
                            otherlv_86=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_86);
                              					
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:2469:5: (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==KW_Extends) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // PsiInternalXtend.g:2470:6: otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) )
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ExtendsKeyword_2_3_5_0ElementType());
                              					
                            }
                            otherlv_87=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_87);
                              					
                            }
                            // PsiInternalXtend.g:2477:6: ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) )
                            // PsiInternalXtend.g:2478:7: (lv_extends_88_0= ruleJvmParameterizedTypeReference )
                            {
                            // PsiInternalXtend.g:2478:7: (lv_extends_88_0= ruleJvmParameterizedTypeReference )
                            // PsiInternalXtend.g:2479:8: lv_extends_88_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:2489:5: (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==KW_Implements) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // PsiInternalXtend.g:2490:6: otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ImplementsKeyword_2_3_6_0ElementType());
                              					
                            }
                            otherlv_89=(Token)match(input,KW_Implements,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_89);
                              					
                            }
                            // PsiInternalXtend.g:2497:6: ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) )
                            // PsiInternalXtend.g:2498:7: (lv_implements_90_0= ruleJvmParameterizedTypeReference )
                            {
                            // PsiInternalXtend.g:2498:7: (lv_implements_90_0= ruleJvmParameterizedTypeReference )
                            // PsiInternalXtend.g:2499:8: lv_implements_90_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_6_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2508:6: (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop91:
                            do {
                                int alt91=2;
                                int LA91_0 = input.LA(1);

                                if ( (LA91_0==KW_Comma) ) {
                                    alt91=1;
                                }


                                switch (alt91) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2509:7: otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_3_6_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_91=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_91);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2516:7: ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) )
                            	    // PsiInternalXtend.g:2517:8: (lv_implements_92_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:2517:8: (lv_implements_92_0= ruleJvmParameterizedTypeReference )
                            	    // PsiInternalXtend.g:2518:9: lv_implements_92_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_6_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop91;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftCurlyBracketKeyword_2_3_7ElementType());
                      				
                    }
                    otherlv_93=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_93);
                      				
                    }
                    // PsiInternalXtend.g:2536:5: ( (lv_members_94_0= ruleMember ) )*
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==KW_Package||LA93_0==KW_Class||(LA93_0>=KW_Interface && LA93_0<=KW_LeftParenthesis)||LA93_0==KW_EqualsSignGreaterThanSign||LA93_0==KW_Extension||LA93_0==KW_New||(LA93_0>=KW_Public && LA93_0<=KW_Create)||(LA93_0>=KW_AFTER && LA93_0<=KW_SEPARATOR)||LA93_0==KW_CommercialAt||LA93_0==RULE_ID) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2537:6: (lv_members_94_0= ruleMember )
                    	    {
                    	    // PsiInternalXtend.g:2537:6: (lv_members_94_0= ruleMember )
                    	    // PsiInternalXtend.g:2538:7: lv_members_94_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_MembersMemberParserRuleCall_2_3_8_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightCurlyBracketKeyword_2_3_9ElementType());
                      				
                    }
                    otherlv_95=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_95);
                      				
                    }

                    }


                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:2556:4: ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' )
                    {
                    // PsiInternalXtend.g:2556:4: ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' )
                    // PsiInternalXtend.g:2557:5: () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}'
                    {
                    // PsiInternalXtend.g:2557:5: ()
                    // PsiInternalXtend.g:2558:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendInterfaceAnnotationInfoAction_2_4_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:2563:5: ( (lv_modifiers_97_0= ruleCommonModifier ) )*
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==KW_Package||(LA94_0>=KW_Public && LA94_0<=KW_Transient)) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2564:6: (lv_modifiers_97_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:2564:6: (lv_modifiers_97_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:2565:7: lv_modifiers_97_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_4_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_InterfaceKeyword_2_4_2ElementType());
                      				
                    }
                    otherlv_98=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_98);
                      				
                    }
                    // PsiInternalXtend.g:2581:5: ( (lv_name_99_0= ruleValidID ) )
                    // PsiInternalXtend.g:2582:6: (lv_name_99_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:2582:6: (lv_name_99_0= ruleValidID )
                    // PsiInternalXtend.g:2583:7: lv_name_99_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_4_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:2592:5: (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )?
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==KW_LessThanSign) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            // PsiInternalXtend.g:2593:6: otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_LessThanSignKeyword_2_4_4_0ElementType());
                              					
                            }
                            otherlv_100=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_100);
                              					
                            }
                            // PsiInternalXtend.g:2600:6: ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) )
                            // PsiInternalXtend.g:2601:7: (lv_typeParameters_101_0= ruleJvmTypeParameter )
                            {
                            // PsiInternalXtend.g:2601:7: (lv_typeParameters_101_0= ruleJvmTypeParameter )
                            // PsiInternalXtend.g:2602:8: lv_typeParameters_101_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_4_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2611:6: (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )*
                            loop95:
                            do {
                                int alt95=2;
                                int LA95_0 = input.LA(1);

                                if ( (LA95_0==KW_Comma) ) {
                                    alt95=1;
                                }


                                switch (alt95) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2612:7: otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_4_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_102=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_102);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2619:7: ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) )
                            	    // PsiInternalXtend.g:2620:8: (lv_typeParameters_103_0= ruleJvmTypeParameter )
                            	    {
                            	    // PsiInternalXtend.g:2620:8: (lv_typeParameters_103_0= ruleJvmTypeParameter )
                            	    // PsiInternalXtend.g:2621:9: lv_typeParameters_103_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_4_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop95;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_GreaterThanSignKeyword_2_4_4_3ElementType());
                              					
                            }
                            otherlv_104=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_104);
                              					
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:2639:5: (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==KW_Extends) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // PsiInternalXtend.g:2640:6: otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ExtendsKeyword_2_4_5_0ElementType());
                              					
                            }
                            otherlv_105=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_105);
                              					
                            }
                            // PsiInternalXtend.g:2647:6: ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) )
                            // PsiInternalXtend.g:2648:7: (lv_extends_106_0= ruleJvmParameterizedTypeReference )
                            {
                            // PsiInternalXtend.g:2648:7: (lv_extends_106_0= ruleJvmParameterizedTypeReference )
                            // PsiInternalXtend.g:2649:8: lv_extends_106_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2658:6: (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop97:
                            do {
                                int alt97=2;
                                int LA97_0 = input.LA(1);

                                if ( (LA97_0==KW_Comma) ) {
                                    alt97=1;
                                }


                                switch (alt97) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2659:7: otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_4_5_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_107=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_107);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2666:7: ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) )
                            	    // PsiInternalXtend.g:2667:8: (lv_extends_108_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:2667:8: (lv_extends_108_0= ruleJvmParameterizedTypeReference )
                            	    // PsiInternalXtend.g:2668:9: lv_extends_108_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop97;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftCurlyBracketKeyword_2_4_6ElementType());
                      				
                    }
                    otherlv_109=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_109);
                      				
                    }
                    // PsiInternalXtend.g:2686:5: ( (lv_members_110_0= ruleMember ) )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==KW_Package||LA99_0==KW_Class||(LA99_0>=KW_Interface && LA99_0<=KW_LeftParenthesis)||LA99_0==KW_EqualsSignGreaterThanSign||LA99_0==KW_Extension||LA99_0==KW_New||(LA99_0>=KW_Public && LA99_0<=KW_Create)||(LA99_0>=KW_AFTER && LA99_0<=KW_SEPARATOR)||LA99_0==KW_CommercialAt||LA99_0==RULE_ID) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2687:6: (lv_members_110_0= ruleMember )
                    	    {
                    	    // PsiInternalXtend.g:2687:6: (lv_members_110_0= ruleMember )
                    	    // PsiInternalXtend.g:2688:7: lv_members_110_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_MembersMemberParserRuleCall_2_4_7_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightCurlyBracketKeyword_2_4_8ElementType());
                      				
                    }
                    otherlv_111=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_111);
                      				
                    }

                    }


                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:2706:4: ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' )
                    {
                    // PsiInternalXtend.g:2706:4: ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' )
                    // PsiInternalXtend.g:2707:5: () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}'
                    {
                    // PsiInternalXtend.g:2707:5: ()
                    // PsiInternalXtend.g:2708:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendEnumAnnotationInfoAction_2_5_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:2713:5: ( (lv_modifiers_113_0= ruleCommonModifier ) )*
                    loop100:
                    do {
                        int alt100=2;
                        int LA100_0 = input.LA(1);

                        if ( (LA100_0==KW_Package||(LA100_0>=KW_Public && LA100_0<=KW_Transient)) ) {
                            alt100=1;
                        }


                        switch (alt100) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2714:6: (lv_modifiers_113_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:2714:6: (lv_modifiers_113_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:2715:7: lv_modifiers_113_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_5_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop100;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_EnumKeyword_2_5_2ElementType());
                      				
                    }
                    otherlv_114=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_114);
                      				
                    }
                    // PsiInternalXtend.g:2731:5: ( (lv_name_115_0= ruleValidID ) )
                    // PsiInternalXtend.g:2732:6: (lv_name_115_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:2732:6: (lv_name_115_0= ruleValidID )
                    // PsiInternalXtend.g:2733:7: lv_name_115_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_5_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftCurlyBracketKeyword_2_5_4ElementType());
                      				
                    }
                    otherlv_116=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_116);
                      				
                    }
                    // PsiInternalXtend.g:2749:5: ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==KW_Annotation||LA102_0==KW_Create||(LA102_0>=KW_AFTER && LA102_0<=KW_SEPARATOR)||LA102_0==RULE_ID) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            // PsiInternalXtend.g:2750:6: ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )*
                            {
                            // PsiInternalXtend.g:2750:6: ( (lv_members_117_0= ruleXtendEnumLiteral ) )
                            // PsiInternalXtend.g:2751:7: (lv_members_117_0= ruleXtendEnumLiteral )
                            {
                            // PsiInternalXtend.g:2751:7: (lv_members_117_0= ruleXtendEnumLiteral )
                            // PsiInternalXtend.g:2752:8: lv_members_117_0= ruleXtendEnumLiteral
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_MembersXtendEnumLiteralParserRuleCall_2_5_5_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_22);
                            ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:2761:6: (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )*
                            loop101:
                            do {
                                int alt101=2;
                                int LA101_0 = input.LA(1);

                                if ( (LA101_0==KW_Comma) ) {
                                    alt101=1;
                                }


                                switch (alt101) {
                            	case 1 :
                            	    // PsiInternalXtend.g:2762:7: otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_5_5_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_118=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_118);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:2769:7: ( (lv_members_119_0= ruleXtendEnumLiteral ) )
                            	    // PsiInternalXtend.g:2770:8: (lv_members_119_0= ruleXtendEnumLiteral )
                            	    {
                            	    // PsiInternalXtend.g:2770:8: (lv_members_119_0= ruleXtendEnumLiteral )
                            	    // PsiInternalXtend.g:2771:9: lv_members_119_0= ruleXtendEnumLiteral
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_MembersXtendEnumLiteralParserRuleCall_2_5_5_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop101;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // PsiInternalXtend.g:2782:5: (otherlv_120= ';' )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==KW_Semicolon) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // PsiInternalXtend.g:2783:6: otherlv_120= ';'
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_SemicolonKeyword_2_5_6ElementType());
                              					
                            }
                            otherlv_120=(Token)match(input,KW_Semicolon,FOLLOW_23); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_120);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightCurlyBracketKeyword_2_5_7ElementType());
                      				
                    }
                    otherlv_121=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_121);
                      				
                    }

                    }


                    }
                    break;
                case 7 :
                    // PsiInternalXtend.g:2800:4: ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' )
                    {
                    // PsiInternalXtend.g:2800:4: ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' )
                    // PsiInternalXtend.g:2801:5: () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}'
                    {
                    // PsiInternalXtend.g:2801:5: ()
                    // PsiInternalXtend.g:2802:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendAnnotationTypeAnnotationInfoAction_2_6_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:2807:5: ( (lv_modifiers_123_0= ruleCommonModifier ) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==KW_Package||(LA104_0>=KW_Public && LA104_0<=KW_Transient)) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2808:6: (lv_modifiers_123_0= ruleCommonModifier )
                    	    {
                    	    // PsiInternalXtend.g:2808:6: (lv_modifiers_123_0= ruleCommonModifier )
                    	    // PsiInternalXtend.g:2809:7: lv_modifiers_123_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_6_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_AnnotationKeyword_2_6_2ElementType());
                      				
                    }
                    otherlv_124=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_124);
                      				
                    }
                    // PsiInternalXtend.g:2825:5: ( (lv_name_125_0= ruleValidID ) )
                    // PsiInternalXtend.g:2826:6: (lv_name_125_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:2826:6: (lv_name_125_0= ruleValidID )
                    // PsiInternalXtend.g:2827:7: lv_name_125_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_6_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftCurlyBracketKeyword_2_6_4ElementType());
                      				
                    }
                    otherlv_126=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_25); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_126);
                      				
                    }
                    // PsiInternalXtend.g:2843:5: ( (lv_members_127_0= ruleAnnotationField ) )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==KW_Package||LA105_0==KW_Class||(LA105_0>=KW_Interface && LA105_0<=KW_LeftParenthesis)||LA105_0==KW_EqualsSignGreaterThanSign||(LA105_0>=KW_Public && LA105_0<=KW_Var)||LA105_0==KW_Create||(LA105_0>=KW_AFTER && LA105_0<=KW_SEPARATOR)||LA105_0==KW_CommercialAt||LA105_0==RULE_ID) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2844:6: (lv_members_127_0= ruleAnnotationField )
                    	    {
                    	    // PsiInternalXtend.g:2844:6: (lv_members_127_0= ruleAnnotationField )
                    	    // PsiInternalXtend.g:2845:7: lv_members_127_0= ruleAnnotationField
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_MembersAnnotationFieldParserRuleCall_2_6_5_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightCurlyBracketKeyword_2_6_6ElementType());
                      				
                    }
                    otherlv_128=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_128);
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleMember"


    // $ANTLR start "entryRuleTypeReferenceNoTypeArgs"
    // PsiInternalXtend.g:2867:1: entryRuleTypeReferenceNoTypeArgs : ruleTypeReferenceNoTypeArgs EOF ;
    public final void entryRuleTypeReferenceNoTypeArgs() throws RecognitionException {
        try {
            // PsiInternalXtend.g:2867:33: ( ruleTypeReferenceNoTypeArgs EOF )
            // PsiInternalXtend.g:2868:2: ruleTypeReferenceNoTypeArgs EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getTypeReferenceNoTypeArgsElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleTypeReferenceNoTypeArgs();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeReferenceNoTypeArgs"


    // $ANTLR start "ruleTypeReferenceNoTypeArgs"
    // PsiInternalXtend.g:2873:1: ruleTypeReferenceNoTypeArgs : ( ( ruleQualifiedName ) ) ;
    public final void ruleTypeReferenceNoTypeArgs() throws RecognitionException {
        try {
            // PsiInternalXtend.g:2873:28: ( ( ( ruleQualifiedName ) ) )
            // PsiInternalXtend.g:2874:2: ( ( ruleQualifiedName ) )
            {
            // PsiInternalXtend.g:2874:2: ( ( ruleQualifiedName ) )
            // PsiInternalXtend.g:2875:3: ( ruleQualifiedName )
            {
            // PsiInternalXtend.g:2875:3: ( ruleQualifiedName )
            // PsiInternalXtend.g:2876:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				markComposite(elementTypeProvider.getTypeReferenceNoTypeArgs_TypeJvmTypeCrossReference_0ElementType());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              				doneComposite();
              			
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleTypeReferenceNoTypeArgs"


    // $ANTLR start "entryRuleTypeReferenceWithTypeArgs"
    // PsiInternalXtend.g:2888:1: entryRuleTypeReferenceWithTypeArgs : ruleTypeReferenceWithTypeArgs EOF ;
    public final void entryRuleTypeReferenceWithTypeArgs() throws RecognitionException {
        try {
            // PsiInternalXtend.g:2888:35: ( ruleTypeReferenceWithTypeArgs EOF )
            // PsiInternalXtend.g:2889:2: ruleTypeReferenceWithTypeArgs EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getTypeReferenceWithTypeArgsElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleTypeReferenceWithTypeArgs();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeReferenceWithTypeArgs"


    // $ANTLR start "ruleTypeReferenceWithTypeArgs"
    // PsiInternalXtend.g:2894:1: ruleTypeReferenceWithTypeArgs : ( ( ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ( ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | ruleXFunctionTypeRef ) ;
    public final void ruleTypeReferenceWithTypeArgs() throws RecognitionException {
        try {
            // PsiInternalXtend.g:2894:30: ( ( ( ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ( ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | ruleXFunctionTypeRef ) )
            // PsiInternalXtend.g:2895:2: ( ( ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ( ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | ruleXFunctionTypeRef )
            {
            // PsiInternalXtend.g:2895:2: ( ( ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ( ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | ruleXFunctionTypeRef )
            int alt109=3;
            alt109 = dfa109.predict(input);
            switch (alt109) {
                case 1 :
                    // PsiInternalXtend.g:2896:3: ( ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // PsiInternalXtend.g:2896:3: ( ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // PsiInternalXtend.g:2897:4: ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_ParameterizedTypeReferenceWithTypeArgsParserRuleCall_0_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_49);
                    ruleParameterizedTypeReferenceWithTypeArgs();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }
                    // PsiInternalXtend.g:2904:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==KW_LeftSquareBracket) && (synpred5_PsiInternalXtend())) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2905:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // PsiInternalXtend.g:2911:5: ( () ruleArrayBrackets )
                    	    // PsiInternalXtend.g:2912:6: () ruleArrayBrackets
                    	    {
                    	    // PsiInternalXtend.g:2912:6: ()
                    	    // PsiInternalXtend.g:2913:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							precedeComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_JvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0ElementType());
                    	      							doneComposite();
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_ArrayBracketsParserRuleCall_0_1_0_1ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_49);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop107;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:2929:3: ( ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ )
                    {
                    // PsiInternalXtend.g:2929:3: ( ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ )
                    // PsiInternalXtend.g:2930:4: ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_TypeReferenceNoTypeArgsParserRuleCall_1_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_50);
                    ruleTypeReferenceNoTypeArgs();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }
                    // PsiInternalXtend.g:2937:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+
                    int cnt108=0;
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==KW_LeftSquareBracket) && (synpred6_PsiInternalXtend())) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // PsiInternalXtend.g:2938:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // PsiInternalXtend.g:2944:5: ( () ruleArrayBrackets )
                    	    // PsiInternalXtend.g:2945:6: () ruleArrayBrackets
                    	    {
                    	    // PsiInternalXtend.g:2945:6: ()
                    	    // PsiInternalXtend.g:2946:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							precedeComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_JvmGenericArrayTypeReferenceComponentTypeAction_1_1_0_0ElementType());
                    	      							doneComposite();
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_ArrayBracketsParserRuleCall_1_1_0_1ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_49);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt108 >= 1 ) break loop108;
                    	    if (state.backtracking>0) {state.failed=true; return ;}
                                EarlyExitException eee =
                                    new EarlyExitException(108, input);
                                throw eee;
                        }
                        cnt108++;
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:2962:3: ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_XFunctionTypeRefParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleTypeReferenceWithTypeArgs"


    // $ANTLR start "entryRuleParameterizedTypeReferenceWithTypeArgs"
    // PsiInternalXtend.g:2973:1: entryRuleParameterizedTypeReferenceWithTypeArgs : ruleParameterizedTypeReferenceWithTypeArgs EOF ;
    public final void entryRuleParameterizedTypeReferenceWithTypeArgs() throws RecognitionException {
        try {
            // PsiInternalXtend.g:2973:48: ( ruleParameterizedTypeReferenceWithTypeArgs EOF )
            // PsiInternalXtend.g:2974:2: ruleParameterizedTypeReferenceWithTypeArgs EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgsElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterizedTypeReferenceWithTypeArgs();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterizedTypeReferenceWithTypeArgs"


    // $ANTLR start "ruleParameterizedTypeReferenceWithTypeArgs"
    // PsiInternalXtend.g:2979:1: ruleParameterizedTypeReferenceWithTypeArgs : ( ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* ) ) ;
    public final void ruleParameterizedTypeReferenceWithTypeArgs() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;

        try {
            // PsiInternalXtend.g:2979:43: ( ( ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* ) ) )
            // PsiInternalXtend.g:2980:2: ( ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* ) )
            {
            // PsiInternalXtend.g:2980:2: ( ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* ) )
            // PsiInternalXtend.g:2981:3: ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )
            {
            // PsiInternalXtend.g:2981:3: ( ( ruleQualifiedName ) )
            // PsiInternalXtend.g:2982:4: ( ruleQualifiedName )
            {
            // PsiInternalXtend.g:2982:4: ( ruleQualifiedName )
            // PsiInternalXtend.g:2983:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_TypeJvmTypeCrossReference_0_0ElementType());
              				
            }
            pushFollow(FOLLOW_51);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:2992:3: (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )
            // PsiInternalXtend.g:2993:4: otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
            {
            if ( state.backtracking==0 ) {

              				markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_LessThanSignKeyword_1_0ElementType());
              			
            }
            otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              				doneLeaf(otherlv_1);
              			
            }
            // PsiInternalXtend.g:3000:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
            // PsiInternalXtend.g:3001:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
            {
            // PsiInternalXtend.g:3001:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
            // PsiInternalXtend.g:3002:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
            {
            if ( state.backtracking==0 ) {

              						markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0ElementType());
              					
            }
            pushFollow(FOLLOW_10);
            ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              						doneComposite();
              					
            }

            }


            }

            // PsiInternalXtend.g:3011:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==KW_Comma) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // PsiInternalXtend.g:3012:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_CommaKeyword_1_2_0ElementType());
            	      				
            	    }
            	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneLeaf(otherlv_3);
            	      				
            	    }
            	    // PsiInternalXtend.g:3019:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
            	    // PsiInternalXtend.g:3020:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
            	    {
            	    // PsiInternalXtend.g:3020:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
            	    // PsiInternalXtend.g:3021:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_10);
            	    ruleJvmArgumentTypeReference();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              				markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_GreaterThanSignKeyword_1_3ElementType());
              			
            }
            otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_53); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              				doneLeaf(otherlv_5);
              			
            }
            // PsiInternalXtend.g:3038:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==KW_FullStop) && (synpred7_PsiInternalXtend())) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // PsiInternalXtend.g:3039:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
            	    {
            	    // PsiInternalXtend.g:3039:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
            	    // PsiInternalXtend.g:3040:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
            	    {
            	    // PsiInternalXtend.g:3046:6: ( () otherlv_7= '.' )
            	    // PsiInternalXtend.g:3047:7: () otherlv_7= '.'
            	    {
            	    // PsiInternalXtend.g:3047:7: ()
            	    // PsiInternalXtend.g:3048:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_JvmInnerTypeReferenceOuterAction_1_4_0_0_0ElementType());
            	      								doneComposite();
            	      							
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      							markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_FullStopKeyword_1_4_0_0_1ElementType());
            	      						
            	    }
            	    otherlv_7=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneLeaf(otherlv_7);
            	      						
            	    }

            	    }


            	    }

            	    // PsiInternalXtend.g:3062:5: ( ( ruleValidID ) )
            	    // PsiInternalXtend.g:3063:6: ( ruleValidID )
            	    {
            	    // PsiInternalXtend.g:3063:6: ( ruleValidID )
            	    // PsiInternalXtend.g:3064:7: ruleValidID
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_TypeJvmTypeCrossReference_1_4_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }

            	    // PsiInternalXtend.g:3073:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
            	    int alt112=2;
            	    alt112 = dfa112.predict(input);
            	    switch (alt112) {
            	        case 1 :
            	            // PsiInternalXtend.g:3074:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
            	            {
            	            // PsiInternalXtend.g:3074:6: ( ( '<' )=>otherlv_9= '<' )
            	            // PsiInternalXtend.g:3075:7: ( '<' )=>otherlv_9= '<'
            	            {
            	            if ( state.backtracking==0 ) {

            	              							markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_LessThanSignKeyword_1_4_2_0ElementType());
            	              						
            	            }
            	            otherlv_9=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              							doneLeaf(otherlv_9);
            	              						
            	            }

            	            }

            	            // PsiInternalXtend.g:3084:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
            	            // PsiInternalXtend.g:3085:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
            	            {
            	            // PsiInternalXtend.g:3085:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
            	            // PsiInternalXtend.g:3086:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0ElementType());
            	              							
            	            }
            	            pushFollow(FOLLOW_10);
            	            ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              								doneComposite();
            	              							
            	            }

            	            }


            	            }

            	            // PsiInternalXtend.g:3095:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop111:
            	            do {
            	                int alt111=2;
            	                int LA111_0 = input.LA(1);

            	                if ( (LA111_0==KW_Comma) ) {
            	                    alt111=1;
            	                }


            	                switch (alt111) {
            	            	case 1 :
            	            	    // PsiInternalXtend.g:3096:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      							markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_CommaKeyword_1_4_2_2_0ElementType());
            	            	      						
            	            	    }
            	            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return ;
            	            	    if ( state.backtracking==0 ) {

            	            	      							doneLeaf(otherlv_11);
            	            	      						
            	            	    }
            	            	    // PsiInternalXtend.g:3103:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
            	            	    // PsiInternalXtend.g:3104:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // PsiInternalXtend.g:3104:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
            	            	    // PsiInternalXtend.g:3105:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0ElementType());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_10);
            	            	    ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return ;
            	            	    if ( state.backtracking==0 ) {

            	            	      									doneComposite();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop111;
            	                }
            	            } while (true);

            	            if ( state.backtracking==0 ) {

            	              						markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_GreaterThanSignKeyword_1_4_2_3ElementType());
            	              					
            	            }
            	            otherlv_13=(Token)match(input,KW_GreaterThanSign,FOLLOW_53); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              						doneLeaf(otherlv_13);
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleParameterizedTypeReferenceWithTypeArgs"


    // $ANTLR start "entryRuleFunctionID"
    // PsiInternalXtend.g:3129:1: entryRuleFunctionID : ruleFunctionID EOF ;
    public final void entryRuleFunctionID() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3129:20: ( ruleFunctionID EOF )
            // PsiInternalXtend.g:3130:2: ruleFunctionID EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFunctionIDElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionID();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionID"


    // $ANTLR start "ruleFunctionID"
    // PsiInternalXtend.g:3135:1: ruleFunctionID : ( ruleValidID | ruleOperators ) ;
    public final void ruleFunctionID() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3135:15: ( ( ruleValidID | ruleOperators ) )
            // PsiInternalXtend.g:3136:2: ( ruleValidID | ruleOperators )
            {
            // PsiInternalXtend.g:3136:2: ( ruleValidID | ruleOperators )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==KW_Annotation||LA114_0==KW_Create||(LA114_0>=KW_AFTER && LA114_0<=KW_SEPARATOR)||LA114_0==RULE_ID) ) {
                alt114=1;
            }
            else if ( (LA114_0==KW_LessThanSign||LA114_0==KW_GreaterThanSign||LA114_0==KW_EqualsSignGreaterThanSign||(LA114_0>=KW_PlusSignEqualsSign && LA114_0<=KW_ExclamationMarkEqualsSignEqualsSign)||(LA114_0>=KW_HyphenMinusGreaterThanSign && LA114_0<=KW_ExclamationMark)||(LA114_0>=KW_PlusSignPlusSign && LA114_0<=KW_HyphenMinusHyphenMinus)) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // PsiInternalXtend.g:3137:3: ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getFunctionID_ValidIDParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3145:3: ruleOperators
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getFunctionID_OperatorsParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperators();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleFunctionID"


    // $ANTLR start "entryRuleOperators"
    // PsiInternalXtend.g:3156:1: entryRuleOperators : ruleOperators EOF ;
    public final void entryRuleOperators() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3156:19: ( ruleOperators EOF )
            // PsiInternalXtend.g:3157:2: ruleOperators EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOperatorsElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperators();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperators"


    // $ANTLR start "ruleOperators"
    // PsiInternalXtend.g:3162:1: ruleOperators : ( ruleOpMultiAssign | ruleOpOr | ruleOpAnd | ruleOpEquality | ruleOpCompare | ruleOpOther | ruleOpMulti | ruleOpUnary | ruleOpPostfix ) ;
    public final void ruleOperators() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3162:14: ( ( ruleOpMultiAssign | ruleOpOr | ruleOpAnd | ruleOpEquality | ruleOpCompare | ruleOpOther | ruleOpMulti | ruleOpUnary | ruleOpPostfix ) )
            // PsiInternalXtend.g:3163:2: ( ruleOpMultiAssign | ruleOpOr | ruleOpAnd | ruleOpEquality | ruleOpCompare | ruleOpOther | ruleOpMulti | ruleOpUnary | ruleOpPostfix )
            {
            // PsiInternalXtend.g:3163:2: ( ruleOpMultiAssign | ruleOpOr | ruleOpAnd | ruleOpEquality | ruleOpCompare | ruleOpOther | ruleOpMulti | ruleOpUnary | ruleOpPostfix )
            int alt115=9;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // PsiInternalXtend.g:3164:3: ruleOpMultiAssign
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpMultiAssignParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpMultiAssign();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3172:3: ruleOpOr
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpOrParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpOr();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:3180:3: ruleOpAnd
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpAndParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpAnd();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:3188:3: ruleOpEquality
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpEqualityParserRuleCall_3ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpEquality();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:3196:3: ruleOpCompare
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpCompareParserRuleCall_4ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpCompare();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:3204:3: ruleOpOther
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpOtherParserRuleCall_5ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpOther();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 7 :
                    // PsiInternalXtend.g:3212:3: ruleOpMulti
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpMultiParserRuleCall_6ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpMulti();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 8 :
                    // PsiInternalXtend.g:3220:3: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpUnaryParserRuleCall_7ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 9 :
                    // PsiInternalXtend.g:3228:3: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpPostfixParserRuleCall_8ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOperators"


    // $ANTLR start "entryRuleXtendEnumLiteral"
    // PsiInternalXtend.g:3239:1: entryRuleXtendEnumLiteral : ruleXtendEnumLiteral EOF ;
    public final void entryRuleXtendEnumLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3239:26: ( ruleXtendEnumLiteral EOF )
            // PsiInternalXtend.g:3240:2: ruleXtendEnumLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXtendEnumLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXtendEnumLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXtendEnumLiteral"


    // $ANTLR start "ruleXtendEnumLiteral"
    // PsiInternalXtend.g:3245:1: ruleXtendEnumLiteral : ( (lv_name_0_0= ruleValidID ) ) ;
    public final void ruleXtendEnumLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3245:21: ( ( (lv_name_0_0= ruleValidID ) ) )
            // PsiInternalXtend.g:3246:2: ( (lv_name_0_0= ruleValidID ) )
            {
            // PsiInternalXtend.g:3246:2: ( (lv_name_0_0= ruleValidID ) )
            // PsiInternalXtend.g:3247:3: (lv_name_0_0= ruleValidID )
            {
            // PsiInternalXtend.g:3247:3: (lv_name_0_0= ruleValidID )
            // PsiInternalXtend.g:3248:4: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              				markComposite(elementTypeProvider.getXtendEnumLiteral_NameValidIDParserRuleCall_0ElementType());
              			
            }
            pushFollow(FOLLOW_2);
            ruleValidID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              				doneComposite();
              			
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXtendEnumLiteral"


    // $ANTLR start "entryRuleCommonModifier"
    // PsiInternalXtend.g:3260:1: entryRuleCommonModifier : ruleCommonModifier EOF ;
    public final void entryRuleCommonModifier() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3260:24: ( ruleCommonModifier EOF )
            // PsiInternalXtend.g:3261:2: ruleCommonModifier EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getCommonModifierElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleCommonModifier();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCommonModifier"


    // $ANTLR start "ruleCommonModifier"
    // PsiInternalXtend.g:3266:1: ruleCommonModifier : (kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'package' | kw= 'abstract' | kw= 'static' | kw= 'dispatch' | kw= 'final' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' ) ;
    public final void ruleCommonModifier() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:3266:19: ( (kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'package' | kw= 'abstract' | kw= 'static' | kw= 'dispatch' | kw= 'final' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' ) )
            // PsiInternalXtend.g:3267:2: (kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'package' | kw= 'abstract' | kw= 'static' | kw= 'dispatch' | kw= 'final' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' )
            {
            // PsiInternalXtend.g:3267:2: (kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'package' | kw= 'abstract' | kw= 'static' | kw= 'dispatch' | kw= 'final' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' )
            int alt116=13;
            switch ( input.LA(1) ) {
            case KW_Public:
                {
                alt116=1;
                }
                break;
            case KW_Private:
                {
                alt116=2;
                }
                break;
            case KW_Protected:
                {
                alt116=3;
                }
                break;
            case KW_Package:
                {
                alt116=4;
                }
                break;
            case KW_Abstract:
                {
                alt116=5;
                }
                break;
            case KW_Static:
                {
                alt116=6;
                }
                break;
            case KW_Dispatch:
                {
                alt116=7;
                }
                break;
            case KW_Final:
                {
                alt116=8;
                }
                break;
            case KW_Strictfp:
                {
                alt116=9;
                }
                break;
            case KW_Native:
                {
                alt116=10;
                }
                break;
            case KW_Volatile:
                {
                alt116=11;
                }
                break;
            case KW_Synchronized:
                {
                alt116=12;
                }
                break;
            case KW_Transient:
                {
                alt116=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }

            switch (alt116) {
                case 1 :
                    // PsiInternalXtend.g:3268:3: kw= 'public'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_PublicKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Public,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3276:3: kw= 'private'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_PrivateKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Private,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:3284:3: kw= 'protected'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_ProtectedKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Protected,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:3292:3: kw= 'package'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_PackageKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Package,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:3300:3: kw= 'abstract'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_AbstractKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Abstract,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:3308:3: kw= 'static'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_StaticKeyword_5ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Static,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 7 :
                    // PsiInternalXtend.g:3316:3: kw= 'dispatch'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_DispatchKeyword_6ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Dispatch,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 8 :
                    // PsiInternalXtend.g:3324:3: kw= 'final'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_FinalKeyword_7ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Final,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 9 :
                    // PsiInternalXtend.g:3332:3: kw= 'strictfp'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_StrictfpKeyword_8ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Strictfp,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 10 :
                    // PsiInternalXtend.g:3340:3: kw= 'native'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_NativeKeyword_9ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Native,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 11 :
                    // PsiInternalXtend.g:3348:3: kw= 'volatile'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_VolatileKeyword_10ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Volatile,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 12 :
                    // PsiInternalXtend.g:3356:3: kw= 'synchronized'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_SynchronizedKeyword_11ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Synchronized,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 13 :
                    // PsiInternalXtend.g:3364:3: kw= 'transient'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_TransientKeyword_12ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Transient,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleCommonModifier"


    // $ANTLR start "entryRuleFieldModifier"
    // PsiInternalXtend.g:3375:1: entryRuleFieldModifier : ruleFieldModifier EOF ;
    public final void entryRuleFieldModifier() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3375:23: ( ruleFieldModifier EOF )
            // PsiInternalXtend.g:3376:2: ruleFieldModifier EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFieldModifierElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleFieldModifier();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldModifier"


    // $ANTLR start "ruleFieldModifier"
    // PsiInternalXtend.g:3381:1: ruleFieldModifier : (kw= 'val' | kw= 'var' ) ;
    public final void ruleFieldModifier() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:3381:18: ( (kw= 'val' | kw= 'var' ) )
            // PsiInternalXtend.g:3382:2: (kw= 'val' | kw= 'var' )
            {
            // PsiInternalXtend.g:3382:2: (kw= 'val' | kw= 'var' )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==KW_Val) ) {
                alt117=1;
            }
            else if ( (LA117_0==KW_Var) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // PsiInternalXtend.g:3383:3: kw= 'val'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getFieldModifier_ValKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Val,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3391:3: kw= 'var'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getFieldModifier_VarKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Var,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleFieldModifier"


    // $ANTLR start "entryRuleMethodModifier"
    // PsiInternalXtend.g:3402:1: entryRuleMethodModifier : ruleMethodModifier EOF ;
    public final void entryRuleMethodModifier() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3402:24: ( ruleMethodModifier EOF )
            // PsiInternalXtend.g:3403:2: ruleMethodModifier EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getMethodModifierElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleMethodModifier();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMethodModifier"


    // $ANTLR start "ruleMethodModifier"
    // PsiInternalXtend.g:3408:1: ruleMethodModifier : (kw= 'def' | kw= 'override' ) ;
    public final void ruleMethodModifier() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:3408:19: ( (kw= 'def' | kw= 'override' ) )
            // PsiInternalXtend.g:3409:2: (kw= 'def' | kw= 'override' )
            {
            // PsiInternalXtend.g:3409:2: (kw= 'def' | kw= 'override' )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==KW_Def) ) {
                alt118=1;
            }
            else if ( (LA118_0==KW_Override) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // PsiInternalXtend.g:3410:3: kw= 'def'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getMethodModifier_DefKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Def,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3418:3: kw= 'override'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getMethodModifier_OverrideKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Override,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleMethodModifier"


    // $ANTLR start "entryRuleCreateExtensionInfo"
    // PsiInternalXtend.g:3429:1: entryRuleCreateExtensionInfo : ruleCreateExtensionInfo EOF ;
    public final void entryRuleCreateExtensionInfo() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3429:29: ( ruleCreateExtensionInfo EOF )
            // PsiInternalXtend.g:3430:2: ruleCreateExtensionInfo EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getCreateExtensionInfoElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleCreateExtensionInfo();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCreateExtensionInfo"


    // $ANTLR start "ruleCreateExtensionInfo"
    // PsiInternalXtend.g:3435:1: ruleCreateExtensionInfo : (otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) ) ) ;
    public final void ruleCreateExtensionInfo() throws RecognitionException {
        Token otherlv_0=null;
        Token otherlv_2=null;

        try {
            // PsiInternalXtend.g:3435:24: ( (otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) ) ) )
            // PsiInternalXtend.g:3436:2: (otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) ) )
            {
            // PsiInternalXtend.g:3436:2: (otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) ) )
            // PsiInternalXtend.g:3437:3: otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) )
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getCreateExtensionInfo_CreateKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Create,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            // PsiInternalXtend.g:3444:3: ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )?
            int alt119=2;
            switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA119_1 = input.LA(2);

                    if ( (LA119_1==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_Create:
                    {
                    int LA119_2 = input.LA(2);

                    if ( (LA119_2==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_Annotation:
                    {
                    int LA119_3 = input.LA(2);

                    if ( (LA119_3==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_AFTER:
                    {
                    int LA119_4 = input.LA(2);

                    if ( (LA119_4==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA119_5 = input.LA(2);

                    if ( (LA119_5==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA119_6 = input.LA(2);

                    if ( (LA119_6==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
            }

            switch (alt119) {
                case 1 :
                    // PsiInternalXtend.g:3445:4: ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':'
                    {
                    // PsiInternalXtend.g:3445:4: ( (lv_name_1_0= ruleValidID ) )
                    // PsiInternalXtend.g:3446:5: (lv_name_1_0= ruleValidID )
                    {
                    // PsiInternalXtend.g:3446:5: (lv_name_1_0= ruleValidID )
                    // PsiInternalXtend.g:3447:6: lv_name_1_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getCreateExtensionInfo_NameValidIDParserRuleCall_1_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getCreateExtensionInfo_ColonKeyword_1_1ElementType());
                      			
                    }
                    otherlv_2=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_2);
                      			
                    }

                    }
                    break;

            }

            // PsiInternalXtend.g:3464:3: ( (lv_createExpression_3_0= ruleXExpression ) )
            // PsiInternalXtend.g:3465:4: (lv_createExpression_3_0= ruleXExpression )
            {
            // PsiInternalXtend.g:3465:4: (lv_createExpression_3_0= ruleXExpression )
            // PsiInternalXtend.g:3466:5: lv_createExpression_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getCreateExtensionInfo_CreateExpressionXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleCreateExtensionInfo"


    // $ANTLR start "entryRuleValidID"
    // PsiInternalXtend.g:3479:1: entryRuleValidID : ruleValidID EOF ;
    public final void entryRuleValidID() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3479:17: ( ruleValidID EOF )
            // PsiInternalXtend.g:3480:2: ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getValidIDElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleValidID();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // PsiInternalXtend.g:3485:1: ruleValidID : (this_ID_0= RULE_ID | kw= 'create' | kw= 'annotation' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' ) ;
    public final void ruleValidID() throws RecognitionException {
        Token this_ID_0=null;
        Token kw=null;

        try {
            // PsiInternalXtend.g:3485:12: ( (this_ID_0= RULE_ID | kw= 'create' | kw= 'annotation' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' ) )
            // PsiInternalXtend.g:3486:2: (this_ID_0= RULE_ID | kw= 'create' | kw= 'annotation' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' )
            {
            // PsiInternalXtend.g:3486:2: (this_ID_0= RULE_ID | kw= 'create' | kw= 'annotation' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' )
            int alt120=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt120=1;
                }
                break;
            case KW_Create:
                {
                alt120=2;
                }
                break;
            case KW_Annotation:
                {
                alt120=3;
                }
                break;
            case KW_AFTER:
                {
                alt120=4;
                }
                break;
            case KW_BEFORE:
                {
                alt120=5;
                }
                break;
            case KW_SEPARATOR:
                {
                alt120=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }

            switch (alt120) {
                case 1 :
                    // PsiInternalXtend.g:3487:3: this_ID_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_IDTerminalRuleCall_0ElementType());
                      		
                    }
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(this_ID_0);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3495:3: kw= 'create'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_CreateKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Create,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:3503:3: kw= 'annotation'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_AnnotationKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Annotation,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:3511:3: kw= 'AFTER'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_AFTERKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_AFTER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:3519:3: kw= 'BEFORE'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_BEFOREKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_BEFORE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:3527:3: kw= 'SEPARATOR'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_SEPARATORKeyword_5ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_SEPARATOR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleFeatureCallID"
    // PsiInternalXtend.g:3538:1: entryRuleFeatureCallID : ruleFeatureCallID EOF ;
    public final void entryRuleFeatureCallID() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3538:23: ( ruleFeatureCallID EOF )
            // PsiInternalXtend.g:3539:2: ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFeatureCallIDElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // PsiInternalXtend.g:3544:1: ruleFeatureCallID : ( ruleInnerVarID | kw= 'extension' ) ;
    public final void ruleFeatureCallID() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:3544:18: ( ( ruleInnerVarID | kw= 'extension' ) )
            // PsiInternalXtend.g:3545:2: ( ruleInnerVarID | kw= 'extension' )
            {
            // PsiInternalXtend.g:3545:2: ( ruleInnerVarID | kw= 'extension' )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==KW_Package||LA121_0==KW_Class||(LA121_0>=KW_Extends && LA121_0<=KW_Implements)||(LA121_0>=KW_Interface && LA121_0<=KW_Annotation)||LA121_0==KW_Throws||(LA121_0>=KW_Public && LA121_0<=KW_Transient)||(LA121_0>=KW_Def && LA121_0<=KW_Create)||(LA121_0>=KW_AFTER && LA121_0<=KW_Import)||LA121_0==RULE_ID) ) {
                alt121=1;
            }
            else if ( (LA121_0==KW_Extension) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // PsiInternalXtend.g:3546:3: ruleInnerVarID
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getFeatureCallID_InnerVarIDParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3554:3: kw= 'extension'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getFeatureCallID_ExtensionKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Extension,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleInnerVarID"
    // PsiInternalXtend.g:3565:1: entryRuleInnerVarID : ruleInnerVarID EOF ;
    public final void entryRuleInnerVarID() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3565:20: ( ruleInnerVarID EOF )
            // PsiInternalXtend.g:3566:2: ruleInnerVarID EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getInnerVarIDElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleInnerVarID();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInnerVarID"


    // $ANTLR start "ruleInnerVarID"
    // PsiInternalXtend.g:3571:1: ruleInnerVarID : (this_ID_0= RULE_ID | kw= 'abstract' | kw= 'annotation' | kw= 'class' | kw= 'create' | kw= 'def' | kw= 'dispatch' | kw= 'enum' | kw= 'extends' | kw= 'final' | kw= 'implements' | kw= 'import' | kw= 'interface' | kw= 'override' | kw= 'package' | kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'static' | kw= 'throws' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' ) ;
    public final void ruleInnerVarID() throws RecognitionException {
        Token this_ID_0=null;
        Token kw=null;

        try {
            // PsiInternalXtend.g:3571:15: ( (this_ID_0= RULE_ID | kw= 'abstract' | kw= 'annotation' | kw= 'class' | kw= 'create' | kw= 'def' | kw= 'dispatch' | kw= 'enum' | kw= 'extends' | kw= 'final' | kw= 'implements' | kw= 'import' | kw= 'interface' | kw= 'override' | kw= 'package' | kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'static' | kw= 'throws' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' ) )
            // PsiInternalXtend.g:3572:2: (this_ID_0= RULE_ID | kw= 'abstract' | kw= 'annotation' | kw= 'class' | kw= 'create' | kw= 'def' | kw= 'dispatch' | kw= 'enum' | kw= 'extends' | kw= 'final' | kw= 'implements' | kw= 'import' | kw= 'interface' | kw= 'override' | kw= 'package' | kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'static' | kw= 'throws' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' )
            {
            // PsiInternalXtend.g:3572:2: (this_ID_0= RULE_ID | kw= 'abstract' | kw= 'annotation' | kw= 'class' | kw= 'create' | kw= 'def' | kw= 'dispatch' | kw= 'enum' | kw= 'extends' | kw= 'final' | kw= 'implements' | kw= 'import' | kw= 'interface' | kw= 'override' | kw= 'package' | kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'static' | kw= 'throws' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' )
            int alt122=28;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt122=1;
                }
                break;
            case KW_Abstract:
                {
                alt122=2;
                }
                break;
            case KW_Annotation:
                {
                alt122=3;
                }
                break;
            case KW_Class:
                {
                alt122=4;
                }
                break;
            case KW_Create:
                {
                alt122=5;
                }
                break;
            case KW_Def:
                {
                alt122=6;
                }
                break;
            case KW_Dispatch:
                {
                alt122=7;
                }
                break;
            case KW_Enum:
                {
                alt122=8;
                }
                break;
            case KW_Extends:
                {
                alt122=9;
                }
                break;
            case KW_Final:
                {
                alt122=10;
                }
                break;
            case KW_Implements:
                {
                alt122=11;
                }
                break;
            case KW_Import:
                {
                alt122=12;
                }
                break;
            case KW_Interface:
                {
                alt122=13;
                }
                break;
            case KW_Override:
                {
                alt122=14;
                }
                break;
            case KW_Package:
                {
                alt122=15;
                }
                break;
            case KW_Public:
                {
                alt122=16;
                }
                break;
            case KW_Private:
                {
                alt122=17;
                }
                break;
            case KW_Protected:
                {
                alt122=18;
                }
                break;
            case KW_Static:
                {
                alt122=19;
                }
                break;
            case KW_Throws:
                {
                alt122=20;
                }
                break;
            case KW_Strictfp:
                {
                alt122=21;
                }
                break;
            case KW_Native:
                {
                alt122=22;
                }
                break;
            case KW_Volatile:
                {
                alt122=23;
                }
                break;
            case KW_Synchronized:
                {
                alt122=24;
                }
                break;
            case KW_Transient:
                {
                alt122=25;
                }
                break;
            case KW_AFTER:
                {
                alt122=26;
                }
                break;
            case KW_BEFORE:
                {
                alt122=27;
                }
                break;
            case KW_SEPARATOR:
                {
                alt122=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }

            switch (alt122) {
                case 1 :
                    // PsiInternalXtend.g:3573:3: this_ID_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_IDTerminalRuleCall_0ElementType());
                      		
                    }
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(this_ID_0);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3581:3: kw= 'abstract'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_AbstractKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Abstract,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:3589:3: kw= 'annotation'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_AnnotationKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Annotation,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:3597:3: kw= 'class'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ClassKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Class,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:3605:3: kw= 'create'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_CreateKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Create,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:3613:3: kw= 'def'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_DefKeyword_5ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Def,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 7 :
                    // PsiInternalXtend.g:3621:3: kw= 'dispatch'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_DispatchKeyword_6ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Dispatch,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 8 :
                    // PsiInternalXtend.g:3629:3: kw= 'enum'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_EnumKeyword_7ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Enum,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 9 :
                    // PsiInternalXtend.g:3637:3: kw= 'extends'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ExtendsKeyword_8ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Extends,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 10 :
                    // PsiInternalXtend.g:3645:3: kw= 'final'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_FinalKeyword_9ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Final,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 11 :
                    // PsiInternalXtend.g:3653:3: kw= 'implements'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ImplementsKeyword_10ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Implements,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 12 :
                    // PsiInternalXtend.g:3661:3: kw= 'import'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ImportKeyword_11ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Import,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 13 :
                    // PsiInternalXtend.g:3669:3: kw= 'interface'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_InterfaceKeyword_12ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Interface,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 14 :
                    // PsiInternalXtend.g:3677:3: kw= 'override'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_OverrideKeyword_13ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Override,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 15 :
                    // PsiInternalXtend.g:3685:3: kw= 'package'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_PackageKeyword_14ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Package,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 16 :
                    // PsiInternalXtend.g:3693:3: kw= 'public'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_PublicKeyword_15ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Public,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 17 :
                    // PsiInternalXtend.g:3701:3: kw= 'private'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_PrivateKeyword_16ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Private,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 18 :
                    // PsiInternalXtend.g:3709:3: kw= 'protected'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ProtectedKeyword_17ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Protected,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 19 :
                    // PsiInternalXtend.g:3717:3: kw= 'static'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_StaticKeyword_18ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Static,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 20 :
                    // PsiInternalXtend.g:3725:3: kw= 'throws'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ThrowsKeyword_19ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Throws,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 21 :
                    // PsiInternalXtend.g:3733:3: kw= 'strictfp'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_StrictfpKeyword_20ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Strictfp,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 22 :
                    // PsiInternalXtend.g:3741:3: kw= 'native'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_NativeKeyword_21ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Native,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 23 :
                    // PsiInternalXtend.g:3749:3: kw= 'volatile'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_VolatileKeyword_22ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Volatile,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 24 :
                    // PsiInternalXtend.g:3757:3: kw= 'synchronized'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_SynchronizedKeyword_23ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Synchronized,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 25 :
                    // PsiInternalXtend.g:3765:3: kw= 'transient'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_TransientKeyword_24ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Transient,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 26 :
                    // PsiInternalXtend.g:3773:3: kw= 'AFTER'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_AFTERKeyword_25ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_AFTER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 27 :
                    // PsiInternalXtend.g:3781:3: kw= 'BEFORE'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_BEFOREKeyword_26ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_BEFORE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 28 :
                    // PsiInternalXtend.g:3789:3: kw= 'SEPARATOR'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_SEPARATORKeyword_27ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_SEPARATOR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleInnerVarID"


    // $ANTLR start "entryRuleParameter"
    // PsiInternalXtend.g:3800:1: entryRuleParameter : ruleParameter EOF ;
    public final void entryRuleParameter() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3800:19: ( ruleParameter EOF )
            // PsiInternalXtend.g:3801:2: ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getParameterElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // PsiInternalXtend.g:3806:1: ruleParameter : ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) ) ) ;
    public final void ruleParameter() throws RecognitionException {
        Token lv_extension_1_0=null;
        Token lv_varArg_4_0=null;

        try {
            // PsiInternalXtend.g:3806:14: ( ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) ) ) )
            // PsiInternalXtend.g:3807:2: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) ) )
            {
            // PsiInternalXtend.g:3807:2: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) ) )
            // PsiInternalXtend.g:3808:3: ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) )
            {
            // PsiInternalXtend.g:3808:3: ( (lv_annotations_0_0= ruleXAnnotation ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==KW_CommercialAt) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // PsiInternalXtend.g:3809:4: (lv_annotations_0_0= ruleXAnnotation )
            	    {
            	    // PsiInternalXtend.g:3809:4: (lv_annotations_0_0= ruleXAnnotation )
            	    // PsiInternalXtend.g:3810:5: lv_annotations_0_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getParameter_AnnotationsXAnnotationParserRuleCall_0_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            // PsiInternalXtend.g:3819:3: ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==KW_Extension) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // PsiInternalXtend.g:3820:4: ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )*
                    {
                    // PsiInternalXtend.g:3820:4: ( (lv_extension_1_0= 'extension' ) )
                    // PsiInternalXtend.g:3821:5: (lv_extension_1_0= 'extension' )
                    {
                    // PsiInternalXtend.g:3821:5: (lv_extension_1_0= 'extension' )
                    // PsiInternalXtend.g:3822:6: lv_extension_1_0= 'extension'
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getParameter_ExtensionExtensionKeyword_1_0_0ElementType());
                      					
                    }
                    lv_extension_1_0=(Token)match(input,KW_Extension,FOLLOW_43); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_extension_1_0);
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:3831:4: ( (lv_annotations_2_0= ruleXAnnotation ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==KW_CommercialAt) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // PsiInternalXtend.g:3832:5: (lv_annotations_2_0= ruleXAnnotation )
                    	    {
                    	    // PsiInternalXtend.g:3832:5: (lv_annotations_2_0= ruleXAnnotation )
                    	    // PsiInternalXtend.g:3833:6: lv_annotations_2_0= ruleXAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getParameter_AnnotationsXAnnotationParserRuleCall_1_1_0ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_43);
                    	    ruleXAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }
                    break;

            }

            // PsiInternalXtend.g:3843:3: ( (lv_parameterType_3_0= ruleJvmTypeReference ) )
            // PsiInternalXtend.g:3844:4: (lv_parameterType_3_0= ruleJvmTypeReference )
            {
            // PsiInternalXtend.g:3844:4: (lv_parameterType_3_0= ruleJvmTypeReference )
            // PsiInternalXtend.g:3845:5: lv_parameterType_3_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getParameter_ParameterTypeJvmTypeReferenceParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_56);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:3854:3: ( (lv_varArg_4_0= '...' ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==KW_FullStopFullStopFullStop) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // PsiInternalXtend.g:3855:4: (lv_varArg_4_0= '...' )
                    {
                    // PsiInternalXtend.g:3855:4: (lv_varArg_4_0= '...' )
                    // PsiInternalXtend.g:3856:5: lv_varArg_4_0= '...'
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getParameter_VarArgFullStopFullStopFullStopKeyword_3_0ElementType());
                      				
                    }
                    lv_varArg_4_0=(Token)match(input,KW_FullStopFullStopFullStop,FOLLOW_3); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(lv_varArg_4_0);
                      				
                    }

                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:3865:3: ( (lv_name_5_0= ruleValidID ) )
            // PsiInternalXtend.g:3866:4: (lv_name_5_0= ruleValidID )
            {
            // PsiInternalXtend.g:3866:4: (lv_name_5_0= ruleValidID )
            // PsiInternalXtend.g:3867:5: lv_name_5_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getParameter_NameValidIDParserRuleCall_4_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleValidID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // PsiInternalXtend.g:3880:1: entryRuleXVariableDeclaration : ruleXVariableDeclaration EOF ;
    public final void entryRuleXVariableDeclaration() throws RecognitionException {
        try {
            // PsiInternalXtend.g:3880:30: ( ruleXVariableDeclaration EOF )
            // PsiInternalXtend.g:3881:2: ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXVariableDeclarationElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // PsiInternalXtend.g:3886:1: ruleXVariableDeclaration : ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )? ) ;
    public final void ruleXVariableDeclaration() throws RecognitionException {
        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token lv_extension_3_0=null;
        Token lv_extension_4_0=null;
        Token lv_writeable_5_0=null;
        Token otherlv_6=null;
        Token otherlv_10=null;

        try {
            // PsiInternalXtend.g:3886:25: ( ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )? ) )
            // PsiInternalXtend.g:3887:2: ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )? )
            {
            // PsiInternalXtend.g:3887:2: ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )? )
            // PsiInternalXtend.g:3888:3: ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )?
            {
            // PsiInternalXtend.g:3888:3: ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) )
            // PsiInternalXtend.g:3889:4: ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) )
            {
            // PsiInternalXtend.g:3929:4: ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) )
            // PsiInternalXtend.g:3930:5: () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) )
            {
            // PsiInternalXtend.g:3930:5: ()
            // PsiInternalXtend.g:3931:6: 
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXVariableDeclaration_XtendVariableDeclarationAction_0_0_0ElementType());
              						doneComposite();
              					
            }

            }

            // PsiInternalXtend.g:3936:5: ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( ((LA130_0>=KW_Val && LA130_0<=KW_Var)) ) {
                alt130=1;
            }
            else if ( (LA130_0==KW_Extension) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // PsiInternalXtend.g:3937:6: ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? )
                    {
                    // PsiInternalXtend.g:3937:6: ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? )
                    // PsiInternalXtend.g:3938:7: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )?
                    {
                    // PsiInternalXtend.g:3938:7: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==KW_Var) ) {
                        alt127=1;
                    }
                    else if ( (LA127_0==KW_Val) ) {
                        alt127=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 127, 0, input);

                        throw nvae;
                    }
                    switch (alt127) {
                        case 1 :
                            // PsiInternalXtend.g:3939:8: ( (lv_writeable_1_0= 'var' ) )
                            {
                            // PsiInternalXtend.g:3939:8: ( (lv_writeable_1_0= 'var' ) )
                            // PsiInternalXtend.g:3940:9: (lv_writeable_1_0= 'var' )
                            {
                            // PsiInternalXtend.g:3940:9: (lv_writeable_1_0= 'var' )
                            // PsiInternalXtend.g:3941:10: lv_writeable_1_0= 'var'
                            {
                            if ( state.backtracking==0 ) {

                              										markLeaf(elementTypeProvider.getXVariableDeclaration_WriteableVarKeyword_0_0_1_0_0_0_0ElementType());
                              									
                            }
                            lv_writeable_1_0=(Token)match(input,KW_Var,FOLLOW_57); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneLeaf(lv_writeable_1_0);
                              									
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:3951:8: otherlv_2= 'val'
                            {
                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getXVariableDeclaration_ValKeyword_0_0_1_0_0_1ElementType());
                              							
                            }
                            otherlv_2=(Token)match(input,KW_Val,FOLLOW_57); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_2);
                              							
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:3959:7: ( (lv_extension_3_0= 'extension' ) )?
                    int alt128=2;
                    int LA128_0 = input.LA(1);

                    if ( (LA128_0==KW_Extension) ) {
                        alt128=1;
                    }
                    switch (alt128) {
                        case 1 :
                            // PsiInternalXtend.g:3960:8: (lv_extension_3_0= 'extension' )
                            {
                            // PsiInternalXtend.g:3960:8: (lv_extension_3_0= 'extension' )
                            // PsiInternalXtend.g:3961:9: lv_extension_3_0= 'extension'
                            {
                            if ( state.backtracking==0 ) {

                              									markLeaf(elementTypeProvider.getXVariableDeclaration_ExtensionExtensionKeyword_0_0_1_0_1_0ElementType());
                              								
                            }
                            lv_extension_3_0=(Token)match(input,KW_Extension,FOLLOW_57); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneLeaf(lv_extension_3_0);
                              								
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:3972:6: ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) )
                    {
                    // PsiInternalXtend.g:3972:6: ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) )
                    // PsiInternalXtend.g:3973:7: ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' )
                    {
                    // PsiInternalXtend.g:3973:7: ( (lv_extension_4_0= 'extension' ) )
                    // PsiInternalXtend.g:3974:8: (lv_extension_4_0= 'extension' )
                    {
                    // PsiInternalXtend.g:3974:8: (lv_extension_4_0= 'extension' )
                    // PsiInternalXtend.g:3975:9: lv_extension_4_0= 'extension'
                    {
                    if ( state.backtracking==0 ) {

                      									markLeaf(elementTypeProvider.getXVariableDeclaration_ExtensionExtensionKeyword_0_0_1_1_0_0ElementType());
                      								
                    }
                    lv_extension_4_0=(Token)match(input,KW_Extension,FOLLOW_58); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      									doneLeaf(lv_extension_4_0);
                      								
                    }

                    }


                    }

                    // PsiInternalXtend.g:3984:7: ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' )
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==KW_Var) ) {
                        alt129=1;
                    }
                    else if ( (LA129_0==KW_Val) ) {
                        alt129=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 129, 0, input);

                        throw nvae;
                    }
                    switch (alt129) {
                        case 1 :
                            // PsiInternalXtend.g:3985:8: ( (lv_writeable_5_0= 'var' ) )
                            {
                            // PsiInternalXtend.g:3985:8: ( (lv_writeable_5_0= 'var' ) )
                            // PsiInternalXtend.g:3986:9: (lv_writeable_5_0= 'var' )
                            {
                            // PsiInternalXtend.g:3986:9: (lv_writeable_5_0= 'var' )
                            // PsiInternalXtend.g:3987:10: lv_writeable_5_0= 'var'
                            {
                            if ( state.backtracking==0 ) {

                              										markLeaf(elementTypeProvider.getXVariableDeclaration_WriteableVarKeyword_0_0_1_1_1_0_0ElementType());
                              									
                            }
                            lv_writeable_5_0=(Token)match(input,KW_Var,FOLLOW_57); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              										doneLeaf(lv_writeable_5_0);
                              									
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:3997:8: otherlv_6= 'val'
                            {
                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getXVariableDeclaration_ValKeyword_0_0_1_1_1_1ElementType());
                              							
                            }
                            otherlv_6=(Token)match(input,KW_Val,FOLLOW_57); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_6);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            // PsiInternalXtend.g:4009:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) )
            int alt131=2;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // PsiInternalXtend.g:4010:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) )
                    {
                    // PsiInternalXtend.g:4010:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) )
                    // PsiInternalXtend.g:4011:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) )
                    {
                    // PsiInternalXtend.g:4024:5: ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) )
                    // PsiInternalXtend.g:4025:6: ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) )
                    {
                    // PsiInternalXtend.g:4025:6: ( (lv_type_7_0= ruleJvmTypeReference ) )
                    // PsiInternalXtend.g:4026:7: (lv_type_7_0= ruleJvmTypeReference )
                    {
                    // PsiInternalXtend.g:4026:7: (lv_type_7_0= ruleJvmTypeReference )
                    // PsiInternalXtend.g:4027:8: lv_type_7_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								markComposite(elementTypeProvider.getXVariableDeclaration_TypeJvmTypeReferenceParserRuleCall_1_0_0_0_0ElementType());
                      							
                    }
                    pushFollow(FOLLOW_59);
                    ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      								doneComposite();
                      							
                    }

                    }


                    }

                    // PsiInternalXtend.g:4036:6: ( (lv_name_8_0= ruleInnerVarID ) )
                    // PsiInternalXtend.g:4037:7: (lv_name_8_0= ruleInnerVarID )
                    {
                    // PsiInternalXtend.g:4037:7: (lv_name_8_0= ruleInnerVarID )
                    // PsiInternalXtend.g:4038:8: lv_name_8_0= ruleInnerVarID
                    {
                    if ( state.backtracking==0 ) {

                      								markComposite(elementTypeProvider.getXVariableDeclaration_NameInnerVarIDParserRuleCall_1_0_0_1_0ElementType());
                      							
                    }
                    pushFollow(FOLLOW_60);
                    ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      								doneComposite();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:4050:4: ( (lv_name_9_0= ruleInnerVarID ) )
                    {
                    // PsiInternalXtend.g:4050:4: ( (lv_name_9_0= ruleInnerVarID ) )
                    // PsiInternalXtend.g:4051:5: (lv_name_9_0= ruleInnerVarID )
                    {
                    // PsiInternalXtend.g:4051:5: (lv_name_9_0= ruleInnerVarID )
                    // PsiInternalXtend.g:4052:6: lv_name_9_0= ruleInnerVarID
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXVariableDeclaration_NameInnerVarIDParserRuleCall_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:4062:3: (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==KW_EqualsSign) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // PsiInternalXtend.g:4063:4: otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXVariableDeclaration_EqualsSignKeyword_2_0ElementType());
                      			
                    }
                    otherlv_10=(Token)match(input,KW_EqualsSign,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_10);
                      			
                    }
                    // PsiInternalXtend.g:4070:4: ( (lv_right_11_0= ruleXExpression ) )
                    // PsiInternalXtend.g:4071:5: (lv_right_11_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:4071:5: (lv_right_11_0= ruleXExpression )
                    // PsiInternalXtend.g:4072:6: lv_right_11_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXVariableDeclaration_RightXExpressionParserRuleCall_2_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleXConstructorCall"
    // PsiInternalXtend.g:4086:1: entryRuleXConstructorCall : ruleXConstructorCall EOF ;
    public final void entryRuleXConstructorCall() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4086:26: ( ruleXConstructorCall EOF )
            // PsiInternalXtend.g:4087:2: ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXConstructorCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // PsiInternalXtend.g:4092:1: ruleXConstructorCall : ( ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )? ) ;
    public final void ruleXConstructorCall() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;

        try {
            // PsiInternalXtend.g:4092:21: ( ( ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )? ) )
            // PsiInternalXtend.g:4093:2: ( ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )? )
            {
            // PsiInternalXtend.g:4093:2: ( ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )? )
            // PsiInternalXtend.g:4094:3: ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )?
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXConstructorCall_XbaseConstructorCallParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_61);
            ruleXbaseConstructorCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:4101:3: ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )?
            int alt134=2;
            alt134 = dfa134.predict(input);
            switch (alt134) {
                case 1 :
                    // PsiInternalXtend.g:4102:4: ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}'
                    {
                    // PsiInternalXtend.g:4102:4: ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) )
                    // PsiInternalXtend.g:4103:5: ( ( () '{' ) )=> ( () otherlv_2= '{' )
                    {
                    // PsiInternalXtend.g:4109:5: ( () otherlv_2= '{' )
                    // PsiInternalXtend.g:4110:6: () otherlv_2= '{'
                    {
                    // PsiInternalXtend.g:4110:6: ()
                    // PsiInternalXtend.g:4111:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							precedeComposite(elementTypeProvider.getXConstructorCall_AnonymousClassConstructorCallAction_1_0_0_0ElementType());
                      							doneComposite();
                      						
                    }

                    }

                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXConstructorCall_LeftCurlyBracketKeyword_1_0_0_1ElementType());
                      					
                    }
                    otherlv_2=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_2);
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:4125:4: ( (lv_members_3_0= ruleMember ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==KW_Package||LA133_0==KW_Class||(LA133_0>=KW_Interface && LA133_0<=KW_LeftParenthesis)||LA133_0==KW_EqualsSignGreaterThanSign||LA133_0==KW_Extension||LA133_0==KW_New||(LA133_0>=KW_Public && LA133_0<=KW_Create)||(LA133_0>=KW_AFTER && LA133_0<=KW_SEPARATOR)||LA133_0==KW_CommercialAt||LA133_0==RULE_ID) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // PsiInternalXtend.g:4126:5: (lv_members_3_0= ruleMember )
                    	    {
                    	    // PsiInternalXtend.g:4126:5: (lv_members_3_0= ruleMember )
                    	    // PsiInternalXtend.g:4127:6: lv_members_3_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getXConstructorCall_MembersMemberParserRuleCall_1_1_0ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXConstructorCall_RightCurlyBracketKeyword_1_2ElementType());
                      			
                    }
                    otherlv_4=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_4);
                      			
                    }

                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXbaseConstructorCall"
    // PsiInternalXtend.g:4148:1: entryRuleXbaseConstructorCall : ruleXbaseConstructorCall EOF ;
    public final void entryRuleXbaseConstructorCall() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4148:30: ( ruleXbaseConstructorCall EOF )
            // PsiInternalXtend.g:4149:2: ruleXbaseConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXbaseConstructorCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXbaseConstructorCall();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXbaseConstructorCall"


    // $ANTLR start "ruleXbaseConstructorCall"
    // PsiInternalXtend.g:4154:1: ruleXbaseConstructorCall : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final void ruleXbaseConstructorCall() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;

        try {
            // PsiInternalXtend.g:4154:25: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // PsiInternalXtend.g:4155:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // PsiInternalXtend.g:4155:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // PsiInternalXtend.g:4156:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // PsiInternalXtend.g:4156:3: ()
            // PsiInternalXtend.g:4157:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXbaseConstructorCall_XConstructorCallAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXbaseConstructorCall_NewKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_New,FOLLOW_3); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:4169:3: ( ( ruleQualifiedName ) )
            // PsiInternalXtend.g:4170:4: ( ruleQualifiedName )
            {
            // PsiInternalXtend.g:4170:4: ( ruleQualifiedName )
            // PsiInternalXtend.g:4171:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXbaseConstructorCall_ConstructorJvmConstructorCrossReference_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_62);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:4180:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt136=2;
            alt136 = dfa136.predict(input);
            switch (alt136) {
                case 1 :
                    // PsiInternalXtend.g:4181:4: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // PsiInternalXtend.g:4181:4: ( ( '<' )=>otherlv_3= '<' )
                    // PsiInternalXtend.g:4182:5: ( '<' )=>otherlv_3= '<'
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXbaseConstructorCall_LessThanSignKeyword_3_0ElementType());
                      				
                    }
                    otherlv_3=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_3);
                      				
                    }

                    }

                    // PsiInternalXtend.g:4191:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // PsiInternalXtend.g:4192:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // PsiInternalXtend.g:4192:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // PsiInternalXtend.g:4193:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXbaseConstructorCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:4202:4: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop135:
                    do {
                        int alt135=2;
                        int LA135_0 = input.LA(1);

                        if ( (LA135_0==KW_Comma) ) {
                            alt135=1;
                        }


                        switch (alt135) {
                    	case 1 :
                    	    // PsiInternalXtend.g:4203:5: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXbaseConstructorCall_CommaKeyword_3_2_0ElementType());
                    	      				
                    	    }
                    	    otherlv_5=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_5);
                    	      				
                    	    }
                    	    // PsiInternalXtend.g:4210:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // PsiInternalXtend.g:4211:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // PsiInternalXtend.g:4211:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // PsiInternalXtend.g:4212:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXbaseConstructorCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop135;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXbaseConstructorCall_GreaterThanSignKeyword_3_3ElementType());
                      			
                    }
                    otherlv_7=(Token)match(input,KW_GreaterThanSign,FOLLOW_63); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_7);
                      			
                    }

                    }
                    break;

            }

            // PsiInternalXtend.g:4230:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt139=2;
            alt139 = dfa139.predict(input);
            switch (alt139) {
                case 1 :
                    // PsiInternalXtend.g:4231:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // PsiInternalXtend.g:4231:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // PsiInternalXtend.g:4232:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // PsiInternalXtend.g:4236:5: (lv_explicitConstructorCall_8_0= '(' )
                    // PsiInternalXtend.g:4237:6: lv_explicitConstructorCall_8_0= '('
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXbaseConstructorCall_ExplicitConstructorCallLeftParenthesisKeyword_4_0_0ElementType());
                      					
                    }
                    lv_explicitConstructorCall_8_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_64); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_explicitConstructorCall_8_0);
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:4246:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt138=3;
                    alt138 = dfa138.predict(input);
                    switch (alt138) {
                        case 1 :
                            // PsiInternalXtend.g:4247:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // PsiInternalXtend.g:4247:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // PsiInternalXtend.g:4248:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // PsiInternalXtend.g:4273:6: (lv_arguments_9_0= ruleXShortClosure )
                            // PsiInternalXtend.g:4274:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXbaseConstructorCall_ArgumentsXShortClosureParserRuleCall_4_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_65);
                            ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:4284:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // PsiInternalXtend.g:4284:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // PsiInternalXtend.g:4285:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // PsiInternalXtend.g:4285:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // PsiInternalXtend.g:4286:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // PsiInternalXtend.g:4286:7: (lv_arguments_10_0= ruleXExpression )
                            // PsiInternalXtend.g:4287:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXbaseConstructorCall_ArgumentsXExpressionParserRuleCall_4_1_1_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_27);
                            ruleXExpression();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:4296:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop137:
                            do {
                                int alt137=2;
                                int LA137_0 = input.LA(1);

                                if ( (LA137_0==KW_Comma) ) {
                                    alt137=1;
                                }


                                switch (alt137) {
                            	case 1 :
                            	    // PsiInternalXtend.g:4297:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getXbaseConstructorCall_CommaKeyword_4_1_1_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_11);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:4304:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // PsiInternalXtend.g:4305:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // PsiInternalXtend.g:4305:8: (lv_arguments_12_0= ruleXExpression )
                            	    // PsiInternalXtend.g:4306:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXbaseConstructorCall_ArgumentsXExpressionParserRuleCall_4_1_1_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop137;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXbaseConstructorCall_RightParenthesisKeyword_4_2ElementType());
                      			
                    }
                    otherlv_13=(Token)match(input,KW_RightParenthesis,FOLLOW_49); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_13);
                      			
                    }

                    }
                    break;

            }

            // PsiInternalXtend.g:4326:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt140=2;
            alt140 = dfa140.predict(input);
            switch (alt140) {
                case 1 :
                    // PsiInternalXtend.g:4327:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // PsiInternalXtend.g:4333:4: (lv_arguments_14_0= ruleXClosure )
                    // PsiInternalXtend.g:4334:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXbaseConstructorCall_ArgumentsXClosureParserRuleCall_5_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleXClosure();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXbaseConstructorCall"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // PsiInternalXtend.g:4347:1: entryRuleJvmFormalParameter : ruleJvmFormalParameter EOF ;
    public final void entryRuleJvmFormalParameter() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4347:28: ( ruleJvmFormalParameter EOF )
            // PsiInternalXtend.g:4348:2: ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmFormalParameterElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // PsiInternalXtend.g:4353:1: ruleJvmFormalParameter : ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) ) ) ;
    public final void ruleJvmFormalParameter() throws RecognitionException {
        Token lv_extension_0_0=null;

        try {
            // PsiInternalXtend.g:4353:23: ( ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) ) ) )
            // PsiInternalXtend.g:4354:2: ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) ) )
            {
            // PsiInternalXtend.g:4354:2: ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) ) )
            // PsiInternalXtend.g:4355:3: ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) )
            {
            // PsiInternalXtend.g:4355:3: ( (lv_extension_0_0= 'extension' ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==KW_Extension) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // PsiInternalXtend.g:4356:4: (lv_extension_0_0= 'extension' )
                    {
                    // PsiInternalXtend.g:4356:4: (lv_extension_0_0= 'extension' )
                    // PsiInternalXtend.g:4357:5: lv_extension_0_0= 'extension'
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getJvmFormalParameter_ExtensionExtensionKeyword_0_0ElementType());
                      				
                    }
                    lv_extension_0_0=(Token)match(input,KW_Extension,FOLLOW_57); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(lv_extension_0_0);
                      				
                    }

                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:4366:3: ( (lv_parameterType_1_0= ruleJvmTypeReference ) )?
            int alt142=2;
            switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA142_1 = input.LA(2);

                    if ( (LA142_1==KW_Package||(LA142_1>=KW_Class && LA142_1<=KW_LessThanSign)||(LA142_1>=KW_Extends && LA142_1<=KW_Implements)||(LA142_1>=KW_Interface && LA142_1<=KW_Annotation)||LA142_1==KW_Throws||(LA142_1>=KW_FullStop && LA142_1<=KW_Transient)||(LA142_1>=KW_Def && LA142_1<=KW_Create)||(LA142_1>=KW_AFTER && LA142_1<=KW_Import)||LA142_1==KW_LeftSquareBracket||LA142_1==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_Create:
                    {
                    int LA142_2 = input.LA(2);

                    if ( (LA142_2==KW_Package||(LA142_2>=KW_Class && LA142_2<=KW_LessThanSign)||(LA142_2>=KW_Extends && LA142_2<=KW_Implements)||(LA142_2>=KW_Interface && LA142_2<=KW_Annotation)||LA142_2==KW_Throws||(LA142_2>=KW_FullStop && LA142_2<=KW_Transient)||(LA142_2>=KW_Def && LA142_2<=KW_Create)||(LA142_2>=KW_AFTER && LA142_2<=KW_Import)||LA142_2==KW_LeftSquareBracket||LA142_2==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_Annotation:
                    {
                    int LA142_3 = input.LA(2);

                    if ( (LA142_3==KW_Package||(LA142_3>=KW_Class && LA142_3<=KW_LessThanSign)||(LA142_3>=KW_Extends && LA142_3<=KW_Implements)||(LA142_3>=KW_Interface && LA142_3<=KW_Annotation)||LA142_3==KW_Throws||(LA142_3>=KW_FullStop && LA142_3<=KW_Transient)||(LA142_3>=KW_Def && LA142_3<=KW_Create)||(LA142_3>=KW_AFTER && LA142_3<=KW_Import)||LA142_3==KW_LeftSquareBracket||LA142_3==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_AFTER:
                    {
                    int LA142_4 = input.LA(2);

                    if ( (LA142_4==KW_Package||(LA142_4>=KW_Class && LA142_4<=KW_LessThanSign)||(LA142_4>=KW_Extends && LA142_4<=KW_Implements)||(LA142_4>=KW_Interface && LA142_4<=KW_Annotation)||LA142_4==KW_Throws||(LA142_4>=KW_FullStop && LA142_4<=KW_Transient)||(LA142_4>=KW_Def && LA142_4<=KW_Create)||(LA142_4>=KW_AFTER && LA142_4<=KW_Import)||LA142_4==KW_LeftSquareBracket||LA142_4==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA142_5 = input.LA(2);

                    if ( (LA142_5==KW_Package||(LA142_5>=KW_Class && LA142_5<=KW_LessThanSign)||(LA142_5>=KW_Extends && LA142_5<=KW_Implements)||(LA142_5>=KW_Interface && LA142_5<=KW_Annotation)||LA142_5==KW_Throws||(LA142_5>=KW_FullStop && LA142_5<=KW_Transient)||(LA142_5>=KW_Def && LA142_5<=KW_Create)||(LA142_5>=KW_AFTER && LA142_5<=KW_Import)||LA142_5==KW_LeftSquareBracket||LA142_5==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA142_6 = input.LA(2);

                    if ( (LA142_6==KW_Package||(LA142_6>=KW_Class && LA142_6<=KW_LessThanSign)||(LA142_6>=KW_Extends && LA142_6<=KW_Implements)||(LA142_6>=KW_Interface && LA142_6<=KW_Annotation)||LA142_6==KW_Throws||(LA142_6>=KW_FullStop && LA142_6<=KW_Transient)||(LA142_6>=KW_Def && LA142_6<=KW_Create)||(LA142_6>=KW_AFTER && LA142_6<=KW_Import)||LA142_6==KW_LeftSquareBracket||LA142_6==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_LeftParenthesis:
                case KW_EqualsSignGreaterThanSign:
                    {
                    alt142=1;
                    }
                    break;
            }

            switch (alt142) {
                case 1 :
                    // PsiInternalXtend.g:4367:4: (lv_parameterType_1_0= ruleJvmTypeReference )
                    {
                    // PsiInternalXtend.g:4367:4: (lv_parameterType_1_0= ruleJvmTypeReference )
                    // PsiInternalXtend.g:4368:5: lv_parameterType_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getJvmFormalParameter_ParameterTypeJvmTypeReferenceParserRuleCall_1_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_59);
                    ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      				
                    }

                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:4377:3: ( (lv_name_2_0= ruleInnerVarID ) )
            // PsiInternalXtend.g:4378:4: (lv_name_2_0= ruleInnerVarID )
            {
            // PsiInternalXtend.g:4378:4: (lv_name_2_0= ruleInnerVarID )
            // PsiInternalXtend.g:4379:5: lv_name_2_0= ruleInnerVarID
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmFormalParameter_NameInnerVarIDParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleInnerVarID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // PsiInternalXtend.g:4392:1: entryRuleFullJvmFormalParameter : ruleFullJvmFormalParameter EOF ;
    public final void entryRuleFullJvmFormalParameter() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4392:32: ( ruleFullJvmFormalParameter EOF )
            // PsiInternalXtend.g:4393:2: ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFullJvmFormalParameterElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // PsiInternalXtend.g:4398:1: ruleFullJvmFormalParameter : ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) ) ) ;
    public final void ruleFullJvmFormalParameter() throws RecognitionException {
        Token lv_extension_0_0=null;

        try {
            // PsiInternalXtend.g:4398:27: ( ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) ) ) )
            // PsiInternalXtend.g:4399:2: ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) ) )
            {
            // PsiInternalXtend.g:4399:2: ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) ) )
            // PsiInternalXtend.g:4400:3: ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) )
            {
            // PsiInternalXtend.g:4400:3: ( (lv_extension_0_0= 'extension' ) )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==KW_Extension) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // PsiInternalXtend.g:4401:4: (lv_extension_0_0= 'extension' )
                    {
                    // PsiInternalXtend.g:4401:4: (lv_extension_0_0= 'extension' )
                    // PsiInternalXtend.g:4402:5: lv_extension_0_0= 'extension'
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getFullJvmFormalParameter_ExtensionExtensionKeyword_0_0ElementType());
                      				
                    }
                    lv_extension_0_0=(Token)match(input,KW_Extension,FOLLOW_28); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(lv_extension_0_0);
                      				
                    }

                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:4411:3: ( (lv_parameterType_1_0= ruleJvmTypeReference ) )
            // PsiInternalXtend.g:4412:4: (lv_parameterType_1_0= ruleJvmTypeReference )
            {
            // PsiInternalXtend.g:4412:4: (lv_parameterType_1_0= ruleJvmTypeReference )
            // PsiInternalXtend.g:4413:5: lv_parameterType_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getFullJvmFormalParameter_ParameterTypeJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_59);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:4422:3: ( (lv_name_2_0= ruleInnerVarID ) )
            // PsiInternalXtend.g:4423:4: (lv_name_2_0= ruleInnerVarID )
            {
            // PsiInternalXtend.g:4423:4: (lv_name_2_0= ruleInnerVarID )
            // PsiInternalXtend.g:4424:5: lv_name_2_0= ruleInnerVarID
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getFullJvmFormalParameter_NameInnerVarIDParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleInnerVarID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXStringLiteral"
    // PsiInternalXtend.g:4437:1: entryRuleXStringLiteral : ruleXStringLiteral EOF ;
    public final void entryRuleXStringLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4437:24: ( ruleXStringLiteral EOF )
            // PsiInternalXtend.g:4438:2: ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXStringLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // PsiInternalXtend.g:4443:1: ruleXStringLiteral : ( ruleSimpleStringLiteral | ruleRichString ) ;
    public final void ruleXStringLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4443:19: ( ( ruleSimpleStringLiteral | ruleRichString ) )
            // PsiInternalXtend.g:4444:2: ( ruleSimpleStringLiteral | ruleRichString )
            {
            // PsiInternalXtend.g:4444:2: ( ruleSimpleStringLiteral | ruleRichString )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_STRING) ) {
                alt144=1;
            }
            else if ( ((LA144_0>=RULE_RICH_TEXT && LA144_0<=RULE_RICH_TEXT_START)) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // PsiInternalXtend.g:4445:3: ruleSimpleStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXStringLiteral_SimpleStringLiteralParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleSimpleStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:4453:3: ruleRichString
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXStringLiteral_RichStringParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleRichString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXSwitchExpression"
    // PsiInternalXtend.g:4464:1: entryRuleXSwitchExpression : ruleXSwitchExpression EOF ;
    public final void entryRuleXSwitchExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4464:27: ( ruleXSwitchExpression EOF )
            // PsiInternalXtend.g:4465:2: ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXSwitchExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // PsiInternalXtend.g:4470:1: ruleXSwitchExpression : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final void ruleXSwitchExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;

        try {
            // PsiInternalXtend.g:4470:22: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // PsiInternalXtend.g:4471:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // PsiInternalXtend.g:4471:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // PsiInternalXtend.g:4472:3: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // PsiInternalXtend.g:4472:3: ()
            // PsiInternalXtend.g:4473:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXSwitchExpression_XSwitchExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSwitchExpression_SwitchKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Switch,FOLLOW_66); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:4485:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) )
            int alt146=2;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    // PsiInternalXtend.g:4486:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // PsiInternalXtend.g:4486:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // PsiInternalXtend.g:4487:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // PsiInternalXtend.g:4487:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // PsiInternalXtend.g:4488:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // PsiInternalXtend.g:4498:6: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // PsiInternalXtend.g:4499:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    if ( state.backtracking==0 ) {

                      							markLeaf(elementTypeProvider.getXSwitchExpression_LeftParenthesisKeyword_2_0_0_0_0ElementType());
                      						
                    }
                    otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_57); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneLeaf(otherlv_2);
                      						
                    }
                    // PsiInternalXtend.g:4506:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // PsiInternalXtend.g:4507:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // PsiInternalXtend.g:4507:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // PsiInternalXtend.g:4508:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									markComposite(elementTypeProvider.getXSwitchExpression_DeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0ElementType());
                      								
                    }
                    pushFollow(FOLLOW_55);
                    ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      									doneComposite();
                      								
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      							markLeaf(elementTypeProvider.getXSwitchExpression_ColonKeyword_2_0_0_0_2ElementType());
                      						
                    }
                    otherlv_4=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneLeaf(otherlv_4);
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:4526:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // PsiInternalXtend.g:4527:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:4527:6: (lv_switch_5_0= ruleXExpression )
                    // PsiInternalXtend.g:4528:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXSwitchExpression_SwitchXExpressionParserRuleCall_2_0_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_65);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXSwitchExpression_RightParenthesisKeyword_2_0_2ElementType());
                      				
                    }
                    otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_20); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_6);
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:4546:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) )
                    {
                    // PsiInternalXtend.g:4546:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) )
                    // PsiInternalXtend.g:4547:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) )
                    {
                    // PsiInternalXtend.g:4547:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt145=2;
                    alt145 = dfa145.predict(input);
                    switch (alt145) {
                        case 1 :
                            // PsiInternalXtend.g:4548:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // PsiInternalXtend.g:4557:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // PsiInternalXtend.g:4558:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // PsiInternalXtend.g:4558:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // PsiInternalXtend.g:4559:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // PsiInternalXtend.g:4559:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // PsiInternalXtend.g:4560:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getXSwitchExpression_DeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_55);
                            ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getXSwitchExpression_ColonKeyword_2_1_0_0_1ElementType());
                              						
                            }
                            otherlv_8=(Token)match(input,KW_Colon,FOLLOW_66); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(otherlv_8);
                              						
                            }

                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:4578:5: ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) )
                    // PsiInternalXtend.g:4579:6: (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall )
                    {
                    // PsiInternalXtend.g:4579:6: (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall )
                    // PsiInternalXtend.g:4580:7: lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXSwitchExpression_SwitchXExpressionOrSimpleConstructorCallParserRuleCall_2_1_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    ruleXExpressionOrSimpleConstructorCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSwitchExpression_LeftCurlyBracketKeyword_3ElementType());
              		
            }
            otherlv_10=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_67); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_10);
              		
            }
            // PsiInternalXtend.g:4598:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==KW_Comma||(LA147_0>=KW_Annotation && LA147_0<=KW_LeftParenthesis)||LA147_0==KW_EqualsSignGreaterThanSign||(LA147_0>=KW_Create && LA147_0<=KW_SEPARATOR)||LA147_0==KW_Case||LA147_0==RULE_ID) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // PsiInternalXtend.g:4599:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // PsiInternalXtend.g:4599:4: (lv_cases_11_0= ruleXCasePart )
            	    // PsiInternalXtend.g:4600:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getXSwitchExpression_CasesXCasePartParserRuleCall_4_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_67);
            	    ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            // PsiInternalXtend.g:4609:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==KW_Default) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // PsiInternalXtend.g:4610:4: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXSwitchExpression_DefaultKeyword_5_0ElementType());
                      			
                    }
                    otherlv_12=(Token)match(input,KW_Default,FOLLOW_55); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_12);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXSwitchExpression_ColonKeyword_5_1ElementType());
                      			
                    }
                    otherlv_13=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_13);
                      			
                    }
                    // PsiInternalXtend.g:4624:4: ( (lv_default_14_0= ruleXExpression ) )
                    // PsiInternalXtend.g:4625:5: (lv_default_14_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:4625:5: (lv_default_14_0= ruleXExpression )
                    // PsiInternalXtend.g:4626:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXSwitchExpression_DefaultXExpressionParserRuleCall_5_2_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSwitchExpression_RightCurlyBracketKeyword_6ElementType());
              		
            }
            otherlv_15=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_15);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXExpressionOrSimpleConstructorCall"
    // PsiInternalXtend.g:4647:1: entryRuleXExpressionOrSimpleConstructorCall : ruleXExpressionOrSimpleConstructorCall EOF ;
    public final void entryRuleXExpressionOrSimpleConstructorCall() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4647:44: ( ruleXExpressionOrSimpleConstructorCall EOF )
            // PsiInternalXtend.g:4648:2: ruleXExpressionOrSimpleConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXExpressionOrSimpleConstructorCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpressionOrSimpleConstructorCall();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionOrSimpleConstructorCall"


    // $ANTLR start "ruleXExpressionOrSimpleConstructorCall"
    // PsiInternalXtend.g:4653:1: ruleXExpressionOrSimpleConstructorCall : ( ( ( 'new' )=> ruleXbaseConstructorCall ) | ruleXExpression ) ;
    public final void ruleXExpressionOrSimpleConstructorCall() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4653:39: ( ( ( ( 'new' )=> ruleXbaseConstructorCall ) | ruleXExpression ) )
            // PsiInternalXtend.g:4654:2: ( ( ( 'new' )=> ruleXbaseConstructorCall ) | ruleXExpression )
            {
            // PsiInternalXtend.g:4654:2: ( ( ( 'new' )=> ruleXbaseConstructorCall ) | ruleXExpression )
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // PsiInternalXtend.g:4655:3: ( ( 'new' )=> ruleXbaseConstructorCall )
                    {
                    // PsiInternalXtend.g:4655:3: ( ( 'new' )=> ruleXbaseConstructorCall )
                    // PsiInternalXtend.g:4656:4: ( 'new' )=> ruleXbaseConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXExpressionOrSimpleConstructorCall_XbaseConstructorCallParserRuleCall_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleXbaseConstructorCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:4666:3: ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXExpressionOrSimpleConstructorCall_XExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXExpressionOrSimpleConstructorCall"


    // $ANTLR start "entryRuleSimpleStringLiteral"
    // PsiInternalXtend.g:4677:1: entryRuleSimpleStringLiteral : ruleSimpleStringLiteral EOF ;
    public final void entryRuleSimpleStringLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4677:29: ( ruleSimpleStringLiteral EOF )
            // PsiInternalXtend.g:4678:2: ruleSimpleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getSimpleStringLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleStringLiteral"


    // $ANTLR start "ruleSimpleStringLiteral"
    // PsiInternalXtend.g:4683:1: ruleSimpleStringLiteral : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final void ruleSimpleStringLiteral() throws RecognitionException {
        Token lv_value_1_0=null;

        try {
            // PsiInternalXtend.g:4683:24: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // PsiInternalXtend.g:4684:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // PsiInternalXtend.g:4684:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // PsiInternalXtend.g:4685:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // PsiInternalXtend.g:4685:3: ()
            // PsiInternalXtend.g:4686:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getSimpleStringLiteral_XStringLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:4691:3: ( (lv_value_1_0= RULE_STRING ) )
            // PsiInternalXtend.g:4692:4: (lv_value_1_0= RULE_STRING )
            {
            // PsiInternalXtend.g:4692:4: (lv_value_1_0= RULE_STRING )
            // PsiInternalXtend.g:4693:5: lv_value_1_0= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getSimpleStringLiteral_ValueSTRINGTerminalRuleCall_1_0ElementType());
              				
            }
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(lv_value_1_0);
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleSimpleStringLiteral"


    // $ANTLR start "entryRuleRichString"
    // PsiInternalXtend.g:4706:1: entryRuleRichString : ruleRichString EOF ;
    public final void entryRuleRichString() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4706:20: ( ruleRichString EOF )
            // PsiInternalXtend.g:4707:2: ruleRichString EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichString();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichString"


    // $ANTLR start "ruleRichString"
    // PsiInternalXtend.g:4712:1: ruleRichString : ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) ) ;
    public final void ruleRichString() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4712:15: ( ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) ) )
            // PsiInternalXtend.g:4713:2: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) )
            {
            // PsiInternalXtend.g:4713:2: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) )
            // PsiInternalXtend.g:4714:3: () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) )
            {
            // PsiInternalXtend.g:4714:3: ()
            // PsiInternalXtend.g:4715:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichString_RichStringAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:4720:3: ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==RULE_RICH_TEXT) ) {
                alt153=1;
            }
            else if ( (LA153_0==RULE_RICH_TEXT_START) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // PsiInternalXtend.g:4721:4: ( (lv_expressions_1_0= ruleRichStringLiteral ) )
                    {
                    // PsiInternalXtend.g:4721:4: ( (lv_expressions_1_0= ruleRichStringLiteral ) )
                    // PsiInternalXtend.g:4722:5: (lv_expressions_1_0= ruleRichStringLiteral )
                    {
                    // PsiInternalXtend.g:4722:5: (lv_expressions_1_0= ruleRichStringLiteral )
                    // PsiInternalXtend.g:4723:6: lv_expressions_1_0= ruleRichStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichString_ExpressionsRichStringLiteralParserRuleCall_1_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleRichStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:4733:4: ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) )
                    {
                    // PsiInternalXtend.g:4733:4: ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) )
                    // PsiInternalXtend.g:4734:5: ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) )
                    {
                    // PsiInternalXtend.g:4734:5: ( (lv_expressions_2_0= ruleRichStringLiteralStart ) )
                    // PsiInternalXtend.g:4735:6: (lv_expressions_2_0= ruleRichStringLiteralStart )
                    {
                    // PsiInternalXtend.g:4735:6: (lv_expressions_2_0= ruleRichStringLiteralStart )
                    // PsiInternalXtend.g:4736:7: lv_expressions_2_0= ruleRichStringLiteralStart
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getRichString_ExpressionsRichStringLiteralStartParserRuleCall_1_1_0_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_68);
                    ruleRichStringLiteralStart();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:4745:5: ( (lv_expressions_3_0= ruleRichStringPart ) )?
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==KW_Package||(LA150_0>=KW_Class && LA150_0<=KW_LessThanSign)||(LA150_0>=KW_Extends && LA150_0<=KW_LeftCurlyBracket)||(LA150_0>=KW_Interface && LA150_0<=KW_LeftParenthesis)||(LA150_0>=KW_Extension && LA150_0<=KW_New)||(LA150_0>=KW_Public && LA150_0<=KW_Create)||(LA150_0>=KW_AFTER && LA150_0<=KW_Import)||LA150_0==KW_Switch||LA150_0==KW_FOR||LA150_0==KW_IF||(LA150_0>=KW_NumberSign && LA150_0<=KW_LeftSquareBracket)||(LA150_0>=KW_PlusSign && LA150_0<=KW_HyphenMinus)||LA150_0==KW_ExclamationMark||LA150_0==KW_If||(LA150_0>=KW_For && LA150_0<=KW_Try)||(LA150_0>=RULE_ID && LA150_0<=RULE_RICH_TEXT_START)||(LA150_0>=RULE_HEX && LA150_0<=RULE_DECIMAL)) ) {
                        alt150=1;
                    }
                    switch (alt150) {
                        case 1 :
                            // PsiInternalXtend.g:4746:6: (lv_expressions_3_0= ruleRichStringPart )
                            {
                            // PsiInternalXtend.g:4746:6: (lv_expressions_3_0= ruleRichStringPart )
                            // PsiInternalXtend.g:4747:7: lv_expressions_3_0= ruleRichStringPart
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getRichString_ExpressionsRichStringPartParserRuleCall_1_1_1_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_68);
                            ruleRichStringPart();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:4756:5: ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )*
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( ((LA152_0>=RULE_RICH_TEXT_INBETWEEN && LA152_0<=RULE_COMMENT_RICH_TEXT_INBETWEEN)) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // PsiInternalXtend.g:4757:6: ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )?
                    	    {
                    	    // PsiInternalXtend.g:4757:6: ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) )
                    	    // PsiInternalXtend.g:4758:7: (lv_expressions_4_0= ruleRichStringLiteralInbetween )
                    	    {
                    	    // PsiInternalXtend.g:4758:7: (lv_expressions_4_0= ruleRichStringLiteralInbetween )
                    	    // PsiInternalXtend.g:4759:8: lv_expressions_4_0= ruleRichStringLiteralInbetween
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								markComposite(elementTypeProvider.getRichString_ExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_2_0_0ElementType());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_68);
                    	    ruleRichStringLiteralInbetween();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      								doneComposite();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    // PsiInternalXtend.g:4768:6: ( (lv_expressions_5_0= ruleRichStringPart ) )?
                    	    int alt151=2;
                    	    int LA151_0 = input.LA(1);

                    	    if ( (LA151_0==KW_Package||(LA151_0>=KW_Class && LA151_0<=KW_LessThanSign)||(LA151_0>=KW_Extends && LA151_0<=KW_LeftCurlyBracket)||(LA151_0>=KW_Interface && LA151_0<=KW_LeftParenthesis)||(LA151_0>=KW_Extension && LA151_0<=KW_New)||(LA151_0>=KW_Public && LA151_0<=KW_Create)||(LA151_0>=KW_AFTER && LA151_0<=KW_Import)||LA151_0==KW_Switch||LA151_0==KW_FOR||LA151_0==KW_IF||(LA151_0>=KW_NumberSign && LA151_0<=KW_LeftSquareBracket)||(LA151_0>=KW_PlusSign && LA151_0<=KW_HyphenMinus)||LA151_0==KW_ExclamationMark||LA151_0==KW_If||(LA151_0>=KW_For && LA151_0<=KW_Try)||(LA151_0>=RULE_ID && LA151_0<=RULE_RICH_TEXT_START)||(LA151_0>=RULE_HEX && LA151_0<=RULE_DECIMAL)) ) {
                    	        alt151=1;
                    	    }
                    	    switch (alt151) {
                    	        case 1 :
                    	            // PsiInternalXtend.g:4769:7: (lv_expressions_5_0= ruleRichStringPart )
                    	            {
                    	            // PsiInternalXtend.g:4769:7: (lv_expressions_5_0= ruleRichStringPart )
                    	            // PsiInternalXtend.g:4770:8: lv_expressions_5_0= ruleRichStringPart
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								markComposite(elementTypeProvider.getRichString_ExpressionsRichStringPartParserRuleCall_1_1_2_1_0ElementType());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_68);
                    	            ruleRichStringPart();

                    	            state._fsp--;
                    	            if (state.failed) return ;
                    	            if ( state.backtracking==0 ) {

                    	              								doneComposite();
                    	              							
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop152;
                        }
                    } while (true);

                    // PsiInternalXtend.g:4780:5: ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) )
                    // PsiInternalXtend.g:4781:6: (lv_expressions_6_0= ruleRichStringLiteralEnd )
                    {
                    // PsiInternalXtend.g:4781:6: (lv_expressions_6_0= ruleRichStringLiteralEnd )
                    // PsiInternalXtend.g:4782:7: lv_expressions_6_0= ruleRichStringLiteralEnd
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getRichString_ExpressionsRichStringLiteralEndParserRuleCall_1_1_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleRichStringLiteralEnd();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichString"


    // $ANTLR start "entryRuleRichStringLiteral"
    // PsiInternalXtend.g:4797:1: entryRuleRichStringLiteral : ruleRichStringLiteral EOF ;
    public final void entryRuleRichStringLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4797:27: ( ruleRichStringLiteral EOF )
            // PsiInternalXtend.g:4798:2: ruleRichStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichStringLiteral"


    // $ANTLR start "ruleRichStringLiteral"
    // PsiInternalXtend.g:4803:1: ruleRichStringLiteral : ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) ) ;
    public final void ruleRichStringLiteral() throws RecognitionException {
        Token lv_value_1_0=null;

        try {
            // PsiInternalXtend.g:4803:22: ( ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) ) )
            // PsiInternalXtend.g:4804:2: ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) )
            {
            // PsiInternalXtend.g:4804:2: ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) )
            // PsiInternalXtend.g:4805:3: () ( (lv_value_1_0= RULE_RICH_TEXT ) )
            {
            // PsiInternalXtend.g:4805:3: ()
            // PsiInternalXtend.g:4806:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringLiteral_RichStringLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:4811:3: ( (lv_value_1_0= RULE_RICH_TEXT ) )
            // PsiInternalXtend.g:4812:4: (lv_value_1_0= RULE_RICH_TEXT )
            {
            // PsiInternalXtend.g:4812:4: (lv_value_1_0= RULE_RICH_TEXT )
            // PsiInternalXtend.g:4813:5: lv_value_1_0= RULE_RICH_TEXT
            {
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getRichStringLiteral_ValueRICH_TEXTTerminalRuleCall_1_0ElementType());
              				
            }
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(lv_value_1_0);
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichStringLiteral"


    // $ANTLR start "entryRuleRichStringLiteralStart"
    // PsiInternalXtend.g:4826:1: entryRuleRichStringLiteralStart : ruleRichStringLiteralStart EOF ;
    public final void entryRuleRichStringLiteralStart() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4826:32: ( ruleRichStringLiteralStart EOF )
            // PsiInternalXtend.g:4827:2: ruleRichStringLiteralStart EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringLiteralStartElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichStringLiteralStart();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichStringLiteralStart"


    // $ANTLR start "ruleRichStringLiteralStart"
    // PsiInternalXtend.g:4832:1: ruleRichStringLiteralStart : ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) ) ;
    public final void ruleRichStringLiteralStart() throws RecognitionException {
        Token lv_value_1_0=null;

        try {
            // PsiInternalXtend.g:4832:27: ( ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) ) )
            // PsiInternalXtend.g:4833:2: ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) )
            {
            // PsiInternalXtend.g:4833:2: ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) )
            // PsiInternalXtend.g:4834:3: () ( (lv_value_1_0= RULE_RICH_TEXT_START ) )
            {
            // PsiInternalXtend.g:4834:3: ()
            // PsiInternalXtend.g:4835:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringLiteralStart_RichStringLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:4840:3: ( (lv_value_1_0= RULE_RICH_TEXT_START ) )
            // PsiInternalXtend.g:4841:4: (lv_value_1_0= RULE_RICH_TEXT_START )
            {
            // PsiInternalXtend.g:4841:4: (lv_value_1_0= RULE_RICH_TEXT_START )
            // PsiInternalXtend.g:4842:5: lv_value_1_0= RULE_RICH_TEXT_START
            {
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getRichStringLiteralStart_ValueRICH_TEXT_STARTTerminalRuleCall_1_0ElementType());
              				
            }
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_START,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(lv_value_1_0);
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichStringLiteralStart"


    // $ANTLR start "entryRuleRichStringLiteralInbetween"
    // PsiInternalXtend.g:4855:1: entryRuleRichStringLiteralInbetween : ruleRichStringLiteralInbetween EOF ;
    public final void entryRuleRichStringLiteralInbetween() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4855:36: ( ruleRichStringLiteralInbetween EOF )
            // PsiInternalXtend.g:4856:2: ruleRichStringLiteralInbetween EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringLiteralInbetweenElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichStringLiteralInbetween();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichStringLiteralInbetween"


    // $ANTLR start "ruleRichStringLiteralInbetween"
    // PsiInternalXtend.g:4861:1: ruleRichStringLiteralInbetween : ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) ) ) ;
    public final void ruleRichStringLiteralInbetween() throws RecognitionException {
        Token lv_value_1_0=null;
        Token lv_value_2_0=null;

        try {
            // PsiInternalXtend.g:4861:31: ( ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) ) ) )
            // PsiInternalXtend.g:4862:2: ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) ) )
            {
            // PsiInternalXtend.g:4862:2: ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) ) )
            // PsiInternalXtend.g:4863:3: () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) )
            {
            // PsiInternalXtend.g:4863:3: ()
            // PsiInternalXtend.g:4864:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringLiteralInbetween_RichStringLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:4869:3: ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==RULE_RICH_TEXT_INBETWEEN) ) {
                alt154=1;
            }
            else if ( (LA154_0==RULE_COMMENT_RICH_TEXT_INBETWEEN) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // PsiInternalXtend.g:4870:4: ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) )
                    {
                    // PsiInternalXtend.g:4870:4: ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) )
                    // PsiInternalXtend.g:4871:5: (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN )
                    {
                    // PsiInternalXtend.g:4871:5: (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN )
                    // PsiInternalXtend.g:4872:6: lv_value_1_0= RULE_RICH_TEXT_INBETWEEN
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getRichStringLiteralInbetween_ValueRICH_TEXT_INBETWEENTerminalRuleCall_1_0_0ElementType());
                      					
                    }
                    lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_INBETWEEN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_value_1_0);
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:4882:4: ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) )
                    {
                    // PsiInternalXtend.g:4882:4: ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) )
                    // PsiInternalXtend.g:4883:5: (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN )
                    {
                    // PsiInternalXtend.g:4883:5: (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN )
                    // PsiInternalXtend.g:4884:6: lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getRichStringLiteralInbetween_ValueCOMMENT_RICH_TEXT_INBETWEENTerminalRuleCall_1_1_0ElementType());
                      					
                    }
                    lv_value_2_0=(Token)match(input,RULE_COMMENT_RICH_TEXT_INBETWEEN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_value_2_0);
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichStringLiteralInbetween"


    // $ANTLR start "entryRuleRichStringLiteralEnd"
    // PsiInternalXtend.g:4898:1: entryRuleRichStringLiteralEnd : ruleRichStringLiteralEnd EOF ;
    public final void entryRuleRichStringLiteralEnd() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4898:30: ( ruleRichStringLiteralEnd EOF )
            // PsiInternalXtend.g:4899:2: ruleRichStringLiteralEnd EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringLiteralEndElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichStringLiteralEnd();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichStringLiteralEnd"


    // $ANTLR start "ruleRichStringLiteralEnd"
    // PsiInternalXtend.g:4904:1: ruleRichStringLiteralEnd : ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) ) ) ;
    public final void ruleRichStringLiteralEnd() throws RecognitionException {
        Token lv_value_1_0=null;
        Token lv_value_2_0=null;

        try {
            // PsiInternalXtend.g:4904:25: ( ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) ) ) )
            // PsiInternalXtend.g:4905:2: ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) ) )
            {
            // PsiInternalXtend.g:4905:2: ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) ) )
            // PsiInternalXtend.g:4906:3: () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) )
            {
            // PsiInternalXtend.g:4906:3: ()
            // PsiInternalXtend.g:4907:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringLiteralEnd_RichStringLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:4912:3: ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==RULE_RICH_TEXT_END) ) {
                alt155=1;
            }
            else if ( (LA155_0==RULE_COMMENT_RICH_TEXT_END) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // PsiInternalXtend.g:4913:4: ( (lv_value_1_0= RULE_RICH_TEXT_END ) )
                    {
                    // PsiInternalXtend.g:4913:4: ( (lv_value_1_0= RULE_RICH_TEXT_END ) )
                    // PsiInternalXtend.g:4914:5: (lv_value_1_0= RULE_RICH_TEXT_END )
                    {
                    // PsiInternalXtend.g:4914:5: (lv_value_1_0= RULE_RICH_TEXT_END )
                    // PsiInternalXtend.g:4915:6: lv_value_1_0= RULE_RICH_TEXT_END
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getRichStringLiteralEnd_ValueRICH_TEXT_ENDTerminalRuleCall_1_0_0ElementType());
                      					
                    }
                    lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_END,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_value_1_0);
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:4925:4: ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) )
                    {
                    // PsiInternalXtend.g:4925:4: ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) )
                    // PsiInternalXtend.g:4926:5: (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END )
                    {
                    // PsiInternalXtend.g:4926:5: (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END )
                    // PsiInternalXtend.g:4927:6: lv_value_2_0= RULE_COMMENT_RICH_TEXT_END
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getRichStringLiteralEnd_ValueCOMMENT_RICH_TEXT_ENDTerminalRuleCall_1_1_0ElementType());
                      					
                    }
                    lv_value_2_0=(Token)match(input,RULE_COMMENT_RICH_TEXT_END,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_value_2_0);
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichStringLiteralEnd"


    // $ANTLR start "entryRuleInternalRichString"
    // PsiInternalXtend.g:4941:1: entryRuleInternalRichString : ruleInternalRichString EOF ;
    public final void entryRuleInternalRichString() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4941:28: ( ruleInternalRichString EOF )
            // PsiInternalXtend.g:4942:2: ruleInternalRichString EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getInternalRichStringElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleInternalRichString();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInternalRichString"


    // $ANTLR start "ruleInternalRichString"
    // PsiInternalXtend.g:4947:1: ruleInternalRichString : ( () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* ) ) ;
    public final void ruleInternalRichString() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4947:23: ( ( () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* ) ) )
            // PsiInternalXtend.g:4948:2: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* ) )
            {
            // PsiInternalXtend.g:4948:2: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* ) )
            // PsiInternalXtend.g:4949:3: () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* )
            {
            // PsiInternalXtend.g:4949:3: ()
            // PsiInternalXtend.g:4950:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getInternalRichString_RichStringAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:4955:3: ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* )
            // PsiInternalXtend.g:4956:4: ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )*
            {
            // PsiInternalXtend.g:4956:4: ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) )
            // PsiInternalXtend.g:4957:5: (lv_expressions_1_0= ruleRichStringLiteralInbetween )
            {
            // PsiInternalXtend.g:4957:5: (lv_expressions_1_0= ruleRichStringLiteralInbetween )
            // PsiInternalXtend.g:4958:6: lv_expressions_1_0= ruleRichStringLiteralInbetween
            {
            if ( state.backtracking==0 ) {

              						markComposite(elementTypeProvider.getInternalRichString_ExpressionsRichStringLiteralInbetweenParserRuleCall_1_0_0ElementType());
              					
            }
            pushFollow(FOLLOW_69);
            ruleRichStringLiteralInbetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              						doneComposite();
              					
            }

            }


            }

            // PsiInternalXtend.g:4967:4: ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==KW_Package||(LA157_0>=KW_Class && LA157_0<=KW_LessThanSign)||(LA157_0>=KW_Extends && LA157_0<=KW_LeftCurlyBracket)||(LA157_0>=KW_Interface && LA157_0<=KW_LeftParenthesis)||(LA157_0>=KW_Extension && LA157_0<=KW_New)||(LA157_0>=KW_Public && LA157_0<=KW_Create)||(LA157_0>=KW_AFTER && LA157_0<=KW_Import)||LA157_0==KW_Switch||LA157_0==KW_FOR||LA157_0==KW_IF||(LA157_0>=KW_NumberSign && LA157_0<=KW_LeftSquareBracket)||(LA157_0>=KW_PlusSign && LA157_0<=KW_HyphenMinus)||LA157_0==KW_ExclamationMark||LA157_0==KW_If||(LA157_0>=KW_For && LA157_0<=KW_Try)||(LA157_0>=RULE_ID && LA157_0<=RULE_COMMENT_RICH_TEXT_INBETWEEN)||(LA157_0>=RULE_HEX && LA157_0<=RULE_DECIMAL)) ) {
                    alt157=1;
                }


                switch (alt157) {
            	case 1 :
            	    // PsiInternalXtend.g:4968:5: ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) )
            	    {
            	    // PsiInternalXtend.g:4968:5: ( (lv_expressions_2_0= ruleRichStringPart ) )?
            	    int alt156=2;
            	    int LA156_0 = input.LA(1);

            	    if ( (LA156_0==KW_Package||(LA156_0>=KW_Class && LA156_0<=KW_LessThanSign)||(LA156_0>=KW_Extends && LA156_0<=KW_LeftCurlyBracket)||(LA156_0>=KW_Interface && LA156_0<=KW_LeftParenthesis)||(LA156_0>=KW_Extension && LA156_0<=KW_New)||(LA156_0>=KW_Public && LA156_0<=KW_Create)||(LA156_0>=KW_AFTER && LA156_0<=KW_Import)||LA156_0==KW_Switch||LA156_0==KW_FOR||LA156_0==KW_IF||(LA156_0>=KW_NumberSign && LA156_0<=KW_LeftSquareBracket)||(LA156_0>=KW_PlusSign && LA156_0<=KW_HyphenMinus)||LA156_0==KW_ExclamationMark||LA156_0==KW_If||(LA156_0>=KW_For && LA156_0<=KW_Try)||(LA156_0>=RULE_ID && LA156_0<=RULE_RICH_TEXT_START)||(LA156_0>=RULE_HEX && LA156_0<=RULE_DECIMAL)) ) {
            	        alt156=1;
            	    }
            	    switch (alt156) {
            	        case 1 :
            	            // PsiInternalXtend.g:4969:6: (lv_expressions_2_0= ruleRichStringPart )
            	            {
            	            // PsiInternalXtend.g:4969:6: (lv_expressions_2_0= ruleRichStringPart )
            	            // PsiInternalXtend.g:4970:7: lv_expressions_2_0= ruleRichStringPart
            	            {
            	            if ( state.backtracking==0 ) {

            	              							markComposite(elementTypeProvider.getInternalRichString_ExpressionsRichStringPartParserRuleCall_1_1_0_0ElementType());
            	              						
            	            }
            	            pushFollow(FOLLOW_70);
            	            ruleRichStringPart();

            	            state._fsp--;
            	            if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              							doneComposite();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // PsiInternalXtend.g:4979:5: ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) )
            	    // PsiInternalXtend.g:4980:6: (lv_expressions_3_0= ruleRichStringLiteralInbetween )
            	    {
            	    // PsiInternalXtend.g:4980:6: (lv_expressions_3_0= ruleRichStringLiteralInbetween )
            	    // PsiInternalXtend.g:4981:7: lv_expressions_3_0= ruleRichStringLiteralInbetween
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getInternalRichString_ExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_69);
            	    ruleRichStringLiteralInbetween();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleInternalRichString"


    // $ANTLR start "entryRuleRichStringPart"
    // PsiInternalXtend.g:4996:1: entryRuleRichStringPart : ruleRichStringPart EOF ;
    public final void entryRuleRichStringPart() throws RecognitionException {
        try {
            // PsiInternalXtend.g:4996:24: ( ruleRichStringPart EOF )
            // PsiInternalXtend.g:4997:2: ruleRichStringPart EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringPartElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichStringPart();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichStringPart"


    // $ANTLR start "ruleRichStringPart"
    // PsiInternalXtend.g:5002:1: ruleRichStringPart : ( ruleXExpressionOrVarDeclaration | ruleRichStringForLoop | ruleRichStringIf ) ;
    public final void ruleRichStringPart() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5002:19: ( ( ruleXExpressionOrVarDeclaration | ruleRichStringForLoop | ruleRichStringIf ) )
            // PsiInternalXtend.g:5003:2: ( ruleXExpressionOrVarDeclaration | ruleRichStringForLoop | ruleRichStringIf )
            {
            // PsiInternalXtend.g:5003:2: ( ruleXExpressionOrVarDeclaration | ruleRichStringForLoop | ruleRichStringIf )
            int alt158=3;
            switch ( input.LA(1) ) {
            case KW_Package:
            case KW_Class:
            case KW_LessThanSign:
            case KW_Extends:
            case KW_Implements:
            case KW_LeftCurlyBracket:
            case KW_Interface:
            case KW_Enum:
            case KW_Annotation:
            case KW_LeftParenthesis:
            case KW_Extension:
            case KW_Throws:
            case KW_New:
            case KW_Public:
            case KW_Private:
            case KW_Protected:
            case KW_Abstract:
            case KW_Static:
            case KW_Dispatch:
            case KW_Final:
            case KW_Strictfp:
            case KW_Native:
            case KW_Volatile:
            case KW_Synchronized:
            case KW_Transient:
            case KW_Val:
            case KW_Var:
            case KW_Def:
            case KW_Override:
            case KW_Create:
            case KW_AFTER:
            case KW_BEFORE:
            case KW_SEPARATOR:
            case KW_Import:
            case KW_Switch:
            case KW_NumberSign:
            case KW_LeftSquareBracket:
            case KW_PlusSign:
            case KW_HyphenMinus:
            case KW_ExclamationMark:
            case KW_If:
            case KW_For:
            case KW_While:
            case KW_Do:
            case KW_Super:
            case KW_False:
            case KW_True:
            case KW_Null:
            case KW_Typeof:
            case KW_Throw:
            case KW_Return:
            case KW_Try:
            case RULE_ID:
            case RULE_STRING:
            case RULE_RICH_TEXT:
            case RULE_RICH_TEXT_START:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt158=1;
                }
                break;
            case KW_FOR:
                {
                alt158=2;
                }
                break;
            case KW_IF:
                {
                alt158=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }

            switch (alt158) {
                case 1 :
                    // PsiInternalXtend.g:5004:3: ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getRichStringPart_XExpressionOrVarDeclarationParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:5012:3: ruleRichStringForLoop
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getRichStringPart_RichStringForLoopParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleRichStringForLoop();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:5020:3: ruleRichStringIf
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getRichStringPart_RichStringIfParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleRichStringIf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichStringPart"


    // $ANTLR start "entryRuleRichStringForLoop"
    // PsiInternalXtend.g:5031:1: entryRuleRichStringForLoop : ruleRichStringForLoop EOF ;
    public final void entryRuleRichStringForLoop() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5031:27: ( ruleRichStringForLoop EOF )
            // PsiInternalXtend.g:5032:2: ruleRichStringForLoop EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringForLoopElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichStringForLoop();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichStringForLoop"


    // $ANTLR start "ruleRichStringForLoop"
    // PsiInternalXtend.g:5037:1: ruleRichStringForLoop : ( () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR' ) ;
    public final void ruleRichStringForLoop() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;

        try {
            // PsiInternalXtend.g:5037:22: ( ( () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR' ) )
            // PsiInternalXtend.g:5038:2: ( () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR' )
            {
            // PsiInternalXtend.g:5038:2: ( () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR' )
            // PsiInternalXtend.g:5039:3: () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR'
            {
            // PsiInternalXtend.g:5039:3: ()
            // PsiInternalXtend.g:5040:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringForLoop_RichStringForLoopAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringForLoop_FORKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_FOR,FOLLOW_57); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:5052:3: ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) )
            // PsiInternalXtend.g:5053:4: (lv_declaredParam_2_0= ruleJvmFormalParameter )
            {
            // PsiInternalXtend.g:5053:4: (lv_declaredParam_2_0= ruleJvmFormalParameter )
            // PsiInternalXtend.g:5054:5: lv_declaredParam_2_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringForLoop_DeclaredParamJvmFormalParameterParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_55);
            ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringForLoop_ColonKeyword_3ElementType());
              		
            }
            otherlv_3=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_3);
              		
            }
            // PsiInternalXtend.g:5070:3: ( (lv_forExpression_4_0= ruleXExpression ) )
            // PsiInternalXtend.g:5071:4: (lv_forExpression_4_0= ruleXExpression )
            {
            // PsiInternalXtend.g:5071:4: (lv_forExpression_4_0= ruleXExpression )
            // PsiInternalXtend.g:5072:5: lv_forExpression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringForLoop_ForExpressionXExpressionParserRuleCall_4_0ElementType());
              				
            }
            pushFollow(FOLLOW_71);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:5081:3: (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==KW_BEFORE) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // PsiInternalXtend.g:5082:4: otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getRichStringForLoop_BEFOREKeyword_5_0ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_BEFORE,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }
                    // PsiInternalXtend.g:5089:4: ( (lv_before_6_0= ruleXExpression ) )
                    // PsiInternalXtend.g:5090:5: (lv_before_6_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:5090:5: (lv_before_6_0= ruleXExpression )
                    // PsiInternalXtend.g:5091:6: lv_before_6_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichStringForLoop_BeforeXExpressionParserRuleCall_5_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:5101:3: (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==KW_SEPARATOR) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // PsiInternalXtend.g:5102:4: otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getRichStringForLoop_SEPARATORKeyword_6_0ElementType());
                      			
                    }
                    otherlv_7=(Token)match(input,KW_SEPARATOR,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_7);
                      			
                    }
                    // PsiInternalXtend.g:5109:4: ( (lv_separator_8_0= ruleXExpression ) )
                    // PsiInternalXtend.g:5110:5: (lv_separator_8_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:5110:5: (lv_separator_8_0= ruleXExpression )
                    // PsiInternalXtend.g:5111:6: lv_separator_8_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichStringForLoop_SeparatorXExpressionParserRuleCall_6_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:5121:3: (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==KW_AFTER) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // PsiInternalXtend.g:5122:4: otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getRichStringForLoop_AFTERKeyword_7_0ElementType());
                      			
                    }
                    otherlv_9=(Token)match(input,KW_AFTER,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_9);
                      			
                    }
                    // PsiInternalXtend.g:5129:4: ( (lv_after_10_0= ruleXExpression ) )
                    // PsiInternalXtend.g:5130:5: (lv_after_10_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:5130:5: (lv_after_10_0= ruleXExpression )
                    // PsiInternalXtend.g:5131:6: lv_after_10_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichStringForLoop_AfterXExpressionParserRuleCall_7_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:5141:3: ( (lv_eachExpression_11_0= ruleInternalRichString ) )
            // PsiInternalXtend.g:5142:4: (lv_eachExpression_11_0= ruleInternalRichString )
            {
            // PsiInternalXtend.g:5142:4: (lv_eachExpression_11_0= ruleInternalRichString )
            // PsiInternalXtend.g:5143:5: lv_eachExpression_11_0= ruleInternalRichString
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringForLoop_EachExpressionInternalRichStringParserRuleCall_8_0ElementType());
              				
            }
            pushFollow(FOLLOW_72);
            ruleInternalRichString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringForLoop_ENDFORKeyword_9ElementType());
              		
            }
            otherlv_12=(Token)match(input,KW_ENDFOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_12);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichStringForLoop"


    // $ANTLR start "entryRuleRichStringIf"
    // PsiInternalXtend.g:5163:1: entryRuleRichStringIf : ruleRichStringIf EOF ;
    public final void entryRuleRichStringIf() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5163:22: ( ruleRichStringIf EOF )
            // PsiInternalXtend.g:5164:2: ruleRichStringIf EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringIfElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichStringIf();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichStringIf"


    // $ANTLR start "ruleRichStringIf"
    // PsiInternalXtend.g:5169:1: ruleRichStringIf : ( () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF' ) ;
    public final void ruleRichStringIf() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_7=null;

        try {
            // PsiInternalXtend.g:5169:17: ( ( () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF' ) )
            // PsiInternalXtend.g:5170:2: ( () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF' )
            {
            // PsiInternalXtend.g:5170:2: ( () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF' )
            // PsiInternalXtend.g:5171:3: () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF'
            {
            // PsiInternalXtend.g:5171:3: ()
            // PsiInternalXtend.g:5172:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringIf_RichStringIfAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringIf_IFKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_IF,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:5184:3: ( (lv_if_2_0= ruleXExpression ) )
            // PsiInternalXtend.g:5185:4: (lv_if_2_0= ruleXExpression )
            {
            // PsiInternalXtend.g:5185:4: (lv_if_2_0= ruleXExpression )
            // PsiInternalXtend.g:5186:5: lv_if_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringIf_IfXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_71);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:5195:3: ( (lv_then_3_0= ruleInternalRichString ) )
            // PsiInternalXtend.g:5196:4: (lv_then_3_0= ruleInternalRichString )
            {
            // PsiInternalXtend.g:5196:4: (lv_then_3_0= ruleInternalRichString )
            // PsiInternalXtend.g:5197:5: lv_then_3_0= ruleInternalRichString
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringIf_ThenInternalRichStringParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_73);
            ruleInternalRichString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:5206:3: ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )*
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==KW_ELSEIF) ) {
                    alt162=1;
                }


                switch (alt162) {
            	case 1 :
            	    // PsiInternalXtend.g:5207:4: (lv_elseIfs_4_0= ruleRichStringElseIf )
            	    {
            	    // PsiInternalXtend.g:5207:4: (lv_elseIfs_4_0= ruleRichStringElseIf )
            	    // PsiInternalXtend.g:5208:5: lv_elseIfs_4_0= ruleRichStringElseIf
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getRichStringIf_ElseIfsRichStringElseIfParserRuleCall_4_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_73);
            	    ruleRichStringElseIf();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);

            // PsiInternalXtend.g:5217:3: (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==KW_ELSE) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // PsiInternalXtend.g:5218:4: otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getRichStringIf_ELSEKeyword_5_0ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_ELSE,FOLLOW_71); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }
                    // PsiInternalXtend.g:5225:4: ( (lv_else_6_0= ruleInternalRichString ) )
                    // PsiInternalXtend.g:5226:5: (lv_else_6_0= ruleInternalRichString )
                    {
                    // PsiInternalXtend.g:5226:5: (lv_else_6_0= ruleInternalRichString )
                    // PsiInternalXtend.g:5227:6: lv_else_6_0= ruleInternalRichString
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichStringIf_ElseInternalRichStringParserRuleCall_5_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_74);
                    ruleInternalRichString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringIf_ENDIFKeyword_6ElementType());
              		
            }
            otherlv_7=(Token)match(input,KW_ENDIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_7);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichStringIf"


    // $ANTLR start "entryRuleRichStringElseIf"
    // PsiInternalXtend.g:5248:1: entryRuleRichStringElseIf : ruleRichStringElseIf EOF ;
    public final void entryRuleRichStringElseIf() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5248:26: ( ruleRichStringElseIf EOF )
            // PsiInternalXtend.g:5249:2: ruleRichStringElseIf EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringElseIfElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleRichStringElseIf();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRichStringElseIf"


    // $ANTLR start "ruleRichStringElseIf"
    // PsiInternalXtend.g:5254:1: ruleRichStringElseIf : (otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) ) ) ;
    public final void ruleRichStringElseIf() throws RecognitionException {
        Token otherlv_0=null;

        try {
            // PsiInternalXtend.g:5254:21: ( (otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) ) ) )
            // PsiInternalXtend.g:5255:2: (otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) ) )
            {
            // PsiInternalXtend.g:5255:2: (otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) ) )
            // PsiInternalXtend.g:5256:3: otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) )
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringElseIf_ELSEIFKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_ELSEIF,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            // PsiInternalXtend.g:5263:3: ( (lv_if_1_0= ruleXExpression ) )
            // PsiInternalXtend.g:5264:4: (lv_if_1_0= ruleXExpression )
            {
            // PsiInternalXtend.g:5264:4: (lv_if_1_0= ruleXExpression )
            // PsiInternalXtend.g:5265:5: lv_if_1_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringElseIf_IfXExpressionParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_71);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:5274:3: ( (lv_then_2_0= ruleInternalRichString ) )
            // PsiInternalXtend.g:5275:4: (lv_then_2_0= ruleInternalRichString )
            {
            // PsiInternalXtend.g:5275:4: (lv_then_2_0= ruleInternalRichString )
            // PsiInternalXtend.g:5276:5: lv_then_2_0= ruleInternalRichString
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringElseIf_ThenInternalRichStringParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleInternalRichString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleRichStringElseIf"


    // $ANTLR start "entryRuleXAnnotation"
    // PsiInternalXtend.g:5289:1: entryRuleXAnnotation : ruleXAnnotation EOF ;
    public final void entryRuleXAnnotation() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5289:21: ( ruleXAnnotation EOF )
            // PsiInternalXtend.g:5290:2: ruleXAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXAnnotation();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXAnnotation"


    // $ANTLR start "ruleXAnnotation"
    // PsiInternalXtend.g:5295:1: ruleXAnnotation : ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) ;
    public final void ruleXAnnotation() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;

        try {
            // PsiInternalXtend.g:5295:16: ( ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) )
            // PsiInternalXtend.g:5296:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            {
            // PsiInternalXtend.g:5296:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            // PsiInternalXtend.g:5297:3: () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            {
            // PsiInternalXtend.g:5297:3: ()
            // PsiInternalXtend.g:5298:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXAnnotation_XAnnotationAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXAnnotation_CommercialAtKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_CommercialAt,FOLLOW_3); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:5310:3: ( ( ruleQualifiedName ) )
            // PsiInternalXtend.g:5311:4: ( ruleQualifiedName )
            {
            // PsiInternalXtend.g:5311:4: ( ruleQualifiedName )
            // PsiInternalXtend.g:5312:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXAnnotation_AnnotationTypeJvmAnnotationTypeCrossReference_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_75);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:5321:3: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            int alt166=2;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // PsiInternalXtend.g:5322:4: ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')'
                    {
                    // PsiInternalXtend.g:5322:4: ( ( '(' )=>otherlv_3= '(' )
                    // PsiInternalXtend.g:5323:5: ( '(' )=>otherlv_3= '('
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXAnnotation_LeftParenthesisKeyword_3_0ElementType());
                      				
                    }
                    otherlv_3=(Token)match(input,KW_LeftParenthesis,FOLLOW_76); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_3);
                      				
                    }

                    }

                    // PsiInternalXtend.g:5332:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?
                    int alt165=3;
                    alt165 = dfa165.predict(input);
                    switch (alt165) {
                        case 1 :
                            // PsiInternalXtend.g:5333:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            {
                            // PsiInternalXtend.g:5333:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            // PsiInternalXtend.g:5334:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            {
                            // PsiInternalXtend.g:5334:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
                            // PsiInternalXtend.g:5335:7: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            {
                            // PsiInternalXtend.g:5344:7: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            // PsiInternalXtend.g:5345:8: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXAnnotation_ElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_27);
                            ruleXAnnotationElementValuePair();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:5354:6: (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            loop164:
                            do {
                                int alt164=2;
                                int LA164_0 = input.LA(1);

                                if ( (LA164_0==KW_Comma) ) {
                                    alt164=1;
                                }


                                switch (alt164) {
                            	case 1 :
                            	    // PsiInternalXtend.g:5355:7: otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getXAnnotation_CommaKeyword_3_1_0_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_5=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_5);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:5362:7: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    // PsiInternalXtend.g:5363:8: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    {
                            	    // PsiInternalXtend.g:5372:8: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    // PsiInternalXtend.g:5373:9: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXAnnotation_ElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    ruleXAnnotationElementValuePair();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop164;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:5385:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            {
                            // PsiInternalXtend.g:5385:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            // PsiInternalXtend.g:5386:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            {
                            // PsiInternalXtend.g:5386:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            // PsiInternalXtend.g:5387:7: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXAnnotation_ValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_65);
                            ruleXAnnotationElementValueOrCommaList();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXAnnotation_RightParenthesisKeyword_3_2ElementType());
                      			
                    }
                    otherlv_8=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_8);
                      			
                    }

                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXAnnotation"


    // $ANTLR start "entryRuleXAnnotationElementValuePair"
    // PsiInternalXtend.g:5409:1: entryRuleXAnnotationElementValuePair : ruleXAnnotationElementValuePair EOF ;
    public final void entryRuleXAnnotationElementValuePair() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5409:37: ( ruleXAnnotationElementValuePair EOF )
            // PsiInternalXtend.g:5410:2: ruleXAnnotationElementValuePair EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationElementValuePairElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXAnnotationElementValuePair"


    // $ANTLR start "ruleXAnnotationElementValuePair"
    // PsiInternalXtend.g:5415:1: ruleXAnnotationElementValuePair : ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) ;
    public final void ruleXAnnotationElementValuePair() throws RecognitionException {
        Token otherlv_1=null;

        try {
            // PsiInternalXtend.g:5415:32: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) )
            // PsiInternalXtend.g:5416:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            {
            // PsiInternalXtend.g:5416:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            // PsiInternalXtend.g:5417:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            {
            // PsiInternalXtend.g:5417:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) )
            // PsiInternalXtend.g:5418:4: ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' )
            {
            // PsiInternalXtend.g:5427:4: ( ( ( ruleValidID ) ) otherlv_1= '=' )
            // PsiInternalXtend.g:5428:5: ( ( ruleValidID ) ) otherlv_1= '='
            {
            // PsiInternalXtend.g:5428:5: ( ( ruleValidID ) )
            // PsiInternalXtend.g:5429:6: ( ruleValidID )
            {
            // PsiInternalXtend.g:5429:6: ( ruleValidID )
            // PsiInternalXtend.g:5430:7: ruleValidID
            {
            if ( state.backtracking==0 ) {

              							markComposite(elementTypeProvider.getXAnnotationElementValuePair_ElementJvmOperationCrossReference_0_0_0_0ElementType());
              						
            }
            pushFollow(FOLLOW_77);
            ruleValidID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              							doneComposite();
              						
            }

            }


            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXAnnotationElementValuePair_EqualsSignKeyword_0_0_1ElementType());
              				
            }
            otherlv_1=(Token)match(input,KW_EqualsSign,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_1);
              				
            }

            }


            }

            // PsiInternalXtend.g:5448:3: ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            // PsiInternalXtend.g:5449:4: (lv_value_2_0= ruleXAnnotationElementValue )
            {
            // PsiInternalXtend.g:5449:4: (lv_value_2_0= ruleXAnnotationElementValue )
            // PsiInternalXtend.g:5450:5: lv_value_2_0= ruleXAnnotationElementValue
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXAnnotationElementValuePair_ValueXAnnotationElementValueParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXAnnotationElementValuePair"


    // $ANTLR start "entryRuleXAnnotationElementValueOrCommaList"
    // PsiInternalXtend.g:5463:1: entryRuleXAnnotationElementValueOrCommaList : ruleXAnnotationElementValueOrCommaList EOF ;
    public final void entryRuleXAnnotationElementValueOrCommaList() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5463:44: ( ruleXAnnotationElementValueOrCommaList EOF )
            // PsiInternalXtend.g:5464:2: ruleXAnnotationElementValueOrCommaList EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaListElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXAnnotationElementValueOrCommaList();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXAnnotationElementValueOrCommaList"


    // $ANTLR start "ruleXAnnotationElementValueOrCommaList"
    // PsiInternalXtend.g:5469:1: ruleXAnnotationElementValueOrCommaList : ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ( ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) ) ;
    public final void ruleXAnnotationElementValueOrCommaList() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;

        try {
            // PsiInternalXtend.g:5469:39: ( ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ( ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) ) )
            // PsiInternalXtend.g:5470:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ( ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )
            {
            // PsiInternalXtend.g:5470:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ( ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )
            int alt171=2;
            alt171 = dfa171.predict(input);
            switch (alt171) {
                case 1 :
                    // PsiInternalXtend.g:5471:3: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    {
                    // PsiInternalXtend.g:5471:3: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    // PsiInternalXtend.g:5472:4: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']'
                    {
                    // PsiInternalXtend.g:5472:4: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) )
                    // PsiInternalXtend.g:5473:5: ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' )
                    {
                    // PsiInternalXtend.g:5480:5: ( () otherlv_1= '#' otherlv_2= '[' )
                    // PsiInternalXtend.g:5481:6: () otherlv_1= '#' otherlv_2= '['
                    {
                    // PsiInternalXtend.g:5481:6: ()
                    // PsiInternalXtend.g:5482:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							precedeComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_XListLiteralAction_0_0_0_0ElementType());
                      							doneComposite();
                      						
                    }

                    }

                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_NumberSignKeyword_0_0_0_1ElementType());
                      					
                    }
                    otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_1);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_LeftSquareBracketKeyword_0_0_0_2ElementType());
                      					
                    }
                    otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_78); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_2);
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:5503:4: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==KW_Package||(LA168_0>=KW_Class && LA168_0<=KW_LessThanSign)||(LA168_0>=KW_Extends && LA168_0<=KW_LeftCurlyBracket)||(LA168_0>=KW_Interface && LA168_0<=KW_LeftParenthesis)||(LA168_0>=KW_Extension && LA168_0<=KW_New)||(LA168_0>=KW_Public && LA168_0<=KW_Transient)||(LA168_0>=KW_Def && LA168_0<=KW_Create)||(LA168_0>=KW_AFTER && LA168_0<=KW_Import)||LA168_0==KW_Switch||(LA168_0>=KW_CommercialAt && LA168_0<=KW_LeftSquareBracket)||(LA168_0>=KW_PlusSign && LA168_0<=KW_HyphenMinus)||LA168_0==KW_ExclamationMark||LA168_0==KW_If||(LA168_0>=KW_For && LA168_0<=KW_Try)||(LA168_0>=RULE_ID && LA168_0<=RULE_RICH_TEXT_START)||(LA168_0>=RULE_HEX && LA168_0<=RULE_DECIMAL)) ) {
                        alt168=1;
                    }
                    switch (alt168) {
                        case 1 :
                            // PsiInternalXtend.g:5504:5: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // PsiInternalXtend.g:5504:5: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                            // PsiInternalXtend.g:5505:6: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            {
                            // PsiInternalXtend.g:5505:6: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            // PsiInternalXtend.g:5506:7: lv_elements_3_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_ElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_79);
                            ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }

                            // PsiInternalXtend.g:5515:5: (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            loop167:
                            do {
                                int alt167=2;
                                int LA167_0 = input.LA(1);

                                if ( (LA167_0==KW_Comma) ) {
                                    alt167=1;
                                }


                                switch (alt167) {
                            	case 1 :
                            	    // PsiInternalXtend.g:5516:6: otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_CommaKeyword_0_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_4);
                            	      					
                            	    }
                            	    // PsiInternalXtend.g:5523:6: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    // PsiInternalXtend.g:5524:7: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // PsiInternalXtend.g:5524:7: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    // PsiInternalXtend.g:5525:8: lv_elements_5_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_ElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_79);
                            	    ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop167;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_RightSquareBracketKeyword_0_2ElementType());
                      			
                    }
                    otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_6);
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:5545:3: ( ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? )
                    {
                    // PsiInternalXtend.g:5545:3: ( ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? )
                    // PsiInternalXtend.g:5546:4: ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )?
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_XAnnotationOrExpressionParserRuleCall_1_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_80);
                    ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }
                    // PsiInternalXtend.g:5553:4: ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )?
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( (LA170_0==KW_Comma) ) {
                        alt170=1;
                    }
                    switch (alt170) {
                        case 1 :
                            // PsiInternalXtend.g:5554:5: () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+
                            {
                            // PsiInternalXtend.g:5554:5: ()
                            // PsiInternalXtend.g:5555:6: 
                            {
                            if ( state.backtracking==0 ) {

                              						precedeComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_XListLiteralElementsAction_1_1_0ElementType());
                              						doneComposite();
                              					
                            }

                            }

                            // PsiInternalXtend.g:5560:5: (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+
                            int cnt169=0;
                            loop169:
                            do {
                                int alt169=2;
                                int LA169_0 = input.LA(1);

                                if ( (LA169_0==KW_Comma) ) {
                                    alt169=1;
                                }


                                switch (alt169) {
                            	case 1 :
                            	    // PsiInternalXtend.g:5561:6: otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_CommaKeyword_1_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_9=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_9);
                            	      					
                            	    }
                            	    // PsiInternalXtend.g:5568:6: ( (lv_elements_10_0= ruleXAnnotationOrExpression ) )
                            	    // PsiInternalXtend.g:5569:7: (lv_elements_10_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // PsiInternalXtend.g:5569:7: (lv_elements_10_0= ruleXAnnotationOrExpression )
                            	    // PsiInternalXtend.g:5570:8: lv_elements_10_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_ElementsXAnnotationOrExpressionParserRuleCall_1_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_80);
                            	    ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt169 >= 1 ) break loop169;
                            	    if (state.backtracking>0) {state.failed=true; return ;}
                                        EarlyExitException eee =
                                            new EarlyExitException(169, input);
                                        throw eee;
                                }
                                cnt169++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXAnnotationElementValueOrCommaList"


    // $ANTLR start "entryRuleXAnnotationElementValue"
    // PsiInternalXtend.g:5586:1: entryRuleXAnnotationElementValue : ruleXAnnotationElementValue EOF ;
    public final void entryRuleXAnnotationElementValue() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5586:33: ( ruleXAnnotationElementValue EOF )
            // PsiInternalXtend.g:5587:2: ruleXAnnotationElementValue EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationElementValueElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXAnnotationElementValue"


    // $ANTLR start "ruleXAnnotationElementValue"
    // PsiInternalXtend.g:5592:1: ruleXAnnotationElementValue : ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ruleXAnnotationOrExpression ) ;
    public final void ruleXAnnotationElementValue() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;

        try {
            // PsiInternalXtend.g:5592:28: ( ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ruleXAnnotationOrExpression ) )
            // PsiInternalXtend.g:5593:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ruleXAnnotationOrExpression )
            {
            // PsiInternalXtend.g:5593:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ruleXAnnotationOrExpression )
            int alt174=2;
            alt174 = dfa174.predict(input);
            switch (alt174) {
                case 1 :
                    // PsiInternalXtend.g:5594:3: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    {
                    // PsiInternalXtend.g:5594:3: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    // PsiInternalXtend.g:5595:4: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']'
                    {
                    // PsiInternalXtend.g:5595:4: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) )
                    // PsiInternalXtend.g:5596:5: ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' )
                    {
                    // PsiInternalXtend.g:5603:5: ( () otherlv_1= '#' otherlv_2= '[' )
                    // PsiInternalXtend.g:5604:6: () otherlv_1= '#' otherlv_2= '['
                    {
                    // PsiInternalXtend.g:5604:6: ()
                    // PsiInternalXtend.g:5605:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							precedeComposite(elementTypeProvider.getXAnnotationElementValue_XListLiteralAction_0_0_0_0ElementType());
                      							doneComposite();
                      						
                    }

                    }

                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXAnnotationElementValue_NumberSignKeyword_0_0_0_1ElementType());
                      					
                    }
                    otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_1);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXAnnotationElementValue_LeftSquareBracketKeyword_0_0_0_2ElementType());
                      					
                    }
                    otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_78); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_2);
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:5626:4: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==KW_Package||(LA173_0>=KW_Class && LA173_0<=KW_LessThanSign)||(LA173_0>=KW_Extends && LA173_0<=KW_LeftCurlyBracket)||(LA173_0>=KW_Interface && LA173_0<=KW_LeftParenthesis)||(LA173_0>=KW_Extension && LA173_0<=KW_New)||(LA173_0>=KW_Public && LA173_0<=KW_Transient)||(LA173_0>=KW_Def && LA173_0<=KW_Create)||(LA173_0>=KW_AFTER && LA173_0<=KW_Import)||LA173_0==KW_Switch||(LA173_0>=KW_CommercialAt && LA173_0<=KW_LeftSquareBracket)||(LA173_0>=KW_PlusSign && LA173_0<=KW_HyphenMinus)||LA173_0==KW_ExclamationMark||LA173_0==KW_If||(LA173_0>=KW_For && LA173_0<=KW_Try)||(LA173_0>=RULE_ID && LA173_0<=RULE_RICH_TEXT_START)||(LA173_0>=RULE_HEX && LA173_0<=RULE_DECIMAL)) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // PsiInternalXtend.g:5627:5: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // PsiInternalXtend.g:5627:5: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                            // PsiInternalXtend.g:5628:6: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            {
                            // PsiInternalXtend.g:5628:6: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            // PsiInternalXtend.g:5629:7: lv_elements_3_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXAnnotationElementValue_ElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_79);
                            ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }

                            // PsiInternalXtend.g:5638:5: (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            loop172:
                            do {
                                int alt172=2;
                                int LA172_0 = input.LA(1);

                                if ( (LA172_0==KW_Comma) ) {
                                    alt172=1;
                                }


                                switch (alt172) {
                            	case 1 :
                            	    // PsiInternalXtend.g:5639:6: otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXAnnotationElementValue_CommaKeyword_0_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_4);
                            	      					
                            	    }
                            	    // PsiInternalXtend.g:5646:6: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    // PsiInternalXtend.g:5647:7: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // PsiInternalXtend.g:5647:7: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    // PsiInternalXtend.g:5648:8: lv_elements_5_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXAnnotationElementValue_ElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_79);
                            	    ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop172;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXAnnotationElementValue_RightSquareBracketKeyword_0_2ElementType());
                      			
                    }
                    otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_6);
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:5668:3: ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXAnnotationElementValue_XAnnotationOrExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXAnnotationElementValue"


    // $ANTLR start "entryRuleXAnnotationOrExpression"
    // PsiInternalXtend.g:5679:1: entryRuleXAnnotationOrExpression : ruleXAnnotationOrExpression EOF ;
    public final void entryRuleXAnnotationOrExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5679:33: ( ruleXAnnotationOrExpression EOF )
            // PsiInternalXtend.g:5680:2: ruleXAnnotationOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationOrExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXAnnotationOrExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXAnnotationOrExpression"


    // $ANTLR start "ruleXAnnotationOrExpression"
    // PsiInternalXtend.g:5685:1: ruleXAnnotationOrExpression : ( ruleXAnnotation | ruleXExpression ) ;
    public final void ruleXAnnotationOrExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5685:28: ( ( ruleXAnnotation | ruleXExpression ) )
            // PsiInternalXtend.g:5686:2: ( ruleXAnnotation | ruleXExpression )
            {
            // PsiInternalXtend.g:5686:2: ( ruleXAnnotation | ruleXExpression )
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==KW_CommercialAt) ) {
                alt175=1;
            }
            else if ( (LA175_0==KW_Package||(LA175_0>=KW_Class && LA175_0<=KW_LessThanSign)||(LA175_0>=KW_Extends && LA175_0<=KW_LeftCurlyBracket)||(LA175_0>=KW_Interface && LA175_0<=KW_LeftParenthesis)||(LA175_0>=KW_Extension && LA175_0<=KW_New)||(LA175_0>=KW_Public && LA175_0<=KW_Transient)||(LA175_0>=KW_Def && LA175_0<=KW_Create)||(LA175_0>=KW_AFTER && LA175_0<=KW_Import)||LA175_0==KW_Switch||(LA175_0>=KW_NumberSign && LA175_0<=KW_LeftSquareBracket)||(LA175_0>=KW_PlusSign && LA175_0<=KW_HyphenMinus)||LA175_0==KW_ExclamationMark||LA175_0==KW_If||(LA175_0>=KW_For && LA175_0<=KW_Try)||(LA175_0>=RULE_ID && LA175_0<=RULE_RICH_TEXT_START)||(LA175_0>=RULE_HEX && LA175_0<=RULE_DECIMAL)) ) {
                alt175=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;
            }
            switch (alt175) {
                case 1 :
                    // PsiInternalXtend.g:5687:3: ruleXAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXAnnotationOrExpression_XAnnotationParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:5695:3: ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXAnnotationOrExpression_XExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXAnnotationOrExpression"


    // $ANTLR start "entryRuleXExpression"
    // PsiInternalXtend.g:5706:1: entryRuleXExpression : ruleXExpression EOF ;
    public final void entryRuleXExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5706:21: ( ruleXExpression EOF )
            // PsiInternalXtend.g:5707:2: ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // PsiInternalXtend.g:5712:1: ruleXExpression : ruleXAssignment ;
    public final void ruleXExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5712:16: ( ruleXAssignment )
            // PsiInternalXtend.g:5713:2: ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		markComposite(elementTypeProvider.getXExpression_XAssignmentParserRuleCallElementType());
              	
            }
            pushFollow(FOLLOW_2);
            ruleXAssignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              		doneComposite();
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // PsiInternalXtend.g:5723:1: entryRuleXAssignment : ruleXAssignment EOF ;
    public final void entryRuleXAssignment() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5723:21: ( ruleXAssignment EOF )
            // PsiInternalXtend.g:5724:2: ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAssignmentElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXAssignment();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // PsiInternalXtend.g:5729:1: ruleXAssignment : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | ( ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final void ruleXAssignment() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5729:16: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | ( ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // PsiInternalXtend.g:5730:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | ( ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // PsiInternalXtend.g:5730:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | ( ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt177=2;
            alt177 = dfa177.predict(input);
            switch (alt177) {
                case 1 :
                    // PsiInternalXtend.g:5731:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // PsiInternalXtend.g:5731:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // PsiInternalXtend.g:5732:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // PsiInternalXtend.g:5732:4: ()
                    // PsiInternalXtend.g:5733:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					precedeComposite(elementTypeProvider.getXAssignment_XAssignmentAction_0_0ElementType());
                      					doneComposite();
                      				
                    }

                    }

                    // PsiInternalXtend.g:5738:4: ( ( ruleFeatureCallID ) )
                    // PsiInternalXtend.g:5739:5: ( ruleFeatureCallID )
                    {
                    // PsiInternalXtend.g:5739:5: ( ruleFeatureCallID )
                    // PsiInternalXtend.g:5740:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXAssignment_FeatureJvmIdentifiableElementCrossReference_0_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXAssignment_OpSingleAssignParserRuleCall_0_2ElementType());
                      			
                    }
                    pushFollow(FOLLOW_33);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }
                    // PsiInternalXtend.g:5756:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // PsiInternalXtend.g:5757:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // PsiInternalXtend.g:5757:5: (lv_value_3_0= ruleXAssignment )
                    // PsiInternalXtend.g:5758:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXAssignment_ValueXAssignmentParserRuleCall_0_3_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:5769:3: ( ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // PsiInternalXtend.g:5769:3: ( ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // PsiInternalXtend.g:5770:4: ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXAssignment_XOrExpressionParserRuleCall_1_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_81);
                    ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }
                    // PsiInternalXtend.g:5777:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt176=2;
                    alt176 = dfa176.predict(input);
                    switch (alt176) {
                        case 1 :
                            // PsiInternalXtend.g:5778:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // PsiInternalXtend.g:5778:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // PsiInternalXtend.g:5779:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // PsiInternalXtend.g:5789:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // PsiInternalXtend.g:5790:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // PsiInternalXtend.g:5790:7: ()
                            // PsiInternalXtend.g:5791:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								precedeComposite(elementTypeProvider.getXAssignment_XBinaryOperationLeftOperandAction_1_1_0_0_0ElementType());
                              								doneComposite();
                              							
                            }

                            }

                            // PsiInternalXtend.g:5796:7: ( ( ruleOpMultiAssign ) )
                            // PsiInternalXtend.g:5797:8: ( ruleOpMultiAssign )
                            {
                            // PsiInternalXtend.g:5797:8: ( ruleOpMultiAssign )
                            // PsiInternalXtend.g:5798:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getXAssignment_FeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_33);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }


                            }


                            }

                            // PsiInternalXtend.g:5809:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // PsiInternalXtend.g:5810:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // PsiInternalXtend.g:5810:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // PsiInternalXtend.g:5811:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXAssignment_RightOperandXAssignmentParserRuleCall_1_1_1_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // PsiInternalXtend.g:5826:1: entryRuleOpSingleAssign : ruleOpSingleAssign EOF ;
    public final void entryRuleOpSingleAssign() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5826:24: ( ruleOpSingleAssign EOF )
            // PsiInternalXtend.g:5827:2: ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpSingleAssignElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // PsiInternalXtend.g:5832:1: ruleOpSingleAssign : kw= '=' ;
    public final void ruleOpSingleAssign() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:5832:19: (kw= '=' )
            // PsiInternalXtend.g:5833:2: kw= '='
            {
            if ( state.backtracking==0 ) {

              		markLeaf(elementTypeProvider.getOpSingleAssign_EqualsSignKeywordElementType());
              	
            }
            kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              		doneLeaf(kw);
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // PsiInternalXtend.g:5843:1: entryRuleOpMultiAssign : ruleOpMultiAssign EOF ;
    public final void entryRuleOpMultiAssign() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5843:23: ( ruleOpMultiAssign EOF )
            // PsiInternalXtend.g:5844:2: ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpMultiAssignElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // PsiInternalXtend.g:5849:1: ruleOpMultiAssign : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final void ruleOpMultiAssign() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:5849:18: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // PsiInternalXtend.g:5850:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // PsiInternalXtend.g:5850:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt179=7;
            switch ( input.LA(1) ) {
            case KW_PlusSignEqualsSign:
                {
                alt179=1;
                }
                break;
            case KW_HyphenMinusEqualsSign:
                {
                alt179=2;
                }
                break;
            case KW_AsteriskEqualsSign:
                {
                alt179=3;
                }
                break;
            case KW_SolidusEqualsSign:
                {
                alt179=4;
                }
                break;
            case KW_PercentSignEqualsSign:
                {
                alt179=5;
                }
                break;
            case KW_LessThanSign:
                {
                alt179=6;
                }
                break;
            case KW_GreaterThanSign:
                {
                alt179=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }

            switch (alt179) {
                case 1 :
                    // PsiInternalXtend.g:5851:3: kw= '+='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_PlusSignEqualsSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PlusSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:5859:3: kw= '-='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_HyphenMinusEqualsSignKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:5867:3: kw= '*='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_AsteriskEqualsSignKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_AsteriskEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:5875:3: kw= '/='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_SolidusEqualsSignKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_SolidusEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:5883:3: kw= '%='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_PercentSignEqualsSignKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PercentSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:5891:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // PsiInternalXtend.g:5891:3: (kw= '<' kw= '<' kw= '=' )
                    // PsiInternalXtend.g:5892:4: kw= '<' kw= '<' kw= '='
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_LessThanSignKeyword_5_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_51); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_LessThanSignKeyword_5_1ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_77); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_EqualsSignKeyword_5_2ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // PsiInternalXtend.g:5915:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // PsiInternalXtend.g:5915:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // PsiInternalXtend.g:5916:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_GreaterThanSignKeyword_6_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_82); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    // PsiInternalXtend.g:5923:4: (kw= '>' )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==KW_GreaterThanSign) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // PsiInternalXtend.g:5924:5: kw= '>'
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getOpMultiAssign_GreaterThanSignKeyword_6_1ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_83); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_GreaterThanSignEqualsSignKeyword_6_2ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // PsiInternalXtend.g:5944:1: entryRuleXOrExpression : ruleXOrExpression EOF ;
    public final void entryRuleXOrExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5944:23: ( ruleXOrExpression EOF )
            // PsiInternalXtend.g:5945:2: ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXOrExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXOrExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // PsiInternalXtend.g:5950:1: ruleXOrExpression : ( ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final void ruleXOrExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:5950:18: ( ( ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // PsiInternalXtend.g:5951:2: ( ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // PsiInternalXtend.g:5951:2: ( ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // PsiInternalXtend.g:5952:3: ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXOrExpression_XAndExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_84);
            ruleXAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:5959:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==KW_VerticalLineVerticalLine) ) {
                    int LA180_2 = input.LA(2);

                    if ( (synpred26_PsiInternalXtend()) ) {
                        alt180=1;
                    }


                }


                switch (alt180) {
            	case 1 :
            	    // PsiInternalXtend.g:5960:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // PsiInternalXtend.g:5960:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // PsiInternalXtend.g:5961:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // PsiInternalXtend.g:5971:5: ( () ( ( ruleOpOr ) ) )
            	    // PsiInternalXtend.g:5972:6: () ( ( ruleOpOr ) )
            	    {
            	    // PsiInternalXtend.g:5972:6: ()
            	    // PsiInternalXtend.g:5973:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXOrExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      						
            	    }

            	    }

            	    // PsiInternalXtend.g:5978:6: ( ( ruleOpOr ) )
            	    // PsiInternalXtend.g:5979:7: ( ruleOpOr )
            	    {
            	    // PsiInternalXtend.g:5979:7: ( ruleOpOr )
            	    // PsiInternalXtend.g:5980:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXOrExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // PsiInternalXtend.g:5991:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // PsiInternalXtend.g:5992:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // PsiInternalXtend.g:5992:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // PsiInternalXtend.g:5993:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXOrExpression_RightOperandXAndExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_84);
            	    ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // PsiInternalXtend.g:6007:1: entryRuleOpOr : ruleOpOr EOF ;
    public final void entryRuleOpOr() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6007:14: ( ruleOpOr EOF )
            // PsiInternalXtend.g:6008:2: ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpOrElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpOr();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // PsiInternalXtend.g:6013:1: ruleOpOr : kw= '||' ;
    public final void ruleOpOr() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6013:9: (kw= '||' )
            // PsiInternalXtend.g:6014:2: kw= '||'
            {
            if ( state.backtracking==0 ) {

              		markLeaf(elementTypeProvider.getOpOr_VerticalLineVerticalLineKeywordElementType());
              	
            }
            kw=(Token)match(input,KW_VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              		doneLeaf(kw);
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // PsiInternalXtend.g:6024:1: entryRuleXAndExpression : ruleXAndExpression EOF ;
    public final void entryRuleXAndExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6024:24: ( ruleXAndExpression EOF )
            // PsiInternalXtend.g:6025:2: ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAndExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXAndExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // PsiInternalXtend.g:6030:1: ruleXAndExpression : ( ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final void ruleXAndExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6030:19: ( ( ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // PsiInternalXtend.g:6031:2: ( ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // PsiInternalXtend.g:6031:2: ( ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // PsiInternalXtend.g:6032:3: ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXAndExpression_XEqualityExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_85);
            ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:6039:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==KW_AmpersandAmpersand) ) {
                    int LA181_2 = input.LA(2);

                    if ( (synpred27_PsiInternalXtend()) ) {
                        alt181=1;
                    }


                }


                switch (alt181) {
            	case 1 :
            	    // PsiInternalXtend.g:6040:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // PsiInternalXtend.g:6040:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // PsiInternalXtend.g:6041:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // PsiInternalXtend.g:6051:5: ( () ( ( ruleOpAnd ) ) )
            	    // PsiInternalXtend.g:6052:6: () ( ( ruleOpAnd ) )
            	    {
            	    // PsiInternalXtend.g:6052:6: ()
            	    // PsiInternalXtend.g:6053:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXAndExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      						
            	    }

            	    }

            	    // PsiInternalXtend.g:6058:6: ( ( ruleOpAnd ) )
            	    // PsiInternalXtend.g:6059:7: ( ruleOpAnd )
            	    {
            	    // PsiInternalXtend.g:6059:7: ( ruleOpAnd )
            	    // PsiInternalXtend.g:6060:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXAndExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // PsiInternalXtend.g:6071:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // PsiInternalXtend.g:6072:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // PsiInternalXtend.g:6072:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // PsiInternalXtend.g:6073:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXAndExpression_RightOperandXEqualityExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_85);
            	    ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // PsiInternalXtend.g:6087:1: entryRuleOpAnd : ruleOpAnd EOF ;
    public final void entryRuleOpAnd() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6087:15: ( ruleOpAnd EOF )
            // PsiInternalXtend.g:6088:2: ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpAndElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpAnd();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // PsiInternalXtend.g:6093:1: ruleOpAnd : kw= '&&' ;
    public final void ruleOpAnd() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6093:10: (kw= '&&' )
            // PsiInternalXtend.g:6094:2: kw= '&&'
            {
            if ( state.backtracking==0 ) {

              		markLeaf(elementTypeProvider.getOpAnd_AmpersandAmpersandKeywordElementType());
              	
            }
            kw=(Token)match(input,KW_AmpersandAmpersand,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              		doneLeaf(kw);
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // PsiInternalXtend.g:6104:1: entryRuleXEqualityExpression : ruleXEqualityExpression EOF ;
    public final void entryRuleXEqualityExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6104:29: ( ruleXEqualityExpression EOF )
            // PsiInternalXtend.g:6105:2: ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXEqualityExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // PsiInternalXtend.g:6110:1: ruleXEqualityExpression : ( ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final void ruleXEqualityExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6110:24: ( ( ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // PsiInternalXtend.g:6111:2: ( ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // PsiInternalXtend.g:6111:2: ( ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // PsiInternalXtend.g:6112:3: ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXEqualityExpression_XRelationalExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_86);
            ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:6119:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop182:
            do {
                int alt182=2;
                switch ( input.LA(1) ) {
                case KW_EqualsSignEqualsSign:
                    {
                    int LA182_2 = input.LA(2);

                    if ( (synpred28_PsiInternalXtend()) ) {
                        alt182=1;
                    }


                    }
                    break;
                case KW_ExclamationMarkEqualsSign:
                    {
                    int LA182_3 = input.LA(2);

                    if ( (synpred28_PsiInternalXtend()) ) {
                        alt182=1;
                    }


                    }
                    break;
                case KW_EqualsSignEqualsSignEqualsSign:
                    {
                    int LA182_4 = input.LA(2);

                    if ( (synpred28_PsiInternalXtend()) ) {
                        alt182=1;
                    }


                    }
                    break;
                case KW_ExclamationMarkEqualsSignEqualsSign:
                    {
                    int LA182_5 = input.LA(2);

                    if ( (synpred28_PsiInternalXtend()) ) {
                        alt182=1;
                    }


                    }
                    break;

                }

                switch (alt182) {
            	case 1 :
            	    // PsiInternalXtend.g:6120:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // PsiInternalXtend.g:6120:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // PsiInternalXtend.g:6121:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // PsiInternalXtend.g:6131:5: ( () ( ( ruleOpEquality ) ) )
            	    // PsiInternalXtend.g:6132:6: () ( ( ruleOpEquality ) )
            	    {
            	    // PsiInternalXtend.g:6132:6: ()
            	    // PsiInternalXtend.g:6133:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXEqualityExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      						
            	    }

            	    }

            	    // PsiInternalXtend.g:6138:6: ( ( ruleOpEquality ) )
            	    // PsiInternalXtend.g:6139:7: ( ruleOpEquality )
            	    {
            	    // PsiInternalXtend.g:6139:7: ( ruleOpEquality )
            	    // PsiInternalXtend.g:6140:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXEqualityExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // PsiInternalXtend.g:6151:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // PsiInternalXtend.g:6152:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // PsiInternalXtend.g:6152:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // PsiInternalXtend.g:6153:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXEqualityExpression_RightOperandXRelationalExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_86);
            	    ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // PsiInternalXtend.g:6167:1: entryRuleOpEquality : ruleOpEquality EOF ;
    public final void entryRuleOpEquality() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6167:20: ( ruleOpEquality EOF )
            // PsiInternalXtend.g:6168:2: ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpEqualityElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpEquality();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // PsiInternalXtend.g:6173:1: ruleOpEquality : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final void ruleOpEquality() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6173:15: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // PsiInternalXtend.g:6174:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // PsiInternalXtend.g:6174:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt183=4;
            switch ( input.LA(1) ) {
            case KW_EqualsSignEqualsSign:
                {
                alt183=1;
                }
                break;
            case KW_ExclamationMarkEqualsSign:
                {
                alt183=2;
                }
                break;
            case KW_EqualsSignEqualsSignEqualsSign:
                {
                alt183=3;
                }
                break;
            case KW_ExclamationMarkEqualsSignEqualsSign:
                {
                alt183=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }

            switch (alt183) {
                case 1 :
                    // PsiInternalXtend.g:6175:3: kw= '=='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpEquality_EqualsSignEqualsSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:6183:3: kw= '!='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpEquality_ExclamationMarkEqualsSignKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:6191:3: kw= '==='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpEquality_EqualsSignEqualsSignEqualsSignKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_EqualsSignEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:6199:3: kw= '!=='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpEquality_ExclamationMarkEqualsSignEqualsSignKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_ExclamationMarkEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // PsiInternalXtend.g:6210:1: entryRuleXRelationalExpression : ruleXRelationalExpression EOF ;
    public final void entryRuleXRelationalExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6210:31: ( ruleXRelationalExpression EOF )
            // PsiInternalXtend.g:6211:2: ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXRelationalExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // PsiInternalXtend.g:6216:1: ruleXRelationalExpression : ( ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final void ruleXRelationalExpression() throws RecognitionException {
        Token otherlv_2=null;

        try {
            // PsiInternalXtend.g:6216:26: ( ( ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // PsiInternalXtend.g:6217:2: ( ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // PsiInternalXtend.g:6217:2: ( ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // PsiInternalXtend.g:6218:3: ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXRelationalExpression_XOtherOperatorExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_87);
            ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:6225:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop184:
            do {
                int alt184=3;
                switch ( input.LA(1) ) {
                case KW_LessThanSign:
                    {
                    int LA184_2 = input.LA(2);

                    if ( (synpred30_PsiInternalXtend()) ) {
                        alt184=2;
                    }


                    }
                    break;
                case KW_GreaterThanSign:
                    {
                    int LA184_3 = input.LA(2);

                    if ( (synpred30_PsiInternalXtend()) ) {
                        alt184=2;
                    }


                    }
                    break;
                case KW_Instanceof:
                    {
                    int LA184_4 = input.LA(2);

                    if ( (synpred29_PsiInternalXtend()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case KW_GreaterThanSignEqualsSign:
                    {
                    int LA184_5 = input.LA(2);

                    if ( (synpred30_PsiInternalXtend()) ) {
                        alt184=2;
                    }


                    }
                    break;

                }

                switch (alt184) {
            	case 1 :
            	    // PsiInternalXtend.g:6226:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // PsiInternalXtend.g:6226:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // PsiInternalXtend.g:6227:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // PsiInternalXtend.g:6227:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // PsiInternalXtend.g:6228:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // PsiInternalXtend.g:6234:6: ( () otherlv_2= 'instanceof' )
            	    // PsiInternalXtend.g:6235:7: () otherlv_2= 'instanceof'
            	    {
            	    // PsiInternalXtend.g:6235:7: ()
            	    // PsiInternalXtend.g:6236:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getXRelationalExpression_XInstanceOfExpressionExpressionAction_1_0_0_0_0ElementType());
            	      								doneComposite();
            	      							
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      							markLeaf(elementTypeProvider.getXRelationalExpression_InstanceofKeyword_1_0_0_0_1ElementType());
            	      						
            	    }
            	    otherlv_2=(Token)match(input,KW_Instanceof,FOLLOW_28); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneLeaf(otherlv_2);
            	      						
            	    }

            	    }


            	    }

            	    // PsiInternalXtend.g:6250:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // PsiInternalXtend.g:6251:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // PsiInternalXtend.g:6251:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // PsiInternalXtend.g:6252:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXRelationalExpression_TypeJvmTypeReferenceParserRuleCall_1_0_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_87);
            	    ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // PsiInternalXtend.g:6263:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // PsiInternalXtend.g:6263:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // PsiInternalXtend.g:6264:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // PsiInternalXtend.g:6264:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // PsiInternalXtend.g:6265:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // PsiInternalXtend.g:6275:6: ( () ( ( ruleOpCompare ) ) )
            	    // PsiInternalXtend.g:6276:7: () ( ( ruleOpCompare ) )
            	    {
            	    // PsiInternalXtend.g:6276:7: ()
            	    // PsiInternalXtend.g:6277:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getXRelationalExpression_XBinaryOperationLeftOperandAction_1_1_0_0_0ElementType());
            	      								doneComposite();
            	      							
            	    }

            	    }

            	    // PsiInternalXtend.g:6282:7: ( ( ruleOpCompare ) )
            	    // PsiInternalXtend.g:6283:8: ( ruleOpCompare )
            	    {
            	    // PsiInternalXtend.g:6283:8: ( ruleOpCompare )
            	    // PsiInternalXtend.g:6284:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									markComposite(elementTypeProvider.getXRelationalExpression_FeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0ElementType());
            	      								
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      									doneComposite();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // PsiInternalXtend.g:6295:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // PsiInternalXtend.g:6296:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // PsiInternalXtend.g:6296:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // PsiInternalXtend.g:6297:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXRelationalExpression_RightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_87);
            	    ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // PsiInternalXtend.g:6312:1: entryRuleOpCompare : ruleOpCompare EOF ;
    public final void entryRuleOpCompare() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6312:19: ( ruleOpCompare EOF )
            // PsiInternalXtend.g:6313:2: ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpCompareElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpCompare();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // PsiInternalXtend.g:6318:1: ruleOpCompare : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final void ruleOpCompare() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6318:14: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // PsiInternalXtend.g:6319:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // PsiInternalXtend.g:6319:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt185=4;
            switch ( input.LA(1) ) {
            case KW_GreaterThanSignEqualsSign:
                {
                alt185=1;
                }
                break;
            case KW_LessThanSign:
                {
                int LA185_2 = input.LA(2);

                if ( (LA185_2==KW_EqualsSign) ) {
                    alt185=2;
                }
                else if ( (LA185_2==EOF||LA185_2==KW_Package||(LA185_2>=KW_Class && LA185_2<=KW_LessThanSign)||(LA185_2>=KW_Extends && LA185_2<=KW_LeftCurlyBracket)||(LA185_2>=KW_Interface && LA185_2<=KW_LeftParenthesis)||(LA185_2>=KW_Extension && LA185_2<=KW_New)||(LA185_2>=KW_Public && LA185_2<=KW_Transient)||(LA185_2>=KW_Def && LA185_2<=KW_Create)||(LA185_2>=KW_AFTER && LA185_2<=KW_Import)||LA185_2==KW_Switch||(LA185_2>=KW_NumberSign && LA185_2<=KW_LeftSquareBracket)||(LA185_2>=KW_PlusSign && LA185_2<=KW_HyphenMinus)||LA185_2==KW_ExclamationMark||LA185_2==KW_If||(LA185_2>=KW_For && LA185_2<=KW_Try)||(LA185_2>=RULE_ID && LA185_2<=RULE_RICH_TEXT_START)||(LA185_2>=RULE_HEX && LA185_2<=RULE_DECIMAL)) ) {
                    alt185=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 185, 2, input);

                    throw nvae;
                }
                }
                break;
            case KW_GreaterThanSign:
                {
                alt185=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }

            switch (alt185) {
                case 1 :
                    // PsiInternalXtend.g:6320:3: kw= '>='
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpCompare_GreaterThanSignEqualsSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:6328:3: (kw= '<' kw= '=' )
                    {
                    // PsiInternalXtend.g:6328:3: (kw= '<' kw= '=' )
                    // PsiInternalXtend.g:6329:4: kw= '<' kw= '='
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpCompare_LessThanSignKeyword_1_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_77); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpCompare_EqualsSignKeyword_1_1ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:6345:3: kw= '>'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpCompare_GreaterThanSignKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:6353:3: kw= '<'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpCompare_LessThanSignKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // PsiInternalXtend.g:6364:1: entryRuleXOtherOperatorExpression : ruleXOtherOperatorExpression EOF ;
    public final void entryRuleXOtherOperatorExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6364:34: ( ruleXOtherOperatorExpression EOF )
            // PsiInternalXtend.g:6365:2: ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXOtherOperatorExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // PsiInternalXtend.g:6370:1: ruleXOtherOperatorExpression : ( ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final void ruleXOtherOperatorExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6370:29: ( ( ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // PsiInternalXtend.g:6371:2: ( ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // PsiInternalXtend.g:6371:2: ( ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // PsiInternalXtend.g:6372:3: ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXOtherOperatorExpression_XAdditiveExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_88);
            ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:6379:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop186:
            do {
                int alt186=2;
                alt186 = dfa186.predict(input);
                switch (alt186) {
            	case 1 :
            	    // PsiInternalXtend.g:6380:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // PsiInternalXtend.g:6380:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // PsiInternalXtend.g:6381:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // PsiInternalXtend.g:6391:5: ( () ( ( ruleOpOther ) ) )
            	    // PsiInternalXtend.g:6392:6: () ( ( ruleOpOther ) )
            	    {
            	    // PsiInternalXtend.g:6392:6: ()
            	    // PsiInternalXtend.g:6393:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXOtherOperatorExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      						
            	    }

            	    }

            	    // PsiInternalXtend.g:6398:6: ( ( ruleOpOther ) )
            	    // PsiInternalXtend.g:6399:7: ( ruleOpOther )
            	    {
            	    // PsiInternalXtend.g:6399:7: ( ruleOpOther )
            	    // PsiInternalXtend.g:6400:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXOtherOperatorExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // PsiInternalXtend.g:6411:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // PsiInternalXtend.g:6412:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // PsiInternalXtend.g:6412:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // PsiInternalXtend.g:6413:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXOtherOperatorExpression_RightOperandXAdditiveExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_88);
            	    ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // PsiInternalXtend.g:6427:1: entryRuleOpOther : ruleOpOther EOF ;
    public final void entryRuleOpOther() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6427:17: ( ruleOpOther EOF )
            // PsiInternalXtend.g:6428:2: ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpOtherElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpOther();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // PsiInternalXtend.g:6433:1: ruleOpOther : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final void ruleOpOther() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6433:12: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // PsiInternalXtend.g:6434:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // PsiInternalXtend.g:6434:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt189=9;
            alt189 = dfa189.predict(input);
            switch (alt189) {
                case 1 :
                    // PsiInternalXtend.g:6435:3: kw= '->'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_HyphenMinusGreaterThanSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinusGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:6443:3: kw= '..<'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_FullStopFullStopLessThanSignKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_FullStopFullStopLessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:6451:3: (kw= '>' kw= '..' )
                    {
                    // PsiInternalXtend.g:6451:3: (kw= '>' kw= '..' )
                    // PsiInternalXtend.g:6452:4: kw= '>' kw= '..'
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_2_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_89); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpOther_FullStopFullStopKeyword_2_1ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_FullStopFullStop,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:6468:3: kw= '..'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_FullStopFullStopKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_FullStopFullStop,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:6476:3: kw= '=>'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_EqualsSignGreaterThanSignKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:6484:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // PsiInternalXtend.g:6484:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // PsiInternalXtend.g:6485:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_5_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_90); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    // PsiInternalXtend.g:6492:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt187=2;
                    int LA187_0 = input.LA(1);

                    if ( (LA187_0==KW_GreaterThanSign) ) {
                        int LA187_1 = input.LA(2);

                        if ( (LA187_1==EOF||LA187_1==KW_Package||(LA187_1>=KW_Class && LA187_1<=KW_LessThanSign)||(LA187_1>=KW_Extends && LA187_1<=KW_LeftCurlyBracket)||(LA187_1>=KW_Interface && LA187_1<=KW_LeftParenthesis)||(LA187_1>=KW_Extension && LA187_1<=KW_New)||(LA187_1>=KW_Public && LA187_1<=KW_Transient)||(LA187_1>=KW_Def && LA187_1<=KW_Create)||(LA187_1>=KW_AFTER && LA187_1<=KW_Import)||LA187_1==KW_Switch||(LA187_1>=KW_NumberSign && LA187_1<=KW_LeftSquareBracket)||(LA187_1>=KW_PlusSign && LA187_1<=KW_HyphenMinus)||LA187_1==KW_ExclamationMark||LA187_1==KW_If||(LA187_1>=KW_For && LA187_1<=KW_Try)||(LA187_1>=RULE_ID && LA187_1<=RULE_RICH_TEXT_START)||(LA187_1>=RULE_HEX && LA187_1<=RULE_DECIMAL)) ) {
                            alt187=2;
                        }
                        else if ( (LA187_1==KW_GreaterThanSign) && (synpred32_PsiInternalXtend())) {
                            alt187=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 187, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 187, 0, input);

                        throw nvae;
                    }
                    switch (alt187) {
                        case 1 :
                            // PsiInternalXtend.g:6493:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // PsiInternalXtend.g:6493:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // PsiInternalXtend.g:6494:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // PsiInternalXtend.g:6499:6: (kw= '>' kw= '>' )
                            // PsiInternalXtend.g:6500:7: kw= '>' kw= '>'
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_5_1_0_0_0ElementType());
                              						
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_90); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(kw);
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_5_1_0_0_1ElementType());
                              						
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(kw);
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:6517:5: kw= '>'
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_5_1_1ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // PsiInternalXtend.g:6527:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // PsiInternalXtend.g:6527:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // PsiInternalXtend.g:6528:4: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpOther_LessThanSignKeyword_6_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_91); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    // PsiInternalXtend.g:6535:4: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt188=3;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==KW_LessThanSign) ) {
                        int LA188_1 = input.LA(2);

                        if ( (synpred33_PsiInternalXtend()) ) {
                            alt188=1;
                        }
                        else if ( (true) ) {
                            alt188=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 188, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA188_0==KW_EqualsSignGreaterThanSign) ) {
                        alt188=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 188, 0, input);

                        throw nvae;
                    }
                    switch (alt188) {
                        case 1 :
                            // PsiInternalXtend.g:6536:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // PsiInternalXtend.g:6536:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // PsiInternalXtend.g:6537:6: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // PsiInternalXtend.g:6542:6: (kw= '<' kw= '<' )
                            // PsiInternalXtend.g:6543:7: kw= '<' kw= '<'
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getOpOther_LessThanSignKeyword_6_1_0_0_0ElementType());
                              						
                            }
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_51); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(kw);
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getOpOther_LessThanSignKeyword_6_1_0_0_1ElementType());
                              						
                            }
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(kw);
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:6560:5: kw= '<'
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getOpOther_LessThanSignKeyword_6_1_1ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }

                            }
                            break;
                        case 3 :
                            // PsiInternalXtend.g:6568:5: kw= '=>'
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getOpOther_EqualsSignGreaterThanSignKeyword_6_1_2ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // PsiInternalXtend.g:6578:3: kw= '<>'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_LessThanSignGreaterThanSignKeyword_7ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 9 :
                    // PsiInternalXtend.g:6586:3: kw= '?:'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_QuestionMarkColonKeyword_8ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_QuestionMarkColon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // PsiInternalXtend.g:6597:1: entryRuleXAdditiveExpression : ruleXAdditiveExpression EOF ;
    public final void entryRuleXAdditiveExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6597:29: ( ruleXAdditiveExpression EOF )
            // PsiInternalXtend.g:6598:2: ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAdditiveExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // PsiInternalXtend.g:6603:1: ruleXAdditiveExpression : ( ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final void ruleXAdditiveExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6603:24: ( ( ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // PsiInternalXtend.g:6604:2: ( ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // PsiInternalXtend.g:6604:2: ( ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // PsiInternalXtend.g:6605:3: ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXAdditiveExpression_XMultiplicativeExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_92);
            ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:6612:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==KW_HyphenMinus) ) {
                    int LA190_2 = input.LA(2);

                    if ( (synpred34_PsiInternalXtend()) ) {
                        alt190=1;
                    }


                }
                else if ( (LA190_0==KW_PlusSign) ) {
                    int LA190_3 = input.LA(2);

                    if ( (synpred34_PsiInternalXtend()) ) {
                        alt190=1;
                    }


                }


                switch (alt190) {
            	case 1 :
            	    // PsiInternalXtend.g:6613:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // PsiInternalXtend.g:6613:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // PsiInternalXtend.g:6614:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // PsiInternalXtend.g:6624:5: ( () ( ( ruleOpAdd ) ) )
            	    // PsiInternalXtend.g:6625:6: () ( ( ruleOpAdd ) )
            	    {
            	    // PsiInternalXtend.g:6625:6: ()
            	    // PsiInternalXtend.g:6626:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXAdditiveExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      						
            	    }

            	    }

            	    // PsiInternalXtend.g:6631:6: ( ( ruleOpAdd ) )
            	    // PsiInternalXtend.g:6632:7: ( ruleOpAdd )
            	    {
            	    // PsiInternalXtend.g:6632:7: ( ruleOpAdd )
            	    // PsiInternalXtend.g:6633:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXAdditiveExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // PsiInternalXtend.g:6644:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // PsiInternalXtend.g:6645:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // PsiInternalXtend.g:6645:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // PsiInternalXtend.g:6646:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXAdditiveExpression_RightOperandXMultiplicativeExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_92);
            	    ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // PsiInternalXtend.g:6660:1: entryRuleOpAdd : ruleOpAdd EOF ;
    public final void entryRuleOpAdd() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6660:15: ( ruleOpAdd EOF )
            // PsiInternalXtend.g:6661:2: ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpAddElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpAdd();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // PsiInternalXtend.g:6666:1: ruleOpAdd : (kw= '+' | kw= '-' ) ;
    public final void ruleOpAdd() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6666:10: ( (kw= '+' | kw= '-' ) )
            // PsiInternalXtend.g:6667:2: (kw= '+' | kw= '-' )
            {
            // PsiInternalXtend.g:6667:2: (kw= '+' | kw= '-' )
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==KW_PlusSign) ) {
                alt191=1;
            }
            else if ( (LA191_0==KW_HyphenMinus) ) {
                alt191=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }
            switch (alt191) {
                case 1 :
                    // PsiInternalXtend.g:6668:3: kw= '+'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpAdd_PlusSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:6676:3: kw= '-'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpAdd_HyphenMinusKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // PsiInternalXtend.g:6687:1: entryRuleXMultiplicativeExpression : ruleXMultiplicativeExpression EOF ;
    public final void entryRuleXMultiplicativeExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6687:35: ( ruleXMultiplicativeExpression EOF )
            // PsiInternalXtend.g:6688:2: ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXMultiplicativeExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // PsiInternalXtend.g:6693:1: ruleXMultiplicativeExpression : ( ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final void ruleXMultiplicativeExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6693:30: ( ( ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // PsiInternalXtend.g:6694:2: ( ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // PsiInternalXtend.g:6694:2: ( ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // PsiInternalXtend.g:6695:3: ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXMultiplicativeExpression_XUnaryOperationParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_93);
            ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:6702:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop192:
            do {
                int alt192=2;
                switch ( input.LA(1) ) {
                case KW_Asterisk:
                    {
                    int LA192_2 = input.LA(2);

                    if ( (synpred35_PsiInternalXtend()) ) {
                        alt192=1;
                    }


                    }
                    break;
                case KW_AsteriskAsterisk:
                    {
                    int LA192_3 = input.LA(2);

                    if ( (synpred35_PsiInternalXtend()) ) {
                        alt192=1;
                    }


                    }
                    break;
                case KW_Solidus:
                    {
                    int LA192_4 = input.LA(2);

                    if ( (synpred35_PsiInternalXtend()) ) {
                        alt192=1;
                    }


                    }
                    break;
                case KW_PercentSign:
                    {
                    int LA192_5 = input.LA(2);

                    if ( (synpred35_PsiInternalXtend()) ) {
                        alt192=1;
                    }


                    }
                    break;

                }

                switch (alt192) {
            	case 1 :
            	    // PsiInternalXtend.g:6703:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // PsiInternalXtend.g:6703:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // PsiInternalXtend.g:6704:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // PsiInternalXtend.g:6714:5: ( () ( ( ruleOpMulti ) ) )
            	    // PsiInternalXtend.g:6715:6: () ( ( ruleOpMulti ) )
            	    {
            	    // PsiInternalXtend.g:6715:6: ()
            	    // PsiInternalXtend.g:6716:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXMultiplicativeExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      						
            	    }

            	    }

            	    // PsiInternalXtend.g:6721:6: ( ( ruleOpMulti ) )
            	    // PsiInternalXtend.g:6722:7: ( ruleOpMulti )
            	    {
            	    // PsiInternalXtend.g:6722:7: ( ruleOpMulti )
            	    // PsiInternalXtend.g:6723:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXMultiplicativeExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // PsiInternalXtend.g:6734:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // PsiInternalXtend.g:6735:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // PsiInternalXtend.g:6735:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // PsiInternalXtend.g:6736:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXMultiplicativeExpression_RightOperandXUnaryOperationParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_93);
            	    ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // PsiInternalXtend.g:6750:1: entryRuleOpMulti : ruleOpMulti EOF ;
    public final void entryRuleOpMulti() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6750:17: ( ruleOpMulti EOF )
            // PsiInternalXtend.g:6751:2: ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpMultiElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpMulti();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // PsiInternalXtend.g:6756:1: ruleOpMulti : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final void ruleOpMulti() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6756:12: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // PsiInternalXtend.g:6757:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // PsiInternalXtend.g:6757:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt193=4;
            switch ( input.LA(1) ) {
            case KW_Asterisk:
                {
                alt193=1;
                }
                break;
            case KW_AsteriskAsterisk:
                {
                alt193=2;
                }
                break;
            case KW_Solidus:
                {
                alt193=3;
                }
                break;
            case KW_PercentSign:
                {
                alt193=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;
            }

            switch (alt193) {
                case 1 :
                    // PsiInternalXtend.g:6758:3: kw= '*'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMulti_AsteriskKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Asterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:6766:3: kw= '**'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMulti_AsteriskAsteriskKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:6774:3: kw= '/'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMulti_SolidusKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:6782:3: kw= '%'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMulti_PercentSignKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PercentSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // PsiInternalXtend.g:6793:1: entryRuleXUnaryOperation : ruleXUnaryOperation EOF ;
    public final void entryRuleXUnaryOperation() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6793:25: ( ruleXUnaryOperation EOF )
            // PsiInternalXtend.g:6794:2: ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXUnaryOperationElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // PsiInternalXtend.g:6799:1: ruleXUnaryOperation : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | ruleXCastedExpression ) ;
    public final void ruleXUnaryOperation() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6799:20: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | ruleXCastedExpression ) )
            // PsiInternalXtend.g:6800:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | ruleXCastedExpression )
            {
            // PsiInternalXtend.g:6800:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | ruleXCastedExpression )
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( ((LA194_0>=KW_PlusSign && LA194_0<=KW_HyphenMinus)||LA194_0==KW_ExclamationMark) ) {
                alt194=1;
            }
            else if ( (LA194_0==KW_Package||(LA194_0>=KW_Class && LA194_0<=KW_LessThanSign)||(LA194_0>=KW_Extends && LA194_0<=KW_LeftCurlyBracket)||(LA194_0>=KW_Interface && LA194_0<=KW_LeftParenthesis)||(LA194_0>=KW_Extension && LA194_0<=KW_New)||(LA194_0>=KW_Public && LA194_0<=KW_Transient)||(LA194_0>=KW_Def && LA194_0<=KW_Create)||(LA194_0>=KW_AFTER && LA194_0<=KW_Import)||LA194_0==KW_Switch||(LA194_0>=KW_NumberSign && LA194_0<=KW_LeftSquareBracket)||LA194_0==KW_If||(LA194_0>=KW_For && LA194_0<=KW_Try)||(LA194_0>=RULE_ID && LA194_0<=RULE_RICH_TEXT_START)||(LA194_0>=RULE_HEX && LA194_0<=RULE_DECIMAL)) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;
            }
            switch (alt194) {
                case 1 :
                    // PsiInternalXtend.g:6801:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // PsiInternalXtend.g:6801:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // PsiInternalXtend.g:6802:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // PsiInternalXtend.g:6802:4: ()
                    // PsiInternalXtend.g:6803:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					precedeComposite(elementTypeProvider.getXUnaryOperation_XUnaryOperationAction_0_0ElementType());
                      					doneComposite();
                      				
                    }

                    }

                    // PsiInternalXtend.g:6808:4: ( ( ruleOpUnary ) )
                    // PsiInternalXtend.g:6809:5: ( ruleOpUnary )
                    {
                    // PsiInternalXtend.g:6809:5: ( ruleOpUnary )
                    // PsiInternalXtend.g:6810:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXUnaryOperation_FeatureJvmIdentifiableElementCrossReference_0_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:6819:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // PsiInternalXtend.g:6820:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // PsiInternalXtend.g:6820:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // PsiInternalXtend.g:6821:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXUnaryOperation_OperandXUnaryOperationParserRuleCall_0_2_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:6832:3: ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXUnaryOperation_XCastedExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // PsiInternalXtend.g:6843:1: entryRuleOpUnary : ruleOpUnary EOF ;
    public final void entryRuleOpUnary() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6843:17: ( ruleOpUnary EOF )
            // PsiInternalXtend.g:6844:2: ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpUnaryElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpUnary();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // PsiInternalXtend.g:6849:1: ruleOpUnary : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final void ruleOpUnary() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6849:12: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // PsiInternalXtend.g:6850:2: (kw= '!' | kw= '-' | kw= '+' )
            {
            // PsiInternalXtend.g:6850:2: (kw= '!' | kw= '-' | kw= '+' )
            int alt195=3;
            switch ( input.LA(1) ) {
            case KW_ExclamationMark:
                {
                alt195=1;
                }
                break;
            case KW_HyphenMinus:
                {
                alt195=2;
                }
                break;
            case KW_PlusSign:
                {
                alt195=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;
            }

            switch (alt195) {
                case 1 :
                    // PsiInternalXtend.g:6851:3: kw= '!'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpUnary_ExclamationMarkKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_ExclamationMark,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:6859:3: kw= '-'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpUnary_HyphenMinusKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:6867:3: kw= '+'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpUnary_PlusSignKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // PsiInternalXtend.g:6878:1: entryRuleXCastedExpression : ruleXCastedExpression EOF ;
    public final void entryRuleXCastedExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6878:27: ( ruleXCastedExpression EOF )
            // PsiInternalXtend.g:6879:2: ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXCastedExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // PsiInternalXtend.g:6884:1: ruleXCastedExpression : ( ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final void ruleXCastedExpression() throws RecognitionException {
        Token otherlv_2=null;

        try {
            // PsiInternalXtend.g:6884:22: ( ( ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // PsiInternalXtend.g:6885:2: ( ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // PsiInternalXtend.g:6885:2: ( ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // PsiInternalXtend.g:6886:3: ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXCastedExpression_XPostfixOperationParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_94);
            ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:6893:3: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==KW_As) ) {
                    int LA196_2 = input.LA(2);

                    if ( (synpred36_PsiInternalXtend()) ) {
                        alt196=1;
                    }


                }


                switch (alt196) {
            	case 1 :
            	    // PsiInternalXtend.g:6894:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // PsiInternalXtend.g:6894:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // PsiInternalXtend.g:6895:5: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // PsiInternalXtend.g:6901:5: ( () otherlv_2= 'as' )
            	    // PsiInternalXtend.g:6902:6: () otherlv_2= 'as'
            	    {
            	    // PsiInternalXtend.g:6902:6: ()
            	    // PsiInternalXtend.g:6903:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXCastedExpression_XCastedExpressionTargetAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      						
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      						markLeaf(elementTypeProvider.getXCastedExpression_AsKeyword_1_0_0_1ElementType());
            	      					
            	    }
            	    otherlv_2=(Token)match(input,KW_As,FOLLOW_28); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneLeaf(otherlv_2);
            	      					
            	    }

            	    }


            	    }

            	    // PsiInternalXtend.g:6917:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // PsiInternalXtend.g:6918:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // PsiInternalXtend.g:6918:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // PsiInternalXtend.g:6919:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXCastedExpression_TypeJvmTypeReferenceParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_94);
            	    ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // PsiInternalXtend.g:6933:1: entryRuleXPostfixOperation : ruleXPostfixOperation EOF ;
    public final void entryRuleXPostfixOperation() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6933:27: ( ruleXPostfixOperation EOF )
            // PsiInternalXtend.g:6934:2: ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXPostfixOperationElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // PsiInternalXtend.g:6939:1: ruleXPostfixOperation : ( ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final void ruleXPostfixOperation() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6939:22: ( ( ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // PsiInternalXtend.g:6940:2: ( ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // PsiInternalXtend.g:6940:2: ( ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // PsiInternalXtend.g:6941:3: ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXPostfixOperation_XMemberFeatureCallParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_95);
            ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:6948:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==KW_PlusSignPlusSign) ) {
                int LA197_1 = input.LA(2);

                if ( (synpred37_PsiInternalXtend()) ) {
                    alt197=1;
                }
            }
            else if ( (LA197_0==KW_HyphenMinusHyphenMinus) ) {
                int LA197_2 = input.LA(2);

                if ( (synpred37_PsiInternalXtend()) ) {
                    alt197=1;
                }
            }
            switch (alt197) {
                case 1 :
                    // PsiInternalXtend.g:6949:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // PsiInternalXtend.g:6959:4: ( () ( ( ruleOpPostfix ) ) )
                    // PsiInternalXtend.g:6960:5: () ( ( ruleOpPostfix ) )
                    {
                    // PsiInternalXtend.g:6960:5: ()
                    // PsiInternalXtend.g:6961:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getXPostfixOperation_XPostfixOperationOperandAction_1_0_0ElementType());
                      						doneComposite();
                      					
                    }

                    }

                    // PsiInternalXtend.g:6966:5: ( ( ruleOpPostfix ) )
                    // PsiInternalXtend.g:6967:6: ( ruleOpPostfix )
                    {
                    // PsiInternalXtend.g:6967:6: ( ruleOpPostfix )
                    // PsiInternalXtend.g:6968:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXPostfixOperation_FeatureJvmIdentifiableElementCrossReference_1_0_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // PsiInternalXtend.g:6983:1: entryRuleOpPostfix : ruleOpPostfix EOF ;
    public final void entryRuleOpPostfix() throws RecognitionException {
        try {
            // PsiInternalXtend.g:6983:19: ( ruleOpPostfix EOF )
            // PsiInternalXtend.g:6984:2: ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpPostfixElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpPostfix();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // PsiInternalXtend.g:6989:1: ruleOpPostfix : (kw= '++' | kw= '--' ) ;
    public final void ruleOpPostfix() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:6989:14: ( (kw= '++' | kw= '--' ) )
            // PsiInternalXtend.g:6990:2: (kw= '++' | kw= '--' )
            {
            // PsiInternalXtend.g:6990:2: (kw= '++' | kw= '--' )
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==KW_PlusSignPlusSign) ) {
                alt198=1;
            }
            else if ( (LA198_0==KW_HyphenMinusHyphenMinus) ) {
                alt198=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;
            }
            switch (alt198) {
                case 1 :
                    // PsiInternalXtend.g:6991:3: kw= '++'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpPostfix_PlusSignPlusSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PlusSignPlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:6999:3: kw= '--'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpPostfix_HyphenMinusHyphenMinusKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // PsiInternalXtend.g:7010:1: entryRuleXMemberFeatureCall : ruleXMemberFeatureCall EOF ;
    public final void entryRuleXMemberFeatureCall() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7010:28: ( ruleXMemberFeatureCall EOF )
            // PsiInternalXtend.g:7011:2: ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXMemberFeatureCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // PsiInternalXtend.g:7016:1: ruleXMemberFeatureCall : ( ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final void ruleXMemberFeatureCall() throws RecognitionException {
        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;

        try {
            // PsiInternalXtend.g:7016:23: ( ( ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // PsiInternalXtend.g:7017:2: ( ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // PsiInternalXtend.g:7017:2: ( ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // PsiInternalXtend.g:7018:3: ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXMemberFeatureCall_XPrimaryExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_96);
            ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:7025:3: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop207:
            do {
                int alt207=3;
                switch ( input.LA(1) ) {
                case KW_FullStop:
                    {
                    int LA207_2 = input.LA(2);

                    if ( (synpred38_PsiInternalXtend()) ) {
                        alt207=1;
                    }
                    else if ( (synpred39_PsiInternalXtend()) ) {
                        alt207=2;
                    }


                    }
                    break;
                case KW_ColonColon:
                    {
                    int LA207_3 = input.LA(2);

                    if ( (synpred38_PsiInternalXtend()) ) {
                        alt207=1;
                    }
                    else if ( (synpred39_PsiInternalXtend()) ) {
                        alt207=2;
                    }


                    }
                    break;
                case KW_QuestionMarkFullStop:
                    {
                    int LA207_4 = input.LA(2);

                    if ( (synpred39_PsiInternalXtend()) ) {
                        alt207=2;
                    }


                    }
                    break;

                }

                switch (alt207) {
            	case 1 :
            	    // PsiInternalXtend.g:7026:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // PsiInternalXtend.g:7026:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // PsiInternalXtend.g:7027:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // PsiInternalXtend.g:7027:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // PsiInternalXtend.g:7028:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // PsiInternalXtend.g:7048:6: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // PsiInternalXtend.g:7049:7: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // PsiInternalXtend.g:7049:7: ()
            	    // PsiInternalXtend.g:7050:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getXMemberFeatureCall_XAssignmentAssignableAction_1_0_0_0_0ElementType());
            	      								doneComposite();
            	      							
            	    }

            	    }

            	    // PsiInternalXtend.g:7055:7: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt199=2;
            	    int LA199_0 = input.LA(1);

            	    if ( (LA199_0==KW_FullStop) ) {
            	        alt199=1;
            	    }
            	    else if ( (LA199_0==KW_ColonColon) ) {
            	        alt199=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return ;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 199, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt199) {
            	        case 1 :
            	            // PsiInternalXtend.g:7056:8: otherlv_2= '.'
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markLeaf(elementTypeProvider.getXMemberFeatureCall_FullStopKeyword_1_0_0_0_1_0ElementType());
            	              							
            	            }
            	            otherlv_2=(Token)match(input,KW_FullStop,FOLLOW_97); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              								doneLeaf(otherlv_2);
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // PsiInternalXtend.g:7064:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // PsiInternalXtend.g:7064:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            // PsiInternalXtend.g:7065:9: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // PsiInternalXtend.g:7065:9: (lv_explicitStatic_3_0= '::' )
            	            // PsiInternalXtend.g:7066:10: lv_explicitStatic_3_0= '::'
            	            {
            	            if ( state.backtracking==0 ) {

            	              										markLeaf(elementTypeProvider.getXMemberFeatureCall_ExplicitStaticColonColonKeyword_1_0_0_0_1_1_0ElementType());
            	              									
            	            }
            	            lv_explicitStatic_3_0=(Token)match(input,KW_ColonColon,FOLLOW_97); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              										doneLeaf(lv_explicitStatic_3_0);
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // PsiInternalXtend.g:7076:7: ( ( ruleFeatureCallID ) )
            	    // PsiInternalXtend.g:7077:8: ( ruleFeatureCallID )
            	    {
            	    // PsiInternalXtend.g:7077:8: ( ruleFeatureCallID )
            	    // PsiInternalXtend.g:7078:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									markComposite(elementTypeProvider.getXMemberFeatureCall_FeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0ElementType());
            	      								
            	    }
            	    pushFollow(FOLLOW_77);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      									doneComposite();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXMemberFeatureCall_OpSingleAssignParserRuleCall_1_0_0_0_3ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }

            	    // PsiInternalXtend.g:7096:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // PsiInternalXtend.g:7097:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // PsiInternalXtend.g:7097:6: (lv_value_6_0= ruleXAssignment )
            	    // PsiInternalXtend.g:7098:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXMemberFeatureCall_ValueXAssignmentParserRuleCall_1_0_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_96);
            	    ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // PsiInternalXtend.g:7109:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // PsiInternalXtend.g:7109:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // PsiInternalXtend.g:7110:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // PsiInternalXtend.g:7110:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // PsiInternalXtend.g:7111:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // PsiInternalXtend.g:7131:6: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // PsiInternalXtend.g:7132:7: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // PsiInternalXtend.g:7132:7: ()
            	    // PsiInternalXtend.g:7133:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getXMemberFeatureCall_XMemberFeatureCallMemberCallTargetAction_1_1_0_0_0ElementType());
            	      								doneComposite();
            	      							
            	    }

            	    }

            	    // PsiInternalXtend.g:7138:7: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt200=3;
            	    switch ( input.LA(1) ) {
            	    case KW_FullStop:
            	        {
            	        alt200=1;
            	        }
            	        break;
            	    case KW_QuestionMarkFullStop:
            	        {
            	        alt200=2;
            	        }
            	        break;
            	    case KW_ColonColon:
            	        {
            	        alt200=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return ;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 200, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt200) {
            	        case 1 :
            	            // PsiInternalXtend.g:7139:8: otherlv_8= '.'
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markLeaf(elementTypeProvider.getXMemberFeatureCall_FullStopKeyword_1_1_0_0_1_0ElementType());
            	              							
            	            }
            	            otherlv_8=(Token)match(input,KW_FullStop,FOLLOW_98); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              								doneLeaf(otherlv_8);
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // PsiInternalXtend.g:7147:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // PsiInternalXtend.g:7147:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            // PsiInternalXtend.g:7148:9: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // PsiInternalXtend.g:7148:9: (lv_nullSafe_9_0= '?.' )
            	            // PsiInternalXtend.g:7149:10: lv_nullSafe_9_0= '?.'
            	            {
            	            if ( state.backtracking==0 ) {

            	              										markLeaf(elementTypeProvider.getXMemberFeatureCall_NullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0ElementType());
            	              									
            	            }
            	            lv_nullSafe_9_0=(Token)match(input,KW_QuestionMarkFullStop,FOLLOW_98); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              										doneLeaf(lv_nullSafe_9_0);
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // PsiInternalXtend.g:7159:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // PsiInternalXtend.g:7159:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            // PsiInternalXtend.g:7160:9: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // PsiInternalXtend.g:7160:9: (lv_explicitStatic_10_0= '::' )
            	            // PsiInternalXtend.g:7161:10: lv_explicitStatic_10_0= '::'
            	            {
            	            if ( state.backtracking==0 ) {

            	              										markLeaf(elementTypeProvider.getXMemberFeatureCall_ExplicitStaticColonColonKeyword_1_1_0_0_1_2_0ElementType());
            	              									
            	            }
            	            lv_explicitStatic_10_0=(Token)match(input,KW_ColonColon,FOLLOW_98); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              										doneLeaf(lv_explicitStatic_10_0);
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // PsiInternalXtend.g:7173:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt202=2;
            	    int LA202_0 = input.LA(1);

            	    if ( (LA202_0==KW_LessThanSign) ) {
            	        alt202=1;
            	    }
            	    switch (alt202) {
            	        case 1 :
            	            // PsiInternalXtend.g:7174:6: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            if ( state.backtracking==0 ) {

            	              						markLeaf(elementTypeProvider.getXMemberFeatureCall_LessThanSignKeyword_1_1_1_0ElementType());
            	              					
            	            }
            	            otherlv_11=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              						doneLeaf(otherlv_11);
            	              					
            	            }
            	            // PsiInternalXtend.g:7181:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // PsiInternalXtend.g:7182:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // PsiInternalXtend.g:7182:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // PsiInternalXtend.g:7183:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markComposite(elementTypeProvider.getXMemberFeatureCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0ElementType());
            	              							
            	            }
            	            pushFollow(FOLLOW_10);
            	            ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              								doneComposite();
            	              							
            	            }

            	            }


            	            }

            	            // PsiInternalXtend.g:7192:6: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop201:
            	            do {
            	                int alt201=2;
            	                int LA201_0 = input.LA(1);

            	                if ( (LA201_0==KW_Comma) ) {
            	                    alt201=1;
            	                }


            	                switch (alt201) {
            	            	case 1 :
            	            	    // PsiInternalXtend.g:7193:7: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      							markLeaf(elementTypeProvider.getXMemberFeatureCall_CommaKeyword_1_1_1_2_0ElementType());
            	            	      						
            	            	    }
            	            	    otherlv_13=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return ;
            	            	    if ( state.backtracking==0 ) {

            	            	      							doneLeaf(otherlv_13);
            	            	      						
            	            	    }
            	            	    // PsiInternalXtend.g:7200:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // PsiInternalXtend.g:7201:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // PsiInternalXtend.g:7201:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // PsiInternalXtend.g:7202:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									markComposite(elementTypeProvider.getXMemberFeatureCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0ElementType());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_10);
            	            	    ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return ;
            	            	    if ( state.backtracking==0 ) {

            	            	      									doneComposite();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop201;
            	                }
            	            } while (true);

            	            if ( state.backtracking==0 ) {

            	              						markLeaf(elementTypeProvider.getXMemberFeatureCall_GreaterThanSignKeyword_1_1_1_3ElementType());
            	              					
            	            }
            	            otherlv_15=(Token)match(input,KW_GreaterThanSign,FOLLOW_98); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              						doneLeaf(otherlv_15);
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // PsiInternalXtend.g:7220:5: ( ( ruleIdOrSuper ) )
            	    // PsiInternalXtend.g:7221:6: ( ruleIdOrSuper )
            	    {
            	    // PsiInternalXtend.g:7221:6: ( ruleIdOrSuper )
            	    // PsiInternalXtend.g:7222:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXMemberFeatureCall_FeatureJvmIdentifiableElementCrossReference_1_1_2_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_99);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }

            	    // PsiInternalXtend.g:7231:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt205=2;
            	    alt205 = dfa205.predict(input);
            	    switch (alt205) {
            	        case 1 :
            	            // PsiInternalXtend.g:7232:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // PsiInternalXtend.g:7232:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // PsiInternalXtend.g:7233:7: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // PsiInternalXtend.g:7237:7: (lv_explicitOperationCall_17_0= '(' )
            	            // PsiInternalXtend.g:7238:8: lv_explicitOperationCall_17_0= '('
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markLeaf(elementTypeProvider.getXMemberFeatureCall_ExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0ElementType());
            	              							
            	            }
            	            lv_explicitOperationCall_17_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_64); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              								doneLeaf(lv_explicitOperationCall_17_0);
            	              							
            	            }

            	            }


            	            }

            	            // PsiInternalXtend.g:7247:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt204=3;
            	            alt204 = dfa204.predict(input);
            	            switch (alt204) {
            	                case 1 :
            	                    // PsiInternalXtend.g:7248:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // PsiInternalXtend.g:7248:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // PsiInternalXtend.g:7249:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // PsiInternalXtend.g:7274:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // PsiInternalXtend.g:7275:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									markComposite(elementTypeProvider.getXMemberFeatureCall_MemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0ElementType());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_65);
            	                    ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return ;
            	                    if ( state.backtracking==0 ) {

            	                      									doneComposite();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // PsiInternalXtend.g:7285:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // PsiInternalXtend.g:7285:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // PsiInternalXtend.g:7286:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // PsiInternalXtend.g:7286:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // PsiInternalXtend.g:7287:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // PsiInternalXtend.g:7287:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // PsiInternalXtend.g:7288:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										markComposite(elementTypeProvider.getXMemberFeatureCall_MemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0ElementType());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_27);
            	                    ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return ;
            	                    if ( state.backtracking==0 ) {

            	                      										doneComposite();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // PsiInternalXtend.g:7297:8: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop203:
            	                    do {
            	                        int alt203=2;
            	                        int LA203_0 = input.LA(1);

            	                        if ( (LA203_0==KW_Comma) ) {
            	                            alt203=1;
            	                        }


            	                        switch (alt203) {
            	                    	case 1 :
            	                    	    // PsiInternalXtend.g:7298:9: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									markLeaf(elementTypeProvider.getXMemberFeatureCall_CommaKeyword_1_1_3_1_1_1_0ElementType());
            	                    	      								
            	                    	    }
            	                    	    otherlv_20=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									doneLeaf(otherlv_20);
            	                    	      								
            	                    	    }
            	                    	    // PsiInternalXtend.g:7305:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // PsiInternalXtend.g:7306:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // PsiInternalXtend.g:7306:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // PsiInternalXtend.g:7307:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											markComposite(elementTypeProvider.getXMemberFeatureCall_MemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0ElementType());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_27);
            	                    	    ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return ;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											doneComposite();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop203;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            if ( state.backtracking==0 ) {

            	              						markLeaf(elementTypeProvider.getXMemberFeatureCall_RightParenthesisKeyword_1_1_3_2ElementType());
            	              					
            	            }
            	            otherlv_22=(Token)match(input,KW_RightParenthesis,FOLLOW_100); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              						doneLeaf(otherlv_22);
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // PsiInternalXtend.g:7327:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt206=2;
            	    alt206 = dfa206.predict(input);
            	    switch (alt206) {
            	        case 1 :
            	            // PsiInternalXtend.g:7328:6: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // PsiInternalXtend.g:7334:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // PsiInternalXtend.g:7335:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							markComposite(elementTypeProvider.getXMemberFeatureCall_MemberCallArgumentsXClosureParserRuleCall_1_1_4_0ElementType());
            	              						
            	            }
            	            pushFollow(FOLLOW_96);
            	            ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              							doneComposite();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop207;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // PsiInternalXtend.g:7350:1: entryRuleXPrimaryExpression : ruleXPrimaryExpression EOF ;
    public final void entryRuleXPrimaryExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7350:28: ( ruleXPrimaryExpression EOF )
            // PsiInternalXtend.g:7351:2: ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXPrimaryExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // PsiInternalXtend.g:7356:1: ruleXPrimaryExpression : ( ruleXConstructorCall | ruleXBlockExpression | ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=> ruleXSynchronizedExpression ) | ruleXFeatureCall | ruleXLiteral | ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ruleXForLoopExpression ) | ruleXBasicForLoopExpression | ruleXWhileExpression | ruleXDoWhileExpression | ruleXThrowExpression | ruleXReturnExpression | ruleXTryCatchFinallyExpression | ruleXParenthesizedExpression ) ;
    public final void ruleXPrimaryExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7356:23: ( ( ruleXConstructorCall | ruleXBlockExpression | ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=> ruleXSynchronizedExpression ) | ruleXFeatureCall | ruleXLiteral | ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ruleXForLoopExpression ) | ruleXBasicForLoopExpression | ruleXWhileExpression | ruleXDoWhileExpression | ruleXThrowExpression | ruleXReturnExpression | ruleXTryCatchFinallyExpression | ruleXParenthesizedExpression ) )
            // PsiInternalXtend.g:7357:2: ( ruleXConstructorCall | ruleXBlockExpression | ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=> ruleXSynchronizedExpression ) | ruleXFeatureCall | ruleXLiteral | ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ruleXForLoopExpression ) | ruleXBasicForLoopExpression | ruleXWhileExpression | ruleXDoWhileExpression | ruleXThrowExpression | ruleXReturnExpression | ruleXTryCatchFinallyExpression | ruleXParenthesizedExpression )
            {
            // PsiInternalXtend.g:7357:2: ( ruleXConstructorCall | ruleXBlockExpression | ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=> ruleXSynchronizedExpression ) | ruleXFeatureCall | ruleXLiteral | ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ruleXForLoopExpression ) | ruleXBasicForLoopExpression | ruleXWhileExpression | ruleXDoWhileExpression | ruleXThrowExpression | ruleXReturnExpression | ruleXTryCatchFinallyExpression | ruleXParenthesizedExpression )
            int alt208=15;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    // PsiInternalXtend.g:7358:3: ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XConstructorCallParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:7366:3: ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XBlockExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:7374:3: ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XSwitchExpressionParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:7382:3: ( ( ( () 'synchronized' '(' ) )=> ruleXSynchronizedExpression )
                    {
                    // PsiInternalXtend.g:7382:3: ( ( ( () 'synchronized' '(' ) )=> ruleXSynchronizedExpression )
                    // PsiInternalXtend.g:7383:4: ( ( () 'synchronized' '(' ) )=> ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXPrimaryExpression_XSynchronizedExpressionParserRuleCall_3ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:7399:3: ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XFeatureCallParserRuleCall_4ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:7407:3: ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XLiteralParserRuleCall_5ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 7 :
                    // PsiInternalXtend.g:7415:3: ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XIfExpressionParserRuleCall_6ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 8 :
                    // PsiInternalXtend.g:7423:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ruleXForLoopExpression )
                    {
                    // PsiInternalXtend.g:7423:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ruleXForLoopExpression )
                    // PsiInternalXtend.g:7424:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXPrimaryExpression_XForLoopExpressionParserRuleCall_7ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // PsiInternalXtend.g:7446:3: ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XBasicForLoopExpressionParserRuleCall_8ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 10 :
                    // PsiInternalXtend.g:7454:3: ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XWhileExpressionParserRuleCall_9ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 11 :
                    // PsiInternalXtend.g:7462:3: ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XDoWhileExpressionParserRuleCall_10ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 12 :
                    // PsiInternalXtend.g:7470:3: ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XThrowExpressionParserRuleCall_11ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 13 :
                    // PsiInternalXtend.g:7478:3: ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XReturnExpressionParserRuleCall_12ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 14 :
                    // PsiInternalXtend.g:7486:3: ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XTryCatchFinallyExpressionParserRuleCall_13ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 15 :
                    // PsiInternalXtend.g:7494:3: ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XParenthesizedExpressionParserRuleCall_14ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // PsiInternalXtend.g:7505:1: entryRuleXLiteral : ruleXLiteral EOF ;
    public final void entryRuleXLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7505:18: ( ruleXLiteral EOF )
            // PsiInternalXtend.g:7506:2: ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // PsiInternalXtend.g:7511:1: ruleXLiteral : ( ruleXCollectionLiteral | ( ( ( () '[' ) )=> ruleXClosure ) | ruleXBooleanLiteral | ruleXNumberLiteral | ruleXNullLiteral | ruleXStringLiteral | ruleXTypeLiteral ) ;
    public final void ruleXLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7511:13: ( ( ruleXCollectionLiteral | ( ( ( () '[' ) )=> ruleXClosure ) | ruleXBooleanLiteral | ruleXNumberLiteral | ruleXNullLiteral | ruleXStringLiteral | ruleXTypeLiteral ) )
            // PsiInternalXtend.g:7512:2: ( ruleXCollectionLiteral | ( ( ( () '[' ) )=> ruleXClosure ) | ruleXBooleanLiteral | ruleXNumberLiteral | ruleXNullLiteral | ruleXStringLiteral | ruleXTypeLiteral )
            {
            // PsiInternalXtend.g:7512:2: ( ruleXCollectionLiteral | ( ( ( () '[' ) )=> ruleXClosure ) | ruleXBooleanLiteral | ruleXNumberLiteral | ruleXNullLiteral | ruleXStringLiteral | ruleXTypeLiteral )
            int alt209=7;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==KW_NumberSign) ) {
                alt209=1;
            }
            else if ( (LA209_0==KW_LeftSquareBracket) && (synpred45_PsiInternalXtend())) {
                alt209=2;
            }
            else if ( ((LA209_0>=KW_False && LA209_0<=KW_True)) ) {
                alt209=3;
            }
            else if ( ((LA209_0>=RULE_HEX && LA209_0<=RULE_DECIMAL)) ) {
                alt209=4;
            }
            else if ( (LA209_0==KW_Null) ) {
                alt209=5;
            }
            else if ( ((LA209_0>=RULE_STRING && LA209_0<=RULE_RICH_TEXT_START)) ) {
                alt209=6;
            }
            else if ( (LA209_0==KW_Typeof) ) {
                alt209=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }
            switch (alt209) {
                case 1 :
                    // PsiInternalXtend.g:7513:3: ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XCollectionLiteralParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:7521:3: ( ( ( () '[' ) )=> ruleXClosure )
                    {
                    // PsiInternalXtend.g:7521:3: ( ( ( () '[' ) )=> ruleXClosure )
                    // PsiInternalXtend.g:7522:4: ( ( () '[' ) )=> ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXLiteral_XClosureParserRuleCall_1ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleXClosure();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:7537:3: ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XBooleanLiteralParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 4 :
                    // PsiInternalXtend.g:7545:3: ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XNumberLiteralParserRuleCall_3ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 5 :
                    // PsiInternalXtend.g:7553:3: ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XNullLiteralParserRuleCall_4ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 6 :
                    // PsiInternalXtend.g:7561:3: ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XStringLiteralParserRuleCall_5ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 7 :
                    // PsiInternalXtend.g:7569:3: ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XTypeLiteralParserRuleCall_6ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // PsiInternalXtend.g:7580:1: entryRuleXCollectionLiteral : ruleXCollectionLiteral EOF ;
    public final void entryRuleXCollectionLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7580:28: ( ruleXCollectionLiteral EOF )
            // PsiInternalXtend.g:7581:2: ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXCollectionLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // PsiInternalXtend.g:7586:1: ruleXCollectionLiteral : ( ruleXSetLiteral | ruleXListLiteral ) ;
    public final void ruleXCollectionLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7586:23: ( ( ruleXSetLiteral | ruleXListLiteral ) )
            // PsiInternalXtend.g:7587:2: ( ruleXSetLiteral | ruleXListLiteral )
            {
            // PsiInternalXtend.g:7587:2: ( ruleXSetLiteral | ruleXListLiteral )
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==KW_NumberSign) ) {
                int LA210_1 = input.LA(2);

                if ( (LA210_1==KW_LeftCurlyBracket) ) {
                    alt210=1;
                }
                else if ( (LA210_1==KW_LeftSquareBracket) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;
            }
            switch (alt210) {
                case 1 :
                    // PsiInternalXtend.g:7588:3: ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXCollectionLiteral_XSetLiteralParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:7596:3: ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXCollectionLiteral_XListLiteralParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // PsiInternalXtend.g:7607:1: entryRuleXSetLiteral : ruleXSetLiteral EOF ;
    public final void entryRuleXSetLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7607:21: ( ruleXSetLiteral EOF )
            // PsiInternalXtend.g:7608:2: ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXSetLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // PsiInternalXtend.g:7613:1: ruleXSetLiteral : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final void ruleXSetLiteral() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;

        try {
            // PsiInternalXtend.g:7613:16: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // PsiInternalXtend.g:7614:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // PsiInternalXtend.g:7614:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // PsiInternalXtend.g:7615:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // PsiInternalXtend.g:7615:3: ()
            // PsiInternalXtend.g:7616:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXSetLiteral_XSetLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSetLiteral_NumberSignKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_20); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSetLiteral_LeftCurlyBracketKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_101); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            // PsiInternalXtend.g:7635:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==KW_Package||(LA212_0>=KW_Class && LA212_0<=KW_LessThanSign)||(LA212_0>=KW_Extends && LA212_0<=KW_LeftCurlyBracket)||(LA212_0>=KW_Interface && LA212_0<=KW_LeftParenthesis)||(LA212_0>=KW_Extension && LA212_0<=KW_New)||(LA212_0>=KW_Public && LA212_0<=KW_Transient)||(LA212_0>=KW_Def && LA212_0<=KW_Create)||(LA212_0>=KW_AFTER && LA212_0<=KW_Import)||LA212_0==KW_Switch||(LA212_0>=KW_NumberSign && LA212_0<=KW_LeftSquareBracket)||(LA212_0>=KW_PlusSign && LA212_0<=KW_HyphenMinus)||LA212_0==KW_ExclamationMark||LA212_0==KW_If||(LA212_0>=KW_For && LA212_0<=KW_Try)||(LA212_0>=RULE_ID && LA212_0<=RULE_RICH_TEXT_START)||(LA212_0>=RULE_HEX && LA212_0<=RULE_DECIMAL)) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // PsiInternalXtend.g:7636:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // PsiInternalXtend.g:7636:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // PsiInternalXtend.g:7637:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:7637:5: (lv_elements_3_0= ruleXExpression )
                    // PsiInternalXtend.g:7638:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXSetLiteral_ElementsXExpressionParserRuleCall_3_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_102);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:7647:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop211:
                    do {
                        int alt211=2;
                        int LA211_0 = input.LA(1);

                        if ( (LA211_0==KW_Comma) ) {
                            alt211=1;
                        }


                        switch (alt211) {
                    	case 1 :
                    	    // PsiInternalXtend.g:7648:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXSetLiteral_CommaKeyword_3_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_4);
                    	      				
                    	    }
                    	    // PsiInternalXtend.g:7655:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // PsiInternalXtend.g:7656:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // PsiInternalXtend.g:7656:6: (lv_elements_5_0= ruleXExpression )
                    	    // PsiInternalXtend.g:7657:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXSetLiteral_ElementsXExpressionParserRuleCall_3_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop211;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSetLiteral_RightCurlyBracketKeyword_4ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // PsiInternalXtend.g:7679:1: entryRuleXListLiteral : ruleXListLiteral EOF ;
    public final void entryRuleXListLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7679:22: ( ruleXListLiteral EOF )
            // PsiInternalXtend.g:7680:2: ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXListLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXListLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // PsiInternalXtend.g:7685:1: ruleXListLiteral : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final void ruleXListLiteral() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;

        try {
            // PsiInternalXtend.g:7685:17: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // PsiInternalXtend.g:7686:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // PsiInternalXtend.g:7686:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // PsiInternalXtend.g:7687:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // PsiInternalXtend.g:7687:3: ()
            // PsiInternalXtend.g:7688:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXListLiteral_XListLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXListLiteral_NumberSignKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXListLiteral_LeftSquareBracketKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_78); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            // PsiInternalXtend.g:7707:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==KW_Package||(LA214_0>=KW_Class && LA214_0<=KW_LessThanSign)||(LA214_0>=KW_Extends && LA214_0<=KW_LeftCurlyBracket)||(LA214_0>=KW_Interface && LA214_0<=KW_LeftParenthesis)||(LA214_0>=KW_Extension && LA214_0<=KW_New)||(LA214_0>=KW_Public && LA214_0<=KW_Transient)||(LA214_0>=KW_Def && LA214_0<=KW_Create)||(LA214_0>=KW_AFTER && LA214_0<=KW_Import)||LA214_0==KW_Switch||(LA214_0>=KW_NumberSign && LA214_0<=KW_LeftSquareBracket)||(LA214_0>=KW_PlusSign && LA214_0<=KW_HyphenMinus)||LA214_0==KW_ExclamationMark||LA214_0==KW_If||(LA214_0>=KW_For && LA214_0<=KW_Try)||(LA214_0>=RULE_ID && LA214_0<=RULE_RICH_TEXT_START)||(LA214_0>=RULE_HEX && LA214_0<=RULE_DECIMAL)) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // PsiInternalXtend.g:7708:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // PsiInternalXtend.g:7708:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // PsiInternalXtend.g:7709:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:7709:5: (lv_elements_3_0= ruleXExpression )
                    // PsiInternalXtend.g:7710:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXListLiteral_ElementsXExpressionParserRuleCall_3_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_79);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:7719:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop213:
                    do {
                        int alt213=2;
                        int LA213_0 = input.LA(1);

                        if ( (LA213_0==KW_Comma) ) {
                            alt213=1;
                        }


                        switch (alt213) {
                    	case 1 :
                    	    // PsiInternalXtend.g:7720:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXListLiteral_CommaKeyword_3_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_4);
                    	      				
                    	    }
                    	    // PsiInternalXtend.g:7727:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // PsiInternalXtend.g:7728:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // PsiInternalXtend.g:7728:6: (lv_elements_5_0= ruleXExpression )
                    	    // PsiInternalXtend.g:7729:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXListLiteral_ElementsXExpressionParserRuleCall_3_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_79);
                    	    ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop213;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXListLiteral_RightSquareBracketKeyword_4ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // PsiInternalXtend.g:7751:1: entryRuleXClosure : ruleXClosure EOF ;
    public final void entryRuleXClosure() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7751:18: ( ruleXClosure EOF )
            // PsiInternalXtend.g:7752:2: ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXClosureElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXClosure();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // PsiInternalXtend.g:7757:1: ruleXClosure : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final void ruleXClosure() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;

        try {
            // PsiInternalXtend.g:7757:13: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // PsiInternalXtend.g:7758:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // PsiInternalXtend.g:7758:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // PsiInternalXtend.g:7759:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // PsiInternalXtend.g:7759:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // PsiInternalXtend.g:7760:4: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // PsiInternalXtend.g:7766:4: ( () otherlv_1= '[' )
            // PsiInternalXtend.g:7767:5: () otherlv_1= '['
            {
            // PsiInternalXtend.g:7767:5: ()
            // PsiInternalXtend.g:7768:6: 
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXClosure_XClosureAction_0_0_0ElementType());
              						doneComposite();
              					
            }

            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXClosure_LeftSquareBracketKeyword_0_0_1ElementType());
              				
            }
            otherlv_1=(Token)match(input,KW_LeftSquareBracket,FOLLOW_103); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_1);
              				
            }

            }


            }

            // PsiInternalXtend.g:7782:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt217=2;
            alt217 = dfa217.predict(input);
            switch (alt217) {
                case 1 :
                    // PsiInternalXtend.g:7783:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // PsiInternalXtend.g:7806:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // PsiInternalXtend.g:7807:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // PsiInternalXtend.g:7807:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt216=2;
                    int LA216_0 = input.LA(1);

                    if ( (LA216_0==KW_Package||LA216_0==KW_Class||(LA216_0>=KW_Extends && LA216_0<=KW_Implements)||(LA216_0>=KW_Interface && LA216_0<=KW_LeftParenthesis)||LA216_0==KW_EqualsSignGreaterThanSign||(LA216_0>=KW_Extension && LA216_0<=KW_Throws)||(LA216_0>=KW_Public && LA216_0<=KW_Transient)||(LA216_0>=KW_Def && LA216_0<=KW_Create)||(LA216_0>=KW_AFTER && LA216_0<=KW_Import)||LA216_0==RULE_ID) ) {
                        alt216=1;
                    }
                    switch (alt216) {
                        case 1 :
                            // PsiInternalXtend.g:7808:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // PsiInternalXtend.g:7808:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // PsiInternalXtend.g:7809:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // PsiInternalXtend.g:7809:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // PsiInternalXtend.g:7810:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXClosure_DeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_104);
                            ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:7819:6: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop215:
                            do {
                                int alt215=2;
                                int LA215_0 = input.LA(1);

                                if ( (LA215_0==KW_Comma) ) {
                                    alt215=1;
                                }


                                switch (alt215) {
                            	case 1 :
                            	    // PsiInternalXtend.g:7820:7: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getXClosure_CommaKeyword_1_0_0_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_3);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:7827:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // PsiInternalXtend.g:7828:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // PsiInternalXtend.g:7828:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // PsiInternalXtend.g:7829:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXClosure_DeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_104);
                            	    ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop215;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // PsiInternalXtend.g:7840:5: ( (lv_explicitSyntax_5_0= '|' ) )
                    // PsiInternalXtend.g:7841:6: (lv_explicitSyntax_5_0= '|' )
                    {
                    // PsiInternalXtend.g:7841:6: (lv_explicitSyntax_5_0= '|' )
                    // PsiInternalXtend.g:7842:7: lv_explicitSyntax_5_0= '|'
                    {
                    if ( state.backtracking==0 ) {

                      							markLeaf(elementTypeProvider.getXClosure_ExplicitSyntaxVerticalLineKeyword_1_0_1_0ElementType());
                      						
                    }
                    lv_explicitSyntax_5_0=(Token)match(input,KW_VerticalLine,FOLLOW_105); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneLeaf(lv_explicitSyntax_5_0);
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:7853:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // PsiInternalXtend.g:7854:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // PsiInternalXtend.g:7854:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // PsiInternalXtend.g:7855:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXClosure_ExpressionXExpressionInClosureParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_106);
            ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXClosure_RightSquareBracketKeyword_3ElementType());
              		
            }
            otherlv_7=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_7);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // PsiInternalXtend.g:7875:1: entryRuleXExpressionInClosure : ruleXExpressionInClosure EOF ;
    public final void entryRuleXExpressionInClosure() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7875:30: ( ruleXExpressionInClosure EOF )
            // PsiInternalXtend.g:7876:2: ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXExpressionInClosureElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // PsiInternalXtend.g:7881:1: ruleXExpressionInClosure : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final void ruleXExpressionInClosure() throws RecognitionException {
        Token otherlv_2=null;

        try {
            // PsiInternalXtend.g:7881:25: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // PsiInternalXtend.g:7882:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // PsiInternalXtend.g:7882:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // PsiInternalXtend.g:7883:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // PsiInternalXtend.g:7883:3: ()
            // PsiInternalXtend.g:7884:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXExpressionInClosure_XBlockExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:7889:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==KW_Package||(LA219_0>=KW_Class && LA219_0<=KW_LessThanSign)||(LA219_0>=KW_Extends && LA219_0<=KW_LeftCurlyBracket)||(LA219_0>=KW_Interface && LA219_0<=KW_LeftParenthesis)||(LA219_0>=KW_Extension && LA219_0<=KW_New)||(LA219_0>=KW_Public && LA219_0<=KW_Create)||(LA219_0>=KW_AFTER && LA219_0<=KW_Import)||LA219_0==KW_Switch||(LA219_0>=KW_NumberSign && LA219_0<=KW_LeftSquareBracket)||(LA219_0>=KW_PlusSign && LA219_0<=KW_HyphenMinus)||LA219_0==KW_ExclamationMark||LA219_0==KW_If||(LA219_0>=KW_For && LA219_0<=KW_Try)||(LA219_0>=RULE_ID && LA219_0<=RULE_RICH_TEXT_START)||(LA219_0>=RULE_HEX && LA219_0<=RULE_DECIMAL)) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // PsiInternalXtend.g:7890:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // PsiInternalXtend.g:7890:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // PsiInternalXtend.g:7891:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // PsiInternalXtend.g:7891:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // PsiInternalXtend.g:7892:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXExpressionInClosure_ExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_107);
            	    ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }

            	    // PsiInternalXtend.g:7901:4: (otherlv_2= ';' )?
            	    int alt218=2;
            	    int LA218_0 = input.LA(1);

            	    if ( (LA218_0==KW_Semicolon) ) {
            	        alt218=1;
            	    }
            	    switch (alt218) {
            	        case 1 :
            	            // PsiInternalXtend.g:7902:5: otherlv_2= ';'
            	            {
            	            if ( state.backtracking==0 ) {

            	              					markLeaf(elementTypeProvider.getXExpressionInClosure_SemicolonKeyword_1_1ElementType());
            	              				
            	            }
            	            otherlv_2=(Token)match(input,KW_Semicolon,FOLLOW_108); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              					doneLeaf(otherlv_2);
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // PsiInternalXtend.g:7915:1: entryRuleXShortClosure : ruleXShortClosure EOF ;
    public final void entryRuleXShortClosure() throws RecognitionException {
        try {
            // PsiInternalXtend.g:7915:23: ( ruleXShortClosure EOF )
            // PsiInternalXtend.g:7916:2: ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXShortClosureElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXShortClosure();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // PsiInternalXtend.g:7921:1: ruleXShortClosure : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final void ruleXShortClosure() throws RecognitionException {
        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;

        try {
            // PsiInternalXtend.g:7921:18: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // PsiInternalXtend.g:7922:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // PsiInternalXtend.g:7922:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // PsiInternalXtend.g:7923:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // PsiInternalXtend.g:7923:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // PsiInternalXtend.g:7924:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // PsiInternalXtend.g:7949:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // PsiInternalXtend.g:7950:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // PsiInternalXtend.g:7950:5: ()
            // PsiInternalXtend.g:7951:6: 
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXShortClosure_XClosureAction_0_0_0ElementType());
              						doneComposite();
              					
            }

            }

            // PsiInternalXtend.g:7956:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==KW_Package||LA221_0==KW_Class||(LA221_0>=KW_Extends && LA221_0<=KW_Implements)||(LA221_0>=KW_Interface && LA221_0<=KW_LeftParenthesis)||LA221_0==KW_EqualsSignGreaterThanSign||(LA221_0>=KW_Extension && LA221_0<=KW_Throws)||(LA221_0>=KW_Public && LA221_0<=KW_Transient)||(LA221_0>=KW_Def && LA221_0<=KW_Create)||(LA221_0>=KW_AFTER && LA221_0<=KW_Import)||LA221_0==RULE_ID) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // PsiInternalXtend.g:7957:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // PsiInternalXtend.g:7957:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // PsiInternalXtend.g:7958:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // PsiInternalXtend.g:7958:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // PsiInternalXtend.g:7959:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								markComposite(elementTypeProvider.getXShortClosure_DeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0ElementType());
                      							
                    }
                    pushFollow(FOLLOW_104);
                    ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      								doneComposite();
                      							
                    }

                    }


                    }

                    // PsiInternalXtend.g:7968:6: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==KW_Comma) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // PsiInternalXtend.g:7969:7: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markLeaf(elementTypeProvider.getXShortClosure_CommaKeyword_0_0_1_1_0ElementType());
                    	      						
                    	    }
                    	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneLeaf(otherlv_2);
                    	      						
                    	    }
                    	    // PsiInternalXtend.g:7976:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // PsiInternalXtend.g:7977:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // PsiInternalXtend.g:7977:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // PsiInternalXtend.g:7978:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									markComposite(elementTypeProvider.getXShortClosure_DeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0ElementType());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_104);
                    	    ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      									doneComposite();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop220;
                        }
                    } while (true);


                    }
                    break;

            }

            // PsiInternalXtend.g:7989:5: ( (lv_explicitSyntax_4_0= '|' ) )
            // PsiInternalXtend.g:7990:6: (lv_explicitSyntax_4_0= '|' )
            {
            // PsiInternalXtend.g:7990:6: (lv_explicitSyntax_4_0= '|' )
            // PsiInternalXtend.g:7991:7: lv_explicitSyntax_4_0= '|'
            {
            if ( state.backtracking==0 ) {

              							markLeaf(elementTypeProvider.getXShortClosure_ExplicitSyntaxVerticalLineKeyword_0_0_2_0ElementType());
              						
            }
            lv_explicitSyntax_4_0=(Token)match(input,KW_VerticalLine,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              							doneLeaf(lv_explicitSyntax_4_0);
              						
            }

            }


            }


            }


            }

            // PsiInternalXtend.g:8002:3: ( (lv_expression_5_0= ruleXExpression ) )
            // PsiInternalXtend.g:8003:4: (lv_expression_5_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8003:4: (lv_expression_5_0= ruleXExpression )
            // PsiInternalXtend.g:8004:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXShortClosure_ExpressionXExpressionParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // PsiInternalXtend.g:8017:1: entryRuleXParenthesizedExpression : ruleXParenthesizedExpression EOF ;
    public final void entryRuleXParenthesizedExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8017:34: ( ruleXParenthesizedExpression EOF )
            // PsiInternalXtend.g:8018:2: ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXParenthesizedExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // PsiInternalXtend.g:8023:1: ruleXParenthesizedExpression : (otherlv_0= '(' ruleXExpression otherlv_2= ')' ) ;
    public final void ruleXParenthesizedExpression() throws RecognitionException {
        Token otherlv_0=null;
        Token otherlv_2=null;

        try {
            // PsiInternalXtend.g:8023:29: ( (otherlv_0= '(' ruleXExpression otherlv_2= ')' ) )
            // PsiInternalXtend.g:8024:2: (otherlv_0= '(' ruleXExpression otherlv_2= ')' )
            {
            // PsiInternalXtend.g:8024:2: (otherlv_0= '(' ruleXExpression otherlv_2= ')' )
            // PsiInternalXtend.g:8025:3: otherlv_0= '(' ruleXExpression otherlv_2= ')'
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXParenthesizedExpression_LeftParenthesisKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXParenthesizedExpression_XExpressionParserRuleCall_1ElementType());
              		
            }
            pushFollow(FOLLOW_65);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXParenthesizedExpression_RightParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // PsiInternalXtend.g:8050:1: entryRuleXIfExpression : ruleXIfExpression EOF ;
    public final void entryRuleXIfExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8050:23: ( ruleXIfExpression EOF )
            // PsiInternalXtend.g:8051:2: ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXIfExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXIfExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // PsiInternalXtend.g:8056:1: ruleXIfExpression : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final void ruleXIfExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;

        try {
            // PsiInternalXtend.g:8056:18: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // PsiInternalXtend.g:8057:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // PsiInternalXtend.g:8057:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // PsiInternalXtend.g:8058:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // PsiInternalXtend.g:8058:3: ()
            // PsiInternalXtend.g:8059:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXIfExpression_XIfExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXIfExpression_IfKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_If,FOLLOW_41); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXIfExpression_LeftParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            // PsiInternalXtend.g:8078:3: ( (lv_if_3_0= ruleXExpression ) )
            // PsiInternalXtend.g:8079:4: (lv_if_3_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8079:4: (lv_if_3_0= ruleXExpression )
            // PsiInternalXtend.g:8080:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXIfExpression_IfXExpressionParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_65);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXIfExpression_RightParenthesisKeyword_4ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }
            // PsiInternalXtend.g:8096:3: ( (lv_then_5_0= ruleXExpression ) )
            // PsiInternalXtend.g:8097:4: (lv_then_5_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8097:4: (lv_then_5_0= ruleXExpression )
            // PsiInternalXtend.g:8098:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXIfExpression_ThenXExpressionParserRuleCall_5_0ElementType());
              				
            }
            pushFollow(FOLLOW_109);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:8107:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==KW_Else) ) {
                int LA222_1 = input.LA(2);

                if ( (synpred49_PsiInternalXtend()) ) {
                    alt222=1;
                }
            }
            switch (alt222) {
                case 1 :
                    // PsiInternalXtend.g:8108:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // PsiInternalXtend.g:8108:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // PsiInternalXtend.g:8109:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXIfExpression_ElseKeyword_6_0ElementType());
                      				
                    }
                    otherlv_6=(Token)match(input,KW_Else,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_6);
                      				
                    }

                    }

                    // PsiInternalXtend.g:8118:4: ( (lv_else_7_0= ruleXExpression ) )
                    // PsiInternalXtend.g:8119:5: (lv_else_7_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:8119:5: (lv_else_7_0= ruleXExpression )
                    // PsiInternalXtend.g:8120:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXIfExpression_ElseXExpressionParserRuleCall_6_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXCasePart"
    // PsiInternalXtend.g:8134:1: entryRuleXCasePart : ruleXCasePart EOF ;
    public final void entryRuleXCasePart() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8134:19: ( ruleXCasePart EOF )
            // PsiInternalXtend.g:8135:2: ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXCasePartElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXCasePart();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // PsiInternalXtend.g:8140:1: ruleXCasePart : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final void ruleXCasePart() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;

        try {
            // PsiInternalXtend.g:8140:14: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // PsiInternalXtend.g:8141:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // PsiInternalXtend.g:8141:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // PsiInternalXtend.g:8142:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // PsiInternalXtend.g:8142:3: ()
            // PsiInternalXtend.g:8143:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXCasePart_XCasePartAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:8148:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( ((LA223_0>=KW_Annotation && LA223_0<=KW_LeftParenthesis)||LA223_0==KW_EqualsSignGreaterThanSign||LA223_0==KW_Create||(LA223_0>=KW_AFTER && LA223_0<=KW_SEPARATOR)||LA223_0==RULE_ID) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // PsiInternalXtend.g:8149:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // PsiInternalXtend.g:8149:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // PsiInternalXtend.g:8150:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXCasePart_TypeGuardJvmTypeReferenceParserRuleCall_1_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_110);
                    ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      				
                    }

                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:8159:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==KW_Case) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // PsiInternalXtend.g:8160:4: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXCasePart_CaseKeyword_2_0ElementType());
                      			
                    }
                    otherlv_2=(Token)match(input,KW_Case,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_2);
                      			
                    }
                    // PsiInternalXtend.g:8167:4: ( (lv_case_3_0= ruleXExpression ) )
                    // PsiInternalXtend.g:8168:5: (lv_case_3_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:8168:5: (lv_case_3_0= ruleXExpression )
                    // PsiInternalXtend.g:8169:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXCasePart_CaseXExpressionParserRuleCall_2_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_111);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:8179:3: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==KW_Colon) ) {
                alt225=1;
            }
            else if ( (LA225_0==KW_Comma) ) {
                alt225=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }
            switch (alt225) {
                case 1 :
                    // PsiInternalXtend.g:8180:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // PsiInternalXtend.g:8180:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // PsiInternalXtend.g:8181:5: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXCasePart_ColonKeyword_3_0_0ElementType());
                      				
                    }
                    otherlv_4=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_4);
                      				
                    }
                    // PsiInternalXtend.g:8188:5: ( (lv_then_5_0= ruleXExpression ) )
                    // PsiInternalXtend.g:8189:6: (lv_then_5_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:8189:6: (lv_then_5_0= ruleXExpression )
                    // PsiInternalXtend.g:8190:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXCasePart_ThenXExpressionParserRuleCall_3_0_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:8201:4: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // PsiInternalXtend.g:8201:4: ( (lv_fallThrough_6_0= ',' ) )
                    // PsiInternalXtend.g:8202:5: (lv_fallThrough_6_0= ',' )
                    {
                    // PsiInternalXtend.g:8202:5: (lv_fallThrough_6_0= ',' )
                    // PsiInternalXtend.g:8203:6: lv_fallThrough_6_0= ','
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXCasePart_FallThroughCommaKeyword_3_1_0ElementType());
                      					
                    }
                    lv_fallThrough_6_0=(Token)match(input,KW_Comma,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_fallThrough_6_0);
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // PsiInternalXtend.g:8217:1: entryRuleXForLoopExpression : ruleXForLoopExpression EOF ;
    public final void entryRuleXForLoopExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8217:28: ( ruleXForLoopExpression EOF )
            // PsiInternalXtend.g:8218:2: ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXForLoopExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // PsiInternalXtend.g:8223:1: ruleXForLoopExpression : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final void ruleXForLoopExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;

        try {
            // PsiInternalXtend.g:8223:23: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // PsiInternalXtend.g:8224:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // PsiInternalXtend.g:8224:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // PsiInternalXtend.g:8225:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // PsiInternalXtend.g:8225:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // PsiInternalXtend.g:8226:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // PsiInternalXtend.g:8239:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // PsiInternalXtend.g:8240:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // PsiInternalXtend.g:8240:5: ()
            // PsiInternalXtend.g:8241:6: 
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXForLoopExpression_XForLoopExpressionAction_0_0_0ElementType());
              						doneComposite();
              					
            }

            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXForLoopExpression_ForKeyword_0_0_1ElementType());
              				
            }
            otherlv_1=(Token)match(input,KW_For,FOLLOW_41); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_1);
              				
            }
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXForLoopExpression_LeftParenthesisKeyword_0_0_2ElementType());
              				
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_57); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_2);
              				
            }
            // PsiInternalXtend.g:8260:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // PsiInternalXtend.g:8261:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // PsiInternalXtend.g:8261:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // PsiInternalXtend.g:8262:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							markComposite(elementTypeProvider.getXForLoopExpression_DeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0ElementType());
              						
            }
            pushFollow(FOLLOW_55);
            ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              							doneComposite();
              						
            }

            }


            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXForLoopExpression_ColonKeyword_0_0_4ElementType());
              				
            }
            otherlv_4=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_4);
              				
            }

            }


            }

            // PsiInternalXtend.g:8280:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // PsiInternalXtend.g:8281:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8281:4: (lv_forExpression_5_0= ruleXExpression )
            // PsiInternalXtend.g:8282:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXForLoopExpression_ForExpressionXExpressionParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_65);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXForLoopExpression_RightParenthesisKeyword_2ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }
            // PsiInternalXtend.g:8298:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // PsiInternalXtend.g:8299:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8299:4: (lv_eachExpression_7_0= ruleXExpression )
            // PsiInternalXtend.g:8300:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXForLoopExpression_EachExpressionXExpressionParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // PsiInternalXtend.g:8313:1: entryRuleXBasicForLoopExpression : ruleXBasicForLoopExpression EOF ;
    public final void entryRuleXBasicForLoopExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8313:33: ( ruleXBasicForLoopExpression EOF )
            // PsiInternalXtend.g:8314:2: ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXBasicForLoopExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // PsiInternalXtend.g:8319:1: ruleXBasicForLoopExpression : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final void ruleXBasicForLoopExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;

        try {
            // PsiInternalXtend.g:8319:28: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // PsiInternalXtend.g:8320:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // PsiInternalXtend.g:8320:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // PsiInternalXtend.g:8321:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // PsiInternalXtend.g:8321:3: ()
            // PsiInternalXtend.g:8322:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXBasicForLoopExpression_XBasicForLoopExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_ForKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_For,FOLLOW_41); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_LeftParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_112); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            // PsiInternalXtend.g:8341:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==KW_Package||(LA227_0>=KW_Class && LA227_0<=KW_LessThanSign)||(LA227_0>=KW_Extends && LA227_0<=KW_LeftCurlyBracket)||(LA227_0>=KW_Interface && LA227_0<=KW_LeftParenthesis)||(LA227_0>=KW_Extension && LA227_0<=KW_New)||(LA227_0>=KW_Public && LA227_0<=KW_Create)||(LA227_0>=KW_AFTER && LA227_0<=KW_Import)||LA227_0==KW_Switch||(LA227_0>=KW_NumberSign && LA227_0<=KW_LeftSquareBracket)||(LA227_0>=KW_PlusSign && LA227_0<=KW_HyphenMinus)||LA227_0==KW_ExclamationMark||LA227_0==KW_If||(LA227_0>=KW_For && LA227_0<=KW_Try)||(LA227_0>=RULE_ID && LA227_0<=RULE_RICH_TEXT_START)||(LA227_0>=RULE_HEX && LA227_0<=RULE_DECIMAL)) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // PsiInternalXtend.g:8342:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // PsiInternalXtend.g:8342:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // PsiInternalXtend.g:8343:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // PsiInternalXtend.g:8343:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // PsiInternalXtend.g:8344:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXBasicForLoopExpression_InitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_113);
                    ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:8353:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop226:
                    do {
                        int alt226=2;
                        int LA226_0 = input.LA(1);

                        if ( (LA226_0==KW_Comma) ) {
                            alt226=1;
                        }


                        switch (alt226) {
                    	case 1 :
                    	    // PsiInternalXtend.g:8354:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXBasicForLoopExpression_CommaKeyword_3_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_114); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_4);
                    	      				
                    	    }
                    	    // PsiInternalXtend.g:8361:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // PsiInternalXtend.g:8362:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // PsiInternalXtend.g:8362:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // PsiInternalXtend.g:8363:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXBasicForLoopExpression_InitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_113);
                    	    ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop226;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_SemicolonKeyword_4ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_Semicolon,FOLLOW_115); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }
            // PsiInternalXtend.g:8381:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==KW_Package||(LA228_0>=KW_Class && LA228_0<=KW_LessThanSign)||(LA228_0>=KW_Extends && LA228_0<=KW_LeftCurlyBracket)||(LA228_0>=KW_Interface && LA228_0<=KW_LeftParenthesis)||(LA228_0>=KW_Extension && LA228_0<=KW_New)||(LA228_0>=KW_Public && LA228_0<=KW_Transient)||(LA228_0>=KW_Def && LA228_0<=KW_Create)||(LA228_0>=KW_AFTER && LA228_0<=KW_Import)||LA228_0==KW_Switch||(LA228_0>=KW_NumberSign && LA228_0<=KW_LeftSquareBracket)||(LA228_0>=KW_PlusSign && LA228_0<=KW_HyphenMinus)||LA228_0==KW_ExclamationMark||LA228_0==KW_If||(LA228_0>=KW_For && LA228_0<=KW_Try)||(LA228_0>=RULE_ID && LA228_0<=RULE_RICH_TEXT_START)||(LA228_0>=RULE_HEX && LA228_0<=RULE_DECIMAL)) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // PsiInternalXtend.g:8382:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:8382:4: (lv_expression_7_0= ruleXExpression )
                    // PsiInternalXtend.g:8383:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXBasicForLoopExpression_ExpressionXExpressionParserRuleCall_5_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_116);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_SemicolonKeyword_6ElementType());
              		
            }
            otherlv_8=(Token)match(input,KW_Semicolon,FOLLOW_76); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_8);
              		
            }
            // PsiInternalXtend.g:8399:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==KW_Package||(LA230_0>=KW_Class && LA230_0<=KW_LessThanSign)||(LA230_0>=KW_Extends && LA230_0<=KW_LeftCurlyBracket)||(LA230_0>=KW_Interface && LA230_0<=KW_LeftParenthesis)||(LA230_0>=KW_Extension && LA230_0<=KW_New)||(LA230_0>=KW_Public && LA230_0<=KW_Transient)||(LA230_0>=KW_Def && LA230_0<=KW_Create)||(LA230_0>=KW_AFTER && LA230_0<=KW_Import)||LA230_0==KW_Switch||(LA230_0>=KW_NumberSign && LA230_0<=KW_LeftSquareBracket)||(LA230_0>=KW_PlusSign && LA230_0<=KW_HyphenMinus)||LA230_0==KW_ExclamationMark||LA230_0==KW_If||(LA230_0>=KW_For && LA230_0<=KW_Try)||(LA230_0>=RULE_ID && LA230_0<=RULE_RICH_TEXT_START)||(LA230_0>=RULE_HEX && LA230_0<=RULE_DECIMAL)) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    // PsiInternalXtend.g:8400:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // PsiInternalXtend.g:8400:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // PsiInternalXtend.g:8401:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:8401:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // PsiInternalXtend.g:8402:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXBasicForLoopExpression_UpdateExpressionsXExpressionParserRuleCall_7_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:8411:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop229:
                    do {
                        int alt229=2;
                        int LA229_0 = input.LA(1);

                        if ( (LA229_0==KW_Comma) ) {
                            alt229=1;
                        }


                        switch (alt229) {
                    	case 1 :
                    	    // PsiInternalXtend.g:8412:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXBasicForLoopExpression_CommaKeyword_7_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_10=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_10);
                    	      				
                    	    }
                    	    // PsiInternalXtend.g:8419:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // PsiInternalXtend.g:8420:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // PsiInternalXtend.g:8420:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // PsiInternalXtend.g:8421:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXBasicForLoopExpression_UpdateExpressionsXExpressionParserRuleCall_7_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop229;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_RightParenthesisKeyword_8ElementType());
              		
            }
            otherlv_12=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_12);
              		
            }
            // PsiInternalXtend.g:8439:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // PsiInternalXtend.g:8440:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8440:4: (lv_eachExpression_13_0= ruleXExpression )
            // PsiInternalXtend.g:8441:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXBasicForLoopExpression_EachExpressionXExpressionParserRuleCall_9_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // PsiInternalXtend.g:8454:1: entryRuleXWhileExpression : ruleXWhileExpression EOF ;
    public final void entryRuleXWhileExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8454:26: ( ruleXWhileExpression EOF )
            // PsiInternalXtend.g:8455:2: ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXWhileExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // PsiInternalXtend.g:8460:1: ruleXWhileExpression : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final void ruleXWhileExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;

        try {
            // PsiInternalXtend.g:8460:21: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // PsiInternalXtend.g:8461:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // PsiInternalXtend.g:8461:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // PsiInternalXtend.g:8462:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // PsiInternalXtend.g:8462:3: ()
            // PsiInternalXtend.g:8463:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXWhileExpression_XWhileExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXWhileExpression_WhileKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_While,FOLLOW_41); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXWhileExpression_LeftParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            // PsiInternalXtend.g:8482:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // PsiInternalXtend.g:8483:4: (lv_predicate_3_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8483:4: (lv_predicate_3_0= ruleXExpression )
            // PsiInternalXtend.g:8484:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXWhileExpression_PredicateXExpressionParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_65);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXWhileExpression_RightParenthesisKeyword_4ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }
            // PsiInternalXtend.g:8500:3: ( (lv_body_5_0= ruleXExpression ) )
            // PsiInternalXtend.g:8501:4: (lv_body_5_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8501:4: (lv_body_5_0= ruleXExpression )
            // PsiInternalXtend.g:8502:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXWhileExpression_BodyXExpressionParserRuleCall_5_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // PsiInternalXtend.g:8515:1: entryRuleXDoWhileExpression : ruleXDoWhileExpression EOF ;
    public final void entryRuleXDoWhileExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8515:28: ( ruleXDoWhileExpression EOF )
            // PsiInternalXtend.g:8516:2: ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXDoWhileExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // PsiInternalXtend.g:8521:1: ruleXDoWhileExpression : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final void ruleXDoWhileExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;

        try {
            // PsiInternalXtend.g:8521:23: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // PsiInternalXtend.g:8522:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // PsiInternalXtend.g:8522:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // PsiInternalXtend.g:8523:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // PsiInternalXtend.g:8523:3: ()
            // PsiInternalXtend.g:8524:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXDoWhileExpression_XDoWhileExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXDoWhileExpression_DoKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Do,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:8536:3: ( (lv_body_2_0= ruleXExpression ) )
            // PsiInternalXtend.g:8537:4: (lv_body_2_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8537:4: (lv_body_2_0= ruleXExpression )
            // PsiInternalXtend.g:8538:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXDoWhileExpression_BodyXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_117);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXDoWhileExpression_WhileKeyword_3ElementType());
              		
            }
            otherlv_3=(Token)match(input,KW_While,FOLLOW_41); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_3);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXDoWhileExpression_LeftParenthesisKeyword_4ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }
            // PsiInternalXtend.g:8561:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // PsiInternalXtend.g:8562:4: (lv_predicate_5_0= ruleXExpression )
            {
            // PsiInternalXtend.g:8562:4: (lv_predicate_5_0= ruleXExpression )
            // PsiInternalXtend.g:8563:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXDoWhileExpression_PredicateXExpressionParserRuleCall_5_0ElementType());
              				
            }
            pushFollow(FOLLOW_65);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXDoWhileExpression_RightParenthesisKeyword_6ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // PsiInternalXtend.g:8583:1: entryRuleXBlockExpression : ruleXBlockExpression EOF ;
    public final void entryRuleXBlockExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8583:26: ( ruleXBlockExpression EOF )
            // PsiInternalXtend.g:8584:2: ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXBlockExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // PsiInternalXtend.g:8589:1: ruleXBlockExpression : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final void ruleXBlockExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;

        try {
            // PsiInternalXtend.g:8589:21: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // PsiInternalXtend.g:8590:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // PsiInternalXtend.g:8590:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // PsiInternalXtend.g:8591:3: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // PsiInternalXtend.g:8591:3: ()
            // PsiInternalXtend.g:8592:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXBlockExpression_XBlockExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBlockExpression_LeftCurlyBracketKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_118); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:8604:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop232:
            do {
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( (LA232_0==KW_Package||(LA232_0>=KW_Class && LA232_0<=KW_LessThanSign)||(LA232_0>=KW_Extends && LA232_0<=KW_LeftCurlyBracket)||(LA232_0>=KW_Interface && LA232_0<=KW_LeftParenthesis)||(LA232_0>=KW_Extension && LA232_0<=KW_New)||(LA232_0>=KW_Public && LA232_0<=KW_Create)||(LA232_0>=KW_AFTER && LA232_0<=KW_Import)||LA232_0==KW_Switch||(LA232_0>=KW_NumberSign && LA232_0<=KW_LeftSquareBracket)||(LA232_0>=KW_PlusSign && LA232_0<=KW_HyphenMinus)||LA232_0==KW_ExclamationMark||LA232_0==KW_If||(LA232_0>=KW_For && LA232_0<=KW_Try)||(LA232_0>=RULE_ID && LA232_0<=RULE_RICH_TEXT_START)||(LA232_0>=RULE_HEX && LA232_0<=RULE_DECIMAL)) ) {
                    alt232=1;
                }


                switch (alt232) {
            	case 1 :
            	    // PsiInternalXtend.g:8605:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // PsiInternalXtend.g:8605:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // PsiInternalXtend.g:8606:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // PsiInternalXtend.g:8606:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // PsiInternalXtend.g:8607:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXBlockExpression_ExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_119);
            	    ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      					
            	    }

            	    }


            	    }

            	    // PsiInternalXtend.g:8616:4: (otherlv_3= ';' )?
            	    int alt231=2;
            	    int LA231_0 = input.LA(1);

            	    if ( (LA231_0==KW_Semicolon) ) {
            	        alt231=1;
            	    }
            	    switch (alt231) {
            	        case 1 :
            	            // PsiInternalXtend.g:8617:5: otherlv_3= ';'
            	            {
            	            if ( state.backtracking==0 ) {

            	              					markLeaf(elementTypeProvider.getXBlockExpression_SemicolonKeyword_2_1ElementType());
            	              				
            	            }
            	            otherlv_3=(Token)match(input,KW_Semicolon,FOLLOW_118); if (state.failed) return ;
            	            if ( state.backtracking==0 ) {

            	              					doneLeaf(otherlv_3);
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBlockExpression_RightCurlyBracketKeyword_3ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // PsiInternalXtend.g:8637:1: entryRuleXExpressionOrVarDeclaration : ruleXExpressionOrVarDeclaration EOF ;
    public final void entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8637:37: ( ruleXExpressionOrVarDeclaration EOF )
            // PsiInternalXtend.g:8638:2: ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXExpressionOrVarDeclarationElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // PsiInternalXtend.g:8643:1: ruleXExpressionOrVarDeclaration : ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ruleXVariableDeclaration ) | ruleXExpression ) ;
    public final void ruleXExpressionOrVarDeclaration() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8643:32: ( ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ruleXVariableDeclaration ) | ruleXExpression ) )
            // PsiInternalXtend.g:8644:2: ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ruleXVariableDeclaration ) | ruleXExpression )
            {
            // PsiInternalXtend.g:8644:2: ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ruleXVariableDeclaration ) | ruleXExpression )
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==KW_Var) && (synpred51_PsiInternalXtend())) {
                alt233=1;
            }
            else if ( (LA233_0==KW_Val) && (synpred51_PsiInternalXtend())) {
                alt233=1;
            }
            else if ( (LA233_0==KW_Extension) ) {
                switch ( input.LA(2) ) {
                case KW_Var:
                    {
                    int LA233_5 = input.LA(3);

                    if ( (synpred51_PsiInternalXtend()) ) {
                        alt233=1;
                    }
                    else if ( (true) ) {
                        alt233=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 233, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case KW_Val:
                    {
                    int LA233_6 = input.LA(3);

                    if ( (synpred51_PsiInternalXtend()) ) {
                        alt233=1;
                    }
                    else if ( (true) ) {
                        alt233=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 233, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case KW_Package:
                case KW_Semicolon:
                case KW_Class:
                case KW_LessThanSign:
                case KW_Comma:
                case KW_GreaterThanSign:
                case KW_Extends:
                case KW_Implements:
                case KW_LeftCurlyBracket:
                case KW_RightCurlyBracket:
                case KW_Interface:
                case KW_Enum:
                case KW_Annotation:
                case KW_LeftParenthesis:
                case KW_EqualsSignGreaterThanSign:
                case KW_EqualsSign:
                case KW_Extension:
                case KW_Throws:
                case KW_New:
                case KW_FullStop:
                case KW_Public:
                case KW_Private:
                case KW_Protected:
                case KW_Abstract:
                case KW_Static:
                case KW_Dispatch:
                case KW_Final:
                case KW_Strictfp:
                case KW_Native:
                case KW_Volatile:
                case KW_Synchronized:
                case KW_Transient:
                case KW_Def:
                case KW_Override:
                case KW_Create:
                case KW_AFTER:
                case KW_BEFORE:
                case KW_SEPARATOR:
                case KW_Import:
                case KW_Switch:
                case KW_NumberSign:
                case KW_LeftSquareBracket:
                case KW_RightSquareBracket:
                case KW_PlusSignEqualsSign:
                case KW_HyphenMinusEqualsSign:
                case KW_AsteriskEqualsSign:
                case KW_SolidusEqualsSign:
                case KW_PercentSignEqualsSign:
                case KW_GreaterThanSignEqualsSign:
                case KW_VerticalLineVerticalLine:
                case KW_AmpersandAmpersand:
                case KW_EqualsSignEqualsSign:
                case KW_ExclamationMarkEqualsSign:
                case KW_EqualsSignEqualsSignEqualsSign:
                case KW_ExclamationMarkEqualsSignEqualsSign:
                case KW_Instanceof:
                case KW_HyphenMinusGreaterThanSign:
                case KW_FullStopFullStopLessThanSign:
                case KW_FullStopFullStop:
                case KW_LessThanSignGreaterThanSign:
                case KW_QuestionMarkColon:
                case KW_PlusSign:
                case KW_HyphenMinus:
                case KW_Asterisk:
                case KW_AsteriskAsterisk:
                case KW_Solidus:
                case KW_PercentSign:
                case KW_ExclamationMark:
                case KW_As:
                case KW_PlusSignPlusSign:
                case KW_HyphenMinusHyphenMinus:
                case KW_ColonColon:
                case KW_QuestionMarkFullStop:
                case KW_If:
                case KW_For:
                case KW_While:
                case KW_Do:
                case KW_Super:
                case KW_False:
                case KW_True:
                case KW_Null:
                case KW_Typeof:
                case KW_Throw:
                case KW_Return:
                case KW_Try:
                case RULE_ID:
                case RULE_STRING:
                case RULE_RICH_TEXT:
                case RULE_RICH_TEXT_START:
                case RULE_RICH_TEXT_INBETWEEN:
                case RULE_COMMENT_RICH_TEXT_INBETWEEN:
                case RULE_RICH_TEXT_END:
                case RULE_COMMENT_RICH_TEXT_END:
                case RULE_HEX:
                case RULE_INT:
                case RULE_DECIMAL:
                    {
                    alt233=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 233, 3, input);

                    throw nvae;
                }

            }
            else if ( (LA233_0==KW_Package||(LA233_0>=KW_Class && LA233_0<=KW_LessThanSign)||(LA233_0>=KW_Extends && LA233_0<=KW_LeftCurlyBracket)||(LA233_0>=KW_Interface && LA233_0<=KW_LeftParenthesis)||(LA233_0>=KW_Throws && LA233_0<=KW_New)||(LA233_0>=KW_Public && LA233_0<=KW_Transient)||(LA233_0>=KW_Def && LA233_0<=KW_Create)||(LA233_0>=KW_AFTER && LA233_0<=KW_Import)||LA233_0==KW_Switch||(LA233_0>=KW_NumberSign && LA233_0<=KW_LeftSquareBracket)||(LA233_0>=KW_PlusSign && LA233_0<=KW_HyphenMinus)||LA233_0==KW_ExclamationMark||LA233_0==KW_If||(LA233_0>=KW_For && LA233_0<=KW_Try)||(LA233_0>=RULE_ID && LA233_0<=RULE_RICH_TEXT_START)||(LA233_0>=RULE_HEX && LA233_0<=RULE_DECIMAL)) ) {
                alt233=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;
            }
            switch (alt233) {
                case 1 :
                    // PsiInternalXtend.g:8645:3: ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ruleXVariableDeclaration )
                    {
                    // PsiInternalXtend.g:8645:3: ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ruleXVariableDeclaration )
                    // PsiInternalXtend.g:8646:4: ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXExpressionOrVarDeclaration_XVariableDeclarationParserRuleCall_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:8695:3: ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXExpressionOrVarDeclaration_XExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXFeatureCall"
    // PsiInternalXtend.g:8706:1: entryRuleXFeatureCall : ruleXFeatureCall EOF ;
    public final void entryRuleXFeatureCall() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8706:22: ( ruleXFeatureCall EOF )
            // PsiInternalXtend.g:8707:2: ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXFeatureCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // PsiInternalXtend.g:8712:1: ruleXFeatureCall : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final void ruleXFeatureCall() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;

        try {
            // PsiInternalXtend.g:8712:17: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // PsiInternalXtend.g:8713:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // PsiInternalXtend.g:8713:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // PsiInternalXtend.g:8714:3: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // PsiInternalXtend.g:8714:3: ()
            // PsiInternalXtend.g:8715:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXFeatureCall_XFeatureCallAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:8720:3: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==KW_LessThanSign) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // PsiInternalXtend.g:8721:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFeatureCall_LessThanSignKeyword_1_0ElementType());
                      			
                    }
                    otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_1);
                      			
                    }
                    // PsiInternalXtend.g:8728:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // PsiInternalXtend.g:8729:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // PsiInternalXtend.g:8729:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // PsiInternalXtend.g:8730:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXFeatureCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:8739:4: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==KW_Comma) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // PsiInternalXtend.g:8740:5: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXFeatureCall_CommaKeyword_1_2_0ElementType());
                    	      				
                    	    }
                    	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_3);
                    	      				
                    	    }
                    	    // PsiInternalXtend.g:8747:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // PsiInternalXtend.g:8748:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // PsiInternalXtend.g:8748:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // PsiInternalXtend.g:8749:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXFeatureCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop234;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFeatureCall_GreaterThanSignKeyword_1_3ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_98); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }

                    }
                    break;

            }

            // PsiInternalXtend.g:8767:3: ( ( ruleIdOrSuper ) )
            // PsiInternalXtend.g:8768:4: ( ruleIdOrSuper )
            {
            // PsiInternalXtend.g:8768:4: ( ruleIdOrSuper )
            // PsiInternalXtend.g:8769:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXFeatureCall_FeatureJvmIdentifiableElementCrossReference_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_63);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:8778:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt238=2;
            alt238 = dfa238.predict(input);
            switch (alt238) {
                case 1 :
                    // PsiInternalXtend.g:8779:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // PsiInternalXtend.g:8779:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // PsiInternalXtend.g:8780:5: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // PsiInternalXtend.g:8784:5: (lv_explicitOperationCall_7_0= '(' )
                    // PsiInternalXtend.g:8785:6: lv_explicitOperationCall_7_0= '('
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXFeatureCall_ExplicitOperationCallLeftParenthesisKeyword_3_0_0ElementType());
                      					
                    }
                    lv_explicitOperationCall_7_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_64); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_explicitOperationCall_7_0);
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:8794:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt237=3;
                    alt237 = dfa237.predict(input);
                    switch (alt237) {
                        case 1 :
                            // PsiInternalXtend.g:8795:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // PsiInternalXtend.g:8795:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // PsiInternalXtend.g:8796:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // PsiInternalXtend.g:8821:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // PsiInternalXtend.g:8822:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXFeatureCall_FeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_65);
                            ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:8832:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // PsiInternalXtend.g:8832:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // PsiInternalXtend.g:8833:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // PsiInternalXtend.g:8833:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // PsiInternalXtend.g:8834:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // PsiInternalXtend.g:8834:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // PsiInternalXtend.g:8835:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXFeatureCall_FeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_27);
                            ruleXExpression();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }

                            // PsiInternalXtend.g:8844:6: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop236:
                            do {
                                int alt236=2;
                                int LA236_0 = input.LA(1);

                                if ( (LA236_0==KW_Comma) ) {
                                    alt236=1;
                                }


                                switch (alt236) {
                            	case 1 :
                            	    // PsiInternalXtend.g:8845:7: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getXFeatureCall_CommaKeyword_3_1_1_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_10=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_10);
                            	      						
                            	    }
                            	    // PsiInternalXtend.g:8852:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // PsiInternalXtend.g:8853:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // PsiInternalXtend.g:8853:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // PsiInternalXtend.g:8854:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXFeatureCall_FeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop236;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFeatureCall_RightParenthesisKeyword_3_2ElementType());
                      			
                    }
                    otherlv_12=(Token)match(input,KW_RightParenthesis,FOLLOW_49); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_12);
                      			
                    }

                    }
                    break;

            }

            // PsiInternalXtend.g:8874:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt239=2;
            alt239 = dfa239.predict(input);
            switch (alt239) {
                case 1 :
                    // PsiInternalXtend.g:8875:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // PsiInternalXtend.g:8881:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // PsiInternalXtend.g:8882:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXFeatureCall_FeatureCallArgumentsXClosureParserRuleCall_4_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleXClosure();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleIdOrSuper"
    // PsiInternalXtend.g:8895:1: entryRuleIdOrSuper : ruleIdOrSuper EOF ;
    public final void entryRuleIdOrSuper() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8895:19: ( ruleIdOrSuper EOF )
            // PsiInternalXtend.g:8896:2: ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getIdOrSuperElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // PsiInternalXtend.g:8901:1: ruleIdOrSuper : ( ruleFeatureCallID | kw= 'super' ) ;
    public final void ruleIdOrSuper() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:8901:14: ( ( ruleFeatureCallID | kw= 'super' ) )
            // PsiInternalXtend.g:8902:2: ( ruleFeatureCallID | kw= 'super' )
            {
            // PsiInternalXtend.g:8902:2: ( ruleFeatureCallID | kw= 'super' )
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==KW_Package||LA240_0==KW_Class||(LA240_0>=KW_Extends && LA240_0<=KW_Implements)||(LA240_0>=KW_Interface && LA240_0<=KW_Annotation)||(LA240_0>=KW_Extension && LA240_0<=KW_Throws)||(LA240_0>=KW_Public && LA240_0<=KW_Transient)||(LA240_0>=KW_Def && LA240_0<=KW_Create)||(LA240_0>=KW_AFTER && LA240_0<=KW_Import)||LA240_0==RULE_ID) ) {
                alt240=1;
            }
            else if ( (LA240_0==KW_Super) ) {
                alt240=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;
            }
            switch (alt240) {
                case 1 :
                    // PsiInternalXtend.g:8903:3: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getIdOrSuper_FeatureCallIDParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:8911:3: kw= 'super'
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getIdOrSuper_SuperKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Super,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // PsiInternalXtend.g:8922:1: entryRuleXBooleanLiteral : ruleXBooleanLiteral EOF ;
    public final void entryRuleXBooleanLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8922:25: ( ruleXBooleanLiteral EOF )
            // PsiInternalXtend.g:8923:2: ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXBooleanLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // PsiInternalXtend.g:8928:1: ruleXBooleanLiteral : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final void ruleXBooleanLiteral() throws RecognitionException {
        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;

        try {
            // PsiInternalXtend.g:8928:20: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // PsiInternalXtend.g:8929:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // PsiInternalXtend.g:8929:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // PsiInternalXtend.g:8930:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // PsiInternalXtend.g:8930:3: ()
            // PsiInternalXtend.g:8931:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXBooleanLiteral_XBooleanLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:8936:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==KW_False) ) {
                alt241=1;
            }
            else if ( (LA241_0==KW_True) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }
            switch (alt241) {
                case 1 :
                    // PsiInternalXtend.g:8937:4: otherlv_1= 'false'
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXBooleanLiteral_FalseKeyword_1_0ElementType());
                      			
                    }
                    otherlv_1=(Token)match(input,KW_False,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_1);
                      			
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:8945:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // PsiInternalXtend.g:8945:4: ( (lv_isTrue_2_0= 'true' ) )
                    // PsiInternalXtend.g:8946:5: (lv_isTrue_2_0= 'true' )
                    {
                    // PsiInternalXtend.g:8946:5: (lv_isTrue_2_0= 'true' )
                    // PsiInternalXtend.g:8947:6: lv_isTrue_2_0= 'true'
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXBooleanLiteral_IsTrueTrueKeyword_1_1_0ElementType());
                      					
                    }
                    lv_isTrue_2_0=(Token)match(input,KW_True,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_isTrue_2_0);
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // PsiInternalXtend.g:8961:1: entryRuleXNullLiteral : ruleXNullLiteral EOF ;
    public final void entryRuleXNullLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8961:22: ( ruleXNullLiteral EOF )
            // PsiInternalXtend.g:8962:2: ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXNullLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // PsiInternalXtend.g:8967:1: ruleXNullLiteral : ( () otherlv_1= 'null' ) ;
    public final void ruleXNullLiteral() throws RecognitionException {
        Token otherlv_1=null;

        try {
            // PsiInternalXtend.g:8967:17: ( ( () otherlv_1= 'null' ) )
            // PsiInternalXtend.g:8968:2: ( () otherlv_1= 'null' )
            {
            // PsiInternalXtend.g:8968:2: ( () otherlv_1= 'null' )
            // PsiInternalXtend.g:8969:3: () otherlv_1= 'null'
            {
            // PsiInternalXtend.g:8969:3: ()
            // PsiInternalXtend.g:8970:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXNullLiteral_XNullLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXNullLiteral_NullKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Null,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // PsiInternalXtend.g:8986:1: entryRuleXNumberLiteral : ruleXNumberLiteral EOF ;
    public final void entryRuleXNumberLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8986:24: ( ruleXNumberLiteral EOF )
            // PsiInternalXtend.g:8987:2: ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXNumberLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // PsiInternalXtend.g:8992:1: ruleXNumberLiteral : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final void ruleXNumberLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:8992:19: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // PsiInternalXtend.g:8993:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // PsiInternalXtend.g:8993:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // PsiInternalXtend.g:8994:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // PsiInternalXtend.g:8994:3: ()
            // PsiInternalXtend.g:8995:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXNumberLiteral_XNumberLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            // PsiInternalXtend.g:9000:3: ( (lv_value_1_0= ruleNumber ) )
            // PsiInternalXtend.g:9001:4: (lv_value_1_0= ruleNumber )
            {
            // PsiInternalXtend.g:9001:4: (lv_value_1_0= ruleNumber )
            // PsiInternalXtend.g:9002:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXNumberLiteral_ValueNumberParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // PsiInternalXtend.g:9015:1: entryRuleXTypeLiteral : ruleXTypeLiteral EOF ;
    public final void entryRuleXTypeLiteral() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9015:22: ( ruleXTypeLiteral EOF )
            // PsiInternalXtend.g:9016:2: ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXTypeLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // PsiInternalXtend.g:9021:1: ruleXTypeLiteral : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final void ruleXTypeLiteral() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;

        try {
            // PsiInternalXtend.g:9021:17: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // PsiInternalXtend.g:9022:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // PsiInternalXtend.g:9022:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // PsiInternalXtend.g:9023:3: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // PsiInternalXtend.g:9023:3: ()
            // PsiInternalXtend.g:9024:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXTypeLiteral_XTypeLiteralAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXTypeLiteral_TypeofKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Typeof,FOLLOW_41); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXTypeLiteral_LeftParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_3); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            // PsiInternalXtend.g:9043:3: ( ( ruleQualifiedName ) )
            // PsiInternalXtend.g:9044:4: ( ruleQualifiedName )
            {
            // PsiInternalXtend.g:9044:4: ( ruleQualifiedName )
            // PsiInternalXtend.g:9045:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXTypeLiteral_TypeJvmTypeCrossReference_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_120);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:9054:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop242:
            do {
                int alt242=2;
                int LA242_0 = input.LA(1);

                if ( (LA242_0==KW_LeftSquareBracket) ) {
                    alt242=1;
                }


                switch (alt242) {
            	case 1 :
            	    // PsiInternalXtend.g:9055:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // PsiInternalXtend.g:9055:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // PsiInternalXtend.g:9056:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getXTypeLiteral_ArrayDimensionsArrayBracketsParserRuleCall_4_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_120);
            	    ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop242;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXTypeLiteral_RightParenthesisKeyword_5ElementType());
              		
            }
            otherlv_5=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_5);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // PsiInternalXtend.g:9076:1: entryRuleXThrowExpression : ruleXThrowExpression EOF ;
    public final void entryRuleXThrowExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9076:26: ( ruleXThrowExpression EOF )
            // PsiInternalXtend.g:9077:2: ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXThrowExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // PsiInternalXtend.g:9082:1: ruleXThrowExpression : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final void ruleXThrowExpression() throws RecognitionException {
        Token otherlv_1=null;

        try {
            // PsiInternalXtend.g:9082:21: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // PsiInternalXtend.g:9083:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // PsiInternalXtend.g:9083:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // PsiInternalXtend.g:9084:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // PsiInternalXtend.g:9084:3: ()
            // PsiInternalXtend.g:9085:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXThrowExpression_XThrowExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXThrowExpression_ThrowKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Throw,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:9097:3: ( (lv_expression_2_0= ruleXExpression ) )
            // PsiInternalXtend.g:9098:4: (lv_expression_2_0= ruleXExpression )
            {
            // PsiInternalXtend.g:9098:4: (lv_expression_2_0= ruleXExpression )
            // PsiInternalXtend.g:9099:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXThrowExpression_ExpressionXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // PsiInternalXtend.g:9112:1: entryRuleXReturnExpression : ruleXReturnExpression EOF ;
    public final void entryRuleXReturnExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9112:27: ( ruleXReturnExpression EOF )
            // PsiInternalXtend.g:9113:2: ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXReturnExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // PsiInternalXtend.g:9118:1: ruleXReturnExpression : ( () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final void ruleXReturnExpression() throws RecognitionException {
        Token otherlv_1=null;

        try {
            // PsiInternalXtend.g:9118:22: ( ( () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // PsiInternalXtend.g:9119:2: ( () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // PsiInternalXtend.g:9119:2: ( () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? )
            // PsiInternalXtend.g:9120:3: () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // PsiInternalXtend.g:9120:3: ()
            // PsiInternalXtend.g:9121:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXReturnExpression_XReturnExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXReturnExpression_ReturnKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Return,FOLLOW_121); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:9133:3: ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt243=2;
            alt243 = dfa243.predict(input);
            switch (alt243) {
                case 1 :
                    // PsiInternalXtend.g:9134:4: ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:9135:4: (lv_expression_2_0= ruleXExpression )
                    // PsiInternalXtend.g:9136:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXReturnExpression_ExpressionXExpressionParserRuleCall_2_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // PsiInternalXtend.g:9149:1: entryRuleXTryCatchFinallyExpression : ruleXTryCatchFinallyExpression EOF ;
    public final void entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9149:36: ( ruleXTryCatchFinallyExpression EOF )
            // PsiInternalXtend.g:9150:2: ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXTryCatchFinallyExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // PsiInternalXtend.g:9155:1: ruleXTryCatchFinallyExpression : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final void ruleXTryCatchFinallyExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;

        try {
            // PsiInternalXtend.g:9155:31: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // PsiInternalXtend.g:9156:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // PsiInternalXtend.g:9156:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // PsiInternalXtend.g:9157:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // PsiInternalXtend.g:9157:3: ()
            // PsiInternalXtend.g:9158:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXTryCatchFinallyExpression_XTryCatchFinallyExpressionAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_TryKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Try,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:9170:3: ( (lv_expression_2_0= ruleXExpression ) )
            // PsiInternalXtend.g:9171:4: (lv_expression_2_0= ruleXExpression )
            {
            // PsiInternalXtend.g:9171:4: (lv_expression_2_0= ruleXExpression )
            // PsiInternalXtend.g:9172:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXTryCatchFinallyExpression_ExpressionXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_122);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:9181:3: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==KW_Catch) ) {
                alt246=1;
            }
            else if ( (LA246_0==KW_Finally) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;
            }
            switch (alt246) {
                case 1 :
                    // PsiInternalXtend.g:9182:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // PsiInternalXtend.g:9182:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // PsiInternalXtend.g:9183:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // PsiInternalXtend.g:9183:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt244=0;
                    loop244:
                    do {
                        int alt244=2;
                        int LA244_0 = input.LA(1);

                        if ( (LA244_0==KW_Catch) ) {
                            int LA244_2 = input.LA(2);

                            if ( (synpred56_PsiInternalXtend()) ) {
                                alt244=1;
                            }


                        }


                        switch (alt244) {
                    	case 1 :
                    	    // PsiInternalXtend.g:9184:6: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // PsiInternalXtend.g:9185:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // PsiInternalXtend.g:9186:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXTryCatchFinallyExpression_CatchClausesXCatchClauseParserRuleCall_3_0_0_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt244 >= 1 ) break loop244;
                    	    if (state.backtracking>0) {state.failed=true; return ;}
                                EarlyExitException eee =
                                    new EarlyExitException(244, input);
                                throw eee;
                        }
                        cnt244++;
                    } while (true);

                    // PsiInternalXtend.g:9195:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt245=2;
                    int LA245_0 = input.LA(1);

                    if ( (LA245_0==KW_Finally) ) {
                        int LA245_1 = input.LA(2);

                        if ( (synpred57_PsiInternalXtend()) ) {
                            alt245=1;
                        }
                    }
                    switch (alt245) {
                        case 1 :
                            // PsiInternalXtend.g:9196:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // PsiInternalXtend.g:9196:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // PsiInternalXtend.g:9197:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_FinallyKeyword_3_0_1_0ElementType());
                              						
                            }
                            otherlv_4=(Token)match(input,KW_Finally,FOLLOW_33); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(otherlv_4);
                              						
                            }

                            }

                            // PsiInternalXtend.g:9206:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // PsiInternalXtend.g:9207:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // PsiInternalXtend.g:9207:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // PsiInternalXtend.g:9208:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXTryCatchFinallyExpression_FinallyExpressionXExpressionParserRuleCall_3_0_1_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            ruleXExpression();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:9220:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // PsiInternalXtend.g:9220:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // PsiInternalXtend.g:9221:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_FinallyKeyword_3_1_0ElementType());
                      				
                    }
                    otherlv_6=(Token)match(input,KW_Finally,FOLLOW_33); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_6);
                      				
                    }
                    // PsiInternalXtend.g:9228:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // PsiInternalXtend.g:9229:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // PsiInternalXtend.g:9229:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // PsiInternalXtend.g:9230:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXTryCatchFinallyExpression_FinallyExpressionXExpressionParserRuleCall_3_1_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // PsiInternalXtend.g:9245:1: entryRuleXSynchronizedExpression : ruleXSynchronizedExpression EOF ;
    public final void entryRuleXSynchronizedExpression() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9245:33: ( ruleXSynchronizedExpression EOF )
            // PsiInternalXtend.g:9246:2: ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXSynchronizedExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // PsiInternalXtend.g:9251:1: ruleXSynchronizedExpression : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final void ruleXSynchronizedExpression() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;

        try {
            // PsiInternalXtend.g:9251:28: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // PsiInternalXtend.g:9252:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // PsiInternalXtend.g:9252:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // PsiInternalXtend.g:9253:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // PsiInternalXtend.g:9253:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // PsiInternalXtend.g:9254:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // PsiInternalXtend.g:9261:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // PsiInternalXtend.g:9262:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // PsiInternalXtend.g:9262:5: ()
            // PsiInternalXtend.g:9263:6: 
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXSynchronizedExpression_XSynchronizedExpressionAction_0_0_0ElementType());
              						doneComposite();
              					
            }

            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXSynchronizedExpression_SynchronizedKeyword_0_0_1ElementType());
              				
            }
            otherlv_1=(Token)match(input,KW_Synchronized,FOLLOW_41); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_1);
              				
            }
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXSynchronizedExpression_LeftParenthesisKeyword_0_0_2ElementType());
              				
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_2);
              				
            }

            }


            }

            // PsiInternalXtend.g:9284:3: ( (lv_param_3_0= ruleXExpression ) )
            // PsiInternalXtend.g:9285:4: (lv_param_3_0= ruleXExpression )
            {
            // PsiInternalXtend.g:9285:4: (lv_param_3_0= ruleXExpression )
            // PsiInternalXtend.g:9286:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXSynchronizedExpression_ParamXExpressionParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_65);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSynchronizedExpression_RightParenthesisKeyword_2ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }
            // PsiInternalXtend.g:9302:3: ( (lv_expression_5_0= ruleXExpression ) )
            // PsiInternalXtend.g:9303:4: (lv_expression_5_0= ruleXExpression )
            {
            // PsiInternalXtend.g:9303:4: (lv_expression_5_0= ruleXExpression )
            // PsiInternalXtend.g:9304:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXSynchronizedExpression_ExpressionXExpressionParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // PsiInternalXtend.g:9317:1: entryRuleXCatchClause : ruleXCatchClause EOF ;
    public final void entryRuleXCatchClause() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9317:22: ( ruleXCatchClause EOF )
            // PsiInternalXtend.g:9318:2: ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXCatchClauseElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXCatchClause();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // PsiInternalXtend.g:9323:1: ruleXCatchClause : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final void ruleXCatchClause() throws RecognitionException {
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;

        try {
            // PsiInternalXtend.g:9323:17: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // PsiInternalXtend.g:9324:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // PsiInternalXtend.g:9324:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // PsiInternalXtend.g:9325:3: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // PsiInternalXtend.g:9325:3: ( ( 'catch' )=>otherlv_0= 'catch' )
            // PsiInternalXtend.g:9326:4: ( 'catch' )=>otherlv_0= 'catch'
            {
            if ( state.backtracking==0 ) {

              				markLeaf(elementTypeProvider.getXCatchClause_CatchKeyword_0ElementType());
              			
            }
            otherlv_0=(Token)match(input,KW_Catch,FOLLOW_41); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              				doneLeaf(otherlv_0);
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXCatchClause_LeftParenthesisKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_LeftParenthesis,FOLLOW_28); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:9342:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // PsiInternalXtend.g:9343:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // PsiInternalXtend.g:9343:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // PsiInternalXtend.g:9344:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXCatchClause_DeclaredParamFullJvmFormalParameterParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_65);
            ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXCatchClause_RightParenthesisKeyword_3ElementType());
              		
            }
            otherlv_3=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_3);
              		
            }
            // PsiInternalXtend.g:9360:3: ( (lv_expression_4_0= ruleXExpression ) )
            // PsiInternalXtend.g:9361:4: (lv_expression_4_0= ruleXExpression )
            {
            // PsiInternalXtend.g:9361:4: (lv_expression_4_0= ruleXExpression )
            // PsiInternalXtend.g:9362:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXCatchClause_ExpressionXExpressionParserRuleCall_4_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // PsiInternalXtend.g:9375:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9375:23: ( ruleQualifiedName EOF )
            // PsiInternalXtend.g:9376:2: ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getQualifiedNameElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // PsiInternalXtend.g:9381:1: ruleQualifiedName : ( ruleValidID ( ( ( '.' )=>kw= '.' ) ruleValidID )* ) ;
    public final void ruleQualifiedName() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:9381:18: ( ( ruleValidID ( ( ( '.' )=>kw= '.' ) ruleValidID )* ) )
            // PsiInternalXtend.g:9382:2: ( ruleValidID ( ( ( '.' )=>kw= '.' ) ruleValidID )* )
            {
            // PsiInternalXtend.g:9382:2: ( ruleValidID ( ( ( '.' )=>kw= '.' ) ruleValidID )* )
            // PsiInternalXtend.g:9383:3: ruleValidID ( ( ( '.' )=>kw= '.' ) ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getQualifiedName_ValidIDParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_53);
            ruleValidID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            // PsiInternalXtend.g:9390:3: ( ( ( '.' )=>kw= '.' ) ruleValidID )*
            loop247:
            do {
                int alt247=2;
                alt247 = dfa247.predict(input);
                switch (alt247) {
            	case 1 :
            	    // PsiInternalXtend.g:9391:4: ( ( '.' )=>kw= '.' ) ruleValidID
            	    {
            	    // PsiInternalXtend.g:9391:4: ( ( '.' )=>kw= '.' )
            	    // PsiInternalXtend.g:9392:5: ( '.' )=>kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markLeaf(elementTypeProvider.getQualifiedName_FullStopKeyword_1_0ElementType());
            	      				
            	    }
            	    kw=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      					doneLeaf(kw);
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				markComposite(elementTypeProvider.getQualifiedName_ValidIDParserRuleCall_1_1ElementType());
            	      			
            	    }
            	    pushFollow(FOLLOW_53);
            	    ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      				doneComposite();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // PsiInternalXtend.g:9413:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // PsiInternalXtend.g:9415:2: ( ruleNumber EOF )
            // PsiInternalXtend.g:9416:2: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getNumberElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // PsiInternalXtend.g:9424:1: ruleNumber : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final void ruleNumber() throws RecognitionException {
        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // PsiInternalXtend.g:9426:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // PsiInternalXtend.g:9427:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // PsiInternalXtend.g:9427:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==RULE_HEX) ) {
                alt251=1;
            }
            else if ( ((LA251_0>=RULE_INT && LA251_0<=RULE_DECIMAL)) ) {
                alt251=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;
            }
            switch (alt251) {
                case 1 :
                    // PsiInternalXtend.g:9428:3: this_HEX_0= RULE_HEX
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getNumber_HEXTerminalRuleCall_0ElementType());
                      		
                    }
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(this_HEX_0);
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:9436:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // PsiInternalXtend.g:9436:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // PsiInternalXtend.g:9437:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // PsiInternalXtend.g:9437:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt248=2;
                    int LA248_0 = input.LA(1);

                    if ( (LA248_0==RULE_INT) ) {
                        alt248=1;
                    }
                    else if ( (LA248_0==RULE_DECIMAL) ) {
                        alt248=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 248, 0, input);

                        throw nvae;
                    }
                    switch (alt248) {
                        case 1 :
                            // PsiInternalXtend.g:9438:5: this_INT_1= RULE_INT
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getNumber_INTTerminalRuleCall_1_0_0ElementType());
                              				
                            }
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_53); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(this_INT_1);
                              				
                            }

                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:9446:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getNumber_DECIMALTerminalRuleCall_1_0_1ElementType());
                              				
                            }
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_53); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(this_DECIMAL_2);
                              				
                            }

                            }
                            break;

                    }

                    // PsiInternalXtend.g:9454:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt250=2;
                    int LA250_0 = input.LA(1);

                    if ( (LA250_0==KW_FullStop) ) {
                        int LA250_1 = input.LA(2);

                        if ( ((LA250_1>=RULE_INT && LA250_1<=RULE_DECIMAL)) ) {
                            alt250=1;
                        }
                    }
                    switch (alt250) {
                        case 1 :
                            // PsiInternalXtend.g:9455:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getNumber_FullStopKeyword_1_1_0ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_FullStop,FOLLOW_124); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }
                            // PsiInternalXtend.g:9462:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt249=2;
                            int LA249_0 = input.LA(1);

                            if ( (LA249_0==RULE_INT) ) {
                                alt249=1;
                            }
                            else if ( (LA249_0==RULE_DECIMAL) ) {
                                alt249=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 249, 0, input);

                                throw nvae;
                            }
                            switch (alt249) {
                                case 1 :
                                    // PsiInternalXtend.g:9463:6: this_INT_4= RULE_INT
                                    {
                                    if ( state.backtracking==0 ) {

                                      						markLeaf(elementTypeProvider.getNumber_INTTerminalRuleCall_1_1_1_0ElementType());
                                      					
                                    }
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                                    if ( state.backtracking==0 ) {

                                      						doneLeaf(this_INT_4);
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // PsiInternalXtend.g:9471:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    if ( state.backtracking==0 ) {

                                      						markLeaf(elementTypeProvider.getNumber_DECIMALTerminalRuleCall_1_1_1_1ElementType());
                                      					
                                    }
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return ;
                                    if ( state.backtracking==0 ) {

                                      						doneLeaf(this_DECIMAL_5);
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // PsiInternalXtend.g:9488:1: entryRuleJvmTypeReference : ruleJvmTypeReference EOF ;
    public final void entryRuleJvmTypeReference() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9488:26: ( ruleJvmTypeReference EOF )
            // PsiInternalXtend.g:9489:2: ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // PsiInternalXtend.g:9494:1: ruleJvmTypeReference : ( ( ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ruleXFunctionTypeRef ) ;
    public final void ruleJvmTypeReference() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9494:21: ( ( ( ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ruleXFunctionTypeRef ) )
            // PsiInternalXtend.g:9495:2: ( ( ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ruleXFunctionTypeRef )
            {
            // PsiInternalXtend.g:9495:2: ( ( ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ruleXFunctionTypeRef )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==KW_Annotation||LA253_0==KW_Create||(LA253_0>=KW_AFTER && LA253_0<=KW_SEPARATOR)||LA253_0==RULE_ID) ) {
                alt253=1;
            }
            else if ( (LA253_0==KW_LeftParenthesis||LA253_0==KW_EqualsSignGreaterThanSign) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }
            switch (alt253) {
                case 1 :
                    // PsiInternalXtend.g:9496:3: ( ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // PsiInternalXtend.g:9496:3: ( ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // PsiInternalXtend.g:9497:4: ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getJvmTypeReference_JvmParameterizedTypeReferenceParserRuleCall_0_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_49);
                    ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }
                    // PsiInternalXtend.g:9504:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop252:
                    do {
                        int alt252=2;
                        int LA252_0 = input.LA(1);

                        if ( (LA252_0==KW_LeftSquareBracket) ) {
                            int LA252_2 = input.LA(2);

                            if ( (LA252_2==KW_RightSquareBracket) ) {
                                int LA252_3 = input.LA(3);

                                if ( (synpred61_PsiInternalXtend()) ) {
                                    alt252=1;
                                }


                            }


                        }


                        switch (alt252) {
                    	case 1 :
                    	    // PsiInternalXtend.g:9505:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // PsiInternalXtend.g:9511:5: ( () ruleArrayBrackets )
                    	    // PsiInternalXtend.g:9512:6: () ruleArrayBrackets
                    	    {
                    	    // PsiInternalXtend.g:9512:6: ()
                    	    // PsiInternalXtend.g:9513:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							precedeComposite(elementTypeProvider.getJvmTypeReference_JvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0ElementType());
                    	      							doneComposite();
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getJvmTypeReference_ArrayBracketsParserRuleCall_0_1_0_1ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_49);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop252;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:9529:3: ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmTypeReference_XFunctionTypeRefParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // PsiInternalXtend.g:9540:1: entryRuleArrayBrackets : ruleArrayBrackets EOF ;
    public final void entryRuleArrayBrackets() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9540:23: ( ruleArrayBrackets EOF )
            // PsiInternalXtend.g:9541:2: ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getArrayBracketsElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // PsiInternalXtend.g:9546:1: ruleArrayBrackets : (kw= '[' kw= ']' ) ;
    public final void ruleArrayBrackets() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:9546:18: ( (kw= '[' kw= ']' ) )
            // PsiInternalXtend.g:9547:2: (kw= '[' kw= ']' )
            {
            // PsiInternalXtend.g:9547:2: (kw= '[' kw= ']' )
            // PsiInternalXtend.g:9548:3: kw= '[' kw= ']'
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getArrayBrackets_LeftSquareBracketKeyword_0ElementType());
              		
            }
            kw=(Token)match(input,KW_LeftSquareBracket,FOLLOW_106); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(kw);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getArrayBrackets_RightSquareBracketKeyword_1ElementType());
              		
            }
            kw=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(kw);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // PsiInternalXtend.g:9566:1: entryRuleXFunctionTypeRef : ruleXFunctionTypeRef EOF ;
    public final void entryRuleXFunctionTypeRef() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9566:26: ( ruleXFunctionTypeRef EOF )
            // PsiInternalXtend.g:9567:2: ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXFunctionTypeRefElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // PsiInternalXtend.g:9572:1: ruleXFunctionTypeRef : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final void ruleXFunctionTypeRef() throws RecognitionException {
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;

        try {
            // PsiInternalXtend.g:9572:21: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // PsiInternalXtend.g:9573:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // PsiInternalXtend.g:9573:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // PsiInternalXtend.g:9574:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // PsiInternalXtend.g:9574:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==KW_LeftParenthesis) ) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // PsiInternalXtend.g:9575:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFunctionTypeRef_LeftParenthesisKeyword_0_0ElementType());
                      			
                    }
                    otherlv_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_26); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_0);
                      			
                    }
                    // PsiInternalXtend.g:9582:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt255=2;
                    int LA255_0 = input.LA(1);

                    if ( ((LA255_0>=KW_Annotation && LA255_0<=KW_LeftParenthesis)||LA255_0==KW_EqualsSignGreaterThanSign||LA255_0==KW_Create||(LA255_0>=KW_AFTER && LA255_0<=KW_SEPARATOR)||LA255_0==RULE_ID) ) {
                        alt255=1;
                    }
                    switch (alt255) {
                        case 1 :
                            // PsiInternalXtend.g:9583:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // PsiInternalXtend.g:9583:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // PsiInternalXtend.g:9584:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // PsiInternalXtend.g:9584:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // PsiInternalXtend.g:9585:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXFunctionTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_27);
                            ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              						
                            }

                            }


                            }

                            // PsiInternalXtend.g:9594:5: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop254:
                            do {
                                int alt254=2;
                                int LA254_0 = input.LA(1);

                                if ( (LA254_0==KW_Comma) ) {
                                    alt254=1;
                                }


                                switch (alt254) {
                            	case 1 :
                            	    // PsiInternalXtend.g:9595:6: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXFunctionTypeRef_CommaKeyword_0_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_28); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_2);
                            	      					
                            	    }
                            	    // PsiInternalXtend.g:9602:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // PsiInternalXtend.g:9603:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // PsiInternalXtend.g:9603:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // PsiInternalXtend.g:9604:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXFunctionTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop254;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFunctionTypeRef_RightParenthesisKeyword_0_2ElementType());
                      			
                    }
                    otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_29); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_4);
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXFunctionTypeRef_EqualsSignGreaterThanSignKeyword_1ElementType());
              		
            }
            otherlv_5=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_28); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_5);
              		
            }
            // PsiInternalXtend.g:9630:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // PsiInternalXtend.g:9631:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // PsiInternalXtend.g:9631:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // PsiInternalXtend.g:9632:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXFunctionTypeRef_ReturnTypeJvmTypeReferenceParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // PsiInternalXtend.g:9645:1: entryRuleJvmParameterizedTypeReference : ruleJvmParameterizedTypeReference EOF ;
    public final void entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9645:39: ( ruleJvmParameterizedTypeReference EOF )
            // PsiInternalXtend.g:9646:2: ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmParameterizedTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // PsiInternalXtend.g:9651:1: ruleJvmParameterizedTypeReference : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final void ruleJvmParameterizedTypeReference() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;

        try {
            // PsiInternalXtend.g:9651:34: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // PsiInternalXtend.g:9652:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // PsiInternalXtend.g:9652:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // PsiInternalXtend.g:9653:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // PsiInternalXtend.g:9653:3: ( ( ruleQualifiedName ) )
            // PsiInternalXtend.g:9654:4: ( ruleQualifiedName )
            {
            // PsiInternalXtend.g:9654:4: ( ruleQualifiedName )
            // PsiInternalXtend.g:9655:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmParameterizedTypeReference_TypeJvmTypeCrossReference_0_0ElementType());
              				
            }
            pushFollow(FOLLOW_125);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:9664:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt261=2;
            alt261 = dfa261.predict(input);
            switch (alt261) {
                case 1 :
                    // PsiInternalXtend.g:9665:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // PsiInternalXtend.g:9665:4: ( ( '<' )=>otherlv_1= '<' )
                    // PsiInternalXtend.g:9666:5: ( '<' )=>otherlv_1= '<'
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_LessThanSignKeyword_1_0ElementType());
                      				
                    }
                    otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_1);
                      				
                    }

                    }

                    // PsiInternalXtend.g:9675:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // PsiInternalXtend.g:9676:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // PsiInternalXtend.g:9676:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // PsiInternalXtend.g:9677:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:9686:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop257:
                    do {
                        int alt257=2;
                        int LA257_0 = input.LA(1);

                        if ( (LA257_0==KW_Comma) ) {
                            alt257=1;
                        }


                        switch (alt257) {
                    	case 1 :
                    	    // PsiInternalXtend.g:9687:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_CommaKeyword_1_2_0ElementType());
                    	      				
                    	    }
                    	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_3);
                    	      				
                    	    }
                    	    // PsiInternalXtend.g:9694:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // PsiInternalXtend.g:9695:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // PsiInternalXtend.g:9695:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // PsiInternalXtend.g:9696:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop257;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_GreaterThanSignKeyword_1_3ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_53); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }
                    // PsiInternalXtend.g:9713:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop260:
                    do {
                        int alt260=2;
                        alt260 = dfa260.predict(input);
                        switch (alt260) {
                    	case 1 :
                    	    // PsiInternalXtend.g:9714:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // PsiInternalXtend.g:9714:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // PsiInternalXtend.g:9715:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // PsiInternalXtend.g:9721:6: ( () otherlv_7= '.' )
                    	    // PsiInternalXtend.g:9722:7: () otherlv_7= '.'
                    	    {
                    	    // PsiInternalXtend.g:9722:7: ()
                    	    // PsiInternalXtend.g:9723:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								precedeComposite(elementTypeProvider.getJvmParameterizedTypeReference_JvmInnerTypeReferenceOuterAction_1_4_0_0_0ElementType());
                    	      								doneComposite();
                    	      							
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      							markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_FullStopKeyword_1_4_0_0_1ElementType());
                    	      						
                    	    }
                    	    otherlv_7=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneLeaf(otherlv_7);
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // PsiInternalXtend.g:9737:5: ( ( ruleValidID ) )
                    	    // PsiInternalXtend.g:9738:6: ( ruleValidID )
                    	    {
                    	    // PsiInternalXtend.g:9738:6: ( ruleValidID )
                    	    // PsiInternalXtend.g:9739:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getJvmParameterizedTypeReference_TypeJvmTypeCrossReference_1_4_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_54);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // PsiInternalXtend.g:9748:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt259=2;
                    	    alt259 = dfa259.predict(input);
                    	    switch (alt259) {
                    	        case 1 :
                    	            // PsiInternalXtend.g:9749:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // PsiInternalXtend.g:9749:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // PsiInternalXtend.g:9750:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              							markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_LessThanSignKeyword_1_4_2_0ElementType());
                    	              						
                    	            }
                    	            otherlv_9=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return ;
                    	            if ( state.backtracking==0 ) {

                    	              							doneLeaf(otherlv_9);
                    	              						
                    	            }

                    	            }

                    	            // PsiInternalXtend.g:9759:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // PsiInternalXtend.g:9760:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // PsiInternalXtend.g:9760:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // PsiInternalXtend.g:9761:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0ElementType());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_10);
                    	            ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return ;
                    	            if ( state.backtracking==0 ) {

                    	              								doneComposite();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // PsiInternalXtend.g:9770:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop258:
                    	            do {
                    	                int alt258=2;
                    	                int LA258_0 = input.LA(1);

                    	                if ( (LA258_0==KW_Comma) ) {
                    	                    alt258=1;
                    	                }


                    	                switch (alt258) {
                    	            	case 1 :
                    	            	    // PsiInternalXtend.g:9771:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_CommaKeyword_1_4_2_2_0ElementType());
                    	            	      						
                    	            	    }
                    	            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return ;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							doneLeaf(otherlv_11);
                    	            	      						
                    	            	    }
                    	            	    // PsiInternalXtend.g:9778:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // PsiInternalXtend.g:9779:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // PsiInternalXtend.g:9779:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // PsiInternalXtend.g:9780:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0ElementType());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_10);
                    	            	    ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return ;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									doneComposite();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop258;
                    	                }
                    	            } while (true);

                    	            if ( state.backtracking==0 ) {

                    	              						markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_GreaterThanSignKeyword_1_4_2_3ElementType());
                    	              					
                    	            }
                    	            otherlv_13=(Token)match(input,KW_GreaterThanSign,FOLLOW_53); if (state.failed) return ;
                    	            if ( state.backtracking==0 ) {

                    	              						doneLeaf(otherlv_13);
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop260;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // PsiInternalXtend.g:9804:1: entryRuleJvmArgumentTypeReference : ruleJvmArgumentTypeReference EOF ;
    public final void entryRuleJvmArgumentTypeReference() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9804:34: ( ruleJvmArgumentTypeReference EOF )
            // PsiInternalXtend.g:9805:2: ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmArgumentTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // PsiInternalXtend.g:9810:1: ruleJvmArgumentTypeReference : ( ruleJvmTypeReference | ruleJvmWildcardTypeReference ) ;
    public final void ruleJvmArgumentTypeReference() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9810:29: ( ( ruleJvmTypeReference | ruleJvmWildcardTypeReference ) )
            // PsiInternalXtend.g:9811:2: ( ruleJvmTypeReference | ruleJvmWildcardTypeReference )
            {
            // PsiInternalXtend.g:9811:2: ( ruleJvmTypeReference | ruleJvmWildcardTypeReference )
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( ((LA262_0>=KW_Annotation && LA262_0<=KW_LeftParenthesis)||LA262_0==KW_EqualsSignGreaterThanSign||LA262_0==KW_Create||(LA262_0>=KW_AFTER && LA262_0<=KW_SEPARATOR)||LA262_0==RULE_ID) ) {
                alt262=1;
            }
            else if ( (LA262_0==KW_QuestionMark) ) {
                alt262=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;
            }
            switch (alt262) {
                case 1 :
                    // PsiInternalXtend.g:9812:3: ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmArgumentTypeReference_JvmTypeReferenceParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:9820:3: ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmArgumentTypeReference_JvmWildcardTypeReferenceParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // PsiInternalXtend.g:9831:1: entryRuleJvmWildcardTypeReference : ruleJvmWildcardTypeReference EOF ;
    public final void entryRuleJvmWildcardTypeReference() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9831:34: ( ruleJvmWildcardTypeReference EOF )
            // PsiInternalXtend.g:9832:2: ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmWildcardTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // PsiInternalXtend.g:9837:1: ruleJvmWildcardTypeReference : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final void ruleJvmWildcardTypeReference() throws RecognitionException {
        Token otherlv_1=null;

        try {
            // PsiInternalXtend.g:9837:29: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // PsiInternalXtend.g:9838:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // PsiInternalXtend.g:9838:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // PsiInternalXtend.g:9839:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // PsiInternalXtend.g:9839:3: ()
            // PsiInternalXtend.g:9840:4: 
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getJvmWildcardTypeReference_JvmWildcardTypeReferenceAction_0ElementType());
              				doneComposite();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmWildcardTypeReference_QuestionMarkKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_QuestionMark,FOLLOW_126); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            // PsiInternalXtend.g:9852:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt265=3;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==KW_Extends) ) {
                alt265=1;
            }
            else if ( (LA265_0==KW_Super) ) {
                alt265=2;
            }
            switch (alt265) {
                case 1 :
                    // PsiInternalXtend.g:9853:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // PsiInternalXtend.g:9853:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // PsiInternalXtend.g:9854:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // PsiInternalXtend.g:9854:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // PsiInternalXtend.g:9855:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // PsiInternalXtend.g:9855:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // PsiInternalXtend.g:9856:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmUpperBoundParserRuleCall_2_0_0_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_127);
                    ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:9865:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop263:
                    do {
                        int alt263=2;
                        int LA263_0 = input.LA(1);

                        if ( (LA263_0==KW_Ampersand) ) {
                            alt263=1;
                        }


                        switch (alt263) {
                    	case 1 :
                    	    // PsiInternalXtend.g:9866:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // PsiInternalXtend.g:9866:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // PsiInternalXtend.g:9867:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_127);
                    	    ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop263;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:9878:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // PsiInternalXtend.g:9878:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // PsiInternalXtend.g:9879:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // PsiInternalXtend.g:9879:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // PsiInternalXtend.g:9880:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // PsiInternalXtend.g:9880:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // PsiInternalXtend.g:9881:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmLowerBoundParserRuleCall_2_1_0_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_127);
                    ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:9890:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop264:
                    do {
                        int alt264=2;
                        int LA264_0 = input.LA(1);

                        if ( (LA264_0==KW_Ampersand) ) {
                            alt264=1;
                        }


                        switch (alt264) {
                    	case 1 :
                    	    // PsiInternalXtend.g:9891:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // PsiInternalXtend.g:9891:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // PsiInternalXtend.g:9892:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_127);
                    	    ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop264;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // PsiInternalXtend.g:9907:1: entryRuleJvmUpperBound : ruleJvmUpperBound EOF ;
    public final void entryRuleJvmUpperBound() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9907:23: ( ruleJvmUpperBound EOF )
            // PsiInternalXtend.g:9908:2: ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmUpperBoundElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // PsiInternalXtend.g:9913:1: ruleJvmUpperBound : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final void ruleJvmUpperBound() throws RecognitionException {
        Token otherlv_0=null;

        try {
            // PsiInternalXtend.g:9913:18: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // PsiInternalXtend.g:9914:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // PsiInternalXtend.g:9914:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // PsiInternalXtend.g:9915:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmUpperBound_ExtendsKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Extends,FOLLOW_28); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            // PsiInternalXtend.g:9922:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // PsiInternalXtend.g:9923:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // PsiInternalXtend.g:9923:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // PsiInternalXtend.g:9924:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmUpperBound_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // PsiInternalXtend.g:9937:1: entryRuleJvmUpperBoundAnded : ruleJvmUpperBoundAnded EOF ;
    public final void entryRuleJvmUpperBoundAnded() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9937:28: ( ruleJvmUpperBoundAnded EOF )
            // PsiInternalXtend.g:9938:2: ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmUpperBoundAndedElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // PsiInternalXtend.g:9943:1: ruleJvmUpperBoundAnded : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final void ruleJvmUpperBoundAnded() throws RecognitionException {
        Token otherlv_0=null;

        try {
            // PsiInternalXtend.g:9943:23: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // PsiInternalXtend.g:9944:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // PsiInternalXtend.g:9944:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // PsiInternalXtend.g:9945:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmUpperBoundAnded_AmpersandKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Ampersand,FOLLOW_28); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            // PsiInternalXtend.g:9952:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // PsiInternalXtend.g:9953:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // PsiInternalXtend.g:9953:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // PsiInternalXtend.g:9954:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmUpperBoundAnded_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // PsiInternalXtend.g:9967:1: entryRuleJvmLowerBound : ruleJvmLowerBound EOF ;
    public final void entryRuleJvmLowerBound() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9967:23: ( ruleJvmLowerBound EOF )
            // PsiInternalXtend.g:9968:2: ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmLowerBoundElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // PsiInternalXtend.g:9973:1: ruleJvmLowerBound : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final void ruleJvmLowerBound() throws RecognitionException {
        Token otherlv_0=null;

        try {
            // PsiInternalXtend.g:9973:18: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // PsiInternalXtend.g:9974:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // PsiInternalXtend.g:9974:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // PsiInternalXtend.g:9975:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmLowerBound_SuperKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Super,FOLLOW_28); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            // PsiInternalXtend.g:9982:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // PsiInternalXtend.g:9983:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // PsiInternalXtend.g:9983:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // PsiInternalXtend.g:9984:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmLowerBound_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // PsiInternalXtend.g:9997:1: entryRuleJvmLowerBoundAnded : ruleJvmLowerBoundAnded EOF ;
    public final void entryRuleJvmLowerBoundAnded() throws RecognitionException {
        try {
            // PsiInternalXtend.g:9997:28: ( ruleJvmLowerBoundAnded EOF )
            // PsiInternalXtend.g:9998:2: ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmLowerBoundAndedElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // PsiInternalXtend.g:10003:1: ruleJvmLowerBoundAnded : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final void ruleJvmLowerBoundAnded() throws RecognitionException {
        Token otherlv_0=null;

        try {
            // PsiInternalXtend.g:10003:23: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // PsiInternalXtend.g:10004:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // PsiInternalXtend.g:10004:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // PsiInternalXtend.g:10005:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmLowerBoundAnded_AmpersandKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Ampersand,FOLLOW_28); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            // PsiInternalXtend.g:10012:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // PsiInternalXtend.g:10013:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // PsiInternalXtend.g:10013:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // PsiInternalXtend.g:10014:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmLowerBoundAnded_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleJvmTypeParameter"
    // PsiInternalXtend.g:10027:1: entryRuleJvmTypeParameter : ruleJvmTypeParameter EOF ;
    public final void entryRuleJvmTypeParameter() throws RecognitionException {
        try {
            // PsiInternalXtend.g:10027:26: ( ruleJvmTypeParameter EOF )
            // PsiInternalXtend.g:10028:2: ruleJvmTypeParameter EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmTypeParameterElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleJvmTypeParameter();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJvmTypeParameter"


    // $ANTLR start "ruleJvmTypeParameter"
    // PsiInternalXtend.g:10033:1: ruleJvmTypeParameter : ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? ) ;
    public final void ruleJvmTypeParameter() throws RecognitionException {
        try {
            // PsiInternalXtend.g:10033:21: ( ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? ) )
            // PsiInternalXtend.g:10034:2: ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? )
            {
            // PsiInternalXtend.g:10034:2: ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? )
            // PsiInternalXtend.g:10035:3: ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )?
            {
            // PsiInternalXtend.g:10035:3: ( (lv_name_0_0= ruleValidID ) )
            // PsiInternalXtend.g:10036:4: (lv_name_0_0= ruleValidID )
            {
            // PsiInternalXtend.g:10036:4: (lv_name_0_0= ruleValidID )
            // PsiInternalXtend.g:10037:5: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmTypeParameter_NameValidIDParserRuleCall_0_0ElementType());
              				
            }
            pushFollow(FOLLOW_128);
            ruleValidID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }

            // PsiInternalXtend.g:10046:3: ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==KW_Extends) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // PsiInternalXtend.g:10047:4: ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // PsiInternalXtend.g:10047:4: ( (lv_constraints_1_0= ruleJvmUpperBound ) )
                    // PsiInternalXtend.g:10048:5: (lv_constraints_1_0= ruleJvmUpperBound )
                    {
                    // PsiInternalXtend.g:10048:5: (lv_constraints_1_0= ruleJvmUpperBound )
                    // PsiInternalXtend.g:10049:6: lv_constraints_1_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getJvmTypeParameter_ConstraintsJvmUpperBoundParserRuleCall_1_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_127);
                    ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    // PsiInternalXtend.g:10058:4: ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )*
                    loop266:
                    do {
                        int alt266=2;
                        int LA266_0 = input.LA(1);

                        if ( (LA266_0==KW_Ampersand) ) {
                            alt266=1;
                        }


                        switch (alt266) {
                    	case 1 :
                    	    // PsiInternalXtend.g:10059:5: (lv_constraints_2_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // PsiInternalXtend.g:10059:5: (lv_constraints_2_0= ruleJvmUpperBoundAnded )
                    	    // PsiInternalXtend.g:10060:6: lv_constraints_2_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getJvmTypeParameter_ConstraintsJvmUpperBoundAndedParserRuleCall_1_1_0ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_127);
                    	    ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop266;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleJvmTypeParameter"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // PsiInternalXtend.g:10074:1: entryRuleQualifiedNameWithWildcard : ruleQualifiedNameWithWildcard EOF ;
    public final void entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        try {
            // PsiInternalXtend.g:10074:35: ( ruleQualifiedNameWithWildcard EOF )
            // PsiInternalXtend.g:10075:2: ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getQualifiedNameWithWildcardElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // PsiInternalXtend.g:10080:1: ruleQualifiedNameWithWildcard : ( ruleQualifiedName kw= '.' kw= '*' ) ;
    public final void ruleQualifiedNameWithWildcard() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:10080:30: ( ( ruleQualifiedName kw= '.' kw= '*' ) )
            // PsiInternalXtend.g:10081:2: ( ruleQualifiedName kw= '.' kw= '*' )
            {
            // PsiInternalXtend.g:10081:2: ( ruleQualifiedName kw= '.' kw= '*' )
            // PsiInternalXtend.g:10082:3: ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getQualifiedNameWithWildcard_QualifiedNameParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_129);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getQualifiedNameWithWildcard_FullStopKeyword_1ElementType());
              		
            }
            kw=(Token)match(input,KW_FullStop,FOLLOW_130); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(kw);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getQualifiedNameWithWildcard_AsteriskKeyword_2ElementType());
              		
            }
            kw=(Token)match(input,KW_Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(kw);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleXImportSection"
    // PsiInternalXtend.g:10107:1: entryRuleXImportSection : ruleXImportSection EOF ;
    public final void entryRuleXImportSection() throws RecognitionException {
        try {
            // PsiInternalXtend.g:10107:24: ( ruleXImportSection EOF )
            // PsiInternalXtend.g:10108:2: ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXImportSectionElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXImportSection();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // PsiInternalXtend.g:10113:1: ruleXImportSection : ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final void ruleXImportSection() throws RecognitionException {
        try {
            // PsiInternalXtend.g:10113:19: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // PsiInternalXtend.g:10114:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // PsiInternalXtend.g:10114:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt268=0;
            loop268:
            do {
                int alt268=2;
                int LA268_0 = input.LA(1);

                if ( (LA268_0==KW_Import) ) {
                    alt268=1;
                }


                switch (alt268) {
            	case 1 :
            	    // PsiInternalXtend.g:10115:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // PsiInternalXtend.g:10115:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // PsiInternalXtend.g:10116:4: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      				markComposite(elementTypeProvider.getXImportSection_ImportDeclarationsXImportDeclarationParserRuleCall_0ElementType());
            	      			
            	    }
            	    pushFollow(FOLLOW_131);
            	    ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      				doneComposite();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt268 >= 1 ) break loop268;
            	    if (state.backtracking>0) {state.failed=true; return ;}
                        EarlyExitException eee =
                            new EarlyExitException(268, input);
                        throw eee;
                }
                cnt268++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleXImportDeclaration"
    // PsiInternalXtend.g:10128:1: entryRuleXImportDeclaration : ruleXImportDeclaration EOF ;
    public final void entryRuleXImportDeclaration() throws RecognitionException {
        try {
            // PsiInternalXtend.g:10128:28: ( ruleXImportDeclaration EOF )
            // PsiInternalXtend.g:10129:2: ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXImportDeclarationElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // PsiInternalXtend.g:10134:1: ruleXImportDeclaration : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final void ruleXImportDeclaration() throws RecognitionException {
        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;

        try {
            // PsiInternalXtend.g:10134:23: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // PsiInternalXtend.g:10135:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // PsiInternalXtend.g:10135:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // PsiInternalXtend.g:10136:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXImportDeclaration_ImportKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Import,FOLLOW_132); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            // PsiInternalXtend.g:10143:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt271=3;
            alt271 = dfa271.predict(input);
            switch (alt271) {
                case 1 :
                    // PsiInternalXtend.g:10144:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // PsiInternalXtend.g:10144:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // PsiInternalXtend.g:10145:5: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // PsiInternalXtend.g:10145:5: ( (lv_static_1_0= 'static' ) )
                    // PsiInternalXtend.g:10146:6: (lv_static_1_0= 'static' )
                    {
                    // PsiInternalXtend.g:10146:6: (lv_static_1_0= 'static' )
                    // PsiInternalXtend.g:10147:7: lv_static_1_0= 'static'
                    {
                    if ( state.backtracking==0 ) {

                      							markLeaf(elementTypeProvider.getXImportDeclaration_StaticStaticKeyword_1_0_0_0ElementType());
                      						
                    }
                    lv_static_1_0=(Token)match(input,KW_Static,FOLLOW_133); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneLeaf(lv_static_1_0);
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:10156:5: ( (lv_extension_2_0= 'extension' ) )?
                    int alt269=2;
                    int LA269_0 = input.LA(1);

                    if ( (LA269_0==KW_Extension) ) {
                        alt269=1;
                    }
                    switch (alt269) {
                        case 1 :
                            // PsiInternalXtend.g:10157:6: (lv_extension_2_0= 'extension' )
                            {
                            // PsiInternalXtend.g:10157:6: (lv_extension_2_0= 'extension' )
                            // PsiInternalXtend.g:10158:7: lv_extension_2_0= 'extension'
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getXImportDeclaration_ExtensionExtensionKeyword_1_0_1_0ElementType());
                              						
                            }
                            lv_extension_2_0=(Token)match(input,KW_Extension,FOLLOW_133); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(lv_extension_2_0);
                              						
                            }

                            }


                            }
                            break;

                    }

                    // PsiInternalXtend.g:10167:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // PsiInternalXtend.g:10168:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // PsiInternalXtend.g:10168:6: ( ruleQualifiedNameInStaticImport )
                    // PsiInternalXtend.g:10169:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXImportDeclaration_ImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_134);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }

                    // PsiInternalXtend.g:10178:5: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt270=2;
                    int LA270_0 = input.LA(1);

                    if ( (LA270_0==KW_Asterisk) ) {
                        alt270=1;
                    }
                    else if ( (LA270_0==KW_Annotation||LA270_0==KW_Create||(LA270_0>=KW_AFTER && LA270_0<=KW_SEPARATOR)||LA270_0==RULE_ID) ) {
                        alt270=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 270, 0, input);

                        throw nvae;
                    }
                    switch (alt270) {
                        case 1 :
                            // PsiInternalXtend.g:10179:6: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // PsiInternalXtend.g:10179:6: ( (lv_wildcard_4_0= '*' ) )
                            // PsiInternalXtend.g:10180:7: (lv_wildcard_4_0= '*' )
                            {
                            // PsiInternalXtend.g:10180:7: (lv_wildcard_4_0= '*' )
                            // PsiInternalXtend.g:10181:8: lv_wildcard_4_0= '*'
                            {
                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getXImportDeclaration_WildcardAsteriskKeyword_1_0_3_0_0ElementType());
                              							
                            }
                            lv_wildcard_4_0=(Token)match(input,KW_Asterisk,FOLLOW_34); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(lv_wildcard_4_0);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // PsiInternalXtend.g:10191:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // PsiInternalXtend.g:10191:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // PsiInternalXtend.g:10192:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // PsiInternalXtend.g:10192:7: (lv_memberName_5_0= ruleValidID )
                            // PsiInternalXtend.g:10193:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXImportDeclaration_MemberNameValidIDParserRuleCall_1_0_3_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_34);
                            ruleValidID();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // PsiInternalXtend.g:10205:4: ( ( ruleQualifiedName ) )
                    {
                    // PsiInternalXtend.g:10205:4: ( ( ruleQualifiedName ) )
                    // PsiInternalXtend.g:10206:5: ( ruleQualifiedName )
                    {
                    // PsiInternalXtend.g:10206:5: ( ruleQualifiedName )
                    // PsiInternalXtend.g:10207:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXImportDeclaration_ImportedTypeJvmDeclaredTypeCrossReference_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // PsiInternalXtend.g:10217:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // PsiInternalXtend.g:10217:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // PsiInternalXtend.g:10218:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // PsiInternalXtend.g:10218:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // PsiInternalXtend.g:10219:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXImportDeclaration_ImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // PsiInternalXtend.g:10229:3: (otherlv_8= ';' )?
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==KW_Semicolon) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    // PsiInternalXtend.g:10230:4: otherlv_8= ';'
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXImportDeclaration_SemicolonKeyword_2ElementType());
                      			
                    }
                    otherlv_8=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_8);
                      			
                    }

                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // PsiInternalXtend.g:10242:1: entryRuleQualifiedNameInStaticImport : ruleQualifiedNameInStaticImport EOF ;
    public final void entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        try {
            // PsiInternalXtend.g:10242:37: ( ruleQualifiedNameInStaticImport EOF )
            // PsiInternalXtend.g:10243:2: ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getQualifiedNameInStaticImportElementType()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return ;
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // PsiInternalXtend.g:10248:1: ruleQualifiedNameInStaticImport : ( ruleValidID kw= '.' )+ ;
    public final void ruleQualifiedNameInStaticImport() throws RecognitionException {
        Token kw=null;

        try {
            // PsiInternalXtend.g:10248:32: ( ( ruleValidID kw= '.' )+ )
            // PsiInternalXtend.g:10249:2: ( ruleValidID kw= '.' )+
            {
            // PsiInternalXtend.g:10249:2: ( ruleValidID kw= '.' )+
            int cnt273=0;
            loop273:
            do {
                int alt273=2;
                switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA273_2 = input.LA(2);

                    if ( (LA273_2==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_Create:
                    {
                    int LA273_3 = input.LA(2);

                    if ( (LA273_3==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_Annotation:
                    {
                    int LA273_4 = input.LA(2);

                    if ( (LA273_4==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_AFTER:
                    {
                    int LA273_5 = input.LA(2);

                    if ( (LA273_5==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA273_6 = input.LA(2);

                    if ( (LA273_6==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA273_7 = input.LA(2);

                    if ( (LA273_7==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;

                }

                switch (alt273) {
            	case 1 :
            	    // PsiInternalXtend.g:10250:3: ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			markComposite(elementTypeProvider.getQualifiedNameInStaticImport_ValidIDParserRuleCall_0ElementType());
            	      		
            	    }
            	    pushFollow(FOLLOW_129);
            	    ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      			doneComposite();
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			markLeaf(elementTypeProvider.getQualifiedNameInStaticImport_FullStopKeyword_1ElementType());
            	      		
            	    }
            	    kw=(Token)match(input,KW_FullStop,FOLLOW_135); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      			doneLeaf(kw);
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt273 >= 1 ) break loop273;
            	    if (state.backtracking>0) {state.failed=true; return ;}
                        EarlyExitException eee =
                            new EarlyExitException(273, input);
                        throw eee;
                }
                cnt273++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"

    // $ANTLR start synpred1_PsiInternalXtend
    public final void synpred1_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:1871:7: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )
        // PsiInternalXtend.g:1871:8: ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' )
        {
        // PsiInternalXtend.g:1871:8: ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' )
        // PsiInternalXtend.g:1872:8: ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '('
        {
        // PsiInternalXtend.g:1872:8: ( ( ruleJvmTypeReference ) )
        // PsiInternalXtend.g:1873:9: ( ruleJvmTypeReference )
        {
        // PsiInternalXtend.g:1873:9: ( ruleJvmTypeReference )
        // PsiInternalXtend.g:1874:10: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_40);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // PsiInternalXtend.g:1877:8: ( ( ruleCreateExtensionInfo ) )
        // PsiInternalXtend.g:1878:9: ( ruleCreateExtensionInfo )
        {
        // PsiInternalXtend.g:1878:9: ( ruleCreateExtensionInfo )
        // PsiInternalXtend.g:1879:10: ruleCreateExtensionInfo
        {
        pushFollow(FOLLOW_3);
        ruleCreateExtensionInfo();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // PsiInternalXtend.g:1882:8: ( ( ruleValidID ) )
        // PsiInternalXtend.g:1883:9: ( ruleValidID )
        {
        // PsiInternalXtend.g:1883:9: ( ruleValidID )
        // PsiInternalXtend.g:1884:10: ruleValidID
        {
        pushFollow(FOLLOW_41);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred1_PsiInternalXtend

    // $ANTLR start synpred2_PsiInternalXtend
    public final void synpred2_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:1935:7: ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )
        // PsiInternalXtend.g:1935:8: ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' )
        {
        // PsiInternalXtend.g:1935:8: ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' )
        // PsiInternalXtend.g:1936:8: ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '('
        {
        // PsiInternalXtend.g:1936:8: ( ( ruleTypeReferenceWithTypeArgs ) )
        // PsiInternalXtend.g:1937:9: ( ruleTypeReferenceWithTypeArgs )
        {
        // PsiInternalXtend.g:1937:9: ( ruleTypeReferenceWithTypeArgs )
        // PsiInternalXtend.g:1938:10: ruleTypeReferenceWithTypeArgs
        {
        pushFollow(FOLLOW_39);
        ruleTypeReferenceWithTypeArgs();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // PsiInternalXtend.g:1941:8: ( ( ruleFunctionID ) )
        // PsiInternalXtend.g:1942:9: ( ruleFunctionID )
        {
        // PsiInternalXtend.g:1942:9: ( ruleFunctionID )
        // PsiInternalXtend.g:1943:10: ruleFunctionID
        {
        pushFollow(FOLLOW_41);
        ruleFunctionID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_PsiInternalXtend

    // $ANTLR start synpred3_PsiInternalXtend
    public final void synpred3_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:1983:7: ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )
        // PsiInternalXtend.g:1983:8: ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' )
        {
        // PsiInternalXtend.g:1983:8: ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' )
        // PsiInternalXtend.g:1984:8: ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '('
        {
        // PsiInternalXtend.g:1984:8: ( ( ruleTypeReferenceNoTypeArgs ) )
        // PsiInternalXtend.g:1985:9: ( ruleTypeReferenceNoTypeArgs )
        {
        // PsiInternalXtend.g:1985:9: ( ruleTypeReferenceNoTypeArgs )
        // PsiInternalXtend.g:1986:10: ruleTypeReferenceNoTypeArgs
        {
        pushFollow(FOLLOW_39);
        ruleTypeReferenceNoTypeArgs();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // PsiInternalXtend.g:1989:8: ( ( ruleFunctionID ) )
        // PsiInternalXtend.g:1990:9: ( ruleFunctionID )
        {
        // PsiInternalXtend.g:1990:9: ( ruleFunctionID )
        // PsiInternalXtend.g:1991:10: ruleFunctionID
        {
        pushFollow(FOLLOW_41);
        ruleFunctionID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred3_PsiInternalXtend

    // $ANTLR start synpred4_PsiInternalXtend
    public final void synpred4_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:2031:7: ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )
        // PsiInternalXtend.g:2031:8: ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' )
        {
        // PsiInternalXtend.g:2031:8: ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' )
        // PsiInternalXtend.g:2032:8: ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '('
        {
        // PsiInternalXtend.g:2032:8: ( ( ruleCreateExtensionInfo ) )
        // PsiInternalXtend.g:2033:9: ( ruleCreateExtensionInfo )
        {
        // PsiInternalXtend.g:2033:9: ( ruleCreateExtensionInfo )
        // PsiInternalXtend.g:2034:10: ruleCreateExtensionInfo
        {
        pushFollow(FOLLOW_3);
        ruleCreateExtensionInfo();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // PsiInternalXtend.g:2037:8: ( ( ruleValidID ) )
        // PsiInternalXtend.g:2038:9: ( ruleValidID )
        {
        // PsiInternalXtend.g:2038:9: ( ruleValidID )
        // PsiInternalXtend.g:2039:10: ruleValidID
        {
        pushFollow(FOLLOW_41);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_PsiInternalXtend

    // $ANTLR start synpred5_PsiInternalXtend
    public final void synpred5_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:2905:5: ( ( () ruleArrayBrackets ) )
        // PsiInternalXtend.g:2905:6: ( () ruleArrayBrackets )
        {
        // PsiInternalXtend.g:2905:6: ( () ruleArrayBrackets )
        // PsiInternalXtend.g:2906:6: () ruleArrayBrackets
        {
        // PsiInternalXtend.g:2906:6: ()
        // PsiInternalXtend.g:2907:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_PsiInternalXtend

    // $ANTLR start synpred6_PsiInternalXtend
    public final void synpred6_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:2938:5: ( ( () ruleArrayBrackets ) )
        // PsiInternalXtend.g:2938:6: ( () ruleArrayBrackets )
        {
        // PsiInternalXtend.g:2938:6: ( () ruleArrayBrackets )
        // PsiInternalXtend.g:2939:6: () ruleArrayBrackets
        {
        // PsiInternalXtend.g:2939:6: ()
        // PsiInternalXtend.g:2940:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_PsiInternalXtend

    // $ANTLR start synpred7_PsiInternalXtend
    public final void synpred7_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:3040:6: ( ( () '.' ) )
        // PsiInternalXtend.g:3040:7: ( () '.' )
        {
        // PsiInternalXtend.g:3040:7: ( () '.' )
        // PsiInternalXtend.g:3041:7: () '.'
        {
        // PsiInternalXtend.g:3041:7: ()
        // PsiInternalXtend.g:3042:7: 
        {
        }

        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_PsiInternalXtend

    // $ANTLR start synpred8_PsiInternalXtend
    public final void synpred8_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:3075:7: ( '<' )
        // PsiInternalXtend.g:3075:8: '<'
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_PsiInternalXtend

    // $ANTLR start synpred10_PsiInternalXtend
    public final void synpred10_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4011:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )
        // PsiInternalXtend.g:4011:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) )
        {
        // PsiInternalXtend.g:4011:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) )
        // PsiInternalXtend.g:4012:6: ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) )
        {
        // PsiInternalXtend.g:4012:6: ( ( ruleJvmTypeReference ) )
        // PsiInternalXtend.g:4013:7: ( ruleJvmTypeReference )
        {
        // PsiInternalXtend.g:4013:7: ( ruleJvmTypeReference )
        // PsiInternalXtend.g:4014:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_59);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // PsiInternalXtend.g:4017:6: ( ( ruleInnerVarID ) )
        // PsiInternalXtend.g:4018:7: ( ruleInnerVarID )
        {
        // PsiInternalXtend.g:4018:7: ( ruleInnerVarID )
        // PsiInternalXtend.g:4019:8: ruleInnerVarID
        {
        pushFollow(FOLLOW_2);
        ruleInnerVarID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_PsiInternalXtend

    // $ANTLR start synpred11_PsiInternalXtend
    public final void synpred11_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4103:5: ( ( () '{' ) )
        // PsiInternalXtend.g:4103:6: ( () '{' )
        {
        // PsiInternalXtend.g:4103:6: ( () '{' )
        // PsiInternalXtend.g:4104:6: () '{'
        {
        // PsiInternalXtend.g:4104:6: ()
        // PsiInternalXtend.g:4105:6: 
        {
        }

        match(input,KW_LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred11_PsiInternalXtend

    // $ANTLR start synpred12_PsiInternalXtend
    public final void synpred12_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4182:5: ( '<' )
        // PsiInternalXtend.g:4182:6: '<'
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_PsiInternalXtend

    // $ANTLR start synpred13_PsiInternalXtend
    public final void synpred13_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4232:5: ( ( '(' ) )
        // PsiInternalXtend.g:4232:6: ( '(' )
        {
        // PsiInternalXtend.g:4232:6: ( '(' )
        // PsiInternalXtend.g:4233:6: '('
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_PsiInternalXtend

    // $ANTLR start synpred14_PsiInternalXtend
    public final void synpred14_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4248:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // PsiInternalXtend.g:4248:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // PsiInternalXtend.g:4248:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // PsiInternalXtend.g:4249:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // PsiInternalXtend.g:4249:7: ()
        // PsiInternalXtend.g:4250:7: 
        {
        }

        // PsiInternalXtend.g:4251:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt279=2;
        int LA279_0 = input.LA(1);

        if ( (LA279_0==KW_Package||LA279_0==KW_Class||(LA279_0>=KW_Extends && LA279_0<=KW_Implements)||(LA279_0>=KW_Interface && LA279_0<=KW_LeftParenthesis)||LA279_0==KW_EqualsSignGreaterThanSign||(LA279_0>=KW_Extension && LA279_0<=KW_Throws)||(LA279_0>=KW_Public && LA279_0<=KW_Transient)||(LA279_0>=KW_Def && LA279_0<=KW_Create)||(LA279_0>=KW_AFTER && LA279_0<=KW_Import)||LA279_0==RULE_ID) ) {
            alt279=1;
        }
        switch (alt279) {
            case 1 :
                // PsiInternalXtend.g:4252:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // PsiInternalXtend.g:4252:8: ( ( ruleJvmFormalParameter ) )
                // PsiInternalXtend.g:4253:9: ( ruleJvmFormalParameter )
                {
                // PsiInternalXtend.g:4253:9: ( ruleJvmFormalParameter )
                // PsiInternalXtend.g:4254:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_104);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // PsiInternalXtend.g:4257:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop278:
                do {
                    int alt278=2;
                    int LA278_0 = input.LA(1);

                    if ( (LA278_0==KW_Comma) ) {
                        alt278=1;
                    }


                    switch (alt278) {
                	case 1 :
                	    // PsiInternalXtend.g:4258:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                	    // PsiInternalXtend.g:4259:9: ( ( ruleJvmFormalParameter ) )
                	    // PsiInternalXtend.g:4260:10: ( ruleJvmFormalParameter )
                	    {
                	    // PsiInternalXtend.g:4260:10: ( ruleJvmFormalParameter )
                	    // PsiInternalXtend.g:4261:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_104);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop278;
                    }
                } while (true);


                }
                break;

        }

        // PsiInternalXtend.g:4266:7: ( ( '|' ) )
        // PsiInternalXtend.g:4267:8: ( '|' )
        {
        // PsiInternalXtend.g:4267:8: ( '|' )
        // PsiInternalXtend.g:4268:9: '|'
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred14_PsiInternalXtend

    // $ANTLR start synpred15_PsiInternalXtend
    public final void synpred15_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4327:4: ( ( () '[' ) )
        // PsiInternalXtend.g:4327:5: ( () '[' )
        {
        // PsiInternalXtend.g:4327:5: ( () '[' )
        // PsiInternalXtend.g:4328:5: () '['
        {
        // PsiInternalXtend.g:4328:5: ()
        // PsiInternalXtend.g:4329:5: 
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_PsiInternalXtend

    // $ANTLR start synpred16_PsiInternalXtend
    public final void synpred16_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4488:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // PsiInternalXtend.g:4488:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // PsiInternalXtend.g:4488:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // PsiInternalXtend.g:4489:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,KW_LeftParenthesis,FOLLOW_57); if (state.failed) return ;
        // PsiInternalXtend.g:4490:7: ( ( ruleJvmFormalParameter ) )
        // PsiInternalXtend.g:4491:8: ( ruleJvmFormalParameter )
        {
        // PsiInternalXtend.g:4491:8: ( ruleJvmFormalParameter )
        // PsiInternalXtend.g:4492:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_55);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_PsiInternalXtend

    // $ANTLR start synpred17_PsiInternalXtend
    public final void synpred17_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4548:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // PsiInternalXtend.g:4548:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // PsiInternalXtend.g:4548:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // PsiInternalXtend.g:4549:7: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // PsiInternalXtend.g:4549:7: ( ( ruleJvmFormalParameter ) )
        // PsiInternalXtend.g:4550:8: ( ruleJvmFormalParameter )
        {
        // PsiInternalXtend.g:4550:8: ( ruleJvmFormalParameter )
        // PsiInternalXtend.g:4551:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_55);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_PsiInternalXtend

    // $ANTLR start synpred18_PsiInternalXtend
    public final void synpred18_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:4656:4: ( 'new' )
        // PsiInternalXtend.g:4656:5: 'new'
        {
        match(input,KW_New,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred18_PsiInternalXtend

    // $ANTLR start synpred19_PsiInternalXtend
    public final void synpred19_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:5323:5: ( '(' )
        // PsiInternalXtend.g:5323:6: '('
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred19_PsiInternalXtend

    // $ANTLR start synpred20_PsiInternalXtend
    public final void synpred20_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:5335:7: ( ( ( ( ruleValidID ) ) '=' ) )
        // PsiInternalXtend.g:5335:8: ( ( ( ruleValidID ) ) '=' )
        {
        // PsiInternalXtend.g:5335:8: ( ( ( ruleValidID ) ) '=' )
        // PsiInternalXtend.g:5336:8: ( ( ruleValidID ) ) '='
        {
        // PsiInternalXtend.g:5336:8: ( ( ruleValidID ) )
        // PsiInternalXtend.g:5337:9: ( ruleValidID )
        {
        // PsiInternalXtend.g:5337:9: ( ruleValidID )
        // PsiInternalXtend.g:5338:10: ruleValidID
        {
        pushFollow(FOLLOW_77);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_PsiInternalXtend

    // $ANTLR start synpred23_PsiInternalXtend
    public final void synpred23_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:5473:5: ( ( () '#' '[' ) )
        // PsiInternalXtend.g:5473:6: ( () '#' '[' )
        {
        // PsiInternalXtend.g:5473:6: ( () '#' '[' )
        // PsiInternalXtend.g:5474:6: () '#' '['
        {
        // PsiInternalXtend.g:5474:6: ()
        // PsiInternalXtend.g:5475:6: 
        {
        }

        match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return ;
        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_PsiInternalXtend

    // $ANTLR start synpred24_PsiInternalXtend
    public final void synpred24_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:5596:5: ( ( () '#' '[' ) )
        // PsiInternalXtend.g:5596:6: ( () '#' '[' )
        {
        // PsiInternalXtend.g:5596:6: ( () '#' '[' )
        // PsiInternalXtend.g:5597:6: () '#' '['
        {
        // PsiInternalXtend.g:5597:6: ()
        // PsiInternalXtend.g:5598:6: 
        {
        }

        match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return ;
        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_PsiInternalXtend

    // $ANTLR start synpred25_PsiInternalXtend
    public final void synpred25_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:5779:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // PsiInternalXtend.g:5779:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // PsiInternalXtend.g:5779:7: ( () ( ( ruleOpMultiAssign ) ) )
        // PsiInternalXtend.g:5780:7: () ( ( ruleOpMultiAssign ) )
        {
        // PsiInternalXtend.g:5780:7: ()
        // PsiInternalXtend.g:5781:7: 
        {
        }

        // PsiInternalXtend.g:5782:7: ( ( ruleOpMultiAssign ) )
        // PsiInternalXtend.g:5783:8: ( ruleOpMultiAssign )
        {
        // PsiInternalXtend.g:5783:8: ( ruleOpMultiAssign )
        // PsiInternalXtend.g:5784:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred25_PsiInternalXtend

    // $ANTLR start synpred26_PsiInternalXtend
    public final void synpred26_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:5961:5: ( ( () ( ( ruleOpOr ) ) ) )
        // PsiInternalXtend.g:5961:6: ( () ( ( ruleOpOr ) ) )
        {
        // PsiInternalXtend.g:5961:6: ( () ( ( ruleOpOr ) ) )
        // PsiInternalXtend.g:5962:6: () ( ( ruleOpOr ) )
        {
        // PsiInternalXtend.g:5962:6: ()
        // PsiInternalXtend.g:5963:6: 
        {
        }

        // PsiInternalXtend.g:5964:6: ( ( ruleOpOr ) )
        // PsiInternalXtend.g:5965:7: ( ruleOpOr )
        {
        // PsiInternalXtend.g:5965:7: ( ruleOpOr )
        // PsiInternalXtend.g:5966:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred26_PsiInternalXtend

    // $ANTLR start synpred27_PsiInternalXtend
    public final void synpred27_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6041:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // PsiInternalXtend.g:6041:6: ( () ( ( ruleOpAnd ) ) )
        {
        // PsiInternalXtend.g:6041:6: ( () ( ( ruleOpAnd ) ) )
        // PsiInternalXtend.g:6042:6: () ( ( ruleOpAnd ) )
        {
        // PsiInternalXtend.g:6042:6: ()
        // PsiInternalXtend.g:6043:6: 
        {
        }

        // PsiInternalXtend.g:6044:6: ( ( ruleOpAnd ) )
        // PsiInternalXtend.g:6045:7: ( ruleOpAnd )
        {
        // PsiInternalXtend.g:6045:7: ( ruleOpAnd )
        // PsiInternalXtend.g:6046:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27_PsiInternalXtend

    // $ANTLR start synpred28_PsiInternalXtend
    public final void synpred28_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6121:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // PsiInternalXtend.g:6121:6: ( () ( ( ruleOpEquality ) ) )
        {
        // PsiInternalXtend.g:6121:6: ( () ( ( ruleOpEquality ) ) )
        // PsiInternalXtend.g:6122:6: () ( ( ruleOpEquality ) )
        {
        // PsiInternalXtend.g:6122:6: ()
        // PsiInternalXtend.g:6123:6: 
        {
        }

        // PsiInternalXtend.g:6124:6: ( ( ruleOpEquality ) )
        // PsiInternalXtend.g:6125:7: ( ruleOpEquality )
        {
        // PsiInternalXtend.g:6125:7: ( ruleOpEquality )
        // PsiInternalXtend.g:6126:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred28_PsiInternalXtend

    // $ANTLR start synpred29_PsiInternalXtend
    public final void synpred29_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6228:6: ( ( () 'instanceof' ) )
        // PsiInternalXtend.g:6228:7: ( () 'instanceof' )
        {
        // PsiInternalXtend.g:6228:7: ( () 'instanceof' )
        // PsiInternalXtend.g:6229:7: () 'instanceof'
        {
        // PsiInternalXtend.g:6229:7: ()
        // PsiInternalXtend.g:6230:7: 
        {
        }

        match(input,KW_Instanceof,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_PsiInternalXtend

    // $ANTLR start synpred30_PsiInternalXtend
    public final void synpred30_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6265:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // PsiInternalXtend.g:6265:7: ( () ( ( ruleOpCompare ) ) )
        {
        // PsiInternalXtend.g:6265:7: ( () ( ( ruleOpCompare ) ) )
        // PsiInternalXtend.g:6266:7: () ( ( ruleOpCompare ) )
        {
        // PsiInternalXtend.g:6266:7: ()
        // PsiInternalXtend.g:6267:7: 
        {
        }

        // PsiInternalXtend.g:6268:7: ( ( ruleOpCompare ) )
        // PsiInternalXtend.g:6269:8: ( ruleOpCompare )
        {
        // PsiInternalXtend.g:6269:8: ( ruleOpCompare )
        // PsiInternalXtend.g:6270:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred30_PsiInternalXtend

    // $ANTLR start synpred31_PsiInternalXtend
    public final void synpred31_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6381:5: ( ( () ( ( ruleOpOther ) ) ) )
        // PsiInternalXtend.g:6381:6: ( () ( ( ruleOpOther ) ) )
        {
        // PsiInternalXtend.g:6381:6: ( () ( ( ruleOpOther ) ) )
        // PsiInternalXtend.g:6382:6: () ( ( ruleOpOther ) )
        {
        // PsiInternalXtend.g:6382:6: ()
        // PsiInternalXtend.g:6383:6: 
        {
        }

        // PsiInternalXtend.g:6384:6: ( ( ruleOpOther ) )
        // PsiInternalXtend.g:6385:7: ( ruleOpOther )
        {
        // PsiInternalXtend.g:6385:7: ( ruleOpOther )
        // PsiInternalXtend.g:6386:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_PsiInternalXtend

    // $ANTLR start synpred32_PsiInternalXtend
    public final void synpred32_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6494:6: ( ( '>' '>' ) )
        // PsiInternalXtend.g:6494:7: ( '>' '>' )
        {
        // PsiInternalXtend.g:6494:7: ( '>' '>' )
        // PsiInternalXtend.g:6495:7: '>' '>'
        {
        match(input,KW_GreaterThanSign,FOLLOW_90); if (state.failed) return ;
        match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_PsiInternalXtend

    // $ANTLR start synpred33_PsiInternalXtend
    public final void synpred33_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6537:6: ( ( '<' '<' ) )
        // PsiInternalXtend.g:6537:7: ( '<' '<' )
        {
        // PsiInternalXtend.g:6537:7: ( '<' '<' )
        // PsiInternalXtend.g:6538:7: '<' '<'
        {
        match(input,KW_LessThanSign,FOLLOW_51); if (state.failed) return ;
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_PsiInternalXtend

    // $ANTLR start synpred34_PsiInternalXtend
    public final void synpred34_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6614:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // PsiInternalXtend.g:6614:6: ( () ( ( ruleOpAdd ) ) )
        {
        // PsiInternalXtend.g:6614:6: ( () ( ( ruleOpAdd ) ) )
        // PsiInternalXtend.g:6615:6: () ( ( ruleOpAdd ) )
        {
        // PsiInternalXtend.g:6615:6: ()
        // PsiInternalXtend.g:6616:6: 
        {
        }

        // PsiInternalXtend.g:6617:6: ( ( ruleOpAdd ) )
        // PsiInternalXtend.g:6618:7: ( ruleOpAdd )
        {
        // PsiInternalXtend.g:6618:7: ( ruleOpAdd )
        // PsiInternalXtend.g:6619:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred34_PsiInternalXtend

    // $ANTLR start synpred35_PsiInternalXtend
    public final void synpred35_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6704:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // PsiInternalXtend.g:6704:6: ( () ( ( ruleOpMulti ) ) )
        {
        // PsiInternalXtend.g:6704:6: ( () ( ( ruleOpMulti ) ) )
        // PsiInternalXtend.g:6705:6: () ( ( ruleOpMulti ) )
        {
        // PsiInternalXtend.g:6705:6: ()
        // PsiInternalXtend.g:6706:6: 
        {
        }

        // PsiInternalXtend.g:6707:6: ( ( ruleOpMulti ) )
        // PsiInternalXtend.g:6708:7: ( ruleOpMulti )
        {
        // PsiInternalXtend.g:6708:7: ( ruleOpMulti )
        // PsiInternalXtend.g:6709:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_PsiInternalXtend

    // $ANTLR start synpred36_PsiInternalXtend
    public final void synpred36_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6895:5: ( ( () 'as' ) )
        // PsiInternalXtend.g:6895:6: ( () 'as' )
        {
        // PsiInternalXtend.g:6895:6: ( () 'as' )
        // PsiInternalXtend.g:6896:6: () 'as'
        {
        // PsiInternalXtend.g:6896:6: ()
        // PsiInternalXtend.g:6897:6: 
        {
        }

        match(input,KW_As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_PsiInternalXtend

    // $ANTLR start synpred37_PsiInternalXtend
    public final void synpred37_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:6949:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // PsiInternalXtend.g:6949:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // PsiInternalXtend.g:6949:5: ( () ( ( ruleOpPostfix ) ) )
        // PsiInternalXtend.g:6950:5: () ( ( ruleOpPostfix ) )
        {
        // PsiInternalXtend.g:6950:5: ()
        // PsiInternalXtend.g:6951:5: 
        {
        }

        // PsiInternalXtend.g:6952:5: ( ( ruleOpPostfix ) )
        // PsiInternalXtend.g:6953:6: ( ruleOpPostfix )
        {
        // PsiInternalXtend.g:6953:6: ( ruleOpPostfix )
        // PsiInternalXtend.g:6954:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred37_PsiInternalXtend

    // $ANTLR start synpred38_PsiInternalXtend
    public final void synpred38_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7028:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // PsiInternalXtend.g:7028:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // PsiInternalXtend.g:7028:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // PsiInternalXtend.g:7029:7: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // PsiInternalXtend.g:7029:7: ()
        // PsiInternalXtend.g:7030:7: 
        {
        }

        // PsiInternalXtend.g:7031:7: ( '.' | ( ( '::' ) ) )
        int alt280=2;
        int LA280_0 = input.LA(1);

        if ( (LA280_0==KW_FullStop) ) {
            alt280=1;
        }
        else if ( (LA280_0==KW_ColonColon) ) {
            alt280=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 280, 0, input);

            throw nvae;
        }
        switch (alt280) {
            case 1 :
                // PsiInternalXtend.g:7032:8: '.'
                {
                match(input,KW_FullStop,FOLLOW_97); if (state.failed) return ;

                }
                break;
            case 2 :
                // PsiInternalXtend.g:7034:8: ( ( '::' ) )
                {
                // PsiInternalXtend.g:7034:8: ( ( '::' ) )
                // PsiInternalXtend.g:7035:9: ( '::' )
                {
                // PsiInternalXtend.g:7035:9: ( '::' )
                // PsiInternalXtend.g:7036:10: '::'
                {
                match(input,KW_ColonColon,FOLLOW_97); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // PsiInternalXtend.g:7040:7: ( ( ruleFeatureCallID ) )
        // PsiInternalXtend.g:7041:8: ( ruleFeatureCallID )
        {
        // PsiInternalXtend.g:7041:8: ( ruleFeatureCallID )
        // PsiInternalXtend.g:7042:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_77);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred38_PsiInternalXtend

    // $ANTLR start synpred39_PsiInternalXtend
    public final void synpred39_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7111:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // PsiInternalXtend.g:7111:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // PsiInternalXtend.g:7111:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // PsiInternalXtend.g:7112:7: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // PsiInternalXtend.g:7112:7: ()
        // PsiInternalXtend.g:7113:7: 
        {
        }

        // PsiInternalXtend.g:7114:7: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt281=3;
        switch ( input.LA(1) ) {
        case KW_FullStop:
            {
            alt281=1;
            }
            break;
        case KW_QuestionMarkFullStop:
            {
            alt281=2;
            }
            break;
        case KW_ColonColon:
            {
            alt281=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 281, 0, input);

            throw nvae;
        }

        switch (alt281) {
            case 1 :
                // PsiInternalXtend.g:7115:8: '.'
                {
                match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // PsiInternalXtend.g:7117:8: ( ( '?.' ) )
                {
                // PsiInternalXtend.g:7117:8: ( ( '?.' ) )
                // PsiInternalXtend.g:7118:9: ( '?.' )
                {
                // PsiInternalXtend.g:7118:9: ( '?.' )
                // PsiInternalXtend.g:7119:10: '?.'
                {
                match(input,KW_QuestionMarkFullStop,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // PsiInternalXtend.g:7123:8: ( ( '::' ) )
                {
                // PsiInternalXtend.g:7123:8: ( ( '::' ) )
                // PsiInternalXtend.g:7124:9: ( '::' )
                {
                // PsiInternalXtend.g:7124:9: ( '::' )
                // PsiInternalXtend.g:7125:10: '::'
                {
                match(input,KW_ColonColon,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred39_PsiInternalXtend

    // $ANTLR start synpred40_PsiInternalXtend
    public final void synpred40_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7233:7: ( ( '(' ) )
        // PsiInternalXtend.g:7233:8: ( '(' )
        {
        // PsiInternalXtend.g:7233:8: ( '(' )
        // PsiInternalXtend.g:7234:8: '('
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred40_PsiInternalXtend

    // $ANTLR start synpred41_PsiInternalXtend
    public final void synpred41_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7249:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // PsiInternalXtend.g:7249:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // PsiInternalXtend.g:7249:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // PsiInternalXtend.g:7250:9: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // PsiInternalXtend.g:7250:9: ()
        // PsiInternalXtend.g:7251:9: 
        {
        }

        // PsiInternalXtend.g:7252:9: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt283=2;
        int LA283_0 = input.LA(1);

        if ( (LA283_0==KW_Package||LA283_0==KW_Class||(LA283_0>=KW_Extends && LA283_0<=KW_Implements)||(LA283_0>=KW_Interface && LA283_0<=KW_LeftParenthesis)||LA283_0==KW_EqualsSignGreaterThanSign||(LA283_0>=KW_Extension && LA283_0<=KW_Throws)||(LA283_0>=KW_Public && LA283_0<=KW_Transient)||(LA283_0>=KW_Def && LA283_0<=KW_Create)||(LA283_0>=KW_AFTER && LA283_0<=KW_Import)||LA283_0==RULE_ID) ) {
            alt283=1;
        }
        switch (alt283) {
            case 1 :
                // PsiInternalXtend.g:7253:10: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // PsiInternalXtend.g:7253:10: ( ( ruleJvmFormalParameter ) )
                // PsiInternalXtend.g:7254:11: ( ruleJvmFormalParameter )
                {
                // PsiInternalXtend.g:7254:11: ( ruleJvmFormalParameter )
                // PsiInternalXtend.g:7255:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_104);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // PsiInternalXtend.g:7258:10: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop282:
                do {
                    int alt282=2;
                    int LA282_0 = input.LA(1);

                    if ( (LA282_0==KW_Comma) ) {
                        alt282=1;
                    }


                    switch (alt282) {
                	case 1 :
                	    // PsiInternalXtend.g:7259:11: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                	    // PsiInternalXtend.g:7260:11: ( ( ruleJvmFormalParameter ) )
                	    // PsiInternalXtend.g:7261:12: ( ruleJvmFormalParameter )
                	    {
                	    // PsiInternalXtend.g:7261:12: ( ruleJvmFormalParameter )
                	    // PsiInternalXtend.g:7262:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_104);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop282;
                    }
                } while (true);


                }
                break;

        }

        // PsiInternalXtend.g:7267:9: ( ( '|' ) )
        // PsiInternalXtend.g:7268:10: ( '|' )
        {
        // PsiInternalXtend.g:7268:10: ( '|' )
        // PsiInternalXtend.g:7269:11: '|'
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_PsiInternalXtend

    // $ANTLR start synpred42_PsiInternalXtend
    public final void synpred42_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7328:6: ( ( () '[' ) )
        // PsiInternalXtend.g:7328:7: ( () '[' )
        {
        // PsiInternalXtend.g:7328:7: ( () '[' )
        // PsiInternalXtend.g:7329:7: () '['
        {
        // PsiInternalXtend.g:7329:7: ()
        // PsiInternalXtend.g:7330:7: 
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_PsiInternalXtend

    // $ANTLR start synpred43_PsiInternalXtend
    public final void synpred43_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7383:4: ( ( () 'synchronized' '(' ) )
        // PsiInternalXtend.g:7383:5: ( () 'synchronized' '(' )
        {
        // PsiInternalXtend.g:7383:5: ( () 'synchronized' '(' )
        // PsiInternalXtend.g:7384:5: () 'synchronized' '('
        {
        // PsiInternalXtend.g:7384:5: ()
        // PsiInternalXtend.g:7385:5: 
        {
        }

        match(input,KW_Synchronized,FOLLOW_41); if (state.failed) return ;
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_PsiInternalXtend

    // $ANTLR start synpred44_PsiInternalXtend
    public final void synpred44_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7424:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // PsiInternalXtend.g:7424:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // PsiInternalXtend.g:7424:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // PsiInternalXtend.g:7425:5: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // PsiInternalXtend.g:7425:5: ()
        // PsiInternalXtend.g:7426:5: 
        {
        }

        match(input,KW_For,FOLLOW_41); if (state.failed) return ;
        match(input,KW_LeftParenthesis,FOLLOW_57); if (state.failed) return ;
        // PsiInternalXtend.g:7429:5: ( ( ruleJvmFormalParameter ) )
        // PsiInternalXtend.g:7430:6: ( ruleJvmFormalParameter )
        {
        // PsiInternalXtend.g:7430:6: ( ruleJvmFormalParameter )
        // PsiInternalXtend.g:7431:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_55);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_PsiInternalXtend

    // $ANTLR start synpred45_PsiInternalXtend
    public final void synpred45_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7522:4: ( ( () '[' ) )
        // PsiInternalXtend.g:7522:5: ( () '[' )
        {
        // PsiInternalXtend.g:7522:5: ( () '[' )
        // PsiInternalXtend.g:7523:5: () '['
        {
        // PsiInternalXtend.g:7523:5: ()
        // PsiInternalXtend.g:7524:5: 
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_PsiInternalXtend

    // $ANTLR start synpred47_PsiInternalXtend
    public final void synpred47_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:7783:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // PsiInternalXtend.g:7783:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // PsiInternalXtend.g:7783:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // PsiInternalXtend.g:7784:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // PsiInternalXtend.g:7784:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt285=2;
        int LA285_0 = input.LA(1);

        if ( (LA285_0==KW_Package||LA285_0==KW_Class||(LA285_0>=KW_Extends && LA285_0<=KW_Implements)||(LA285_0>=KW_Interface && LA285_0<=KW_LeftParenthesis)||LA285_0==KW_EqualsSignGreaterThanSign||(LA285_0>=KW_Extension && LA285_0<=KW_Throws)||(LA285_0>=KW_Public && LA285_0<=KW_Transient)||(LA285_0>=KW_Def && LA285_0<=KW_Create)||(LA285_0>=KW_AFTER && LA285_0<=KW_Import)||LA285_0==RULE_ID) ) {
            alt285=1;
        }
        switch (alt285) {
            case 1 :
                // PsiInternalXtend.g:7785:6: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // PsiInternalXtend.g:7785:6: ( ( ruleJvmFormalParameter ) )
                // PsiInternalXtend.g:7786:7: ( ruleJvmFormalParameter )
                {
                // PsiInternalXtend.g:7786:7: ( ruleJvmFormalParameter )
                // PsiInternalXtend.g:7787:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_104);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // PsiInternalXtend.g:7790:6: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop284:
                do {
                    int alt284=2;
                    int LA284_0 = input.LA(1);

                    if ( (LA284_0==KW_Comma) ) {
                        alt284=1;
                    }


                    switch (alt284) {
                	case 1 :
                	    // PsiInternalXtend.g:7791:7: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                	    // PsiInternalXtend.g:7792:7: ( ( ruleJvmFormalParameter ) )
                	    // PsiInternalXtend.g:7793:8: ( ruleJvmFormalParameter )
                	    {
                	    // PsiInternalXtend.g:7793:8: ( ruleJvmFormalParameter )
                	    // PsiInternalXtend.g:7794:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_104);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop284;
                    }
                } while (true);


                }
                break;

        }

        // PsiInternalXtend.g:7799:5: ( ( '|' ) )
        // PsiInternalXtend.g:7800:6: ( '|' )
        {
        // PsiInternalXtend.g:7800:6: ( '|' )
        // PsiInternalXtend.g:7801:7: '|'
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred47_PsiInternalXtend

    // $ANTLR start synpred49_PsiInternalXtend
    public final void synpred49_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:8109:5: ( 'else' )
        // PsiInternalXtend.g:8109:6: 'else'
        {
        match(input,KW_Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_PsiInternalXtend

    // $ANTLR start synpred51_PsiInternalXtend
    public final void synpred51_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:8646:4: ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )
        // PsiInternalXtend.g:8646:5: ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) )
        {
        // PsiInternalXtend.g:8646:5: ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) )
        // PsiInternalXtend.g:8647:5: () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) )
        {
        // PsiInternalXtend.g:8647:5: ()
        // PsiInternalXtend.g:8648:5: 
        {
        }

        // PsiInternalXtend.g:8649:5: ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) )
        int alt291=2;
        int LA291_0 = input.LA(1);

        if ( ((LA291_0>=KW_Val && LA291_0<=KW_Var)) ) {
            alt291=1;
        }
        else if ( (LA291_0==KW_Extension) ) {
            alt291=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 291, 0, input);

            throw nvae;
        }
        switch (alt291) {
            case 1 :
                // PsiInternalXtend.g:8650:6: ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? )
                {
                // PsiInternalXtend.g:8650:6: ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? )
                // PsiInternalXtend.g:8651:7: ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )?
                {
                // PsiInternalXtend.g:8651:7: ( ( ( 'var' ) ) | 'val' )
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( (LA288_0==KW_Var) ) {
                    alt288=1;
                }
                else if ( (LA288_0==KW_Val) ) {
                    alt288=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 288, 0, input);

                    throw nvae;
                }
                switch (alt288) {
                    case 1 :
                        // PsiInternalXtend.g:8652:8: ( ( 'var' ) )
                        {
                        // PsiInternalXtend.g:8652:8: ( ( 'var' ) )
                        // PsiInternalXtend.g:8653:9: ( 'var' )
                        {
                        // PsiInternalXtend.g:8653:9: ( 'var' )
                        // PsiInternalXtend.g:8654:10: 'var'
                        {
                        match(input,KW_Var,FOLLOW_136); if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // PsiInternalXtend.g:8658:8: 'val'
                        {
                        match(input,KW_Val,FOLLOW_136); if (state.failed) return ;

                        }
                        break;

                }

                // PsiInternalXtend.g:8660:7: ( ( 'extension' ) )?
                int alt289=2;
                int LA289_0 = input.LA(1);

                if ( (LA289_0==KW_Extension) ) {
                    alt289=1;
                }
                switch (alt289) {
                    case 1 :
                        // PsiInternalXtend.g:8661:8: ( 'extension' )
                        {
                        // PsiInternalXtend.g:8661:8: ( 'extension' )
                        // PsiInternalXtend.g:8662:9: 'extension'
                        {
                        match(input,KW_Extension,FOLLOW_2); if (state.failed) return ;

                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // PsiInternalXtend.g:8667:6: ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) )
                {
                // PsiInternalXtend.g:8667:6: ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) )
                // PsiInternalXtend.g:8668:7: ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' )
                {
                // PsiInternalXtend.g:8668:7: ( ( 'extension' ) )
                // PsiInternalXtend.g:8669:8: ( 'extension' )
                {
                // PsiInternalXtend.g:8669:8: ( 'extension' )
                // PsiInternalXtend.g:8670:9: 'extension'
                {
                match(input,KW_Extension,FOLLOW_58); if (state.failed) return ;

                }


                }

                // PsiInternalXtend.g:8673:7: ( ( ( 'var' ) ) | 'val' )
                int alt290=2;
                int LA290_0 = input.LA(1);

                if ( (LA290_0==KW_Var) ) {
                    alt290=1;
                }
                else if ( (LA290_0==KW_Val) ) {
                    alt290=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 290, 0, input);

                    throw nvae;
                }
                switch (alt290) {
                    case 1 :
                        // PsiInternalXtend.g:8674:8: ( ( 'var' ) )
                        {
                        // PsiInternalXtend.g:8674:8: ( ( 'var' ) )
                        // PsiInternalXtend.g:8675:9: ( 'var' )
                        {
                        // PsiInternalXtend.g:8675:9: ( 'var' )
                        // PsiInternalXtend.g:8676:10: 'var'
                        {
                        match(input,KW_Var,FOLLOW_2); if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // PsiInternalXtend.g:8680:8: 'val'
                        {
                        match(input,KW_Val,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred51_PsiInternalXtend

    // $ANTLR start synpred52_PsiInternalXtend
    public final void synpred52_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:8780:5: ( ( '(' ) )
        // PsiInternalXtend.g:8780:6: ( '(' )
        {
        // PsiInternalXtend.g:8780:6: ( '(' )
        // PsiInternalXtend.g:8781:6: '('
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred52_PsiInternalXtend

    // $ANTLR start synpred53_PsiInternalXtend
    public final void synpred53_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:8796:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // PsiInternalXtend.g:8796:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // PsiInternalXtend.g:8796:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // PsiInternalXtend.g:8797:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // PsiInternalXtend.g:8797:7: ()
        // PsiInternalXtend.g:8798:7: 
        {
        }

        // PsiInternalXtend.g:8799:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt293=2;
        int LA293_0 = input.LA(1);

        if ( (LA293_0==KW_Package||LA293_0==KW_Class||(LA293_0>=KW_Extends && LA293_0<=KW_Implements)||(LA293_0>=KW_Interface && LA293_0<=KW_LeftParenthesis)||LA293_0==KW_EqualsSignGreaterThanSign||(LA293_0>=KW_Extension && LA293_0<=KW_Throws)||(LA293_0>=KW_Public && LA293_0<=KW_Transient)||(LA293_0>=KW_Def && LA293_0<=KW_Create)||(LA293_0>=KW_AFTER && LA293_0<=KW_Import)||LA293_0==RULE_ID) ) {
            alt293=1;
        }
        switch (alt293) {
            case 1 :
                // PsiInternalXtend.g:8800:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // PsiInternalXtend.g:8800:8: ( ( ruleJvmFormalParameter ) )
                // PsiInternalXtend.g:8801:9: ( ruleJvmFormalParameter )
                {
                // PsiInternalXtend.g:8801:9: ( ruleJvmFormalParameter )
                // PsiInternalXtend.g:8802:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_104);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // PsiInternalXtend.g:8805:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop292:
                do {
                    int alt292=2;
                    int LA292_0 = input.LA(1);

                    if ( (LA292_0==KW_Comma) ) {
                        alt292=1;
                    }


                    switch (alt292) {
                	case 1 :
                	    // PsiInternalXtend.g:8806:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                	    // PsiInternalXtend.g:8807:9: ( ( ruleJvmFormalParameter ) )
                	    // PsiInternalXtend.g:8808:10: ( ruleJvmFormalParameter )
                	    {
                	    // PsiInternalXtend.g:8808:10: ( ruleJvmFormalParameter )
                	    // PsiInternalXtend.g:8809:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_104);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop292;
                    }
                } while (true);


                }
                break;

        }

        // PsiInternalXtend.g:8814:7: ( ( '|' ) )
        // PsiInternalXtend.g:8815:8: ( '|' )
        {
        // PsiInternalXtend.g:8815:8: ( '|' )
        // PsiInternalXtend.g:8816:9: '|'
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred53_PsiInternalXtend

    // $ANTLR start synpred54_PsiInternalXtend
    public final void synpred54_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:8875:4: ( ( () '[' ) )
        // PsiInternalXtend.g:8875:5: ( () '[' )
        {
        // PsiInternalXtend.g:8875:5: ( () '[' )
        // PsiInternalXtend.g:8876:5: () '['
        {
        // PsiInternalXtend.g:8876:5: ()
        // PsiInternalXtend.g:8877:5: 
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred54_PsiInternalXtend

    // $ANTLR start synpred55_PsiInternalXtend
    public final void synpred55_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:9134:4: ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )
        // PsiInternalXtend.g:
        {
        if ( input.LA(1)==KW_Package||(input.LA(1)>=KW_Class && input.LA(1)<=KW_LessThanSign)||(input.LA(1)>=KW_Extends && input.LA(1)<=KW_LeftCurlyBracket)||(input.LA(1)>=KW_Interface && input.LA(1)<=KW_LeftParenthesis)||(input.LA(1)>=KW_Extension && input.LA(1)<=KW_New)||(input.LA(1)>=KW_Public && input.LA(1)<=KW_Transient)||(input.LA(1)>=KW_Def && input.LA(1)<=KW_Create)||(input.LA(1)>=KW_AFTER && input.LA(1)<=KW_Import)||input.LA(1)==KW_Switch||(input.LA(1)>=KW_NumberSign && input.LA(1)<=KW_LeftSquareBracket)||(input.LA(1)>=KW_PlusSign && input.LA(1)<=KW_HyphenMinus)||input.LA(1)==KW_ExclamationMark||input.LA(1)==KW_If||(input.LA(1)>=KW_For && input.LA(1)<=KW_Try)||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_RICH_TEXT_START)||(input.LA(1)>=RULE_HEX && input.LA(1)<=RULE_DECIMAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred55_PsiInternalXtend

    // $ANTLR start synpred56_PsiInternalXtend
    public final void synpred56_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:9184:6: ( 'catch' )
        // PsiInternalXtend.g:9184:7: 'catch'
        {
        match(input,KW_Catch,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_PsiInternalXtend

    // $ANTLR start synpred57_PsiInternalXtend
    public final void synpred57_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:9197:7: ( 'finally' )
        // PsiInternalXtend.g:9197:8: 'finally'
        {
        match(input,KW_Finally,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_PsiInternalXtend

    // $ANTLR start synpred60_PsiInternalXtend
    public final void synpred60_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:9392:5: ( '.' )
        // PsiInternalXtend.g:9392:6: '.'
        {
        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_PsiInternalXtend

    // $ANTLR start synpred61_PsiInternalXtend
    public final void synpred61_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:9505:5: ( ( () ruleArrayBrackets ) )
        // PsiInternalXtend.g:9505:6: ( () ruleArrayBrackets )
        {
        // PsiInternalXtend.g:9505:6: ( () ruleArrayBrackets )
        // PsiInternalXtend.g:9506:6: () ruleArrayBrackets
        {
        // PsiInternalXtend.g:9506:6: ()
        // PsiInternalXtend.g:9507:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred61_PsiInternalXtend

    // $ANTLR start synpred62_PsiInternalXtend
    public final void synpred62_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:9666:5: ( '<' )
        // PsiInternalXtend.g:9666:6: '<'
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_PsiInternalXtend

    // $ANTLR start synpred63_PsiInternalXtend
    public final void synpred63_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:9715:6: ( ( () '.' ) )
        // PsiInternalXtend.g:9715:7: ( () '.' )
        {
        // PsiInternalXtend.g:9715:7: ( () '.' )
        // PsiInternalXtend.g:9716:7: () '.'
        {
        // PsiInternalXtend.g:9716:7: ()
        // PsiInternalXtend.g:9717:7: 
        {
        }

        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred63_PsiInternalXtend

    // $ANTLR start synpred64_PsiInternalXtend
    public final void synpred64_PsiInternalXtend_fragment() throws RecognitionException {   
        // PsiInternalXtend.g:9750:7: ( '<' )
        // PsiInternalXtend.g:9750:8: '<'
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_PsiInternalXtend

    // Delegated rules

    public final boolean synpred63_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA25 dfa25 = new DFA25(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA134 dfa134 = new DFA134(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA140 dfa140 = new DFA140(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA204 dfa204 = new DFA204(this);
    protected DFA206 dfa206 = new DFA206(this);
    protected DFA208 dfa208 = new DFA208(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA238 dfa238 = new DFA238(this);
    protected DFA237 dfa237 = new DFA237(this);
    protected DFA239 dfa239 = new DFA239(this);
    protected DFA243 dfa243 = new DFA243(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA261 dfa261 = new DFA261(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA271 dfa271 = new DFA271(this);
    static final String dfa_1s = "\22\uffff";
    static final String dfa_2s = "\16\4\4\uffff";
    static final String dfa_3s = "\16\44\4\uffff";
    static final String dfa_4s = "\16\uffff\1\1\1\2\1\3\1\4";
    static final String dfa_5s = "\22\uffff}>";
    static final String[] dfa_6s = {
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "252:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) )";
        }
    }
    static final String dfa_7s = "\32\uffff";
    static final String dfa_8s = "\23\uffff\6\16\1\uffff";
    static final String dfa_9s = "\16\4\1\uffff\1\7\3\uffff\6\4\1\uffff";
    static final String dfa_10s = "\16\155\1\uffff\1\155\3\uffff\6\155\1\uffff";
    static final String dfa_11s = "\16\uffff\1\1\1\uffff\1\2\1\3\1\4\6\uffff\1\5";
    static final String dfa_12s = "\32\uffff}>";
    static final String[] dfa_13s = {
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "",
            "\1\16\10\uffff\1\25\7\uffff\1\16\20\uffff\1\24\1\uffff\1\26\1\27\1\30\14\uffff\1\16\62\uffff\1\23",
            "",
            "",
            "",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "869:3: ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) )";
        }
    }
    static final String dfa_14s = "\20\uffff";
    static final String dfa_15s = "\16\4\2\uffff";
    static final String dfa_16s = "\16\155\2\uffff";
    static final String dfa_17s = "\16\uffff\1\1\1\2";
    static final String dfa_18s = "\20\uffff}>";
    static final String[] dfa_19s = {
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "871:5: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) )";
        }
    }
    static final String dfa_20s = "\47\uffff";
    static final String dfa_21s = "\1\uffff\6\16\1\uffff\6\7\31\uffff";
    static final String dfa_22s = "\1\20\6\4\1\uffff\6\4\1\uffff\30\4";
    static final String dfa_23s = "\7\155\1\uffff\6\155\1\uffff\30\155";
    static final String dfa_24s = "\7\uffff\1\1\6\uffff\1\2\30\uffff";
    static final String dfa_25s = "\47\uffff}>";
    static final String[] dfa_26s = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\43\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\42\1\uffff\1\44\1\45\1\46\12\uffff\1\16\1\uffff\1\7\62\uffff\1\41",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\43\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\42\1\uffff\1\44\1\45\1\46\12\uffff\1\16\1\uffff\1\7\62\uffff\1\41",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "912:7: ( (lv_type_6_0= ruleJvmTypeReference ) )?";
        }
    }
    static final String dfa_27s = "\34\uffff";
    static final String dfa_28s = "\25\uffff\6\16\1\uffff";
    static final String dfa_29s = "\16\4\1\uffff\1\7\5\uffff\6\4\1\uffff";
    static final String dfa_30s = "\16\155\1\uffff\1\155\5\uffff\6\155\1\uffff";
    static final String dfa_31s = "\16\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\6\uffff\1\7";
    static final String dfa_32s = "\34\uffff}>";
    static final String[] dfa_33s = {
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "",
            "\1\16\10\uffff\1\27\7\uffff\1\16\20\uffff\1\26\1\uffff\1\30\1\31\1\32\14\uffff\1\16\62\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "1515:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) )";
        }
    }
    static final String dfa_34s = "\24\uffff";
    static final String dfa_35s = "\1\20\2\4\2\uffff\15\4\2\uffff";
    static final String dfa_36s = "\3\155\2\uffff\15\155\2\uffff";
    static final String dfa_37s = "\3\uffff\1\2\1\4\15\uffff\1\1\1\3";
    static final String dfa_38s = "\24\uffff}>";
    static final String[] dfa_39s = {
            "\2\4\1\uffff\1\4\1\uffff\1\3\17\uffff\1\1\1\2\2\uffff\1\4\1\uffff\3\4\77\uffff\1\4",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "",
            "",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "1534:5: ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) )";
        }
    }
    static final String dfa_40s = "\1\uffff\6\10\2\uffff\6\7\30\uffff";
    static final String dfa_41s = "\1\20\6\4\2\uffff\36\4";
    static final String dfa_42s = "\7\155\2\uffff\36\155";
    static final String dfa_43s = "\7\uffff\1\1\1\2\36\uffff";
    static final String[] dfa_44s = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "",
            "",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\43\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\42\1\uffff\1\44\1\45\1\46\12\uffff\1\10\1\uffff\1\7\62\uffff\1\41",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\43\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\42\1\uffff\1\44\1\45\1\46\12\uffff\1\10\1\uffff\1\7\62\uffff\1\41",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17"
    };
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_20;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_25;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "1558:7: ( (lv_type_6_0= ruleJvmTypeReference ) )?";
        }
    }
    static final String dfa_45s = "\41\uffff";
    static final String dfa_46s = "\1\7\6\16\32\uffff";
    static final String dfa_47s = "\7\4\1\uffff\6\4\1\uffff\22\4";
    static final String dfa_48s = "\7\155\1\uffff\6\155\1\uffff\22\155";
    static final String dfa_49s = "\7\uffff\1\2\6\uffff\1\1\22\uffff";
    static final String dfa_50s = "\41\uffff}>";
    static final String[] dfa_51s = {
            "\3\7\6\uffff\3\7\1\3\1\7\1\uffff\3\7\1\uffff\1\7\1\uffff\20\7\1\2\1\uffff\1\4\1\5\1\6\12\uffff\1\7\64\uffff\1\1",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\7\1\uffff\1\16\62\uffff\1\33",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\7\1\uffff\1\16\62\uffff\1\33",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10"
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_45;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "1630:7: ( (lv_name_12_0= ruleValidID ) )?";
        }
    }
    static final String dfa_52s = "\1\7\6\10\32\uffff";
    static final String dfa_53s = "\7\4\2\uffff\30\4";
    static final String dfa_54s = "\7\155\2\uffff\30\155";
    static final String dfa_55s = "\7\uffff\1\2\1\1\30\uffff";
    static final String[] dfa_56s = {
            "\3\7\6\uffff\3\7\1\3\1\7\1\uffff\3\7\1\uffff\1\7\1\uffff\20\7\1\2\1\uffff\1\4\1\5\1\6\12\uffff\1\7\64\uffff\1\1",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\21\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\10\1\uffff\1\7\62\uffff\1\17",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "",
            "",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\7\1\uffff\1\10\62\uffff\1\33",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\4\uffff\4\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\7\1\uffff\1\10\62\uffff\1\33",
            "\3\7\1\10\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\21\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\10\1\uffff\1\7\62\uffff\1\17",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\4\uffff\4\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\4\uffff\4\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\4\uffff\4\10\1\21\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\10\1\uffff\1\7\62\uffff\1\17",
            "\3\10\1\7\4\uffff\4\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\4\uffff\4\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\4\uffff\4\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11"
    };
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_45;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_50;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "1699:7: ( (lv_name_18_0= ruleValidID ) )?";
        }
    }
    static final String dfa_57s = "\51\uffff";
    static final String dfa_58s = "\1\7\10\0\40\uffff";
    static final String dfa_59s = "\1\155\10\0\40\uffff";
    static final String dfa_60s = "\11\uffff\1\5\33\uffff\1\1\1\2\1\3\1\4";
    static final String dfa_61s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\40\uffff}>";
    static final String[] dfa_62s = {
            "\1\11\1\uffff\1\11\6\uffff\1\3\1\7\1\uffff\1\10\25\uffff\1\2\1\uffff\1\4\1\5\1\6\16\uffff\14\11\1\uffff\14\11\1\uffff\2\11\25\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[][] dfa_62 = unpackEncodedStringArray(dfa_62s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_57;
            this.eof = dfa_57;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_60;
            this.special = dfa_61;
            this.transition = dfa_62;
        }
        public String getDescription() {
            return "1869:5: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (synpred4_PsiInternalXtend()) ) {s = 40;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA74_5 = input.LA(1);

                         
                        int index74_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA74_6 = input.LA(1);

                         
                        int index74_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA74_7 = input.LA(1);

                         
                        int index74_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                         
                        input.seek(index74_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_63s = "\21\uffff";
    static final String dfa_64s = "\1\20\6\7\1\uffff\1\20\2\uffff\6\7";
    static final String dfa_65s = "\1\155\6\72\1\uffff\1\155\2\uffff\6\72";
    static final String dfa_66s = "\7\uffff\1\3\1\uffff\1\2\1\1\6\uffff";
    static final String dfa_67s = "\21\uffff}>";
    static final String[] dfa_68s = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "",
            "\1\15\30\uffff\1\14\1\uffff\1\16\1\17\1\20\77\uffff\1\13",
            "",
            "",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11"
    };

    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = dfa_63;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "2895:2: ( ( ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | ( ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | ruleXFunctionTypeRef )";
        }
    }
    static final String dfa_69s = "\50\uffff";
    static final String dfa_70s = "\1\2\47\uffff";
    static final String dfa_71s = "\1\7\1\0\46\uffff";
    static final String dfa_72s = "\1\155\1\0\46\uffff";
    static final String dfa_73s = "\2\uffff\1\2\44\uffff\1\1";
    static final String dfa_74s = "\1\uffff\1\0\46\uffff}>";
    static final String[] dfa_75s = {
            "\1\1\1\uffff\1\2\6\uffff\1\2\2\uffff\1\2\4\uffff\1\2\20\uffff\1\2\1\uffff\3\2\14\uffff\1\2\1\uffff\14\2\1\uffff\14\2\1\uffff\2\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_69;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "3073:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_1 = input.LA(1);

                         
                        int index112_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_76s = "\16\uffff";
    static final String dfa_77s = "\2\uffff\2\7\10\uffff\2\10";
    static final String dfa_78s = "\1\7\1\uffff\1\7\1\11\10\uffff\1\7\1\11";
    static final String dfa_79s = "\1\127\1\uffff\1\24\1\113\10\uffff\1\24\1\101";
    static final String dfa_80s = "\1\uffff\1\1\2\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff";
    static final String dfa_81s = "\16\uffff}>";
    static final String[] dfa_82s = {
            "\1\2\1\uffff\1\3\11\uffff\1\10\50\uffff\5\1\1\7\1\4\1\5\4\6\1\uffff\5\10\2\12\4\11\1\12\1\uffff\2\13",
            "",
            "\1\14\11\uffff\1\7\1\uffff\1\10\1\7",
            "\1\15\7\uffff\1\7\57\uffff\1\1\11\uffff\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\10\11\uffff\1\10\2\uffff\1\1",
            "\1\10\7\uffff\1\10\57\uffff\1\1"
    };

    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "3163:2: ( ruleOpMultiAssign | ruleOpOr | ruleOpAnd | ruleOpEquality | ruleOpCompare | ruleOpOther | ruleOpMulti | ruleOpUnary | ruleOpPostfix )";
        }
    }
    static final String dfa_83s = "\37\uffff";
    static final String dfa_84s = "\1\4\6\0\30\uffff";
    static final String dfa_85s = "\1\155\6\0\30\uffff";
    static final String dfa_86s = "\7\uffff\2\1\1\2\25\uffff";
    static final String dfa_87s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\30\uffff}>";
    static final String[] dfa_88s = {
            "\1\11\1\uffff\1\11\3\uffff\2\11\2\uffff\2\11\1\3\1\7\1\uffff\1\10\2\uffff\1\11\2\uffff\14\11\2\uffff\2\11\1\2\1\uffff\1\4\1\5\1\6\1\11\76\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_83;
            this.eof = dfa_83;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "4009:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_0 = input.LA(1);

                         
                        int index131_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA131_0==RULE_ID) ) {s = 1;}

                        else if ( (LA131_0==KW_Create) ) {s = 2;}

                        else if ( (LA131_0==KW_Annotation) ) {s = 3;}

                        else if ( (LA131_0==KW_AFTER) ) {s = 4;}

                        else if ( (LA131_0==KW_BEFORE) ) {s = 5;}

                        else if ( (LA131_0==KW_SEPARATOR) ) {s = 6;}

                        else if ( (LA131_0==KW_LeftParenthesis) && (synpred10_PsiInternalXtend())) {s = 7;}

                        else if ( (LA131_0==KW_EqualsSignGreaterThanSign) && (synpred10_PsiInternalXtend())) {s = 8;}

                        else if ( (LA131_0==KW_Package||LA131_0==KW_Class||(LA131_0>=KW_Extends && LA131_0<=KW_Implements)||(LA131_0>=KW_Interface && LA131_0<=KW_Enum)||LA131_0==KW_Throws||(LA131_0>=KW_Public && LA131_0<=KW_Transient)||(LA131_0>=KW_Def && LA131_0<=KW_Override)||LA131_0==KW_Import) ) {s = 9;}

                         
                        input.seek(index131_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA131_1 = input.LA(1);

                         
                        int index131_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA131_2 = input.LA(1);

                         
                        int index131_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA131_3 = input.LA(1);

                         
                        int index131_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA131_4 = input.LA(1);

                         
                        int index131_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA131_5 = input.LA(1);

                         
                        int index131_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA131_6 = input.LA(1);

                         
                        int index131_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_89s = "\154\uffff";
    static final String dfa_90s = "\1\2\153\uffff";
    static final String dfa_91s = "\1\4\1\0\152\uffff";
    static final String dfa_92s = "\1\167\1\0\152\uffff";
    static final String dfa_93s = "\2\uffff\1\2\150\uffff\1\1";
    static final String dfa_94s = "\1\uffff\1\0\152\uffff}>";
    static final String[] dfa_95s = {
            "\10\2\1\1\7\2\1\uffff\32\2\1\uffff\2\2\6\uffff\42\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA134 extends DFA {

        public DFA134(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 134;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "4101:3: ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA134_1 = input.LA(1);

                         
                        int index134_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index134_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 134, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_96s = {
            "\3\2\1\1\14\2\1\uffff\32\2\1\uffff\2\2\6\uffff\42\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "4180:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA136_1 = input.LA(1);

                         
                        int index136_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index136_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 136, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_97s = {
            "\15\2\1\1\2\2\1\uffff\32\2\1\uffff\2\2\6\uffff\42\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "4230:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA139_1 = input.LA(1);

                         
                        int index139_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index139_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 139, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_98s = "\75\uffff";
    static final String dfa_99s = "\1\4\10\0\1\uffff\26\0\35\uffff";
    static final String dfa_100s = "\1\167\10\0\1\uffff\26\0\35\uffff";
    static final String dfa_101s = "\11\uffff\1\1\26\uffff\1\1\1\2\32\uffff\1\3";
    static final String dfa_102s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\35\uffff}>";
    static final String[] dfa_103s = {
            "\1\25\1\uffff\1\13\1\41\2\uffff\1\17\1\21\1\41\1\uffff\1\23\1\16\1\4\1\10\1\74\1\11\1\uffff\1\1\1\32\1\41\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\uffff\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\1\uffff\1\41\10\uffff\2\41\23\uffff\2\41\4\uffff\1\41\5\uffff\1\40\1\41\2\uffff\13\41\4\uffff\1\2\3\41\4\uffff\3\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "4246:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_0 = input.LA(1);

                         
                        int index138_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA138_0==KW_Extension) ) {s = 1;}

                        else if ( (LA138_0==RULE_ID) ) {s = 2;}

                        else if ( (LA138_0==KW_Create) ) {s = 3;}

                        else if ( (LA138_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA138_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA138_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA138_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA138_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA138_0==KW_EqualsSignGreaterThanSign) && (synpred14_PsiInternalXtend())) {s = 9;}

                        else if ( (LA138_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA138_0==KW_Class) ) {s = 11;}

                        else if ( (LA138_0==KW_Def) ) {s = 12;}

                        else if ( (LA138_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA138_0==KW_Enum) ) {s = 14;}

                        else if ( (LA138_0==KW_Extends) ) {s = 15;}

                        else if ( (LA138_0==KW_Final) ) {s = 16;}

                        else if ( (LA138_0==KW_Implements) ) {s = 17;}

                        else if ( (LA138_0==KW_Import) ) {s = 18;}

                        else if ( (LA138_0==KW_Interface) ) {s = 19;}

                        else if ( (LA138_0==KW_Override) ) {s = 20;}

                        else if ( (LA138_0==KW_Package) ) {s = 21;}

                        else if ( (LA138_0==KW_Public) ) {s = 22;}

                        else if ( (LA138_0==KW_Private) ) {s = 23;}

                        else if ( (LA138_0==KW_Protected) ) {s = 24;}

                        else if ( (LA138_0==KW_Static) ) {s = 25;}

                        else if ( (LA138_0==KW_Throws) ) {s = 26;}

                        else if ( (LA138_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA138_0==KW_Native) ) {s = 28;}

                        else if ( (LA138_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA138_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA138_0==KW_Transient) ) {s = 31;}

                        else if ( (LA138_0==KW_VerticalLine) && (synpred14_PsiInternalXtend())) {s = 32;}

                        else if ( (LA138_0==KW_LessThanSign||LA138_0==KW_LeftCurlyBracket||LA138_0==KW_New||LA138_0==KW_Switch||(LA138_0>=KW_NumberSign && LA138_0<=KW_LeftSquareBracket)||(LA138_0>=KW_PlusSign && LA138_0<=KW_HyphenMinus)||LA138_0==KW_ExclamationMark||LA138_0==KW_If||(LA138_0>=KW_For && LA138_0<=KW_Try)||(LA138_0>=RULE_STRING && LA138_0<=RULE_RICH_TEXT_START)||(LA138_0>=RULE_HEX && LA138_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA138_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index138_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA138_1 = input.LA(1);

                         
                        int index138_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA138_2 = input.LA(1);

                         
                        int index138_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA138_3 = input.LA(1);

                         
                        int index138_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA138_4 = input.LA(1);

                         
                        int index138_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA138_5 = input.LA(1);

                         
                        int index138_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA138_6 = input.LA(1);

                         
                        int index138_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA138_7 = input.LA(1);

                         
                        int index138_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA138_8 = input.LA(1);

                         
                        int index138_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA138_10 = input.LA(1);

                         
                        int index138_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA138_11 = input.LA(1);

                         
                        int index138_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA138_12 = input.LA(1);

                         
                        int index138_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA138_13 = input.LA(1);

                         
                        int index138_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA138_14 = input.LA(1);

                         
                        int index138_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA138_15 = input.LA(1);

                         
                        int index138_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA138_16 = input.LA(1);

                         
                        int index138_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA138_17 = input.LA(1);

                         
                        int index138_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA138_18 = input.LA(1);

                         
                        int index138_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA138_19 = input.LA(1);

                         
                        int index138_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA138_20 = input.LA(1);

                         
                        int index138_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA138_21 = input.LA(1);

                         
                        int index138_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA138_22 = input.LA(1);

                         
                        int index138_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA138_23 = input.LA(1);

                         
                        int index138_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA138_24 = input.LA(1);

                         
                        int index138_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA138_25 = input.LA(1);

                         
                        int index138_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA138_26 = input.LA(1);

                         
                        int index138_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA138_27 = input.LA(1);

                         
                        int index138_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA138_28 = input.LA(1);

                         
                        int index138_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA138_29 = input.LA(1);

                         
                        int index138_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA138_30 = input.LA(1);

                         
                        int index138_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA138_31 = input.LA(1);

                         
                        int index138_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_104s = {
            "\20\2\1\uffff\32\2\1\uffff\2\2\6\uffff\2\2\1\1\37\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_104 = unpackEncodedStringArray(dfa_104s);

    class DFA140 extends DFA {

        public DFA140(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 140;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "4326:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA140_1 = input.LA(1);

                         
                        int index140_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index140_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 140, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_105s = "\74\uffff";
    static final String dfa_106s = "\1\4\1\0\72\uffff";
    static final String dfa_107s = "\1\167\1\0\72\uffff";
    static final String dfa_108s = "\2\uffff\1\2\70\uffff\1\1";
    static final String dfa_109s = "\1\uffff\1\0\72\uffff}>";
    static final String[] dfa_110s = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\3\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\1\uffff\1\2\10\uffff\2\2\23\uffff\2\2\4\uffff\1\2\6\uffff\1\2\2\uffff\13\2\4\uffff\4\2\4\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final char[] dfa_107 = DFA.unpackEncodedStringToUnsignedChars(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_105;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "4485:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_1 = input.LA(1);

                         
                        int index146_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_PsiInternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index146_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_111s = "\73\uffff";
    static final String dfa_112s = "\1\4\10\0\1\uffff\26\0\33\uffff";
    static final String dfa_113s = "\1\167\10\0\1\uffff\26\0\33\uffff";
    static final String dfa_114s = "\11\uffff\1\1\26\uffff\1\2\32\uffff";
    static final String dfa_115s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\33\uffff}>";
    static final String[] dfa_116s = {
            "\1\25\1\uffff\1\13\1\40\2\uffff\1\17\1\21\1\40\1\uffff\1\23\1\16\1\4\1\10\1\uffff\1\11\1\uffff\1\1\1\32\1\40\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\uffff\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\1\uffff\1\40\10\uffff\2\40\23\uffff\2\40\4\uffff\1\40\6\uffff\1\40\2\uffff\13\40\4\uffff\1\2\3\40\4\uffff\3\40",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final char[] dfa_113 = DFA.unpackEncodedStringToUnsignedChars(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[][] dfa_116 = unpackEncodedStringArray(dfa_116s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_111;
            this.eof = dfa_111;
            this.min = dfa_112;
            this.max = dfa_113;
            this.accept = dfa_114;
            this.special = dfa_115;
            this.transition = dfa_116;
        }
        public String getDescription() {
            return "4547:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_0 = input.LA(1);

                         
                        int index145_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA145_0==KW_Extension) ) {s = 1;}

                        else if ( (LA145_0==RULE_ID) ) {s = 2;}

                        else if ( (LA145_0==KW_Create) ) {s = 3;}

                        else if ( (LA145_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA145_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA145_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA145_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA145_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA145_0==KW_EqualsSignGreaterThanSign) && (synpred17_PsiInternalXtend())) {s = 9;}

                        else if ( (LA145_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA145_0==KW_Class) ) {s = 11;}

                        else if ( (LA145_0==KW_Def) ) {s = 12;}

                        else if ( (LA145_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA145_0==KW_Enum) ) {s = 14;}

                        else if ( (LA145_0==KW_Extends) ) {s = 15;}

                        else if ( (LA145_0==KW_Final) ) {s = 16;}

                        else if ( (LA145_0==KW_Implements) ) {s = 17;}

                        else if ( (LA145_0==KW_Import) ) {s = 18;}

                        else if ( (LA145_0==KW_Interface) ) {s = 19;}

                        else if ( (LA145_0==KW_Override) ) {s = 20;}

                        else if ( (LA145_0==KW_Package) ) {s = 21;}

                        else if ( (LA145_0==KW_Public) ) {s = 22;}

                        else if ( (LA145_0==KW_Private) ) {s = 23;}

                        else if ( (LA145_0==KW_Protected) ) {s = 24;}

                        else if ( (LA145_0==KW_Static) ) {s = 25;}

                        else if ( (LA145_0==KW_Throws) ) {s = 26;}

                        else if ( (LA145_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA145_0==KW_Native) ) {s = 28;}

                        else if ( (LA145_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA145_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA145_0==KW_Transient) ) {s = 31;}

                        else if ( (LA145_0==KW_LessThanSign||LA145_0==KW_LeftCurlyBracket||LA145_0==KW_New||LA145_0==KW_Switch||(LA145_0>=KW_NumberSign && LA145_0<=KW_LeftSquareBracket)||(LA145_0>=KW_PlusSign && LA145_0<=KW_HyphenMinus)||LA145_0==KW_ExclamationMark||LA145_0==KW_If||(LA145_0>=KW_For && LA145_0<=KW_Try)||(LA145_0>=RULE_STRING && LA145_0<=RULE_RICH_TEXT_START)||(LA145_0>=RULE_HEX && LA145_0<=RULE_DECIMAL)) ) {s = 32;}

                         
                        input.seek(index145_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA145_2 = input.LA(1);

                         
                        int index145_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA145_3 = input.LA(1);

                         
                        int index145_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA145_4 = input.LA(1);

                         
                        int index145_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA145_5 = input.LA(1);

                         
                        int index145_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA145_6 = input.LA(1);

                         
                        int index145_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA145_7 = input.LA(1);

                         
                        int index145_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA145_8 = input.LA(1);

                         
                        int index145_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA145_10 = input.LA(1);

                         
                        int index145_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA145_11 = input.LA(1);

                         
                        int index145_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA145_12 = input.LA(1);

                         
                        int index145_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA145_13 = input.LA(1);

                         
                        int index145_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA145_14 = input.LA(1);

                         
                        int index145_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA145_15 = input.LA(1);

                         
                        int index145_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA145_16 = input.LA(1);

                         
                        int index145_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA145_17 = input.LA(1);

                         
                        int index145_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA145_18 = input.LA(1);

                         
                        int index145_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA145_19 = input.LA(1);

                         
                        int index145_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA145_20 = input.LA(1);

                         
                        int index145_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA145_21 = input.LA(1);

                         
                        int index145_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA145_22 = input.LA(1);

                         
                        int index145_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA145_23 = input.LA(1);

                         
                        int index145_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA145_24 = input.LA(1);

                         
                        int index145_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA145_25 = input.LA(1);

                         
                        int index145_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA145_26 = input.LA(1);

                         
                        int index145_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA145_27 = input.LA(1);

                         
                        int index145_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA145_28 = input.LA(1);

                         
                        int index145_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA145_29 = input.LA(1);

                         
                        int index145_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA145_30 = input.LA(1);

                         
                        int index145_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA145_31 = input.LA(1);

                         
                        int index145_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_117s = "\12\uffff";
    static final String dfa_118s = "\1\4\1\20\1\uffff\6\0\1\uffff";
    static final String dfa_119s = "\1\167\1\155\1\uffff\6\0\1\uffff";
    static final String dfa_120s = "\2\uffff\1\2\6\uffff\1\1";
    static final String dfa_121s = "\3\uffff\1\0\1\4\1\2\1\5\1\3\1\1\1\uffff}>";
    static final String[] dfa_122s = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\4\2\3\uffff\2\2\1\1\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\1\uffff\1\2\10\uffff\2\2\23\uffff\2\2\4\uffff\1\2\6\uffff\1\2\2\uffff\13\2\4\uffff\4\2\4\uffff\3\2",
            "\1\5\30\uffff\1\4\1\uffff\1\6\1\7\1\10\77\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final char[] dfa_119 = DFA.unpackEncodedStringToUnsignedChars(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[][] dfa_122 = unpackEncodedStringArray(dfa_122s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_117;
            this.eof = dfa_117;
            this.min = dfa_118;
            this.max = dfa_119;
            this.accept = dfa_120;
            this.special = dfa_121;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "4654:2: ( ( ( 'new' )=> ruleXbaseConstructorCall ) | ruleXExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_3 = input.LA(1);

                         
                        int index149_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA149_8 = input.LA(1);

                         
                        int index149_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA149_5 = input.LA(1);

                         
                        int index149_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA149_7 = input.LA(1);

                         
                        int index149_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA149_4 = input.LA(1);

                         
                        int index149_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA149_6 = input.LA(1);

                         
                        int index149_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_123s = "\1\2\46\uffff";
    static final String dfa_124s = "\1\4\1\0\45\uffff";
    static final String dfa_125s = "\1\155\1\0\45\uffff";
    static final String dfa_126s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_127s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_128s = {
            "\3\2\1\uffff\1\2\4\uffff\4\2\1\1\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\21\2\1\uffff\3\2\12\uffff\1\2\2\uffff\1\2\61\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[][] dfa_128 = unpackEncodedStringArray(dfa_128s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_20;
            this.eof = dfa_123;
            this.min = dfa_124;
            this.max = dfa_125;
            this.accept = dfa_126;
            this.special = dfa_127;
            this.transition = dfa_128;
        }
        public String getDescription() {
            return "5321:3: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_1 = input.LA(1);

                         
                        int index166_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_PsiInternalXtend()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index166_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_129s = "\1\4\6\0\66\uffff";
    static final String dfa_130s = "\1\167\6\0\66\uffff";
    static final String dfa_131s = "\7\uffff\1\2\63\uffff\1\3\1\1";
    static final String dfa_132s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\66\uffff}>";
    static final String[] dfa_133s = {
            "\1\7\1\uffff\2\7\2\uffff\3\7\1\uffff\2\7\1\3\1\7\1\73\2\uffff\3\7\1\uffff\14\7\2\uffff\2\7\1\2\1\uffff\1\4\1\5\1\6\1\7\1\uffff\1\7\7\uffff\3\7\23\uffff\2\7\4\uffff\1\7\6\uffff\1\7\2\uffff\13\7\4\uffff\1\1\3\7\4\uffff\3\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[][] dfa_133 = unpackEncodedStringArray(dfa_133s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_131;
            this.special = dfa_132;
            this.transition = dfa_133;
        }
        public String getDescription() {
            return "5332:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_1 = input.LA(1);

                         
                        int index165_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA165_2 = input.LA(1);

                         
                        int index165_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA165_3 = input.LA(1);

                         
                        int index165_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA165_4 = input.LA(1);

                         
                        int index165_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA165_5 = input.LA(1);

                         
                        int index165_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA165_6 = input.LA(1);

                         
                        int index165_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_134s = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\4\2\3\uffff\3\2\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\1\uffff\1\2\7\uffff\1\2\1\1\1\2\23\uffff\2\2\4\uffff\1\2\6\uffff\1\2\2\uffff\13\2\4\uffff\4\2\4\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_134 = unpackEncodedStringArray(dfa_134s);

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_105;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_134;
        }
        public String getDescription() {
            return "5470:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ( ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_1 = input.LA(1);

                         
                        int index171_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index171_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_105;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_134;
        }
        public String getDescription() {
            return "5593:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA174_1 = input.LA(1);

                         
                        int index174_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_PsiInternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index174_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 174, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_135s = "\40\uffff";
    static final String dfa_136s = "\1\uffff\35\36\2\uffff";
    static final String dfa_137s = "\36\4\2\uffff";
    static final String dfa_138s = "\36\167\2\uffff";
    static final String dfa_139s = "\36\uffff\1\2\1\1";
    static final String dfa_140s = "\40\uffff}>";
    static final String[] dfa_141s = {
            "\1\17\1\uffff\1\4\1\36\2\uffff\1\11\1\13\1\36\1\uffff\1\15\1\10\1\3\1\36\3\uffff\1\35\1\24\1\36\1\uffff\1\20\1\21\1\22\1\2\1\23\1\7\1\12\1\25\1\26\1\27\1\30\1\31\2\uffff\1\6\1\16\1\5\1\uffff\1\32\1\33\1\34\1\14\1\uffff\1\36\10\uffff\2\36\23\uffff\2\36\4\uffff\1\36\6\uffff\1\36\2\uffff\13\36\4\uffff\1\1\3\36\4\uffff\3\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "",
            ""
    };

    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[][] dfa_141 = unpackEncodedStringArray(dfa_141s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_135;
            this.eof = dfa_136;
            this.min = dfa_137;
            this.max = dfa_138;
            this.accept = dfa_139;
            this.special = dfa_140;
            this.transition = dfa_141;
        }
        public String getDescription() {
            return "5730:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | ( ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )";
        }
    }
    static final String dfa_142s = "\1\10\11\uffff";
    static final String dfa_143s = "\1\4\7\0\2\uffff";
    static final String dfa_144s = "\1\167\7\0\2\uffff";
    static final String dfa_145s = "\10\uffff\1\2\1\1";
    static final String dfa_146s = "\1\uffff\1\3\1\0\1\4\1\2\1\5\1\1\1\6\2\uffff}>";
    static final String[] dfa_147s = {
            "\3\10\1\6\1\10\1\7\12\10\1\uffff\32\10\1\uffff\2\10\6\uffff\4\10\1\1\1\2\1\3\1\4\1\5\31\10\1\uffff\20\10\2\uffff\13\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final char[] dfa_143 = DFA.unpackEncodedStringToUnsignedChars(dfa_143s);
    static final char[] dfa_144 = DFA.unpackEncodedStringToUnsignedChars(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[][] dfa_147 = unpackEncodedStringArray(dfa_147s);

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_117;
            this.eof = dfa_142;
            this.min = dfa_143;
            this.max = dfa_144;
            this.accept = dfa_145;
            this.special = dfa_146;
            this.transition = dfa_147;
        }
        public String getDescription() {
            return "5777:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA176_2 = input.LA(1);

                         
                        int index176_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA176_6 = input.LA(1);

                         
                        int index176_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA176_4 = input.LA(1);

                         
                        int index176_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA176_1 = input.LA(1);

                         
                        int index176_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_1);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA176_3 = input.LA(1);

                         
                        int index176_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA176_5 = input.LA(1);

                         
                        int index176_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA176_7 = input.LA(1);

                         
                        int index176_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 176, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_148s = "\13\uffff";
    static final String dfa_149s = "\1\1\12\uffff";
    static final String dfa_150s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_151s = "\1\167\1\uffff\10\0\1\uffff";
    static final String dfa_152s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_153s = "\2\uffff\1\6\1\0\1\2\1\3\1\7\1\4\1\5\1\1\1\uffff}>";
    static final String[] dfa_154s = {
            "\3\1\1\2\1\1\1\3\11\1\1\4\1\uffff\32\1\1\uffff\2\1\6\uffff\21\1\1\5\1\6\1\7\1\10\1\11\14\1\1\uffff\20\1\2\uffff\13\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[][] dfa_154 = unpackEncodedStringArray(dfa_154s);

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_148;
            this.eof = dfa_149;
            this.min = dfa_150;
            this.max = dfa_151;
            this.accept = dfa_152;
            this.special = dfa_153;
            this.transition = dfa_154;
        }
        public String getDescription() {
            return "()* loopback of 6379:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA186_3 = input.LA(1);

                         
                        int index186_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA186_9 = input.LA(1);

                         
                        int index186_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA186_4 = input.LA(1);

                         
                        int index186_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA186_5 = input.LA(1);

                         
                        int index186_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA186_7 = input.LA(1);

                         
                        int index186_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA186_8 = input.LA(1);

                         
                        int index186_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA186_2 = input.LA(1);

                         
                        int index186_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA186_6 = input.LA(1);

                         
                        int index186_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 186, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_155s = "\1\7\2\uffff\1\11\7\uffff";
    static final String dfa_156s = "\1\115\2\uffff\1\113\7\uffff";
    static final String dfa_157s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\6\1\3";
    static final String dfa_158s = "\13\uffff}>";
    static final String[] dfa_159s = {
            "\1\6\1\uffff\1\3\11\uffff\1\5\65\uffff\1\1\1\2\1\4\1\7\1\10",
            "",
            "",
            "\1\11\101\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_155 = DFA.unpackEncodedStringToUnsignedChars(dfa_155s);
    static final char[] dfa_156 = DFA.unpackEncodedStringToUnsignedChars(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[][] dfa_159 = unpackEncodedStringArray(dfa_159s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_148;
            this.eof = dfa_148;
            this.min = dfa_155;
            this.max = dfa_156;
            this.accept = dfa_157;
            this.special = dfa_158;
            this.transition = dfa_159;
        }
        public String getDescription() {
            return "6434:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "7231:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA205_1 = input.LA(1);

                         
                        int index205_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index205_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA204 extends DFA {

        public DFA204(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 204;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "7247:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA204_0 = input.LA(1);

                         
                        int index204_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA204_0==KW_Extension) ) {s = 1;}

                        else if ( (LA204_0==RULE_ID) ) {s = 2;}

                        else if ( (LA204_0==KW_Create) ) {s = 3;}

                        else if ( (LA204_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA204_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA204_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA204_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA204_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA204_0==KW_EqualsSignGreaterThanSign) && (synpred41_PsiInternalXtend())) {s = 9;}

                        else if ( (LA204_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA204_0==KW_Class) ) {s = 11;}

                        else if ( (LA204_0==KW_Def) ) {s = 12;}

                        else if ( (LA204_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA204_0==KW_Enum) ) {s = 14;}

                        else if ( (LA204_0==KW_Extends) ) {s = 15;}

                        else if ( (LA204_0==KW_Final) ) {s = 16;}

                        else if ( (LA204_0==KW_Implements) ) {s = 17;}

                        else if ( (LA204_0==KW_Import) ) {s = 18;}

                        else if ( (LA204_0==KW_Interface) ) {s = 19;}

                        else if ( (LA204_0==KW_Override) ) {s = 20;}

                        else if ( (LA204_0==KW_Package) ) {s = 21;}

                        else if ( (LA204_0==KW_Public) ) {s = 22;}

                        else if ( (LA204_0==KW_Private) ) {s = 23;}

                        else if ( (LA204_0==KW_Protected) ) {s = 24;}

                        else if ( (LA204_0==KW_Static) ) {s = 25;}

                        else if ( (LA204_0==KW_Throws) ) {s = 26;}

                        else if ( (LA204_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA204_0==KW_Native) ) {s = 28;}

                        else if ( (LA204_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA204_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA204_0==KW_Transient) ) {s = 31;}

                        else if ( (LA204_0==KW_VerticalLine) && (synpred41_PsiInternalXtend())) {s = 32;}

                        else if ( (LA204_0==KW_LessThanSign||LA204_0==KW_LeftCurlyBracket||LA204_0==KW_New||LA204_0==KW_Switch||(LA204_0>=KW_NumberSign && LA204_0<=KW_LeftSquareBracket)||(LA204_0>=KW_PlusSign && LA204_0<=KW_HyphenMinus)||LA204_0==KW_ExclamationMark||LA204_0==KW_If||(LA204_0>=KW_For && LA204_0<=KW_Try)||(LA204_0>=RULE_STRING && LA204_0<=RULE_RICH_TEXT_START)||(LA204_0>=RULE_HEX && LA204_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA204_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index204_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA204_1 = input.LA(1);

                         
                        int index204_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA204_2 = input.LA(1);

                         
                        int index204_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA204_3 = input.LA(1);

                         
                        int index204_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA204_4 = input.LA(1);

                         
                        int index204_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA204_5 = input.LA(1);

                         
                        int index204_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA204_6 = input.LA(1);

                         
                        int index204_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA204_7 = input.LA(1);

                         
                        int index204_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA204_8 = input.LA(1);

                         
                        int index204_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA204_10 = input.LA(1);

                         
                        int index204_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA204_11 = input.LA(1);

                         
                        int index204_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA204_12 = input.LA(1);

                         
                        int index204_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA204_13 = input.LA(1);

                         
                        int index204_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA204_14 = input.LA(1);

                         
                        int index204_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA204_15 = input.LA(1);

                         
                        int index204_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA204_16 = input.LA(1);

                         
                        int index204_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA204_17 = input.LA(1);

                         
                        int index204_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA204_18 = input.LA(1);

                         
                        int index204_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA204_19 = input.LA(1);

                         
                        int index204_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA204_20 = input.LA(1);

                         
                        int index204_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA204_21 = input.LA(1);

                         
                        int index204_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA204_22 = input.LA(1);

                         
                        int index204_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA204_23 = input.LA(1);

                         
                        int index204_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA204_24 = input.LA(1);

                         
                        int index204_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA204_25 = input.LA(1);

                         
                        int index204_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA204_26 = input.LA(1);

                         
                        int index204_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA204_27 = input.LA(1);

                         
                        int index204_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA204_28 = input.LA(1);

                         
                        int index204_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA204_29 = input.LA(1);

                         
                        int index204_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA204_30 = input.LA(1);

                         
                        int index204_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA204_31 = input.LA(1);

                         
                        int index204_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 204, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA206 extends DFA {

        public DFA206(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 206;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "7327:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA206_1 = input.LA(1);

                         
                        int index206_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index206_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 206, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_160s = "\72\uffff";
    static final String dfa_161s = "\1\4\3\uffff\1\0\53\uffff\1\0\11\uffff";
    static final String dfa_162s = "\1\167\3\uffff\1\0\53\uffff\1\0\11\uffff";
    static final String dfa_163s = "\1\uffff\1\1\1\2\1\3\1\uffff\1\5\35\uffff\1\6\13\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\4\1\10\1\11";
    static final String dfa_164s = "\4\uffff\1\0\53\uffff\1\1\11\uffff}>";
    static final String[] dfa_165s = {
            "\1\5\1\uffff\2\5\2\uffff\2\5\1\2\1\uffff\3\5\1\66\3\uffff\2\5\1\1\1\uffff\12\5\1\4\1\5\2\uffff\3\5\1\uffff\4\5\1\uffff\1\3\10\uffff\2\43\40\uffff\1\57\2\uffff\1\60\1\61\1\62\1\5\4\43\1\63\1\64\1\65\4\uffff\1\5\3\43\4\uffff\3\43",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final char[] dfa_162 = DFA.unpackEncodedStringToUnsignedChars(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final short[][] dfa_165 = unpackEncodedStringArray(dfa_165s);

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = dfa_160;
            this.eof = dfa_160;
            this.min = dfa_161;
            this.max = dfa_162;
            this.accept = dfa_163;
            this.special = dfa_164;
            this.transition = dfa_165;
        }
        public String getDescription() {
            return "7357:2: ( ruleXConstructorCall | ruleXBlockExpression | ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=> ruleXSynchronizedExpression ) | ruleXFeatureCall | ruleXLiteral | ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ruleXForLoopExpression ) | ruleXBasicForLoopExpression | ruleXWhileExpression | ruleXDoWhileExpression | ruleXThrowExpression | ruleXReturnExpression | ruleXTryCatchFinallyExpression | ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA208_4 = input.LA(1);

                         
                        int index208_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_PsiInternalXtend()) ) {s = 55;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index208_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA208_48 = input.LA(1);

                         
                        int index208_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_PsiInternalXtend()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index208_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 208, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_166s = "\77\uffff";
    static final String dfa_167s = "\1\4\10\0\1\uffff\26\0\37\uffff";
    static final String dfa_168s = "\1\167\10\0\1\uffff\26\0\37\uffff";
    static final String dfa_169s = "\11\uffff\1\1\26\uffff\1\1\1\2\35\uffff";
    static final String dfa_170s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\37\uffff}>";
    static final String[] dfa_171s = {
            "\1\25\1\uffff\1\13\1\41\2\uffff\1\17\1\21\1\41\1\uffff\1\23\1\16\1\4\1\10\1\uffff\1\11\1\uffff\1\1\1\32\1\41\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\41\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\1\uffff\1\41\10\uffff\3\41\22\uffff\2\41\4\uffff\1\41\5\uffff\1\40\1\41\2\uffff\13\41\4\uffff\1\2\3\41\4\uffff\3\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final char[] dfa_167 = DFA.unpackEncodedStringToUnsignedChars(dfa_167s);
    static final char[] dfa_168 = DFA.unpackEncodedStringToUnsignedChars(dfa_168s);
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final short[][] dfa_171 = unpackEncodedStringArray(dfa_171s);

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_166;
            this.eof = dfa_166;
            this.min = dfa_167;
            this.max = dfa_168;
            this.accept = dfa_169;
            this.special = dfa_170;
            this.transition = dfa_171;
        }
        public String getDescription() {
            return "7782:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA217_0 = input.LA(1);

                         
                        int index217_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA217_0==KW_Extension) ) {s = 1;}

                        else if ( (LA217_0==RULE_ID) ) {s = 2;}

                        else if ( (LA217_0==KW_Create) ) {s = 3;}

                        else if ( (LA217_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA217_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA217_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA217_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA217_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA217_0==KW_EqualsSignGreaterThanSign) && (synpred47_PsiInternalXtend())) {s = 9;}

                        else if ( (LA217_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA217_0==KW_Class) ) {s = 11;}

                        else if ( (LA217_0==KW_Def) ) {s = 12;}

                        else if ( (LA217_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA217_0==KW_Enum) ) {s = 14;}

                        else if ( (LA217_0==KW_Extends) ) {s = 15;}

                        else if ( (LA217_0==KW_Final) ) {s = 16;}

                        else if ( (LA217_0==KW_Implements) ) {s = 17;}

                        else if ( (LA217_0==KW_Import) ) {s = 18;}

                        else if ( (LA217_0==KW_Interface) ) {s = 19;}

                        else if ( (LA217_0==KW_Override) ) {s = 20;}

                        else if ( (LA217_0==KW_Package) ) {s = 21;}

                        else if ( (LA217_0==KW_Public) ) {s = 22;}

                        else if ( (LA217_0==KW_Private) ) {s = 23;}

                        else if ( (LA217_0==KW_Protected) ) {s = 24;}

                        else if ( (LA217_0==KW_Static) ) {s = 25;}

                        else if ( (LA217_0==KW_Throws) ) {s = 26;}

                        else if ( (LA217_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA217_0==KW_Native) ) {s = 28;}

                        else if ( (LA217_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA217_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA217_0==KW_Transient) ) {s = 31;}

                        else if ( (LA217_0==KW_VerticalLine) && (synpred47_PsiInternalXtend())) {s = 32;}

                        else if ( (LA217_0==KW_LessThanSign||LA217_0==KW_LeftCurlyBracket||LA217_0==KW_New||(LA217_0>=KW_Val && LA217_0<=KW_Var)||LA217_0==KW_Switch||(LA217_0>=KW_NumberSign && LA217_0<=KW_RightSquareBracket)||(LA217_0>=KW_PlusSign && LA217_0<=KW_HyphenMinus)||LA217_0==KW_ExclamationMark||LA217_0==KW_If||(LA217_0>=KW_For && LA217_0<=KW_Try)||(LA217_0>=RULE_STRING && LA217_0<=RULE_RICH_TEXT_START)||(LA217_0>=RULE_HEX && LA217_0<=RULE_DECIMAL)) ) {s = 33;}

                         
                        input.seek(index217_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA217_1 = input.LA(1);

                         
                        int index217_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA217_2 = input.LA(1);

                         
                        int index217_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA217_3 = input.LA(1);

                         
                        int index217_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA217_4 = input.LA(1);

                         
                        int index217_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA217_5 = input.LA(1);

                         
                        int index217_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA217_6 = input.LA(1);

                         
                        int index217_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA217_7 = input.LA(1);

                         
                        int index217_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA217_8 = input.LA(1);

                         
                        int index217_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA217_10 = input.LA(1);

                         
                        int index217_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA217_11 = input.LA(1);

                         
                        int index217_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA217_12 = input.LA(1);

                         
                        int index217_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA217_13 = input.LA(1);

                         
                        int index217_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA217_14 = input.LA(1);

                         
                        int index217_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA217_15 = input.LA(1);

                         
                        int index217_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA217_16 = input.LA(1);

                         
                        int index217_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA217_17 = input.LA(1);

                         
                        int index217_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA217_18 = input.LA(1);

                         
                        int index217_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA217_19 = input.LA(1);

                         
                        int index217_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA217_20 = input.LA(1);

                         
                        int index217_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA217_21 = input.LA(1);

                         
                        int index217_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA217_22 = input.LA(1);

                         
                        int index217_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA217_23 = input.LA(1);

                         
                        int index217_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA217_24 = input.LA(1);

                         
                        int index217_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA217_25 = input.LA(1);

                         
                        int index217_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA217_26 = input.LA(1);

                         
                        int index217_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA217_27 = input.LA(1);

                         
                        int index217_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA217_28 = input.LA(1);

                         
                        int index217_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA217_29 = input.LA(1);

                         
                        int index217_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA217_30 = input.LA(1);

                         
                        int index217_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA217_31 = input.LA(1);

                         
                        int index217_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 217, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA238 extends DFA {

        public DFA238(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 238;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "8778:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA238_1 = input.LA(1);

                         
                        int index238_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index238_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 238, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA237 extends DFA {

        public DFA237(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 237;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "8794:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA237_0 = input.LA(1);

                         
                        int index237_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA237_0==KW_Extension) ) {s = 1;}

                        else if ( (LA237_0==RULE_ID) ) {s = 2;}

                        else if ( (LA237_0==KW_Create) ) {s = 3;}

                        else if ( (LA237_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA237_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA237_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA237_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA237_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA237_0==KW_EqualsSignGreaterThanSign) && (synpred53_PsiInternalXtend())) {s = 9;}

                        else if ( (LA237_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA237_0==KW_Class) ) {s = 11;}

                        else if ( (LA237_0==KW_Def) ) {s = 12;}

                        else if ( (LA237_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA237_0==KW_Enum) ) {s = 14;}

                        else if ( (LA237_0==KW_Extends) ) {s = 15;}

                        else if ( (LA237_0==KW_Final) ) {s = 16;}

                        else if ( (LA237_0==KW_Implements) ) {s = 17;}

                        else if ( (LA237_0==KW_Import) ) {s = 18;}

                        else if ( (LA237_0==KW_Interface) ) {s = 19;}

                        else if ( (LA237_0==KW_Override) ) {s = 20;}

                        else if ( (LA237_0==KW_Package) ) {s = 21;}

                        else if ( (LA237_0==KW_Public) ) {s = 22;}

                        else if ( (LA237_0==KW_Private) ) {s = 23;}

                        else if ( (LA237_0==KW_Protected) ) {s = 24;}

                        else if ( (LA237_0==KW_Static) ) {s = 25;}

                        else if ( (LA237_0==KW_Throws) ) {s = 26;}

                        else if ( (LA237_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA237_0==KW_Native) ) {s = 28;}

                        else if ( (LA237_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA237_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA237_0==KW_Transient) ) {s = 31;}

                        else if ( (LA237_0==KW_VerticalLine) && (synpred53_PsiInternalXtend())) {s = 32;}

                        else if ( (LA237_0==KW_LessThanSign||LA237_0==KW_LeftCurlyBracket||LA237_0==KW_New||LA237_0==KW_Switch||(LA237_0>=KW_NumberSign && LA237_0<=KW_LeftSquareBracket)||(LA237_0>=KW_PlusSign && LA237_0<=KW_HyphenMinus)||LA237_0==KW_ExclamationMark||LA237_0==KW_If||(LA237_0>=KW_For && LA237_0<=KW_Try)||(LA237_0>=RULE_STRING && LA237_0<=RULE_RICH_TEXT_START)||(LA237_0>=RULE_HEX && LA237_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA237_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index237_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA237_1 = input.LA(1);

                         
                        int index237_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA237_2 = input.LA(1);

                         
                        int index237_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA237_3 = input.LA(1);

                         
                        int index237_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA237_4 = input.LA(1);

                         
                        int index237_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA237_5 = input.LA(1);

                         
                        int index237_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA237_6 = input.LA(1);

                         
                        int index237_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA237_7 = input.LA(1);

                         
                        int index237_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA237_8 = input.LA(1);

                         
                        int index237_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA237_10 = input.LA(1);

                         
                        int index237_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA237_11 = input.LA(1);

                         
                        int index237_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA237_12 = input.LA(1);

                         
                        int index237_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA237_13 = input.LA(1);

                         
                        int index237_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA237_14 = input.LA(1);

                         
                        int index237_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA237_15 = input.LA(1);

                         
                        int index237_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA237_16 = input.LA(1);

                         
                        int index237_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA237_17 = input.LA(1);

                         
                        int index237_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA237_18 = input.LA(1);

                         
                        int index237_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA237_19 = input.LA(1);

                         
                        int index237_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA237_20 = input.LA(1);

                         
                        int index237_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA237_21 = input.LA(1);

                         
                        int index237_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA237_22 = input.LA(1);

                         
                        int index237_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA237_23 = input.LA(1);

                         
                        int index237_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA237_24 = input.LA(1);

                         
                        int index237_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA237_25 = input.LA(1);

                         
                        int index237_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA237_26 = input.LA(1);

                         
                        int index237_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA237_27 = input.LA(1);

                         
                        int index237_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA237_28 = input.LA(1);

                         
                        int index237_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA237_29 = input.LA(1);

                         
                        int index237_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA237_30 = input.LA(1);

                         
                        int index237_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA237_31 = input.LA(1);

                         
                        int index237_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 237, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA239 extends DFA {

        public DFA239(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 239;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "8874:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA239_1 = input.LA(1);

                         
                        int index239_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index239_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 239, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_172s = "\1\72\153\uffff";
    static final String dfa_173s = "\1\4\71\0\62\uffff";
    static final String dfa_174s = "\1\167\71\0\62\uffff";
    static final String dfa_175s = "\72\uffff\1\2\60\uffff\1\1";
    static final String dfa_176s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\62\uffff}>";
    static final String[] dfa_177s = {
            "\1\17\1\72\1\4\1\44\2\72\1\11\1\13\1\42\1\72\1\15\1\10\1\3\1\71\2\72\1\uffff\1\35\1\24\1\41\1\72\1\20\1\21\1\22\1\2\1\23\1\7\1\12\1\25\1\26\1\27\1\30\1\31\2\72\1\6\1\16\1\5\1\72\1\32\1\33\1\34\1\14\1\uffff\1\43\1\72\6\uffff\1\72\1\46\1\47\23\72\1\40\1\37\4\72\1\36\5\72\1\uffff\1\62\2\72\1\63\1\64\1\65\1\45\1\50\1\51\1\55\1\61\1\66\1\67\1\70\2\72\2\uffff\1\1\1\56\1\57\1\60\4\72\1\52\1\53\1\54",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final char[] dfa_174 = DFA.unpackEncodedStringToUnsignedChars(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final short[][] dfa_177 = unpackEncodedStringArray(dfa_177s);

    class DFA243 extends DFA {

        public DFA243(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 243;
            this.eot = dfa_89;
            this.eof = dfa_172;
            this.min = dfa_173;
            this.max = dfa_174;
            this.accept = dfa_175;
            this.special = dfa_176;
            this.transition = dfa_177;
        }
        public String getDescription() {
            return "9133:3: ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA243_1 = input.LA(1);

                         
                        int index243_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA243_2 = input.LA(1);

                         
                        int index243_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA243_3 = input.LA(1);

                         
                        int index243_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA243_4 = input.LA(1);

                         
                        int index243_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA243_5 = input.LA(1);

                         
                        int index243_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA243_6 = input.LA(1);

                         
                        int index243_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA243_7 = input.LA(1);

                         
                        int index243_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA243_8 = input.LA(1);

                         
                        int index243_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA243_9 = input.LA(1);

                         
                        int index243_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA243_10 = input.LA(1);

                         
                        int index243_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA243_11 = input.LA(1);

                         
                        int index243_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA243_12 = input.LA(1);

                         
                        int index243_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA243_13 = input.LA(1);

                         
                        int index243_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA243_14 = input.LA(1);

                         
                        int index243_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA243_15 = input.LA(1);

                         
                        int index243_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA243_16 = input.LA(1);

                         
                        int index243_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA243_17 = input.LA(1);

                         
                        int index243_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA243_18 = input.LA(1);

                         
                        int index243_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA243_19 = input.LA(1);

                         
                        int index243_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA243_20 = input.LA(1);

                         
                        int index243_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA243_21 = input.LA(1);

                         
                        int index243_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA243_22 = input.LA(1);

                         
                        int index243_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA243_23 = input.LA(1);

                         
                        int index243_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA243_24 = input.LA(1);

                         
                        int index243_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA243_25 = input.LA(1);

                         
                        int index243_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA243_26 = input.LA(1);

                         
                        int index243_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA243_27 = input.LA(1);

                         
                        int index243_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA243_28 = input.LA(1);

                         
                        int index243_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA243_29 = input.LA(1);

                         
                        int index243_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA243_30 = input.LA(1);

                         
                        int index243_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA243_31 = input.LA(1);

                         
                        int index243_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA243_32 = input.LA(1);

                         
                        int index243_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA243_33 = input.LA(1);

                         
                        int index243_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA243_34 = input.LA(1);

                         
                        int index243_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA243_35 = input.LA(1);

                         
                        int index243_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA243_36 = input.LA(1);

                         
                        int index243_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA243_37 = input.LA(1);

                         
                        int index243_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA243_38 = input.LA(1);

                         
                        int index243_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA243_39 = input.LA(1);

                         
                        int index243_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA243_40 = input.LA(1);

                         
                        int index243_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA243_41 = input.LA(1);

                         
                        int index243_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA243_42 = input.LA(1);

                         
                        int index243_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA243_43 = input.LA(1);

                         
                        int index243_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA243_44 = input.LA(1);

                         
                        int index243_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA243_45 = input.LA(1);

                         
                        int index243_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA243_46 = input.LA(1);

                         
                        int index243_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA243_47 = input.LA(1);

                         
                        int index243_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA243_48 = input.LA(1);

                         
                        int index243_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA243_49 = input.LA(1);

                         
                        int index243_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA243_50 = input.LA(1);

                         
                        int index243_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA243_51 = input.LA(1);

                         
                        int index243_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA243_52 = input.LA(1);

                         
                        int index243_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA243_53 = input.LA(1);

                         
                        int index243_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA243_54 = input.LA(1);

                         
                        int index243_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA243_55 = input.LA(1);

                         
                        int index243_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA243_56 = input.LA(1);

                         
                        int index243_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA243_57 = input.LA(1);

                         
                        int index243_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_57);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 243, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_178s = "\1\1\11\uffff";
    static final String dfa_179s = "\1\4\1\uffff\1\4\6\0\1\uffff";
    static final String dfa_180s = "\1\167\1\uffff\1\155\6\0\1\uffff";
    static final String dfa_181s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_182s = "\3\uffff\1\0\1\4\1\5\1\3\1\2\1\1\1\uffff}>";
    static final String[] dfa_183s = {
            "\24\1\1\2\31\1\6\uffff\42\1\1\uffff\20\1\1\uffff\14\1",
            "",
            "\1\1\1\uffff\2\1\2\uffff\2\1\2\uffff\2\1\1\4\4\uffff\2\1\2\uffff\14\1\2\uffff\2\1\1\5\1\uffff\1\6\1\7\1\10\1\1\41\uffff\1\1\20\uffff\1\1\13\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final char[] dfa_179 = DFA.unpackEncodedStringToUnsignedChars(dfa_179s);
    static final char[] dfa_180 = DFA.unpackEncodedStringToUnsignedChars(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[][] dfa_183 = unpackEncodedStringArray(dfa_183s);

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = dfa_117;
            this.eof = dfa_178;
            this.min = dfa_179;
            this.max = dfa_180;
            this.accept = dfa_181;
            this.special = dfa_182;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "()* loopback of 9390:3: ( ( ( '.' )=>kw= '.' ) ruleValidID )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA247_3 = input.LA(1);

                         
                        int index247_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA247_8 = input.LA(1);

                         
                        int index247_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA247_7 = input.LA(1);

                         
                        int index247_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA247_6 = input.LA(1);

                         
                        int index247_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA247_4 = input.LA(1);

                         
                        int index247_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA247_5 = input.LA(1);

                         
                        int index247_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 247, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_184s = "\157\uffff";
    static final String dfa_185s = "\1\2\156\uffff";
    static final String dfa_186s = "\1\4\1\0\155\uffff";
    static final String dfa_187s = "\1\167\1\0\155\uffff";
    static final String dfa_188s = "\2\uffff\1\2\153\uffff\1\1";
    static final String dfa_189s = "\1\uffff\1\0\155\uffff}>";
    static final String[] dfa_190s = {
            "\3\2\1\1\52\2\6\uffff\42\2\1\uffff\20\2\1\uffff\14\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final char[] dfa_187 = DFA.unpackEncodedStringToUnsignedChars(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final short[][] dfa_190 = unpackEncodedStringArray(dfa_190s);

    class DFA261 extends DFA {

        public DFA261(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 261;
            this.eot = dfa_184;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "9664:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA261_1 = input.LA(1);

                         
                        int index261_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_PsiInternalXtend()) ) {s = 110;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index261_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 261, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_191s = "\3\uffff\1\2\1\5\1\4\1\0\1\1\1\3\1\uffff}>";
    static final String[] dfa_192s = {
            "\24\1\1\2\31\1\6\uffff\42\1\1\uffff\20\1\1\uffff\14\1",
            "",
            "\1\1\1\uffff\2\1\2\uffff\2\1\2\uffff\2\1\1\4\4\uffff\2\1\2\uffff\14\1\2\uffff\2\1\1\5\1\uffff\1\6\1\7\1\10\1\1\62\uffff\1\1\13\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_191 = DFA.unpackEncodedString(dfa_191s);
    static final short[][] dfa_192 = unpackEncodedStringArray(dfa_192s);

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = dfa_117;
            this.eof = dfa_178;
            this.min = dfa_179;
            this.max = dfa_180;
            this.accept = dfa_181;
            this.special = dfa_191;
            this.transition = dfa_192;
        }
        public String getDescription() {
            return "()* loopback of 9713:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA260_6 = input.LA(1);

                         
                        int index260_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA260_7 = input.LA(1);

                         
                        int index260_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA260_3 = input.LA(1);

                         
                        int index260_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA260_8 = input.LA(1);

                         
                        int index260_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA260_5 = input.LA(1);

                         
                        int index260_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA260_4 = input.LA(1);

                         
                        int index260_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 260, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = dfa_184;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "9748:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA259_1 = input.LA(1);

                         
                        int index259_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_PsiInternalXtend()) ) {s = 110;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index259_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 259, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_193s = "\2\uffff\6\11\2\uffff\6\11\1\uffff";
    static final String dfa_194s = "\1\20\1\uffff\6\4\1\20\1\uffff\6\4\1\uffff";
    static final String dfa_195s = "\1\155\1\uffff\6\70\1\155\1\uffff\6\70\1\uffff";
    static final String dfa_196s = "\1\uffff\1\1\7\uffff\1\2\6\uffff\1\3";
    static final String[] dfa_197s = {
            "\1\4\14\uffff\1\1\13\uffff\1\3\1\uffff\1\5\1\6\1\7\77\uffff\1\2",
            "",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\1\14\30\uffff\1\13\1\uffff\1\15\1\16\1\17\42\uffff\1\20\34\uffff\1\12",
            "",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            ""
    };
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final char[] dfa_194 = DFA.unpackEncodedStringToUnsignedChars(dfa_194s);
    static final char[] dfa_195 = DFA.unpackEncodedStringToUnsignedChars(dfa_195s);
    static final short[] dfa_196 = DFA.unpackEncodedString(dfa_196s);
    static final short[][] dfa_197 = unpackEncodedStringArray(dfa_197s);

    class DFA271 extends DFA {

        public DFA271(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 271;
            this.eot = dfa_63;
            this.eof = dfa_193;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_196;
            this.special = dfa_67;
            this.transition = dfa_197;
        }
        public String getDescription() {
            return "10143:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x00003A0000010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0100401FFE01C072L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0100401FFE01C052L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0100001FFE01C052L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0100001FFE01C050L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000001FFE000050L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000001C80L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000300L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000001C00L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000001800L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x00003A00000B0000L,0x0000200000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000001100L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x01003BFFFEABE050L,0x0000200000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000001FFE004010L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000001480L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000001400L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000001FFE008010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x00003A0000012020L,0x0000200000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000002120L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000001FFE010010L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x01003A7FFE2BE050L,0x0000200000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x00003A7FFE2F0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000040100L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00003A7FFE2B0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x01003A7FFE2BC050L,0x0000200000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000007FFE000010L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000100022L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x07017B9FFEE3DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x01003BFFFEABC050L,0x0000200000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00003A0000110022L,0x0000200000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000001FFE200010L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000019FFE000010L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0xF0003BFFFE2B0290L,0x0000200000DFFEFFL});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x01003A7FFE2F0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x01003A7FFE2B0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000401022L,0x0001C00000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000001122L,0x0001C00000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000001FFE800010L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000020080L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000401000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x00003A7FFE2B0010L,0x0000280000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000001000082L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000BA0000010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x00007BFFFE6BCC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000006000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x00007B9FFE41CC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000001002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0400000000020082L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0400000000020002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x07017BFFFEEFDCD0L,0x00E1E1FFCC10C000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x07017BFFFEEBDCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00023E7FFE2B2110L,0x0000200020000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x07157BFFFEE3DCD0L,0x00FFE1FFC810C000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x07157BFFFEE3DCD2L,0x00E7E1FFC810C000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000380000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x00E0000000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x07017B9FFEE7DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0F017B9FFEE3DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0800000000000100L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0xF000000000000282L,0x0000000000000001L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000200L,0x0000000000000002L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x00000000000000F0L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000282L,0x0000000000000102L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000080282L,0x0000000000003E00L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000080080L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000002L,0x000000000000C000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x00000000000F0000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0xF0003BFFFE2B0292L,0x0000200000DFFEFFL});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000001000002L,0x0000000003000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x00007B9FFE61CC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x00007B9FFE61CCD0L,0x0000200200000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0400000001020002L,0x0000000003000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0400000001000002L,0x0000000003000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x07017B9FFEE3FCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000002100L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0F017BFFFEEBDCD0L,0x00E1E1FFCC10C000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000100L,0x0000000004000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0F017BFFFEE3DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x07017BFFFEE3DCF2L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x07017BFFFEE3DCD2L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000040000000100L,0x0000000020000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000040000000100L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x07017BFFFEE3DCF0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000120L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x07017BFFFEE3DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x07017B9FFEE3DCF0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x07017BFFFEE3FCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x07017BFFFEE3FCF0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0400000000040000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x07017B9FFEE3DCD2L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000060000000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x0000060000000000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000402L,0x0000000200000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x00003A0020010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x00003A0000210000L,0x0000200000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x00003A0000010000L,0x0000200000010000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x00003A0000010002L,0x0000200000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000200002L});

}