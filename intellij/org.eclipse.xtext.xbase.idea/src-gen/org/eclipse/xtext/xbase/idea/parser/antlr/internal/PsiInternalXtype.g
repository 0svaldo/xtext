/*
 * generated by Xtext
 */
grammar PsiInternalXtype;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.xbase.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.xbase.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.xbase.idea.lang.XtypeElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected XtypeGrammarAccess grammarAccess;

	protected XtypeElementTypeProvider elementTypeProvider;

	public PsiInternalXtypeParser(PsiBuilder builder, TokenStream input, XtypeElementTypeProvider elementTypeProvider, XtypeGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "JvmTypeReference";
	}

}

//Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference:
	{ markComposite(elementTypeProvider.getJvmTypeReferenceElementType()); }
	ruleJvmTypeReference
	{ doneComposite(); }
	EOF;
finally {
}

// Rule JvmTypeReference
ruleJvmTypeReference:
	(
		(
			{
				markComposite(elementTypeProvider.getJvmTypeReference_JvmParameterizedTypeReferenceParserRuleCall_0_0ElementType());
			}
			ruleJvmParameterizedTypeReference
			{
				doneComposite();
			}
			(
				((
					(
					)
					ruleArrayBrackets
				)
				)=>
				(
					(
						{
							precedeComposite(elementTypeProvider.getJvmTypeReference_JvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0ElementType());
							doneComposite();
						}
					)
					{
						markComposite(elementTypeProvider.getJvmTypeReference_ArrayBracketsParserRuleCall_0_1_0_1ElementType());
					}
					ruleArrayBrackets
					{
						doneComposite();
					}
				)
			)*
		)
		    |
		{
			markComposite(elementTypeProvider.getJvmTypeReference_XFunctionTypeRefParserRuleCall_1ElementType());
		}
		ruleXFunctionTypeRef
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets:
	{ markComposite(elementTypeProvider.getArrayBracketsElementType()); }
	ruleArrayBrackets
	{ doneComposite(); }
	EOF;
finally {
}

// Rule ArrayBrackets
ruleArrayBrackets:
	(
		{
			markLeaf();
		}
		kw='['
		{
			doneLeaf(kw, elementTypeProvider.getArrayBrackets_LeftSquareBracketKeyword_0ElementType());
		}
		{
			markLeaf();
		}
		kw=']'
		{
			doneLeaf(kw, elementTypeProvider.getArrayBrackets_RightSquareBracketKeyword_1ElementType());
		}
	)
;

//Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef:
	{ markComposite(elementTypeProvider.getXFunctionTypeRefElementType()); }
	ruleXFunctionTypeRef
	{ doneComposite(); }
	EOF;
finally {
}

// Rule XFunctionTypeRef
ruleXFunctionTypeRef:
	(
		(
			{
				markLeaf();
			}
			otherlv_0='('
			{
				doneLeaf(otherlv_0, elementTypeProvider.getXFunctionTypeRef_LeftParenthesisKeyword_0_0ElementType());
			}
			(
				(
					(
						{
							markComposite(elementTypeProvider.getXFunctionTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0ElementType());
						}
						lv_paramTypes_1_0=ruleJvmTypeReference
						{
							doneComposite();
						}
					)
				)
				(
					{
						markLeaf();
					}
					otherlv_2=','
					{
						doneLeaf(otherlv_2, elementTypeProvider.getXFunctionTypeRef_CommaKeyword_0_1_1_0ElementType());
					}
					(
						(
							{
								markComposite(elementTypeProvider.getXFunctionTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0ElementType());
							}
							lv_paramTypes_3_0=ruleJvmTypeReference
							{
								doneComposite();
							}
						)
					)
				)*
			)?
			{
				markLeaf();
			}
			otherlv_4=')'
			{
				doneLeaf(otherlv_4, elementTypeProvider.getXFunctionTypeRef_RightParenthesisKeyword_0_2ElementType());
			}
		)?
		{
			markLeaf();
		}
		otherlv_5='=>'
		{
			doneLeaf(otherlv_5, elementTypeProvider.getXFunctionTypeRef_EqualsSignGreaterThanSignKeyword_1ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getXFunctionTypeRef_ReturnTypeJvmTypeReferenceParserRuleCall_2_0ElementType());
				}
				lv_returnType_6_0=ruleJvmTypeReference
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference:
	{ markComposite(elementTypeProvider.getJvmParameterizedTypeReferenceElementType()); }
	ruleJvmParameterizedTypeReference
	{ doneComposite(); }
	EOF;
finally {
}

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getJvmParameterizedTypeReference_TypeJvmTypeCrossReference_0_0ElementType());
				}
				ruleQualifiedName
				{
					doneComposite();
				}
			)
		)
		(
			(
				('<')=>
				{
					markLeaf();
				}
				otherlv_1='<'
				{
					doneLeaf(otherlv_1, elementTypeProvider.getJvmParameterizedTypeReference_LessThanSignKeyword_1_0ElementType());
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0ElementType());
					}
					lv_arguments_2_0=ruleJvmArgumentTypeReference
					{
						doneComposite();
					}
				)
			)
			(
				{
					markLeaf();
				}
				otherlv_3=','
				{
					doneLeaf(otherlv_3, elementTypeProvider.getJvmParameterizedTypeReference_CommaKeyword_1_2_0ElementType());
				}
				(
					(
						{
							markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0ElementType());
						}
						lv_arguments_4_0=ruleJvmArgumentTypeReference
						{
							doneComposite();
						}
					)
				)
			)*
			{
				markLeaf();
			}
			otherlv_5='>'
			{
				doneLeaf(otherlv_5, elementTypeProvider.getJvmParameterizedTypeReference_GreaterThanSignKeyword_1_3ElementType());
			}
			(
				(
					((
						(
						)
						'.'
					)
					)=>
					(
						(
							{
								precedeComposite(elementTypeProvider.getJvmParameterizedTypeReference_JvmInnerTypeReferenceOuterAction_1_4_0_0_0ElementType());
								doneComposite();
							}
						)
						{
							markLeaf();
						}
						otherlv_7='.'
						{
							doneLeaf(otherlv_7, elementTypeProvider.getJvmParameterizedTypeReference_FullStopKeyword_1_4_0_0_1ElementType());
						}
					)
				)
				(
					(
						{
							markComposite(elementTypeProvider.getJvmParameterizedTypeReference_TypeJvmTypeCrossReference_1_4_1_0ElementType());
						}
						ruleValidID
						{
							doneComposite();
						}
					)
				)
				(
					(
						('<')=>
						{
							markLeaf();
						}
						otherlv_9='<'
						{
							doneLeaf(otherlv_9, elementTypeProvider.getJvmParameterizedTypeReference_LessThanSignKeyword_1_4_2_0ElementType());
						}
					)
					(
						(
							{
								markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0ElementType());
							}
							lv_arguments_10_0=ruleJvmArgumentTypeReference
							{
								doneComposite();
							}
						)
					)
					(
						{
							markLeaf();
						}
						otherlv_11=','
						{
							doneLeaf(otherlv_11, elementTypeProvider.getJvmParameterizedTypeReference_CommaKeyword_1_4_2_2_0ElementType());
						}
						(
							(
								{
									markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0ElementType());
								}
								lv_arguments_12_0=ruleJvmArgumentTypeReference
								{
									doneComposite();
								}
							)
						)
					)*
					{
						markLeaf();
					}
					otherlv_13='>'
					{
						doneLeaf(otherlv_13, elementTypeProvider.getJvmParameterizedTypeReference_GreaterThanSignKeyword_1_4_2_3ElementType());
					}
				)?
			)*
		)?
	)
;

//Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference:
	{ markComposite(elementTypeProvider.getJvmArgumentTypeReferenceElementType()); }
	ruleJvmArgumentTypeReference
	{ doneComposite(); }
	EOF;
finally {
}

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference:
	(
		{
			markComposite(elementTypeProvider.getJvmArgumentTypeReference_JvmTypeReferenceParserRuleCall_0ElementType());
		}
		ruleJvmTypeReference
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getJvmArgumentTypeReference_JvmWildcardTypeReferenceParserRuleCall_1ElementType());
		}
		ruleJvmWildcardTypeReference
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference:
	{ markComposite(elementTypeProvider.getJvmWildcardTypeReferenceElementType()); }
	ruleJvmWildcardTypeReference
	{ doneComposite(); }
	EOF;
finally {
}

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference:
	(
		(
			{
				precedeComposite(elementTypeProvider.getJvmWildcardTypeReference_JvmWildcardTypeReferenceAction_0ElementType());
				doneComposite();
			}
		)
		{
			markLeaf();
		}
		otherlv_1='?'
		{
			doneLeaf(otherlv_1, elementTypeProvider.getJvmWildcardTypeReference_QuestionMarkKeyword_1ElementType());
		}
		(
			(
				(
					(
						{
							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmUpperBoundParserRuleCall_2_0_0_0ElementType());
						}
						lv_constraints_2_0=ruleJvmUpperBound
						{
							doneComposite();
						}
					)
				)
				(
					(
						{
							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0ElementType());
						}
						lv_constraints_3_0=ruleJvmUpperBoundAnded
						{
							doneComposite();
						}
					)
				)*
			)
			    |
			(
				(
					(
						{
							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmLowerBoundParserRuleCall_2_1_0_0ElementType());
						}
						lv_constraints_4_0=ruleJvmLowerBound
						{
							doneComposite();
						}
					)
				)
				(
					(
						{
							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0ElementType());
						}
						lv_constraints_5_0=ruleJvmLowerBoundAnded
						{
							doneComposite();
						}
					)
				)*
			)
		)?
	)
;

//Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound:
	{ markComposite(elementTypeProvider.getJvmUpperBoundElementType()); }
	ruleJvmUpperBound
	{ doneComposite(); }
	EOF;
finally {
}

// Rule JvmUpperBound
ruleJvmUpperBound:
	(
		{
			markLeaf();
		}
		otherlv_0='extends'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getJvmUpperBound_ExtendsKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getJvmUpperBound_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded:
	{ markComposite(elementTypeProvider.getJvmUpperBoundAndedElementType()); }
	ruleJvmUpperBoundAnded
	{ doneComposite(); }
	EOF;
finally {
}

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded:
	(
		{
			markLeaf();
		}
		otherlv_0='&'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getJvmUpperBoundAnded_AmpersandKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getJvmUpperBoundAnded_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound:
	{ markComposite(elementTypeProvider.getJvmLowerBoundElementType()); }
	ruleJvmLowerBound
	{ doneComposite(); }
	EOF;
finally {
}

// Rule JvmLowerBound
ruleJvmLowerBound:
	(
		{
			markLeaf();
		}
		otherlv_0='super'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getJvmLowerBound_SuperKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getJvmLowerBound_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleJvmLowerBoundAnded
entryRuleJvmLowerBoundAnded:
	{ markComposite(elementTypeProvider.getJvmLowerBoundAndedElementType()); }
	ruleJvmLowerBoundAnded
	{ doneComposite(); }
	EOF;
finally {
}

// Rule JvmLowerBoundAnded
ruleJvmLowerBoundAnded:
	(
		{
			markLeaf();
		}
		otherlv_0='&'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getJvmLowerBoundAnded_AmpersandKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getJvmLowerBoundAnded_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleQualifiedName
entryRuleQualifiedName:
	{ markComposite(elementTypeProvider.getQualifiedNameElementType()); }
	ruleQualifiedName
	{ doneComposite(); }
	EOF;
finally {
}

// Rule QualifiedName
ruleQualifiedName:
	(
		{
			markComposite(elementTypeProvider.getQualifiedName_ValidIDParserRuleCall_0ElementType());
		}
		ruleValidID
		{
			doneComposite();
		}
		(
			{
				markLeaf();
			}
			kw='.'
			{
				doneLeaf(kw, elementTypeProvider.getQualifiedName_FullStopKeyword_1_0ElementType());
			}
			{
				markComposite(elementTypeProvider.getQualifiedName_ValidIDParserRuleCall_1_1ElementType());
			}
			ruleValidID
			{
				doneComposite();
			}
		)*
	)
;

//Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard:
	{ markComposite(elementTypeProvider.getQualifiedNameWithWildcardElementType()); }
	ruleQualifiedNameWithWildcard
	{ doneComposite(); }
	EOF;
finally {
}

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard:
	(
		{
			markComposite(elementTypeProvider.getQualifiedNameWithWildcard_QualifiedNameParserRuleCall_0ElementType());
		}
		ruleQualifiedName
		{
			doneComposite();
		}
		{
			markLeaf();
		}
		kw='.'
		{
			doneLeaf(kw, elementTypeProvider.getQualifiedNameWithWildcard_FullStopKeyword_1ElementType());
		}
		{
			markLeaf();
		}
		kw='*'
		{
			doneLeaf(kw, elementTypeProvider.getQualifiedNameWithWildcard_AsteriskKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleValidID
entryRuleValidID:
	{ markComposite(elementTypeProvider.getValidIDElementType()); }
	ruleValidID
	{ doneComposite(); }
	EOF;
finally {
}

// Rule ValidID
ruleValidID:
	{
		markLeaf();
	}
	this_ID_0=RULE_ID
	{
		doneLeaf(this_ID_0, elementTypeProvider.getValidID_IDTerminalRuleCallElementType());
	}
;

//Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration:
	{ markComposite(elementTypeProvider.getXImportDeclarationElementType()); }
	ruleXImportDeclaration
	{ doneComposite(); }
	EOF;
finally {
}

// Rule XImportDeclaration
ruleXImportDeclaration:
	(
		{
			markLeaf();
		}
		otherlv_0='import'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getXImportDeclaration_ImportKeyword_0ElementType());
		}
		(
			(
				(
					(
						{
							markLeaf();
						}
						lv_static_1_0='static'
						{
							doneLeaf(lv_static_1_0, elementTypeProvider.getXImportDeclaration_StaticStaticKeyword_1_0_0_0ElementType());
						}
					)
				)
				(
					(
						{
							markLeaf();
						}
						lv_extension_2_0='extension'
						{
							doneLeaf(lv_extension_2_0, elementTypeProvider.getXImportDeclaration_ExtensionExtensionKeyword_1_0_1_0ElementType());
						}
					)
				)?
				(
					(
						{
							markComposite(elementTypeProvider.getXImportDeclaration_ImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0ElementType());
						}
						ruleQualifiedNameInStaticImport
						{
							doneComposite();
						}
					)
				)
				(
					(
						(
							{
								markLeaf();
							}
							lv_wildcard_4_0='*'
							{
								doneLeaf(lv_wildcard_4_0, elementTypeProvider.getXImportDeclaration_WildcardAsteriskKeyword_1_0_3_0_0ElementType());
							}
						)
					)
					    |
					(
						(
							{
								markComposite(elementTypeProvider.getXImportDeclaration_MemberNameValidIDParserRuleCall_1_0_3_1_0ElementType());
							}
							lv_memberName_5_0=ruleValidID
							{
								doneComposite();
							}
						)
					)
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getXImportDeclaration_ImportedTypeJvmDeclaredTypeCrossReference_1_1_0ElementType());
					}
					ruleQualifiedName
					{
						doneComposite();
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getXImportDeclaration_ImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0ElementType());
					}
					lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard
					{
						doneComposite();
					}
				)
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_8=';'
			{
				doneLeaf(otherlv_8, elementTypeProvider.getXImportDeclaration_SemicolonKeyword_2ElementType());
			}
		)?
	)
;

//Entry rule entryRuleQualifiedNameInStaticImport
entryRuleQualifiedNameInStaticImport:
	{ markComposite(elementTypeProvider.getQualifiedNameInStaticImportElementType()); }
	ruleQualifiedNameInStaticImport
	{ doneComposite(); }
	EOF;
finally {
}

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport:
	(
		{
			markComposite(elementTypeProvider.getQualifiedNameInStaticImport_ValidIDParserRuleCall_0ElementType());
		}
		ruleValidID
		{
			doneComposite();
		}
		{
			markLeaf();
		}
		kw='.'
		{
			doneLeaf(kw, elementTypeProvider.getQualifiedNameInStaticImport_FullStopKeyword_1ElementType());
		}
	)+
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'?|'\'' ('\\' .|~(('\\'|'\'')))* '\''?);

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
