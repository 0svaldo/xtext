/*
 * generated by Xtext
 */
grammar PsiInternalXtextGrammarTestLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.idea.lang.XtextGrammarTestLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.services.XtextGrammarTestLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected XtextGrammarTestLanguageGrammarAccess grammarAccess;

	protected XtextGrammarTestLanguageElementTypeProvider elementTypeProvider;

	public PsiInternalXtextGrammarTestLanguageParser(PsiBuilder builder, TokenStream input, XtextGrammarTestLanguageElementTypeProvider elementTypeProvider, XtextGrammarTestLanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Grammar";
	}

}

//Entry rule entryRuleGrammar
entryRuleGrammar:
	{ markComposite(elementTypeProvider.getGrammarElementType()); }
	ruleGrammar
	{ doneComposite(); }
	EOF;
finally {
}

// Rule Grammar
ruleGrammar:
	(
		{
			markLeaf();
		}
		otherlv_0='grammar'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getGrammar_GrammarKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getGrammar_NameGrammarIDParserRuleCall_1_0ElementType());
				}
				lv_name_1_0=ruleGrammarID
				{
					doneComposite();
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_2='with'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getGrammar_WithKeyword_2_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getGrammar_UsedGrammarsGrammarCrossReference_2_1_0ElementType());
					}
					ruleGrammarID
					{
						doneComposite();
					}
				)
			)
			(
				{
					markLeaf();
				}
				otherlv_4=','
				{
					doneLeaf(otherlv_4, elementTypeProvider.getGrammar_CommaKeyword_2_2_0ElementType());
				}
				(
					(
						{
							markComposite(elementTypeProvider.getGrammar_UsedGrammarsGrammarCrossReference_2_2_1_0ElementType());
						}
						ruleGrammarID
						{
							doneComposite();
						}
					)
				)
			)*
		)?
		(
			(
				(
					{
						markLeaf();
					}
					lv_definesHiddenTokens_6_0='hidden'
					{
						doneLeaf(lv_definesHiddenTokens_6_0, elementTypeProvider.getGrammar_DefinesHiddenTokensHiddenKeyword_3_0_0ElementType());
					}
				)
			)
			{
				markLeaf();
			}
			otherlv_7='('
			{
				doneLeaf(otherlv_7, elementTypeProvider.getGrammar_LeftParenthesisKeyword_3_1ElementType());
			}
			(
				(
					(
						{
							markLeaf();
						}
						otherlv_8=RULE_ID
						{
							doneLeaf(otherlv_8, elementTypeProvider.getGrammar_HiddenTokensAbstractRuleCrossReference_3_2_0_0ElementType());
						}
					)
				)
				(
					{
						markLeaf();
					}
					otherlv_9=','
					{
						doneLeaf(otherlv_9, elementTypeProvider.getGrammar_CommaKeyword_3_2_1_0ElementType());
					}
					(
						(
							{
								markLeaf();
							}
							otherlv_10=RULE_ID
							{
								doneLeaf(otherlv_10, elementTypeProvider.getGrammar_HiddenTokensAbstractRuleCrossReference_3_2_1_1_0ElementType());
							}
						)
					)
				)*
			)?
			{
				markLeaf();
			}
			otherlv_11=')'
			{
				doneLeaf(otherlv_11, elementTypeProvider.getGrammar_RightParenthesisKeyword_3_3ElementType());
			}
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getGrammar_MetamodelDeclarationsAbstractMetamodelDeclarationParserRuleCall_4_0ElementType());
				}
				lv_metamodelDeclarations_12_0=ruleAbstractMetamodelDeclaration
				{
					doneComposite();
				}
			)
		)*
		(
			(
				{
					markComposite(elementTypeProvider.getGrammar_RulesAbstractRuleParserRuleCall_5_0ElementType());
				}
				lv_rules_13_0=ruleAbstractRule
				{
					doneComposite();
				}
			)
		)+
	)
;

//Entry rule entryRuleGrammarID
entryRuleGrammarID:
	{ markComposite(elementTypeProvider.getGrammarIDElementType()); }
	ruleGrammarID
	{ doneComposite(); }
	EOF;
finally {
}

// Rule GrammarID
ruleGrammarID:
	(
		{
			markLeaf();
		}
		this_ID_0=RULE_ID
		{
			doneLeaf(this_ID_0, elementTypeProvider.getGrammarID_IDTerminalRuleCall_0ElementType());
		}
		(
			{
				markLeaf();
			}
			kw='.'
			{
				doneLeaf(kw, elementTypeProvider.getGrammarID_FullStopKeyword_1_0ElementType());
			}
			{
				markLeaf();
			}
			this_ID_2=RULE_ID
			{
				doneLeaf(this_ID_2, elementTypeProvider.getGrammarID_IDTerminalRuleCall_1_1ElementType());
			}
		)*
	)
;

//Entry rule entryRuleAbstractRule
entryRuleAbstractRule:
	{ markComposite(elementTypeProvider.getAbstractRuleElementType()); }
	ruleAbstractRule
	{ doneComposite(); }
	EOF;
finally {
}

// Rule AbstractRule
ruleAbstractRule:
	(
		{
			markComposite(elementTypeProvider.getAbstractRule_ParserRuleParserRuleCall_0ElementType());
		}
		ruleParserRule
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractRule_TerminalRuleParserRuleCall_1ElementType());
		}
		ruleTerminalRule
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractRule_EnumRuleParserRuleCall_2ElementType());
		}
		ruleEnumRule
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleAbstractMetamodelDeclaration
entryRuleAbstractMetamodelDeclaration:
	{ markComposite(elementTypeProvider.getAbstractMetamodelDeclarationElementType()); }
	ruleAbstractMetamodelDeclaration
	{ doneComposite(); }
	EOF;
finally {
}

// Rule AbstractMetamodelDeclaration
ruleAbstractMetamodelDeclaration:
	(
		{
			markComposite(elementTypeProvider.getAbstractMetamodelDeclaration_GeneratedMetamodelParserRuleCall_0ElementType());
		}
		ruleGeneratedMetamodel
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractMetamodelDeclaration_ReferencedMetamodelParserRuleCall_1ElementType());
		}
		ruleReferencedMetamodel
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleGeneratedMetamodel
entryRuleGeneratedMetamodel:
	{ markComposite(elementTypeProvider.getGeneratedMetamodelElementType()); }
	ruleGeneratedMetamodel
	{ doneComposite(); }
	EOF;
finally {
}

// Rule GeneratedMetamodel
ruleGeneratedMetamodel:
	(
		{
			markLeaf();
		}
		otherlv_0='generate'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getGeneratedMetamodel_GenerateKeyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_name_1_0=RULE_ID
				{
					doneLeaf(lv_name_1_0, elementTypeProvider.getGeneratedMetamodel_NameIDTerminalRuleCall_1_0ElementType());
				}
			)
		)
		(
			(
				{
					markLeaf();
				}
				otherlv_2=RULE_STRING
				{
					doneLeaf(otherlv_2, elementTypeProvider.getGeneratedMetamodel_EPackageEPackageCrossReference_2_0ElementType());
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_3='as'
			{
				doneLeaf(otherlv_3, elementTypeProvider.getGeneratedMetamodel_AsKeyword_3_0ElementType());
			}
			(
				(
					{
						markLeaf();
					}
					lv_alias_4_0=RULE_ID
					{
						doneLeaf(lv_alias_4_0, elementTypeProvider.getGeneratedMetamodel_AliasIDTerminalRuleCall_3_1_0ElementType());
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleReferencedMetamodel
entryRuleReferencedMetamodel:
	{ markComposite(elementTypeProvider.getReferencedMetamodelElementType()); }
	ruleReferencedMetamodel
	{ doneComposite(); }
	EOF;
finally {
}

// Rule ReferencedMetamodel
ruleReferencedMetamodel:
	(
		{
			markLeaf();
		}
		otherlv_0='import'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getReferencedMetamodel_ImportKeyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				otherlv_1=RULE_STRING
				{
					doneLeaf(otherlv_1, elementTypeProvider.getReferencedMetamodel_EPackageEPackageCrossReference_1_0ElementType());
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_2='as'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getReferencedMetamodel_AsKeyword_2_0ElementType());
			}
			(
				(
					{
						markLeaf();
					}
					lv_alias_3_0=RULE_ID
					{
						doneLeaf(lv_alias_3_0, elementTypeProvider.getReferencedMetamodel_AliasIDTerminalRuleCall_2_1_0ElementType());
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleParserRule
entryRuleParserRule:
	{ markComposite(elementTypeProvider.getParserRuleElementType()); }
	ruleParserRule
	{ doneComposite(); }
	EOF;
finally {
}

// Rule ParserRule
ruleParserRule:
	(
		(
			(
				{
					markLeaf();
				}
				lv_name_0_0=RULE_ID
				{
					doneLeaf(lv_name_0_0, elementTypeProvider.getParserRule_NameIDTerminalRuleCall_0_0ElementType());
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_1='returns'
			{
				doneLeaf(otherlv_1, elementTypeProvider.getParserRule_ReturnsKeyword_1_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getParserRule_TypeTypeRefParserRuleCall_1_1_0ElementType());
					}
					lv_type_2_0=ruleTypeRef
					{
						doneComposite();
					}
				)
			)
		)?
		(
			(
				(
					{
						markLeaf();
					}
					lv_definesHiddenTokens_3_0='hidden'
					{
						doneLeaf(lv_definesHiddenTokens_3_0, elementTypeProvider.getParserRule_DefinesHiddenTokensHiddenKeyword_2_0_0ElementType());
					}
				)
			)
			{
				markLeaf();
			}
			otherlv_4='('
			{
				doneLeaf(otherlv_4, elementTypeProvider.getParserRule_LeftParenthesisKeyword_2_1ElementType());
			}
			(
				(
					(
						{
							markLeaf();
						}
						otherlv_5=RULE_ID
						{
							doneLeaf(otherlv_5, elementTypeProvider.getParserRule_HiddenTokensAbstractRuleCrossReference_2_2_0_0ElementType());
						}
					)
				)
				(
					{
						markLeaf();
					}
					otherlv_6=','
					{
						doneLeaf(otherlv_6, elementTypeProvider.getParserRule_CommaKeyword_2_2_1_0ElementType());
					}
					(
						(
							{
								markLeaf();
							}
							otherlv_7=RULE_ID
							{
								doneLeaf(otherlv_7, elementTypeProvider.getParserRule_HiddenTokensAbstractRuleCrossReference_2_2_1_1_0ElementType());
							}
						)
					)
				)*
			)?
			{
				markLeaf();
			}
			otherlv_8=')'
			{
				doneLeaf(otherlv_8, elementTypeProvider.getParserRule_RightParenthesisKeyword_2_3ElementType());
			}
		)?
		{
			markLeaf();
		}
		otherlv_9=':'
		{
			doneLeaf(otherlv_9, elementTypeProvider.getParserRule_ColonKeyword_3ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getParserRule_AlternativesAlternativesParserRuleCall_4_0ElementType());
				}
				lv_alternatives_10_0=ruleAlternatives
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_11=';'
		{
			doneLeaf(otherlv_11, elementTypeProvider.getParserRule_SemicolonKeyword_5ElementType());
		}
	)
;

//Entry rule entryRuleTypeRef
entryRuleTypeRef:
	{ markComposite(elementTypeProvider.getTypeRefElementType()); }
	ruleTypeRef
	{ doneComposite(); }
	EOF;
finally {
}

// Rule TypeRef
ruleTypeRef:
	(
		(
			(
				(
					{
						markLeaf();
					}
					otherlv_0=RULE_ID
					{
						doneLeaf(otherlv_0, elementTypeProvider.getTypeRef_MetamodelAbstractMetamodelDeclarationCrossReference_0_0_0ElementType());
					}
				)
			)
			{
				markLeaf();
			}
			otherlv_1='::'
			{
				doneLeaf(otherlv_1, elementTypeProvider.getTypeRef_ColonColonKeyword_0_1ElementType());
			}
		)?
		(
			(
				{
					markLeaf();
				}
				otherlv_2=RULE_ID
				{
					doneLeaf(otherlv_2, elementTypeProvider.getTypeRef_ClassifierEClassifierCrossReference_1_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleAlternatives
entryRuleAlternatives:
	{ markComposite(elementTypeProvider.getAlternativesElementType()); }
	ruleAlternatives
	{ doneComposite(); }
	EOF;
finally {
}

// Rule Alternatives
ruleAlternatives:
	(
		{
			markComposite(elementTypeProvider.getAlternatives_GroupParserRuleCall_0ElementType());
		}
		ruleGroup
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getAlternatives_AlternativesGroupsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf();
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2, elementTypeProvider.getAlternatives_VerticalLineKeyword_1_1_0ElementType());
				}
				(
					(
						{
							markComposite(elementTypeProvider.getAlternatives_GroupsGroupParserRuleCall_1_1_1_0ElementType());
						}
						lv_groups_3_0=ruleGroup
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleGroup
entryRuleGroup:
	{ markComposite(elementTypeProvider.getGroupElementType()); }
	ruleGroup
	{ doneComposite(); }
	EOF;
finally {
}

// Rule Group
ruleGroup:
	(
		{
			markComposite(elementTypeProvider.getGroup_AbstractTokenParserRuleCall_0ElementType());
		}
		ruleAbstractToken
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getGroup_GroupTokensAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getGroup_TokensAbstractTokenParserRuleCall_1_1_0ElementType());
					}
					lv_tokens_2_0=ruleAbstractToken
					{
						doneComposite();
					}
				)
			)+
		)?
	)
;

//Entry rule entryRuleAbstractToken
entryRuleAbstractToken:
	{ markComposite(elementTypeProvider.getAbstractTokenElementType()); }
	ruleAbstractToken
	{ doneComposite(); }
	EOF;
finally {
}

// Rule AbstractToken
ruleAbstractToken:
	(
		{
			markComposite(elementTypeProvider.getAbstractToken_AbstractTokenWithCardinalityParserRuleCall_0ElementType());
		}
		ruleAbstractTokenWithCardinality
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractToken_ActionParserRuleCall_1ElementType());
		}
		ruleAction
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleAbstractTokenWithCardinality
entryRuleAbstractTokenWithCardinality:
	{ markComposite(elementTypeProvider.getAbstractTokenWithCardinalityElementType()); }
	ruleAbstractTokenWithCardinality
	{ doneComposite(); }
	EOF;
finally {
}

// Rule AbstractTokenWithCardinality
ruleAbstractTokenWithCardinality:
	(
		(
			{
				markComposite(elementTypeProvider.getAbstractTokenWithCardinality_AssignmentParserRuleCall_0_0ElementType());
			}
			ruleAssignment
			{
				doneComposite();
			}
			    |
			{
				markComposite(elementTypeProvider.getAbstractTokenWithCardinality_AbstractTerminalParserRuleCall_0_1ElementType());
			}
			ruleAbstractTerminal
			{
				doneComposite();
			}
		)
		(
			(
				(
					{
						markLeaf();
					}
					lv_cardinality_2_1='?'
					{
						doneLeaf(lv_cardinality_2_1, elementTypeProvider.getAbstractTokenWithCardinality_CardinalityQuestionMarkKeyword_1_0_0ElementType());
					}
					    |
					{
						markLeaf();
					}
					lv_cardinality_2_2='*'
					{
						doneLeaf(lv_cardinality_2_2, elementTypeProvider.getAbstractTokenWithCardinality_CardinalityAsteriskKeyword_1_0_1ElementType());
					}
					    |
					{
						markLeaf();
					}
					lv_cardinality_2_3='+'
					{
						doneLeaf(lv_cardinality_2_3, elementTypeProvider.getAbstractTokenWithCardinality_CardinalityPlusSignKeyword_1_0_2ElementType());
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleAction
entryRuleAction:
	{ markComposite(elementTypeProvider.getActionElementType()); }
	ruleAction
	{ doneComposite(); }
	EOF;
finally {
}

// Rule Action
ruleAction:
	(
		{
			markLeaf();
		}
		otherlv_0='{'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getAction_LeftCurlyBracketKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getAction_TypeTypeRefParserRuleCall_1_0ElementType());
				}
				lv_type_1_0=ruleTypeRef
				{
					doneComposite();
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_2='.'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getAction_FullStopKeyword_2_0ElementType());
			}
			(
				(
					{
						markLeaf();
					}
					lv_feature_3_0=RULE_ID
					{
						doneLeaf(lv_feature_3_0, elementTypeProvider.getAction_FeatureIDTerminalRuleCall_2_1_0ElementType());
					}
				)
			)
			(
				(
					(
						{
							markLeaf();
						}
						lv_operator_4_1='='
						{
							doneLeaf(lv_operator_4_1, elementTypeProvider.getAction_OperatorEqualsSignKeyword_2_2_0_0ElementType());
						}
						    |
						{
							markLeaf();
						}
						lv_operator_4_2='+='
						{
							doneLeaf(lv_operator_4_2, elementTypeProvider.getAction_OperatorPlusSignEqualsSignKeyword_2_2_0_1ElementType());
						}
					)
				)
			)
			{
				markLeaf();
			}
			otherlv_5='current'
			{
				doneLeaf(otherlv_5, elementTypeProvider.getAction_CurrentKeyword_2_3ElementType());
			}
		)?
		{
			markLeaf();
		}
		otherlv_6='}'
		{
			doneLeaf(otherlv_6, elementTypeProvider.getAction_RightCurlyBracketKeyword_3ElementType());
		}
	)
;

//Entry rule entryRuleAbstractTerminal
entryRuleAbstractTerminal:
	{ markComposite(elementTypeProvider.getAbstractTerminalElementType()); }
	ruleAbstractTerminal
	{ doneComposite(); }
	EOF;
finally {
}

// Rule AbstractTerminal
ruleAbstractTerminal:
	(
		{
			markComposite(elementTypeProvider.getAbstractTerminal_KeywordParserRuleCall_0ElementType());
		}
		ruleKeyword
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractTerminal_RuleCallParserRuleCall_1ElementType());
		}
		ruleRuleCall
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractTerminal_ParenthesizedElementParserRuleCall_2ElementType());
		}
		ruleParenthesizedElement
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleKeyword
entryRuleKeyword:
	{ markComposite(elementTypeProvider.getKeywordElementType()); }
	ruleKeyword
	{ doneComposite(); }
	EOF;
finally {
}

// Rule Keyword
ruleKeyword:
	(
		(
			{
				markLeaf();
			}
			lv_value_0_0=RULE_STRING
			{
				doneLeaf(lv_value_0_0, elementTypeProvider.getKeyword_ValueSTRINGTerminalRuleCall_0ElementType());
			}
		)
	)
;

//Entry rule entryRuleRuleCall
entryRuleRuleCall:
	{ markComposite(elementTypeProvider.getRuleCallElementType()); }
	ruleRuleCall
	{ doneComposite(); }
	EOF;
finally {
}

// Rule RuleCall
ruleRuleCall:
	(
		(
			{
				markLeaf();
			}
			otherlv_0=RULE_ID
			{
				doneLeaf(otherlv_0, elementTypeProvider.getRuleCall_RuleAbstractRuleCrossReference_0ElementType());
			}
		)
	)
;

//Entry rule entryRuleAssignment
entryRuleAssignment:
	{ markComposite(elementTypeProvider.getAssignmentElementType()); }
	ruleAssignment
	{ doneComposite(); }
	EOF;
finally {
}

// Rule Assignment
ruleAssignment:
	(
		(
			(
				{
					markLeaf();
				}
				lv_feature_0_0=RULE_ID
				{
					doneLeaf(lv_feature_0_0, elementTypeProvider.getAssignment_FeatureIDTerminalRuleCall_0_0ElementType());
				}
			)
		)
		(
			(
				(
					{
						markLeaf();
					}
					lv_operator_1_1='+='
					{
						doneLeaf(lv_operator_1_1, elementTypeProvider.getAssignment_OperatorPlusSignEqualsSignKeyword_1_0_0ElementType());
					}
					    |
					{
						markLeaf();
					}
					lv_operator_1_2='='
					{
						doneLeaf(lv_operator_1_2, elementTypeProvider.getAssignment_OperatorEqualsSignKeyword_1_0_1ElementType());
					}
					    |
					{
						markLeaf();
					}
					lv_operator_1_3='?='
					{
						doneLeaf(lv_operator_1_3, elementTypeProvider.getAssignment_OperatorQuestionMarkEqualsSignKeyword_1_0_2ElementType());
					}
				)
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getAssignment_TerminalAssignableTerminalParserRuleCall_2_0ElementType());
				}
				lv_terminal_2_0=ruleAssignableTerminal
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleAssignableTerminal
entryRuleAssignableTerminal:
	{ markComposite(elementTypeProvider.getAssignableTerminalElementType()); }
	ruleAssignableTerminal
	{ doneComposite(); }
	EOF;
finally {
}

// Rule AssignableTerminal
ruleAssignableTerminal:
	(
		{
			markComposite(elementTypeProvider.getAssignableTerminal_KeywordParserRuleCall_0ElementType());
		}
		ruleKeyword
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAssignableTerminal_RuleCallParserRuleCall_1ElementType());
		}
		ruleRuleCall
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAssignableTerminal_ParenthesizedAssignableElementParserRuleCall_2ElementType());
		}
		ruleParenthesizedAssignableElement
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAssignableTerminal_CrossReferenceParserRuleCall_3ElementType());
		}
		ruleCrossReference
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleParenthesizedAssignableElement
entryRuleParenthesizedAssignableElement:
	{ markComposite(elementTypeProvider.getParenthesizedAssignableElementElementType()); }
	ruleParenthesizedAssignableElement
	{ doneComposite(); }
	EOF;
finally {
}

// Rule ParenthesizedAssignableElement
ruleParenthesizedAssignableElement:
	(
		{
			markLeaf();
		}
		otherlv_0='('
		{
			doneLeaf(otherlv_0, elementTypeProvider.getParenthesizedAssignableElement_LeftParenthesisKeyword_0ElementType());
		}
		{
			markComposite(elementTypeProvider.getParenthesizedAssignableElement_AssignableAlternativesParserRuleCall_1ElementType());
		}
		ruleAssignableAlternatives
		{
			doneComposite();
		}
		{
			markLeaf();
		}
		otherlv_2=')'
		{
			doneLeaf(otherlv_2, elementTypeProvider.getParenthesizedAssignableElement_RightParenthesisKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleAssignableAlternatives
entryRuleAssignableAlternatives:
	{ markComposite(elementTypeProvider.getAssignableAlternativesElementType()); }
	ruleAssignableAlternatives
	{ doneComposite(); }
	EOF;
finally {
}

// Rule AssignableAlternatives
ruleAssignableAlternatives:
	(
		{
			markComposite(elementTypeProvider.getAssignableAlternatives_AssignableTerminalParserRuleCall_0ElementType());
		}
		ruleAssignableTerminal
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getAssignableAlternatives_AlternativesGroupsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf();
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2, elementTypeProvider.getAssignableAlternatives_VerticalLineKeyword_1_1_0ElementType());
				}
				(
					(
						{
							markComposite(elementTypeProvider.getAssignableAlternatives_GroupsAssignableTerminalParserRuleCall_1_1_1_0ElementType());
						}
						lv_groups_3_0=ruleAssignableTerminal
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleCrossReference
entryRuleCrossReference:
	{ markComposite(elementTypeProvider.getCrossReferenceElementType()); }
	ruleCrossReference
	{ doneComposite(); }
	EOF;
finally {
}

// Rule CrossReference
ruleCrossReference:
	(
		{
			markLeaf();
		}
		otherlv_0='['
		{
			doneLeaf(otherlv_0, elementTypeProvider.getCrossReference_LeftSquareBracketKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getCrossReference_TypeTypeRefParserRuleCall_1_0ElementType());
				}
				lv_type_1_0=ruleTypeRef
				{
					doneComposite();
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_2='|'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getCrossReference_VerticalLineKeyword_2_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getCrossReference_TerminalCrossReferenceableTerminalParserRuleCall_2_1_0ElementType());
					}
					lv_terminal_3_0=ruleCrossReferenceableTerminal
					{
						doneComposite();
					}
				)
			)
		)?
		{
			markLeaf();
		}
		otherlv_4=']'
		{
			doneLeaf(otherlv_4, elementTypeProvider.getCrossReference_RightSquareBracketKeyword_3ElementType());
		}
	)
;

//Entry rule entryRuleCrossReferenceableTerminal
entryRuleCrossReferenceableTerminal:
	{ markComposite(elementTypeProvider.getCrossReferenceableTerminalElementType()); }
	ruleCrossReferenceableTerminal
	{ doneComposite(); }
	EOF;
finally {
}

// Rule CrossReferenceableTerminal
ruleCrossReferenceableTerminal:
	(
		{
			markComposite(elementTypeProvider.getCrossReferenceableTerminal_KeywordParserRuleCall_0ElementType());
		}
		ruleKeyword
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCrossReferenceableTerminal_RuleCallParserRuleCall_1ElementType());
		}
		ruleRuleCall
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCrossReferenceableTerminal_ParenthesizedCrossReferenceableElementParserRuleCall_2ElementType());
		}
		ruleParenthesizedCrossReferenceableElement
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleParenthesizedCrossReferenceableElement
entryRuleParenthesizedCrossReferenceableElement:
	{ markComposite(elementTypeProvider.getParenthesizedCrossReferenceableElementElementType()); }
	ruleParenthesizedCrossReferenceableElement
	{ doneComposite(); }
	EOF;
finally {
}

// Rule ParenthesizedCrossReferenceableElement
ruleParenthesizedCrossReferenceableElement:
	(
		{
			markLeaf();
		}
		otherlv_0='('
		{
			doneLeaf(otherlv_0, elementTypeProvider.getParenthesizedCrossReferenceableElement_LeftParenthesisKeyword_0ElementType());
		}
		{
			markComposite(elementTypeProvider.getParenthesizedCrossReferenceableElement_CrossReferenceableAlternativesParserRuleCall_1ElementType());
		}
		ruleCrossReferenceableAlternatives
		{
			doneComposite();
		}
		{
			markLeaf();
		}
		otherlv_2=')'
		{
			doneLeaf(otherlv_2, elementTypeProvider.getParenthesizedCrossReferenceableElement_RightParenthesisKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleCrossReferenceableAlternatives
entryRuleCrossReferenceableAlternatives:
	{ markComposite(elementTypeProvider.getCrossReferenceableAlternativesElementType()); }
	ruleCrossReferenceableAlternatives
	{ doneComposite(); }
	EOF;
finally {
}

// Rule CrossReferenceableAlternatives
ruleCrossReferenceableAlternatives:
	(
		{
			markComposite(elementTypeProvider.getCrossReferenceableAlternatives_CrossReferenceableTerminalParserRuleCall_0ElementType());
		}
		ruleCrossReferenceableTerminal
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCrossReferenceableAlternatives_AlternativesGroupsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf();
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2, elementTypeProvider.getCrossReferenceableAlternatives_VerticalLineKeyword_1_1_0ElementType());
				}
				(
					(
						{
							markComposite(elementTypeProvider.getCrossReferenceableAlternatives_GroupsCrossReferenceableTerminalParserRuleCall_1_1_1_0ElementType());
						}
						lv_groups_3_0=ruleCrossReferenceableTerminal
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleParenthesizedElement
entryRuleParenthesizedElement:
	{ markComposite(elementTypeProvider.getParenthesizedElementElementType()); }
	ruleParenthesizedElement
	{ doneComposite(); }
	EOF;
finally {
}

// Rule ParenthesizedElement
ruleParenthesizedElement:
	(
		{
			markLeaf();
		}
		otherlv_0='('
		{
			doneLeaf(otherlv_0, elementTypeProvider.getParenthesizedElement_LeftParenthesisKeyword_0ElementType());
		}
		{
			markComposite(elementTypeProvider.getParenthesizedElement_AlternativesParserRuleCall_1ElementType());
		}
		ruleAlternatives
		{
			doneComposite();
		}
		{
			markLeaf();
		}
		otherlv_2=')'
		{
			doneLeaf(otherlv_2, elementTypeProvider.getParenthesizedElement_RightParenthesisKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleTerminalRule
entryRuleTerminalRule:
	{ markComposite(elementTypeProvider.getTerminalRuleElementType()); }
	ruleTerminalRule
	{ doneComposite(); }
	EOF;
finally {
}

// Rule TerminalRule
ruleTerminalRule:
	(
		{
			markLeaf();
		}
		otherlv_0='terminal'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getTerminalRule_TerminalKeyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_name_1_0=RULE_ID
				{
					doneLeaf(lv_name_1_0, elementTypeProvider.getTerminalRule_NameIDTerminalRuleCall_1_0ElementType());
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_2='returns'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getTerminalRule_ReturnsKeyword_2_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getTerminalRule_TypeTypeRefParserRuleCall_2_1_0ElementType());
					}
					lv_type_3_0=ruleTypeRef
					{
						doneComposite();
					}
				)
			)
		)?
		{
			markLeaf();
		}
		otherlv_4=':'
		{
			doneLeaf(otherlv_4, elementTypeProvider.getTerminalRule_ColonKeyword_3ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getTerminalRule_AlternativesTerminalAlternativesParserRuleCall_4_0ElementType());
				}
				lv_alternatives_5_0=ruleTerminalAlternatives
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_6=';'
		{
			doneLeaf(otherlv_6, elementTypeProvider.getTerminalRule_SemicolonKeyword_5ElementType());
		}
	)
;

//Entry rule entryRuleTerminalAlternatives
entryRuleTerminalAlternatives:
	{ markComposite(elementTypeProvider.getTerminalAlternativesElementType()); }
	ruleTerminalAlternatives
	{ doneComposite(); }
	EOF;
finally {
}

// Rule TerminalAlternatives
ruleTerminalAlternatives:
	(
		{
			markComposite(elementTypeProvider.getTerminalAlternatives_TerminalGroupParserRuleCall_0ElementType());
		}
		ruleTerminalGroup
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getTerminalAlternatives_AlternativesGroupsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf();
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2, elementTypeProvider.getTerminalAlternatives_VerticalLineKeyword_1_1_0ElementType());
				}
				(
					(
						{
							markComposite(elementTypeProvider.getTerminalAlternatives_GroupsTerminalGroupParserRuleCall_1_1_1_0ElementType());
						}
						lv_groups_3_0=ruleTerminalGroup
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleTerminalGroup
entryRuleTerminalGroup:
	{ markComposite(elementTypeProvider.getTerminalGroupElementType()); }
	ruleTerminalGroup
	{ doneComposite(); }
	EOF;
finally {
}

// Rule TerminalGroup
ruleTerminalGroup:
	(
		{
			markComposite(elementTypeProvider.getTerminalGroup_TerminalTokenParserRuleCall_0ElementType());
		}
		ruleTerminalToken
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getTerminalGroup_GroupTokensAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getTerminalGroup_TokensTerminalTokenParserRuleCall_1_1_0ElementType());
					}
					lv_tokens_2_0=ruleTerminalToken
					{
						doneComposite();
					}
				)
			)+
		)?
	)
;

//Entry rule entryRuleTerminalToken
entryRuleTerminalToken:
	{ markComposite(elementTypeProvider.getTerminalTokenElementType()); }
	ruleTerminalToken
	{ doneComposite(); }
	EOF;
finally {
}

// Rule TerminalToken
ruleTerminalToken:
	(
		{
			markComposite(elementTypeProvider.getTerminalToken_TerminalTokenElementParserRuleCall_0ElementType());
		}
		ruleTerminalTokenElement
		{
			doneComposite();
		}
		(
			(
				(
					{
						markLeaf();
					}
					lv_cardinality_1_1='?'
					{
						doneLeaf(lv_cardinality_1_1, elementTypeProvider.getTerminalToken_CardinalityQuestionMarkKeyword_1_0_0ElementType());
					}
					    |
					{
						markLeaf();
					}
					lv_cardinality_1_2='*'
					{
						doneLeaf(lv_cardinality_1_2, elementTypeProvider.getTerminalToken_CardinalityAsteriskKeyword_1_0_1ElementType());
					}
					    |
					{
						markLeaf();
					}
					lv_cardinality_1_3='+'
					{
						doneLeaf(lv_cardinality_1_3, elementTypeProvider.getTerminalToken_CardinalityPlusSignKeyword_1_0_2ElementType());
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleTerminalTokenElement
entryRuleTerminalTokenElement:
	{ markComposite(elementTypeProvider.getTerminalTokenElementElementType()); }
	ruleTerminalTokenElement
	{ doneComposite(); }
	EOF;
finally {
}

// Rule TerminalTokenElement
ruleTerminalTokenElement:
	(
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_CharacterRangeParserRuleCall_0ElementType());
		}
		ruleCharacterRange
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_RuleCallParserRuleCall_1ElementType());
		}
		ruleRuleCall
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_ParenthesizedTerminalElementParserRuleCall_2ElementType());
		}
		ruleParenthesizedTerminalElement
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_AbstractNegatedTokenParserRuleCall_3ElementType());
		}
		ruleAbstractNegatedToken
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_WildcardParserRuleCall_4ElementType());
		}
		ruleWildcard
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleParenthesizedTerminalElement
entryRuleParenthesizedTerminalElement:
	{ markComposite(elementTypeProvider.getParenthesizedTerminalElementElementType()); }
	ruleParenthesizedTerminalElement
	{ doneComposite(); }
	EOF;
finally {
}

// Rule ParenthesizedTerminalElement
ruleParenthesizedTerminalElement:
	(
		{
			markLeaf();
		}
		otherlv_0='('
		{
			doneLeaf(otherlv_0, elementTypeProvider.getParenthesizedTerminalElement_LeftParenthesisKeyword_0ElementType());
		}
		{
			markComposite(elementTypeProvider.getParenthesizedTerminalElement_TerminalAlternativesParserRuleCall_1ElementType());
		}
		ruleTerminalAlternatives
		{
			doneComposite();
		}
		{
			markLeaf();
		}
		otherlv_2=')'
		{
			doneLeaf(otherlv_2, elementTypeProvider.getParenthesizedTerminalElement_RightParenthesisKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleAbstractNegatedToken
entryRuleAbstractNegatedToken:
	{ markComposite(elementTypeProvider.getAbstractNegatedTokenElementType()); }
	ruleAbstractNegatedToken
	{ doneComposite(); }
	EOF;
finally {
}

// Rule AbstractNegatedToken
ruleAbstractNegatedToken:
	(
		{
			markComposite(elementTypeProvider.getAbstractNegatedToken_NegatedTokenParserRuleCall_0ElementType());
		}
		ruleNegatedToken
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractNegatedToken_UntilTokenParserRuleCall_1ElementType());
		}
		ruleUntilToken
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleNegatedToken
entryRuleNegatedToken:
	{ markComposite(elementTypeProvider.getNegatedTokenElementType()); }
	ruleNegatedToken
	{ doneComposite(); }
	EOF;
finally {
}

// Rule NegatedToken
ruleNegatedToken:
	(
		{
			markLeaf();
		}
		otherlv_0='!'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getNegatedToken_ExclamationMarkKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getNegatedToken_TerminalTerminalTokenElementParserRuleCall_1_0ElementType());
				}
				lv_terminal_1_0=ruleTerminalTokenElement
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleUntilToken
entryRuleUntilToken:
	{ markComposite(elementTypeProvider.getUntilTokenElementType()); }
	ruleUntilToken
	{ doneComposite(); }
	EOF;
finally {
}

// Rule UntilToken
ruleUntilToken:
	(
		{
			markLeaf();
		}
		otherlv_0='->'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getUntilToken_HyphenMinusGreaterThanSignKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getUntilToken_TerminalTerminalTokenElementParserRuleCall_1_0ElementType());
				}
				lv_terminal_1_0=ruleTerminalTokenElement
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleWildcard
entryRuleWildcard:
	{ markComposite(elementTypeProvider.getWildcardElementType()); }
	ruleWildcard
	{ doneComposite(); }
	EOF;
finally {
}

// Rule Wildcard
ruleWildcard:
	(
		(
			{
				precedeComposite(elementTypeProvider.getWildcard_WildcardAction_0ElementType());
				doneComposite();
			}
		)
		{
			markLeaf();
		}
		otherlv_1='.'
		{
			doneLeaf(otherlv_1, elementTypeProvider.getWildcard_FullStopKeyword_1ElementType());
		}
	)
;

//Entry rule entryRuleCharacterRange
entryRuleCharacterRange:
	{ markComposite(elementTypeProvider.getCharacterRangeElementType()); }
	ruleCharacterRange
	{ doneComposite(); }
	EOF;
finally {
}

// Rule CharacterRange
ruleCharacterRange:
	(
		{
			markComposite(elementTypeProvider.getCharacterRange_KeywordParserRuleCall_0ElementType());
		}
		ruleKeyword
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCharacterRange_CharacterRangeLeftAction_1_0ElementType());
					doneComposite();
				}
			)
			{
				markLeaf();
			}
			otherlv_2='..'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getCharacterRange_FullStopFullStopKeyword_1_1ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getCharacterRange_RightKeywordParserRuleCall_1_2_0ElementType());
					}
					lv_right_3_0=ruleKeyword
					{
						doneComposite();
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleEnumRule
entryRuleEnumRule:
	{ markComposite(elementTypeProvider.getEnumRuleElementType()); }
	ruleEnumRule
	{ doneComposite(); }
	EOF;
finally {
}

// Rule EnumRule
ruleEnumRule:
	(
		{
			markLeaf();
		}
		otherlv_0='enum'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getEnumRule_EnumKeyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_name_1_0=RULE_ID
				{
					doneLeaf(lv_name_1_0, elementTypeProvider.getEnumRule_NameIDTerminalRuleCall_1_0ElementType());
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_2='returns'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getEnumRule_ReturnsKeyword_2_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getEnumRule_TypeTypeRefParserRuleCall_2_1_0ElementType());
					}
					lv_type_3_0=ruleTypeRef
					{
						doneComposite();
					}
				)
			)
		)?
		{
			markLeaf();
		}
		otherlv_4=':'
		{
			doneLeaf(otherlv_4, elementTypeProvider.getEnumRule_ColonKeyword_3ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getEnumRule_AlternativesEnumLiteralsParserRuleCall_4_0ElementType());
				}
				lv_alternatives_5_0=ruleEnumLiterals
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_6=';'
		{
			doneLeaf(otherlv_6, elementTypeProvider.getEnumRule_SemicolonKeyword_5ElementType());
		}
	)
;

//Entry rule entryRuleEnumLiterals
entryRuleEnumLiterals:
	{ markComposite(elementTypeProvider.getEnumLiteralsElementType()); }
	ruleEnumLiterals
	{ doneComposite(); }
	EOF;
finally {
}

// Rule EnumLiterals
ruleEnumLiterals:
	(
		{
			markComposite(elementTypeProvider.getEnumLiterals_EnumLiteralDeclarationParserRuleCall_0ElementType());
		}
		ruleEnumLiteralDeclaration
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getEnumLiterals_AlternativesGroupsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf();
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2, elementTypeProvider.getEnumLiterals_VerticalLineKeyword_1_1_0ElementType());
				}
				(
					(
						{
							markComposite(elementTypeProvider.getEnumLiterals_GroupsEnumLiteralDeclarationParserRuleCall_1_1_1_0ElementType());
						}
						lv_groups_3_0=ruleEnumLiteralDeclaration
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleEnumLiteralDeclaration
entryRuleEnumLiteralDeclaration:
	{ markComposite(elementTypeProvider.getEnumLiteralDeclarationElementType()); }
	ruleEnumLiteralDeclaration
	{ doneComposite(); }
	EOF;
finally {
}

// Rule EnumLiteralDeclaration
ruleEnumLiteralDeclaration:
	(
		(
			(
				{
					markLeaf();
				}
				otherlv_0=RULE_ID
				{
					doneLeaf(otherlv_0, elementTypeProvider.getEnumLiteralDeclaration_EnumLiteralEEnumLiteralCrossReference_0_0ElementType());
				}
			)
		)
		(
			{
				markLeaf();
			}
			otherlv_1='='
			{
				doneLeaf(otherlv_1, elementTypeProvider.getEnumLiteralDeclaration_EqualsSignKeyword_1_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getEnumLiteralDeclaration_LiteralKeywordParserRuleCall_1_1_0ElementType());
					}
					lv_literal_2_0=ruleKeyword
					{
						doneComposite();
					}
				)
			)
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
