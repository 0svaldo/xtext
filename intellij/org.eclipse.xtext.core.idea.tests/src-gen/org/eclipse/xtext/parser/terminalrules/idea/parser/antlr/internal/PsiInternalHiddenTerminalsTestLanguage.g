/*
 * generated by Xtext
 */
grammar PsiInternalHiddenTerminalsTestLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.parser.terminalrules.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.parser.terminalrules.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.parser.terminalrules.idea.lang.HiddenTerminalsTestLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.terminalrules.services.HiddenTerminalsTestLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

private HiddenTerminalsTestLanguageGrammarAccess grammarAccess;

private HiddenTerminalsTestLanguageElementTypeProvider elementTypeProvider;

public PsiInternalHiddenTerminalsTestLanguageParser(PsiBuilder builder, TokenStream input, TokenTypeProvider tokenTypeProvider, HiddenTerminalsTestLanguageElementTypeProvider elementTypeProvider, HiddenTerminalsTestLanguageGrammarAccess grammarAccess) {
	super(builder, input, tokenTypeProvider);
    this.grammarAccess = grammarAccess;
	this.elementTypeProvider = elementTypeProvider;
}

@Override
protected String getFirstRuleName() {
	return "Model";
}

}

//Entry rule entryRuleModel
entryRuleModel:
	{ markComposite(elementTypeProvider.getModelElementType()); }
	ruleModel
	{ doneComposite(); }
	EOF;
finally {
}

// Rule Model
ruleModel:
	(
		{
			markComposite(elementTypeProvider.getModel_WithoutHiddensParserRuleCall_0ElementType());
		}
		ruleWithoutHiddens
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getModel_WithHiddensParserRuleCall_1ElementType());
		}
		ruleWithHiddens
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getModel_OverridingHiddensParserRuleCall_2ElementType());
		}
		ruleOverridingHiddens
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getModel_InheritingHiddensParserRuleCall_3ElementType());
		}
		ruleInheritingHiddens
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getModel_DatatypeHiddensParserRuleCall_4ElementType());
		}
		ruleDatatypeHiddens
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleWithoutHiddens
entryRuleWithoutHiddens:
	{ markComposite(elementTypeProvider.getWithoutHiddensElementType()); }
	ruleWithoutHiddens
	{ doneComposite(); }
	EOF;
finally {
}

// Rule WithoutHiddens
ruleWithoutHiddens:
	(
		{
			markLeaf();
		}
		otherlv_0='without'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getWithoutHiddens_WithoutKeyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_spaces_1_0=RULE_WS
				{
					doneLeaf(lv_spaces_1_0, elementTypeProvider.getWithoutHiddens_SpacesWSTerminalRuleCall_1_0ElementType());
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_2='hiddens'
		{
			doneLeaf(otherlv_2, elementTypeProvider.getWithoutHiddens_HiddensKeyword_2ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_spaces_3_0=RULE_WS
				{
					doneLeaf(lv_spaces_3_0, elementTypeProvider.getWithoutHiddens_SpacesWSTerminalRuleCall_3_0ElementType());
				}
			)
		)?
		(
			(
				{
					markLeaf();
				}
				lv_valid_4_0=';'
				{
					doneLeaf(lv_valid_4_0, elementTypeProvider.getWithoutHiddens_ValidSemicolonKeyword_4_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleWithHiddens
entryRuleWithHiddens:
	{ markComposite(elementTypeProvider.getWithHiddensElementType()); }
	ruleWithHiddens
	{ doneComposite(); }
	EOF;
finally {
}

// Rule WithHiddens
ruleWithHiddens:
	(
		{
			markLeaf();
		}
		otherlv_0='with'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getWithHiddens_WithKeyword_0ElementType());
		}
		{
			markLeaf();
		}
		otherlv_1='hiddens'
		{
			doneLeaf(otherlv_1, elementTypeProvider.getWithHiddens_HiddensKeyword_1ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_valid_2_0=';'
				{
					doneLeaf(lv_valid_2_0, elementTypeProvider.getWithHiddens_ValidSemicolonKeyword_2_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleOverridingHiddens
entryRuleOverridingHiddens:
	{ markComposite(elementTypeProvider.getOverridingHiddensElementType()); }
	ruleOverridingHiddens
	{ doneComposite(); }
	EOF;
finally {
}

// Rule OverridingHiddens
ruleOverridingHiddens:
	(
		{
			markLeaf();
		}
		otherlv_0='overriding'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getOverridingHiddens_OverridingKeyword_0ElementType());
		}
		{
			markLeaf();
		}
		otherlv_1='hiddens'
		{
			doneLeaf(otherlv_1, elementTypeProvider.getOverridingHiddens_HiddensKeyword_1ElementType());
		}
		{
			markLeaf();
		}
		otherlv_2='('
		{
			doneLeaf(otherlv_2, elementTypeProvider.getOverridingHiddens_LeftParenthesisKeyword_2ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getOverridingHiddens_CalledOverridingHiddensCallParserRuleCall_3_0ElementType());
				}
				lv_called_3_0=ruleOverridingHiddensCall
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_4=')'
		{
			doneLeaf(otherlv_4, elementTypeProvider.getOverridingHiddens_RightParenthesisKeyword_4ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_valid_5_0=';'
				{
					doneLeaf(lv_valid_5_0, elementTypeProvider.getOverridingHiddens_ValidSemicolonKeyword_5_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleOverridingHiddensCall
entryRuleOverridingHiddensCall:
	{ markComposite(elementTypeProvider.getOverridingHiddensCallElementType()); }
	ruleOverridingHiddensCall
	{ doneComposite(); }
	EOF;
finally {
}

// Rule OverridingHiddensCall
ruleOverridingHiddensCall:
	(
		{
			markLeaf();
		}
		otherlv_0='call'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getOverridingHiddensCall_CallKeyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_spaces_1_0=RULE_WS
				{
					doneLeaf(lv_spaces_1_0, elementTypeProvider.getOverridingHiddensCall_SpacesWSTerminalRuleCall_1_0ElementType());
				}
			)
		)?
		(
			(
				{
					markLeaf();
				}
				lv_valid_2_0=';'
				{
					doneLeaf(lv_valid_2_0, elementTypeProvider.getOverridingHiddensCall_ValidSemicolonKeyword_2_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleInheritingHiddens
entryRuleInheritingHiddens:
	{ markComposite(elementTypeProvider.getInheritingHiddensElementType()); }
	ruleInheritingHiddens
	{ doneComposite(); }
	EOF;
finally {
}

// Rule InheritingHiddens
ruleInheritingHiddens:
	(
		{
			markLeaf();
		}
		otherlv_0='inheriting'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getInheritingHiddens_InheritingKeyword_0ElementType());
		}
		{
			markLeaf();
		}
		otherlv_1='hiddens'
		{
			doneLeaf(otherlv_1, elementTypeProvider.getInheritingHiddens_HiddensKeyword_1ElementType());
		}
		{
			markLeaf();
		}
		otherlv_2='('
		{
			doneLeaf(otherlv_2, elementTypeProvider.getInheritingHiddens_LeftParenthesisKeyword_2ElementType());
		}
		(
			(
				(
					{
						markComposite(elementTypeProvider.getInheritingHiddens_CalledInheritingHiddensCallParserRuleCall_3_0_0ElementType());
					}
					lv_called_3_0=ruleInheritingHiddensCall
					{
						doneComposite();
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getInheritingHiddens_HidingCalledHidingHiddensParserRuleCall_3_1_0ElementType());
					}
					lv_hidingCalled_4_0=ruleHidingHiddens
					{
						doneComposite();
					}
				)
			)
		)
		{
			markLeaf();
		}
		otherlv_5=')'
		{
			doneLeaf(otherlv_5, elementTypeProvider.getInheritingHiddens_RightParenthesisKeyword_4ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_valid_6_0=';'
				{
					doneLeaf(lv_valid_6_0, elementTypeProvider.getInheritingHiddens_ValidSemicolonKeyword_5_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleDatatypeHiddens
entryRuleDatatypeHiddens:
	{ markComposite(elementTypeProvider.getDatatypeHiddensElementType()); }
	ruleDatatypeHiddens
	{ doneComposite(); }
	EOF;
finally {
}

// Rule DatatypeHiddens
ruleDatatypeHiddens:
	(
		{
			markLeaf();
		}
		otherlv_0='datatype'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getDatatypeHiddens_DatatypeKeyword_0ElementType());
		}
		(
			(
				{
					markComposite(elementTypeProvider.getDatatypeHiddens_ValidDatatypeRuleParserRuleCall_1_0ElementType());
				}
				lv_valid_1_0=ruleDatatypeRule
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleDatatypeRule
entryRuleDatatypeRule:
	{ markComposite(elementTypeProvider.getDatatypeRuleElementType()); }
	ruleDatatypeRule
	{ doneComposite(); }
	EOF;
finally {
}

// Rule DatatypeRule
ruleDatatypeRule:
	(
		{
			markLeaf();
		}
		kw='rule'
		{
			doneLeaf(kw, elementTypeProvider.getDatatypeRule_RuleKeyword_0ElementType());
		}
		{
			markLeaf();
		}
		kw=';'
		{
			doneLeaf(kw, elementTypeProvider.getDatatypeRule_SemicolonKeyword_1ElementType());
		}
	)
;

//Entry rule entryRuleHidingHiddens
entryRuleHidingHiddens:
	{ markComposite(elementTypeProvider.getHidingHiddensElementType()); }
	ruleHidingHiddens
	{ doneComposite(); }
	EOF;
finally {
}

// Rule HidingHiddens
ruleHidingHiddens:
	(
		{
			markLeaf();
		}
		otherlv_0='hiding'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getHidingHiddens_HidingKeyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_space_1_0=RULE_WS
				{
					doneLeaf(lv_space_1_0, elementTypeProvider.getHidingHiddens_SpaceWSTerminalRuleCall_1_0ElementType());
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getHidingHiddens_CalledInheritingHiddensCallParserRuleCall_2_0ElementType());
				}
				lv_called_2_0=ruleInheritingHiddensCall
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleInheritingHiddensCall
entryRuleInheritingHiddensCall:
	{ markComposite(elementTypeProvider.getInheritingHiddensCallElementType()); }
	ruleInheritingHiddensCall
	{ doneComposite(); }
	EOF;
finally {
}

// Rule InheritingHiddensCall
ruleInheritingHiddensCall:
	(
		{
			markLeaf();
		}
		otherlv_0='call'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getInheritingHiddensCall_CallKeyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_valid_1_0=';'
				{
					doneLeaf(lv_valid_1_0, elementTypeProvider.getInheritingHiddensCall_ValidSemicolonKeyword_1_0ElementType());
				}
			)
		)
	)
;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
