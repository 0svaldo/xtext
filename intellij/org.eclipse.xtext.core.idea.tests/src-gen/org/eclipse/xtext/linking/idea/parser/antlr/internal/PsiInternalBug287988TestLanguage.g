/*
 * generated by Xtext
 */
grammar PsiInternalBug287988TestLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.linking.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.linking.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.linking.idea.lang.Bug287988TestLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.linking.services.Bug287988TestLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected Bug287988TestLanguageGrammarAccess grammarAccess;

	protected Bug287988TestLanguageElementTypeProvider elementTypeProvider;

	public PsiInternalBug287988TestLanguageParser(PsiBuilder builder, TokenStream input, Bug287988TestLanguageElementTypeProvider elementTypeProvider, Bug287988TestLanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Model";
	}

}

//Entry rule entryRuleModel
entryRuleModel:
	{ markComposite(elementTypeProvider.getModelElementType()); }
	ruleModel
	{ doneComposite(); }
	EOF;

// Rule Model
ruleModel@init {
}
@after {
}:
	(
		(
			{
				markLeaf();
			}
			otherlv_0='actions'
			{
				doneLeaf(otherlv_0, elementTypeProvider.getModel_ActionsKeyword_0_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_AttributesBaseAttributeParserRuleCall_0_1_0ElementType());
					}
					lv_attributes_1_0=ruleBaseAttribute
					{
						doneComposite();
					}
				)
			)*
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_2='simple'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getModel_SimpleKeyword_1_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_AttributesSimpleAttributeParserRuleCall_1_1_0ElementType());
					}
					lv_attributes_3_0=ruleSimpleAttribute
					{
						doneComposite();
					}
				)
			)*
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_4='rulecall'
			{
				doneLeaf(otherlv_4, elementTypeProvider.getModel_RulecallKeyword_2_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_AttributesRuleCallAttributeParserRuleCall_2_1_0ElementType());
					}
					lv_attributes_5_0=ruleRuleCallAttribute
					{
						doneComposite();
					}
				)
			)*
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_6='rulecall2'
			{
				doneLeaf(otherlv_6, elementTypeProvider.getModel_Rulecall2Keyword_3_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_AttributesRuleCallAttribute2ParserRuleCall_3_1_0ElementType());
					}
					lv_attributes_7_0=ruleRuleCallAttribute2
					{
						doneComposite();
					}
				)
			)*
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_8='rulecall3'
			{
				doneLeaf(otherlv_8, elementTypeProvider.getModel_Rulecall3Keyword_4_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_AttributesRuleCallAttribute3ParserRuleCall_4_1_0ElementType());
					}
					lv_attributes_9_0=ruleRuleCallAttribute3
					{
						doneComposite();
					}
				)
			)*
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_10='inlinedActions'
			{
				doneLeaf(otherlv_10, elementTypeProvider.getModel_InlinedActionsKeyword_5_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_AttributesActionAttributeParserRuleCall_5_1_0ElementType());
					}
					lv_attributes_11_0=ruleActionAttribute
					{
						doneComposite();
					}
				)
			)*
		)
	)
;

//Entry rule entryRuleBaseAttribute
entryRuleBaseAttribute:
	{ markComposite(elementTypeProvider.getBaseAttributeElementType()); }
	ruleBaseAttribute
	{ doneComposite(); }
	EOF;

// Rule BaseAttribute
ruleBaseAttribute@init {
}
@after {
}:
	(
		(
			{
				markComposite(elementTypeProvider.getBaseAttribute_AttributeParserRuleCall_0_0ElementType());
			}
			ruleAttribute
			{
				doneComposite();
			}
			    |
			{
				markComposite(elementTypeProvider.getBaseAttribute_MasterParserRuleCall_0_1ElementType());
			}
			ruleMaster
			{
				doneComposite();
			}
		)
		(
			(
				{
					markLeaf();
				}
				otherlv_2='ref'
				{
					doneLeaf(otherlv_2, elementTypeProvider.getBaseAttribute_RefKeyword_1_0_0ElementType());
				}
				(
					(
						{
							markLeaf();
						}
						otherlv_3=RULE_ID
						{
							doneLeaf(otherlv_3, elementTypeProvider.getBaseAttribute_TypeRefBaseAttributeCrossReference_1_0_1_0ElementType());
						}
					)
				)
			)
			    |
			(
				(
					{
						markLeaf();
					}
					lv_type_4_0=RULE_ID
					{
						doneLeaf(lv_type_4_0, elementTypeProvider.getBaseAttribute_TypeIDTerminalRuleCall_1_1_0ElementType());
					}
				)
			)
		)
		(
			(
				{
					markLeaf();
				}
				lv_name_5_0=RULE_ID
				{
					doneLeaf(lv_name_5_0, elementTypeProvider.getBaseAttribute_NameIDTerminalRuleCall_2_0ElementType());
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_6=';'
		{
			doneLeaf(otherlv_6, elementTypeProvider.getBaseAttribute_SemicolonKeyword_3ElementType());
		}
	)
;

//Entry rule entryRuleAttribute
entryRuleAttribute:
	{ markComposite(elementTypeProvider.getAttributeElementType()); }
	ruleAttribute
	{ doneComposite(); }
	EOF;

// Rule Attribute
ruleAttribute@init {
}
@after {
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getAttribute_AttributeAction_0ElementType());
				doneComposite();
			}
		)
		{
			markLeaf();
		}
		otherlv_1='attribute'
		{
			doneLeaf(otherlv_1, elementTypeProvider.getAttribute_AttributeKeyword_1ElementType());
		}
	)
;

//Entry rule entryRuleMaster
entryRuleMaster:
	{ markComposite(elementTypeProvider.getMasterElementType()); }
	ruleMaster
	{ doneComposite(); }
	EOF;

// Rule Master
ruleMaster@init {
}
@after {
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getMaster_MasterAction_0ElementType());
				doneComposite();
			}
		)
		{
			markLeaf();
		}
		otherlv_1='master'
		{
			doneLeaf(otherlv_1, elementTypeProvider.getMaster_MasterKeyword_1ElementType());
		}
	)
;

//Entry rule entryRuleActionAttribute
entryRuleActionAttribute:
	{ markComposite(elementTypeProvider.getActionAttributeElementType()); }
	ruleActionAttribute
	{ doneComposite(); }
	EOF;

// Rule ActionAttribute
ruleActionAttribute@init {
}
@after {
}:
	(
		(
			(
				(
					{
						precedeComposite(elementTypeProvider.getActionAttribute_AttributeAction_0_0_0ElementType());
						doneComposite();
					}
				)
				{
					markLeaf();
				}
				otherlv_1='attribute'
				{
					doneLeaf(otherlv_1, elementTypeProvider.getActionAttribute_AttributeKeyword_0_0_1ElementType());
				}
			)
			    |
			(
				(
					{
						precedeComposite(elementTypeProvider.getActionAttribute_MasterAction_0_1_0ElementType());
						doneComposite();
					}
				)
				{
					markLeaf();
				}
				otherlv_3='master'
				{
					doneLeaf(otherlv_3, elementTypeProvider.getActionAttribute_MasterKeyword_0_1_1ElementType());
				}
			)
		)
		(
			(
				{
					markLeaf();
				}
				otherlv_4='ref'
				{
					doneLeaf(otherlv_4, elementTypeProvider.getActionAttribute_RefKeyword_1_0_0ElementType());
				}
				(
					(
						{
							markLeaf();
						}
						otherlv_5=RULE_ID
						{
							doneLeaf(otherlv_5, elementTypeProvider.getActionAttribute_TypeRefBaseAttributeCrossReference_1_0_1_0ElementType());
						}
					)
				)
			)
			    |
			(
				(
					{
						markLeaf();
					}
					lv_type_6_0=RULE_ID
					{
						doneLeaf(lv_type_6_0, elementTypeProvider.getActionAttribute_TypeIDTerminalRuleCall_1_1_0ElementType());
					}
				)
			)
		)
		(
			(
				{
					markLeaf();
				}
				lv_name_7_0=RULE_ID
				{
					doneLeaf(lv_name_7_0, elementTypeProvider.getActionAttribute_NameIDTerminalRuleCall_2_0ElementType());
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_8=';'
		{
			doneLeaf(otherlv_8, elementTypeProvider.getActionAttribute_SemicolonKeyword_3ElementType());
		}
	)
;

//Entry rule entryRuleSimpleAttribute
entryRuleSimpleAttribute:
	{ markComposite(elementTypeProvider.getSimpleAttributeElementType()); }
	ruleSimpleAttribute
	{ doneComposite(); }
	EOF;

// Rule SimpleAttribute
ruleSimpleAttribute@init {
}
@after {
}:
	(
		(
			(
				{
					markLeaf();
				}
				otherlv_0='ref'
				{
					doneLeaf(otherlv_0, elementTypeProvider.getSimpleAttribute_RefKeyword_0_0_0ElementType());
				}
				(
					(
						{
							markLeaf();
						}
						otherlv_1=RULE_ID
						{
							doneLeaf(otherlv_1, elementTypeProvider.getSimpleAttribute_TypeRefBaseAttributeCrossReference_0_0_1_0ElementType());
						}
					)
				)
			)
			    |
			(
				(
					{
						markLeaf();
					}
					lv_type_2_0=RULE_ID
					{
						doneLeaf(lv_type_2_0, elementTypeProvider.getSimpleAttribute_TypeIDTerminalRuleCall_0_1_0ElementType());
					}
				)
			)
		)
		(
			(
				{
					markLeaf();
				}
				lv_name_3_0=RULE_ID
				{
					doneLeaf(lv_name_3_0, elementTypeProvider.getSimpleAttribute_NameIDTerminalRuleCall_1_0ElementType());
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_4=';'
		{
			doneLeaf(otherlv_4, elementTypeProvider.getSimpleAttribute_SemicolonKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleRuleCallAttribute
entryRuleRuleCallAttribute:
	{ markComposite(elementTypeProvider.getRuleCallAttributeElementType()); }
	ruleRuleCallAttribute
	{ doneComposite(); }
	EOF;

// Rule RuleCallAttribute
ruleRuleCallAttribute@init {
}
@after {
}:
	(
		{
			markComposite(elementTypeProvider.getRuleCallAttribute_CallMeParserRuleCall_0ElementType());
		}
		ruleCallMe
		{
			doneComposite();
		}
		(
			(
				{
					markLeaf();
				}
				lv_name_1_0=RULE_ID
				{
					doneLeaf(lv_name_1_0, elementTypeProvider.getRuleCallAttribute_NameIDTerminalRuleCall_1_0ElementType());
				}
			)
		)
		{
			markLeaf();
		}
		otherlv_2=';'
		{
			doneLeaf(otherlv_2, elementTypeProvider.getRuleCallAttribute_SemicolonKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleCallMe
entryRuleCallMe:
	{ markComposite(elementTypeProvider.getCallMeElementType()); }
	ruleCallMe
	{ doneComposite(); }
	EOF;

// Rule CallMe
ruleCallMe@init {
}
@after {
}:
	(
		(
			{
				markLeaf();
			}
			otherlv_0='ref'
			{
				doneLeaf(otherlv_0, elementTypeProvider.getCallMe_RefKeyword_0_0ElementType());
			}
			(
				(
					{
						markLeaf();
					}
					otherlv_1=RULE_ID
					{
						doneLeaf(otherlv_1, elementTypeProvider.getCallMe_TypeRefBaseAttributeCrossReference_0_1_0ElementType());
					}
				)
			)
		)
		    |
		(
			(
				{
					markLeaf();
				}
				lv_type_2_0=RULE_ID
				{
					doneLeaf(lv_type_2_0, elementTypeProvider.getCallMe_TypeIDTerminalRuleCall_1_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleRuleCallAttribute2
entryRuleRuleCallAttribute2:
	{ markComposite(elementTypeProvider.getRuleCallAttribute2ElementType()); }
	ruleRuleCallAttribute2
	{ doneComposite(); }
	EOF;

// Rule RuleCallAttribute2
ruleRuleCallAttribute2@init {
}
@after {
}:
	(
		{
			markComposite(elementTypeProvider.getRuleCallAttribute2_CallMe2ParserRuleCall_0ElementType());
		}
		ruleCallMe2
		{
			doneComposite();
		}
		(
			(
				{
					markLeaf();
				}
				otherlv_1='ref'
				{
					doneLeaf(otherlv_1, elementTypeProvider.getRuleCallAttribute2_RefKeyword_1_0_0ElementType());
				}
				(
					(
						{
							markLeaf();
						}
						otherlv_2=RULE_ID
						{
							doneLeaf(otherlv_2, elementTypeProvider.getRuleCallAttribute2_TypeRefBaseAttributeCrossReference_1_0_1_0ElementType());
						}
					)
				)
			)
			    |
			(
				(
					{
						markLeaf();
					}
					lv_type_3_0=RULE_ID
					{
						doneLeaf(lv_type_3_0, elementTypeProvider.getRuleCallAttribute2_TypeIDTerminalRuleCall_1_1_0ElementType());
					}
				)
			)
		)
		{
			markLeaf();
		}
		otherlv_4=';'
		{
			doneLeaf(otherlv_4, elementTypeProvider.getRuleCallAttribute2_SemicolonKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleCallMe2
entryRuleCallMe2:
	{ markComposite(elementTypeProvider.getCallMe2ElementType()); }
	ruleCallMe2
	{ doneComposite(); }
	EOF;

// Rule CallMe2
ruleCallMe2@init {
}
@after {
}:
	(
		(
			{
				markLeaf();
			}
			lv_name_0_0=RULE_ID
			{
				doneLeaf(lv_name_0_0, elementTypeProvider.getCallMe2_NameIDTerminalRuleCall_0ElementType());
			}
		)
	)
;

//Entry rule entryRuleRuleCallAttribute3
entryRuleRuleCallAttribute3:
	{ markComposite(elementTypeProvider.getRuleCallAttribute3ElementType()); }
	ruleRuleCallAttribute3
	{ doneComposite(); }
	EOF;

// Rule RuleCallAttribute3
ruleRuleCallAttribute3@init {
}
@after {
}:
	(
		{
			markComposite(elementTypeProvider.getRuleCallAttribute3_CallMe3ParserRuleCall_0ElementType());
		}
		ruleCallMe3
		{
			doneComposite();
		}
		(
			(
				{
					markLeaf();
				}
				otherlv_1='ref'
				{
					doneLeaf(otherlv_1, elementTypeProvider.getRuleCallAttribute3_RefKeyword_1_0_0ElementType());
				}
				(
					(
						{
							markLeaf();
						}
						otherlv_2=RULE_ID
						{
							doneLeaf(otherlv_2, elementTypeProvider.getRuleCallAttribute3_TypeRefBaseAttributeCrossReference_1_0_1_0ElementType());
						}
					)
				)
			)
			    |
			(
				(
					{
						markLeaf();
					}
					lv_type_3_0=RULE_ID
					{
						doneLeaf(lv_type_3_0, elementTypeProvider.getRuleCallAttribute3_TypeIDTerminalRuleCall_1_1_0ElementType());
					}
				)
			)
		)
		{
			markLeaf();
		}
		otherlv_4=';'
		{
			doneLeaf(otherlv_4, elementTypeProvider.getRuleCallAttribute3_SemicolonKeyword_2ElementType());
		}
	)
;

//Entry rule entryRuleCallMe3
entryRuleCallMe3:
	{ markComposite(elementTypeProvider.getCallMe3ElementType()); }
	ruleCallMe3
	{ doneComposite(); }
	EOF;

// Rule CallMe3
ruleCallMe3@init {
}
@after {
}:
	(
		{
			markLeaf();
		}
		otherlv_0='call'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getCallMe3_CallKeyword_0ElementType());
		}
		{
			markLeaf();
		}
		otherlv_1='me'
		{
			doneLeaf(otherlv_1, elementTypeProvider.getCallMe3_MeKeyword_1ElementType());
		}
		{
			markComposite(elementTypeProvider.getCallMe3_CallMe4ParserRuleCall_2ElementType());
		}
		ruleCallMe4
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleCallMe4
entryRuleCallMe4:
	{ markComposite(elementTypeProvider.getCallMe4ElementType()); }
	ruleCallMe4
	{ doneComposite(); }
	EOF;

// Rule CallMe4
ruleCallMe4@init {
}
@after {
}:
	(
		(
			{
				markLeaf();
			}
			lv_name_0_0=RULE_ID
			{
				doneLeaf(lv_name_0_0, elementTypeProvider.getCallMe4_NameIDTerminalRuleCall_0ElementType());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
