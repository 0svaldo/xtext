/*
 * generated by Xtext
 */
grammar PsiInternalAssignmentFinderTestLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.serializer.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.serializer.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.serializer.idea.lang.AssignmentFinderTestLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.serializer.services.AssignmentFinderTestLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected AssignmentFinderTestLanguageGrammarAccess grammarAccess;

	protected AssignmentFinderTestLanguageElementTypeProvider elementTypeProvider;

	public PsiInternalAssignmentFinderTestLanguageParser(PsiBuilder builder, TokenStream input, AssignmentFinderTestLanguageElementTypeProvider elementTypeProvider, AssignmentFinderTestLanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Model";
	}

}

//Entry rule entryRuleModel
entryRuleModel:
	{ markComposite(elementTypeProvider.getModelElementType()); }
	ruleModel
	{ doneComposite(); }
	EOF;

// Rule Model
ruleModel:
	(
		(
			{
				markLeaf();
			}
			otherlv_0='#00'
			{
				doneLeaf(otherlv_0, elementTypeProvider.getModel_NumberSignDigitZeroDigitZeroKeyword_0_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_KeywordValKeywordValParserRuleCall_0_1_0ElementType());
					}
					lv_keywordVal_1_0=ruleKeywordVal
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_2='#01'
			{
				doneLeaf(otherlv_2, elementTypeProvider.getModel_NumberSignDigitZeroDigitOneKeyword_1_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_TerminalValTerminalValParserRuleCall_1_1_0ElementType());
					}
					lv_terminalVal_3_0=ruleTerminalVal
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_4='#02'
			{
				doneLeaf(otherlv_4, elementTypeProvider.getModel_NumberSignDigitZeroDigitTwoKeyword_2_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_EnumValEnumValParserRuleCall_2_1_0ElementType());
					}
					lv_enumVal_5_0=ruleEnumVal
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_6='#03'
			{
				doneLeaf(otherlv_6, elementTypeProvider.getModel_NumberSignDigitZeroDigitThreeKeyword_3_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_KeywordBoolKeywordBoolParserRuleCall_3_1_0ElementType());
					}
					lv_keywordBool_7_0=ruleKeywordBool
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_8='#04'
			{
				doneLeaf(otherlv_8, elementTypeProvider.getModel_NumberSignDigitZeroDigitFourKeyword_4_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_TerminalBoolTerminalBoolParserRuleCall_4_1_0ElementType());
					}
					lv_terminalBool_9_0=ruleTerminalBool
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_10='#05'
			{
				doneLeaf(otherlv_10, elementTypeProvider.getModel_NumberSignDigitZeroDigitFiveKeyword_5_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_EnumBoolEnumBoolParserRuleCall_5_1_0ElementType());
					}
					lv_enumBool_11_0=ruleEnumBool
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_12='#06'
			{
				doneLeaf(otherlv_12, elementTypeProvider.getModel_NumberSignDigitZeroDigitSixKeyword_6_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_MixedBoolMixedBoolParserRuleCall_6_1_0ElementType());
					}
					lv_mixedBool_13_0=ruleMixedBool
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_14='#07'
			{
				doneLeaf(otherlv_14, elementTypeProvider.getModel_NumberSignDigitZeroDigitSevenKeyword_7_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_MixedValueMixedValueParserRuleCall_7_1_0ElementType());
					}
					lv_mixedValue_15_0=ruleMixedValue
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_16='#08'
			{
				doneLeaf(otherlv_16, elementTypeProvider.getModel_NumberSignDigitZeroDigitEightKeyword_8_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_ContainmentRefContainmentRefParserRuleCall_8_1_0ElementType());
					}
					lv_containmentRef_17_0=ruleContainmentRef
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf();
			}
			otherlv_18='#09'
			{
				doneLeaf(otherlv_18, elementTypeProvider.getModel_NumberSignDigitZeroDigitNineKeyword_9_0ElementType());
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_CrossRefCrossRefParserRuleCall_9_1_0ElementType());
					}
					lv_crossRef_19_0=ruleCrossRef
					{
						doneComposite();
					}
				)
			)
		)
	)
;

//Entry rule entryRuleKeywordVal
entryRuleKeywordVal:
	{ markComposite(elementTypeProvider.getKeywordValElementType()); }
	ruleKeywordVal
	{ doneComposite(); }
	EOF;

// Rule KeywordVal
ruleKeywordVal:
	(
		(
			(
				{
					markLeaf();
				}
				lv_kw_0_0='kw1'
				{
					doneLeaf(lv_kw_0_0, elementTypeProvider.getKeywordVal_KwKw1Keyword_0_0ElementType());
				}
			)
		)
		    |
		(
			(
				{
					markLeaf();
				}
				lv_kw_1_0='kw2'
				{
					doneLeaf(lv_kw_1_0, elementTypeProvider.getKeywordVal_KwKw2Keyword_1_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleTerminalVal
entryRuleTerminalVal:
	{ markComposite(elementTypeProvider.getTerminalValElementType()); }
	ruleTerminalVal
	{ doneComposite(); }
	EOF;

// Rule TerminalVal
ruleTerminalVal:
	(
		(
			(
				{
					markLeaf();
				}
				lv_term_0_0=RULE_TERMINAL1
				{
					doneLeaf(lv_term_0_0, elementTypeProvider.getTerminalVal_TermTerminal1TerminalRuleCall_0_0ElementType());
				}
			)
		)
		    |
		(
			(
				{
					markLeaf();
				}
				lv_term_1_0=RULE_TERMINAL2
				{
					doneLeaf(lv_term_1_0, elementTypeProvider.getTerminalVal_TermTerminal2TerminalRuleCall_1_0ElementType());
				}
			)
		)
		    |
		(
			(
				{
					markLeaf();
				}
				lv_term_2_0='%foo'
				{
					doneLeaf(lv_term_2_0, elementTypeProvider.getTerminalVal_TermFooKeyword_2_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleEnumVal
entryRuleEnumVal:
	{ markComposite(elementTypeProvider.getEnumValElementType()); }
	ruleEnumVal
	{ doneComposite(); }
	EOF;

// Rule EnumVal
ruleEnumVal:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getEnumVal_EnEnum1EnumRuleCall_0_0ElementType());
				}
				lv_en_0_0=ruleEnum1
				{
					doneComposite();
				}
			)
		)
		    |
		(
			(
				{
					markComposite(elementTypeProvider.getEnumVal_EnEnum2EnumRuleCall_1_0ElementType());
				}
				lv_en_1_0=ruleEnum2
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleKeywordBool
entryRuleKeywordBool:
	{ markComposite(elementTypeProvider.getKeywordBoolElementType()); }
	ruleKeywordBool
	{ doneComposite(); }
	EOF;

// Rule KeywordBool
ruleKeywordBool:
	(
		(
			(
				{
					markLeaf();
				}
				lv_kw_0_0='kw1'
				{
					doneLeaf(lv_kw_0_0, elementTypeProvider.getKeywordBool_KwKw1Keyword_0_0ElementType());
				}
			)
		)
		    |
		(
			(
				{
					markLeaf();
				}
				lv_kw_1_0='kw2'
				{
					doneLeaf(lv_kw_1_0, elementTypeProvider.getKeywordBool_KwKw2Keyword_1_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleTerminalBool
entryRuleTerminalBool:
	{ markComposite(elementTypeProvider.getTerminalBoolElementType()); }
	ruleTerminalBool
	{ doneComposite(); }
	EOF;

// Rule TerminalBool
ruleTerminalBool:
	(
		(
			(
				{
					markLeaf();
				}
				lv_term_0_0=RULE_TERMINAL1
				{
					doneLeaf(lv_term_0_0, elementTypeProvider.getTerminalBool_TermTerminal1TerminalRuleCall_0_0ElementType());
				}
			)
		)
		    |
		(
			(
				{
					markLeaf();
				}
				lv_term_1_0=RULE_TERMINAL2
				{
					doneLeaf(lv_term_1_0, elementTypeProvider.getTerminalBool_TermTerminal2TerminalRuleCall_1_0ElementType());
				}
			)
		)
		    |
		(
			(
				{
					markLeaf();
				}
				lv_term_2_0='%foo'
				{
					doneLeaf(lv_term_2_0, elementTypeProvider.getTerminalBool_TermFooKeyword_2_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleEnumBool
entryRuleEnumBool:
	{ markComposite(elementTypeProvider.getEnumBoolElementType()); }
	ruleEnumBool
	{ doneComposite(); }
	EOF;

// Rule EnumBool
ruleEnumBool:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getEnumBool_EnEnum1EnumRuleCall_0_0ElementType());
				}
				lv_en_0_0=ruleEnum1
				{
					doneComposite();
				}
			)
		)
		    |
		(
			(
				{
					markComposite(elementTypeProvider.getEnumBool_EnEnum2EnumRuleCall_1_0ElementType());
				}
				lv_en_1_0=ruleEnum2
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleMixedBool
entryRuleMixedBool:
	{ markComposite(elementTypeProvider.getMixedBoolElementType()); }
	ruleMixedBool
	{ doneComposite(); }
	EOF;

// Rule MixedBool
ruleMixedBool:
	(
		(
			(
				{
					markLeaf();
				}
				lv_val_0_0='kw1'
				{
					doneLeaf(lv_val_0_0, elementTypeProvider.getMixedBool_ValKw1Keyword_0_0ElementType());
				}
			)
		)
		    |
		(
			(
				{
					markComposite(elementTypeProvider.getMixedBool_ValBooleanParserRuleCall_1_0ElementType());
				}
				lv_val_1_0=ruleBoolean
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleBoolean
entryRuleBoolean:
	{ markComposite(elementTypeProvider.getBooleanElementType()); }
	ruleBoolean
	{ doneComposite(); }
	EOF;

// Rule Boolean
ruleBoolean:
	(
		{
			markLeaf();
		}
		kw='true'
		{
			doneLeaf(kw, elementTypeProvider.getBoolean_TrueKeyword_0ElementType());
		}
		    |
		{
			markLeaf();
		}
		kw='false'
		{
			doneLeaf(kw, elementTypeProvider.getBoolean_FalseKeyword_1ElementType());
		}
	)
;

//Entry rule entryRuleMixedValue
entryRuleMixedValue:
	{ markComposite(elementTypeProvider.getMixedValueElementType()); }
	ruleMixedValue
	{ doneComposite(); }
	EOF;

// Rule MixedValue
ruleMixedValue:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getMixedValue_ValEnum1EnumRuleCall_0_0ElementType());
				}
				lv_val_0_0=ruleEnum1
				{
					doneComposite();
				}
			)
		)
		    |
		(
			(
				{
					markComposite(elementTypeProvider.getMixedValue_ValDatEnumParserRuleCall_1_0ElementType());
				}
				lv_val_1_0=ruleDatEnum
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleDatEnum
entryRuleDatEnum:
	{ markComposite(elementTypeProvider.getDatEnumElementType()); }
	ruleDatEnum
	{ doneComposite(); }
	EOF;

// Rule DatEnum
ruleDatEnum:
	{
		markLeaf();
	}
	kw='lit3'
	{
		doneLeaf(kw, elementTypeProvider.getDatEnum_Lit3KeywordElementType());
	}
;

//Entry rule entryRuleContainmentRef
entryRuleContainmentRef:
	{ markComposite(elementTypeProvider.getContainmentRefElementType()); }
	ruleContainmentRef
	{ doneComposite(); }
	EOF;

// Rule ContainmentRef
ruleContainmentRef:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getContainmentRef_CtxContainmentRef1ParserRuleCall_0_0ElementType());
				}
				lv_ctx_0_0=ruleContainmentRef1
				{
					doneComposite();
				}
			)
		)
		    |
		(
			(
				{
					markComposite(elementTypeProvider.getContainmentRef_CtxContainmentRef2ParserRuleCall_1_0ElementType());
				}
				lv_ctx_1_0=ruleContainmentRef2
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleContainmentRef1
entryRuleContainmentRef1:
	{ markComposite(elementTypeProvider.getContainmentRef1ElementType()); }
	ruleContainmentRef1
	{ doneComposite(); }
	EOF;

// Rule ContainmentRef1
ruleContainmentRef1:
	(
		{
			markLeaf();
		}
		otherlv_0='kw1'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getContainmentRef1_Kw1Keyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_val1_1_0=RULE_ID
				{
					doneLeaf(lv_val1_1_0, elementTypeProvider.getContainmentRef1_Val1IDTerminalRuleCall_1_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleContainmentRef2
entryRuleContainmentRef2:
	{ markComposite(elementTypeProvider.getContainmentRef2ElementType()); }
	ruleContainmentRef2
	{ doneComposite(); }
	EOF;

// Rule ContainmentRef2
ruleContainmentRef2:
	(
		{
			markLeaf();
		}
		otherlv_0='kw2'
		{
			doneLeaf(otherlv_0, elementTypeProvider.getContainmentRef2_Kw2Keyword_0ElementType());
		}
		(
			(
				{
					markLeaf();
				}
				lv_val2_1_0=RULE_ID
				{
					doneLeaf(lv_val2_1_0, elementTypeProvider.getContainmentRef2_Val2IDTerminalRuleCall_1_0ElementType());
				}
			)
		)
	)
;

//Entry rule entryRuleCrossRef
entryRuleCrossRef:
	{ markComposite(elementTypeProvider.getCrossRefElementType()); }
	ruleCrossRef
	{ doneComposite(); }
	EOF;

// Rule CrossRef
ruleCrossRef:
	(
		(
			(
				(
					{
						markLeaf();
					}
					lv_name_0_1=RULE_TERMINAL1
					{
						doneLeaf(lv_name_0_1, elementTypeProvider.getCrossRef_NameTerminal1TerminalRuleCall_0_0_0ElementType());
					}
					    |
					{
						markLeaf();
					}
					lv_name_0_2=RULE_TERMINAL2
					{
						doneLeaf(lv_name_0_2, elementTypeProvider.getCrossRef_NameTerminal2TerminalRuleCall_0_0_1ElementType());
					}
				)
			)
		)
		(
			(
				(
					{
						markLeaf();
					}
					otherlv_1=RULE_TERMINAL1
					{
						doneLeaf(otherlv_1, elementTypeProvider.getCrossRef_CrossRefCrossRefCrossReference_1_0_0ElementType());
					}
				)
			)
			    |
			(
				(
					{
						markLeaf();
					}
					otherlv_2=RULE_TERMINAL2
					{
						doneLeaf(otherlv_2, elementTypeProvider.getCrossRef_CrossRefCrossRefCrossReference_1_1_0ElementType());
					}
				)
			)
		)
	)
;

// Rule Enum1
ruleEnum1:
	(
		{
			markLeaf();
		}
		enumLiteral_0='lit1'
		{
			doneLeaf(enumLiteral_0, elementTypeProvider.getEnum1_Lit1EnumLiteralDeclarationElementType());
		}
	)
;

// Rule Enum2
ruleEnum2:
	(
		{
			markLeaf();
		}
		enumLiteral_0='lit2'
		{
			doneLeaf(enumLiteral_0, elementTypeProvider.getEnum2_Lit2EnumLiteralDeclarationElementType());
		}
	)
;

RULE_TERMINAL1 : '%' ('A'..'Z')*;

RULE_TERMINAL2 : '%' ('a'..'z')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
