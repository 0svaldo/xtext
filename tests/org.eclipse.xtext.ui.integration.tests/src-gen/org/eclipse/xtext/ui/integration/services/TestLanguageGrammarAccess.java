/*
* generated by Xtext
*/

package org.eclipse.xtext.ui.integration.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class TestLanguageGrammarAccess implements IGrammarAccess {
	
	
	public class FileElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "File");
		private final Assignment cAssignmentStuff = (Assignment)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallStuff = (RuleCall)cAssignmentStuff.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Assignment eleAssignmentStuff() { return cAssignmentStuff; }

		// not supported
		public RuleCall ele0ParserRuleCallStuff() { return c0ParserRuleCallStuff; }
	}

	public class StuffElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Stuff");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordStuff = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentName = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentName.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordStuff() { return c0KeywordStuff; }

		// not supported
		public Assignment ele1AssignmentName() { return c1AssignmentName; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }
	}
	
	private FileElements pFile;
	private StuffElements pStuff;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess terminalsGrammarAccess;

	@Inject
	public TestLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess terminalsGrammarAccess) {
		this.grammarProvider = grammarProvider;
		this.terminalsGrammarAccess = terminalsGrammarAccess;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return terminalsGrammarAccess;
	}

	
	// not supported
	public FileElements prFile() {
		return (pFile != null) ? pFile : (pFile = new FileElements());
	} 

	// not supported
	public StuffElements prStuff() {
		return (pStuff != null) ? pStuff : (pStuff = new StuffElements());
	} 

	// not supported
	public TerminalRule trID() {
		return terminalsGrammarAccess.trID();
	} 

	// not supported
	public TerminalRule trINT() {
		return terminalsGrammarAccess.trINT();
	} 

	// not supported
	public TerminalRule trSTRING() {
		return terminalsGrammarAccess.trSTRING();
	} 

	// not supported
	public TerminalRule trML_COMMENT() {
		return terminalsGrammarAccess.trML_COMMENT();
	} 

	// not supported
	public TerminalRule trSL_COMMENT() {
		return terminalsGrammarAccess.trSL_COMMENT();
	} 

	// not supported
	public TerminalRule trWS() {
		return terminalsGrammarAccess.trWS();
	} 

	// not supported
	public TerminalRule trANY_OTHER() {
		return terminalsGrammarAccess.trANY_OTHER();
	} 
}
