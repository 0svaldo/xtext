/*
* generated by Xtext
*/
package org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.ui.common.editor.contentassist.services.Bug291022TestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.Bug291022TestLanguageRootModelConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.Bug291022TestLanguageModelElementConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.Bug291022TestLanguageModelAttributeConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.Bug291022TestLanguageAttributeConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class Bug291022TestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private Bug291022TestLanguageRootModelConsumer rootModelConsumer;
    private Bug291022TestLanguageModelElementConsumer modelElementConsumer;
    private Bug291022TestLanguageModelAttributeConsumer modelAttributeConsumer;
    private Bug291022TestLanguageAttributeConsumer attributeConsumer;

	private Bug291022TestLanguageGrammarAccess grammarAccess;

	public Bug291022TestLanguageParserConfiguration(IInternalParserConfiguration configuration, Bug291022TestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public Bug291022TestLanguageRootModelConsumer getRootConsumer() {
		return rootModelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		rootModelConsumer = new Bug291022TestLanguageRootModelConsumer(
    		this, null
    	);
		modelElementConsumer = new Bug291022TestLanguageModelElementConsumer(
    		this, null
    	);
		modelAttributeConsumer = new Bug291022TestLanguageModelAttributeConsumer(
    		this, null
    	);
		attributeConsumer = new Bug291022TestLanguageAttributeConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getRootModelConsumer().setRule(grammarAccess.getRootModelAccess());
		getModelElementConsumer().setRule(grammarAccess.getModelElementAccess());
		getModelAttributeConsumer().setRule(grammarAccess.getModelAttributeAccess());
		getAttributeConsumer().setRule(grammarAccess.getAttributeAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getRootModelConsumer().setIdConsumer(getIdConsumer());
		getRootModelConsumer().setModelAttributeConsumer(getModelAttributeConsumer());

		getModelElementConsumer().setIdConsumer(getIdConsumer());
		getModelElementConsumer().setModelAttributeConsumer(getModelAttributeConsumer());

		getModelAttributeConsumer().setAttributeConsumer(getAttributeConsumer());
		getModelAttributeConsumer().setModelElementConsumer(getModelElementConsumer());

		getAttributeConsumer().setIdConsumer(getIdConsumer());
		getAttributeConsumer().setStringConsumer(getStringConsumer());

		getRootModelConsumer().setKeyword$11$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.keyword$13$Delimiter);
		getRootModelConsumer().setKeyword$14$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.keyword$13$Delimiter);
		getRootModelConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.ruleCall$7$Delimiter);
		getRootModelConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.ruleCall$7$Delimiter);
		getModelElementConsumer().setKeyword$7$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.keyword$13$Delimiter);
		getModelElementConsumer().setKeyword$15$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.keyword$13$Delimiter);
		getModelElementConsumer().setKeyword$17$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.keyword$13$Delimiter);
		getModelElementConsumer().setKeyword$20$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.keyword$13$Delimiter);
		getModelElementConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.ruleCall$7$Delimiter);
		getModelElementConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.ruleCall$7$Delimiter);
		getModelElementConsumer().setRuleCall$13$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.ruleCall$7$Delimiter);
		getAttributeConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.keyword$13$Delimiter);
		getAttributeConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.ruleCall$7$Delimiter);
		getAttributeConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug291022TestLanguageDelimiters.ruleCall$7$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public Bug291022TestLanguageRootModelConsumer getRootModelConsumer() {
    	return rootModelConsumer;
    }

    public Bug291022TestLanguageModelElementConsumer getModelElementConsumer() {
    	return modelElementConsumer;
    }

    public Bug291022TestLanguageModelAttributeConsumer getModelAttributeConsumer() {
    	return modelAttributeConsumer;
    }

    public Bug291022TestLanguageAttributeConsumer getAttributeConsumer() {
    	return attributeConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
