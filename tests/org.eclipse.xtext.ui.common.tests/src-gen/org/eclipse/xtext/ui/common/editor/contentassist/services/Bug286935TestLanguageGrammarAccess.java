/*
* generated by Xtext
*/

package org.eclipse.xtext.ui.common.editor.contentassist.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class Bug286935TestLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_0_0 = (Keyword)cIsInitialAssignment_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_1_0 = (Keyword)cIsFinalAssignment_0_1.eContents().get(0);
		private final Assignment cStateKindAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final RuleCall cStateKindStateTypeEnumRuleCall_0_2_0 = (RuleCall)cStateKindAssignment_0_2.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cAlternatives_0.eContents().get(3);
		private final Assignment cIsInitialAssignment_0_3_0 = (Assignment)cGroup_0_3.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_3_0_0 = (Keyword)cIsInitialAssignment_0_3_0.eContents().get(0);
		private final Assignment cStateKindAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cStateKindStateTypeEnumRuleCall_0_3_1_0 = (RuleCall)cStateKindAssignment_0_3_1.eContents().get(0);
		private final Group cGroup_0_4 = (Group)cAlternatives_0.eContents().get(4);
		private final Assignment cIsInitialAssignment_0_4_0 = (Assignment)cGroup_0_4.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_4_0_0 = (Keyword)cIsInitialAssignment_0_4_0.eContents().get(0);
		private final Assignment cStateKindAssignment_0_4_1 = (Assignment)cGroup_0_4.eContents().get(1);
		private final RuleCall cStateKindStateTypeEnumRuleCall_0_4_1_0 = (RuleCall)cStateKindAssignment_0_4_1.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_4_2 = (Assignment)cGroup_0_4.eContents().get(2);
		private final Keyword cIsFinalFinalKeyword_0_4_2_0 = (Keyword)cIsFinalAssignment_0_4_2.eContents().get(0);
		private final Keyword cStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStateNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStateNameIDTerminalRuleCall_2_0 = (RuleCall)cStateNameAssignment_2.eContents().get(0);
		private final Assignment cLabelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLabelSTRINGTerminalRuleCall_3_0 = (RuleCall)cLabelAssignment_3.eContents().get(0);
		
		//State:
		//  (isInitial?="init"|isFinal?="final"|stateKind=StateType|isInitial?="init"
		//  stateKind=StateType|isInitial?="init" stateKind=StateType isFinal?="final")?
		//  "state"? stateName=ID? label=STRING?;
		public ParserRule getRule() { return rule; }

		//(isInitial?="init"|isFinal?="final"|stateKind=StateType|isInitial?="init"
		//stateKind=StateType|isInitial?="init" stateKind=StateType isFinal?="final")?
		//"state"? stateName=ID? label=STRING?
		public Group getGroup() { return cGroup; }

		//(isInitial?="init"|isFinal?="final"|stateKind=StateType|isInitial?="init"
		//stateKind=StateType|isInitial?="init" stateKind=StateType isFinal?="final")?
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_0() { return cIsInitialAssignment_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_0_0() { return cIsInitialInitKeyword_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_1() { return cIsFinalAssignment_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_1_0() { return cIsFinalFinalKeyword_0_1_0; }

		//stateKind=StateType
		public Assignment getStateKindAssignment_0_2() { return cStateKindAssignment_0_2; }

		//StateType
		public RuleCall getStateKindStateTypeEnumRuleCall_0_2_0() { return cStateKindStateTypeEnumRuleCall_0_2_0; }

		//isInitial?="init" stateKind=StateType
		public Group getGroup_0_3() { return cGroup_0_3; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_3_0() { return cIsInitialAssignment_0_3_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_3_0_0() { return cIsInitialInitKeyword_0_3_0_0; }

		//stateKind=StateType
		public Assignment getStateKindAssignment_0_3_1() { return cStateKindAssignment_0_3_1; }

		//StateType
		public RuleCall getStateKindStateTypeEnumRuleCall_0_3_1_0() { return cStateKindStateTypeEnumRuleCall_0_3_1_0; }

		//isInitial?="init" stateKind=StateType isFinal?="final"
		public Group getGroup_0_4() { return cGroup_0_4; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_4_0() { return cIsInitialAssignment_0_4_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_4_0_0() { return cIsInitialInitKeyword_0_4_0_0; }

		//stateKind=StateType
		public Assignment getStateKindAssignment_0_4_1() { return cStateKindAssignment_0_4_1; }

		//StateType
		public RuleCall getStateKindStateTypeEnumRuleCall_0_4_1_0() { return cStateKindStateTypeEnumRuleCall_0_4_1_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_4_2() { return cIsFinalAssignment_0_4_2; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_4_2_0() { return cIsFinalFinalKeyword_0_4_2_0; }

		//"state"?
		public Keyword getStateKeyword_1() { return cStateKeyword_1; }

		//stateName=ID?
		public Assignment getStateNameAssignment_2() { return cStateNameAssignment_2; }

		//ID
		public RuleCall getStateNameIDTerminalRuleCall_2_0() { return cStateNameIDTerminalRuleCall_2_0; }

		//label=STRING?
		public Assignment getLabelAssignment_3() { return cLabelAssignment_3; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_3_0() { return cLabelSTRINGTerminalRuleCall_3_0; }
	}
	
	
	public class StateTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "StateType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNORMALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNORMALNORMALKeyword_0_0 = (Keyword)cNORMALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPSEUDOEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPSEUDOCondKeyword_1_0 = (Keyword)cPSEUDOEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cREFERENCEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cREFERENCEReferenceKeyword_2_0 = (Keyword)cREFERENCEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTEXTUALEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTEXTUALTextualKeyword_3_0 = (Keyword)cTEXTUALEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum StateType:
		//  NORMAL | PSEUDO="cond" | REFERENCE="reference" | TEXTUAL="textual";
		public EnumRule getRule() { return rule; }

		//NORMAL | PSEUDO="cond" | REFERENCE="reference" | TEXTUAL="textual"
		public Alternatives getAlternatives() { return cAlternatives; }

		//NORMAL
		public EnumLiteralDeclaration getNORMALEnumLiteralDeclaration_0() { return cNORMALEnumLiteralDeclaration_0; }

		//"NORMAL"
		public Keyword getNORMALNORMALKeyword_0_0() { return cNORMALNORMALKeyword_0_0; }

		//PSEUDO="cond"
		public EnumLiteralDeclaration getPSEUDOEnumLiteralDeclaration_1() { return cPSEUDOEnumLiteralDeclaration_1; }

		//"cond"
		public Keyword getPSEUDOCondKeyword_1_0() { return cPSEUDOCondKeyword_1_0; }

		//REFERENCE="reference"
		public EnumLiteralDeclaration getREFERENCEEnumLiteralDeclaration_2() { return cREFERENCEEnumLiteralDeclaration_2; }

		//"reference"
		public Keyword getREFERENCEReferenceKeyword_2_0() { return cREFERENCEReferenceKeyword_2_0; }

		//TEXTUAL="textual"
		public EnumLiteralDeclaration getTEXTUALEnumLiteralDeclaration_3() { return cTEXTUALEnumLiteralDeclaration_3; }

		//"textual"
		public Keyword getTEXTUALTextualKeyword_3_0() { return cTEXTUALTextualKeyword_3_0; }
	}
	
	private StateElements pState;
	private StateTypeElements unknownRuleStateType;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public Bug286935TestLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//State:
	//  (isInitial?="init"|isFinal?="final"|stateKind=StateType|isInitial?="init"
	//  stateKind=StateType|isInitial?="init" stateKind=StateType isFinal?="final")?
	//  "state"? stateName=ID? label=STRING?;
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//enum StateType:
	//  NORMAL | PSEUDO="cond" | REFERENCE="reference" | TEXTUAL="textual";
	public StateTypeElements getStateTypeAccess() {
		return (unknownRuleStateType != null) ? unknownRuleStateType : (unknownRuleStateType = new StateTypeElements());
	}
	
	public EnumRule getStateTypeRule() {
		return getStateTypeAccess().getRule();
	}

	//terminal ID:
	//  "^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//  "0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//  "\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" |
	//  "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//  "/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//  "//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//  (" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//  .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
