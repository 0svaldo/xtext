/*
* generated by Xtext
*/
package org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.ui.common.editor.contentassist.services.Bug286935TestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.Bug286935TestLanguageStateConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.Bug286935TestLanguageStateTypeConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class Bug286935TestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private Bug286935TestLanguageStateConsumer stateConsumer;
    private Bug286935TestLanguageStateTypeConsumer stateTypeConsumer;

	private Bug286935TestLanguageGrammarAccess grammarAccess;

	public Bug286935TestLanguageParserConfiguration(IInternalParserConfiguration configuration, Bug286935TestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public Bug286935TestLanguageStateConsumer getRootConsumer() {
		return stateConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		stateConsumer = new Bug286935TestLanguageStateConsumer(
    		this, null
    	);
		stateTypeConsumer = new Bug286935TestLanguageStateTypeConsumer(this, null);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getStateConsumer().setRule(grammarAccess.getStateAccess());
		getStateTypeConsumer().setRule(grammarAccess.getStateTypeAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getStateConsumer().setIdConsumer(getIdConsumer());
		getStateConsumer().setStateTypeConsumer(getStateTypeConsumer());
		getStateConsumer().setStringConsumer(getStringConsumer());

		getStateConsumer().setKeyword$11$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug286935TestLanguageDelimiters.keyword$6$Delimiter);
		getStateConsumer().setKeyword$16$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug286935TestLanguageDelimiters.keyword$6$Delimiter);
		getStateConsumer().setKeyword$20$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug286935TestLanguageDelimiters.keyword$6$Delimiter);
		getStateConsumer().setKeyword$21$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug286935TestLanguageDelimiters.keyword$6$Delimiter);
		getStateConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug286935TestLanguageDelimiters.keyword$6$Delimiter);
		getStateConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug286935TestLanguageDelimiters.keyword$6$Delimiter);
		getStateConsumer().setRuleCall$23$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug286935TestLanguageDelimiters.ruleCall$25$Delimiter);
		getStateConsumer().setRuleCall$25$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.Bug286935TestLanguageDelimiters.ruleCall$27$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public Bug286935TestLanguageStateConsumer getStateConsumer() {
    	return stateConsumer;
    }

    public Bug286935TestLanguageStateTypeConsumer getStateTypeConsumer() {
    	return stateTypeConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
