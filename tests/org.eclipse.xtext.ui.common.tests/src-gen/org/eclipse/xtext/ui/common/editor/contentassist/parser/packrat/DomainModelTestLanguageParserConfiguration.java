/*
* generated by Xtext
*/
package org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.ui.common.editor.contentassist.services.DomainModelTestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.DomainModelTestLanguageModelConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.DomainModelTestLanguageImportConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.DomainModelTestLanguageTypeConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.DomainModelTestLanguageDataTypeConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.DomainModelTestLanguageClassConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.DomainModelTestLanguagePropertyConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.DomainModelTestLanguageAttributeConsumer;
import org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.consumers.DomainModelTestLanguageReferenceConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class DomainModelTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private DomainModelTestLanguageModelConsumer modelConsumer;
    private DomainModelTestLanguageImportConsumer importConsumer;
    private DomainModelTestLanguageTypeConsumer typeConsumer;
    private DomainModelTestLanguageDataTypeConsumer dataTypeConsumer;
    private DomainModelTestLanguageClassConsumer classConsumer;
    private DomainModelTestLanguagePropertyConsumer propertyConsumer;
    private DomainModelTestLanguageAttributeConsumer attributeConsumer;
    private DomainModelTestLanguageReferenceConsumer referenceConsumer;

	private DomainModelTestLanguageGrammarAccess grammarAccess;

	public DomainModelTestLanguageParserConfiguration(IInternalParserConfiguration configuration, DomainModelTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public DomainModelTestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		modelConsumer = new DomainModelTestLanguageModelConsumer(
    		this, null
    	);
		importConsumer = new DomainModelTestLanguageImportConsumer(
    		this, null
    	);
		typeConsumer = new DomainModelTestLanguageTypeConsumer(
    		this, null
    	);
		dataTypeConsumer = new DomainModelTestLanguageDataTypeConsumer(
    		this, null
    	);
		classConsumer = new DomainModelTestLanguageClassConsumer(
    		this, null
    	);
		propertyConsumer = new DomainModelTestLanguagePropertyConsumer(
    		this, null
    	);
		attributeConsumer = new DomainModelTestLanguageAttributeConsumer(
    		this, null
    	);
		referenceConsumer = new DomainModelTestLanguageReferenceConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getImportConsumer().setRule(grammarAccess.getImportAccess());
		getTypeConsumer().setRule(grammarAccess.getTypeAccess());
		getDataTypeConsumer().setRule(grammarAccess.getDataTypeAccess());
		getClassConsumer().setRule(grammarAccess.getClassAccess());
		getPropertyConsumer().setRule(grammarAccess.getPropertyAccess());
		getAttributeConsumer().setRule(grammarAccess.getAttributeAccess());
		getReferenceConsumer().setRule(grammarAccess.getReferenceAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setImportConsumer(getImportConsumer());
		getModelConsumer().setTypeConsumer(getTypeConsumer());

		getImportConsumer().setStringConsumer(getStringConsumer());

		getTypeConsumer().setClassConsumer(getClassConsumer());
		getTypeConsumer().setDataTypeConsumer(getDataTypeConsumer());

		getDataTypeConsumer().setIdConsumer(getIdConsumer());

		getClassConsumer().setClassConsumer(getClassConsumer());
		getClassConsumer().setIdConsumer(getIdConsumer());
		getClassConsumer().setPropertyConsumer(getPropertyConsumer());

		getPropertyConsumer().setAttributeConsumer(getAttributeConsumer());
		getPropertyConsumer().setReferenceConsumer(getReferenceConsumer());

		getAttributeConsumer().setIdConsumer(getIdConsumer());

		getReferenceConsumer().setIdConsumer(getIdConsumer());

		getImportConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$11$Delimiter);
		getImportConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.ruleCall$13$Delimiter);
		getDataTypeConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$11$Delimiter);
		getDataTypeConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$25$Delimiter);
		getDataTypeConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.ruleCall$24$Delimiter);
		getClassConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$11$Delimiter);
		getClassConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$11$Delimiter);
		getClassConsumer().setKeyword$11$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$25$Delimiter);
		getClassConsumer().setKeyword$16$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$25$Delimiter);
		getClassConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.ruleCall$24$Delimiter);
		getClassConsumer().setRuleCall$10$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.ruleCall$24$Delimiter);
		getAttributeConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$11$Delimiter);
		getAttributeConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$25$Delimiter);
		getAttributeConsumer().setKeyword$10$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$25$Delimiter);
		getAttributeConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.ruleCall$24$Delimiter);
		getAttributeConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.ruleCall$24$Delimiter);
		getReferenceConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$11$Delimiter);
		getReferenceConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$25$Delimiter);
		getReferenceConsumer().setKeyword$10$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.keyword$25$Delimiter);
		getReferenceConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.ruleCall$24$Delimiter);
		getReferenceConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.ui.common.editor.contentassist.parser.packrat.DomainModelTestLanguageDelimiters.ruleCall$24$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public DomainModelTestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public DomainModelTestLanguageImportConsumer getImportConsumer() {
    	return importConsumer;
    }

    public DomainModelTestLanguageTypeConsumer getTypeConsumer() {
    	return typeConsumer;
    }

    public DomainModelTestLanguageDataTypeConsumer getDataTypeConsumer() {
    	return dataTypeConsumer;
    }

    public DomainModelTestLanguageClassConsumer getClassConsumer() {
    	return classConsumer;
    }

    public DomainModelTestLanguagePropertyConsumer getPropertyConsumer() {
    	return propertyConsumer;
    }

    public DomainModelTestLanguageAttributeConsumer getAttributeConsumer() {
    	return attributeConsumer;
    }

    public DomainModelTestLanguageReferenceConsumer getReferenceConsumer() {
    	return referenceConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
