/*
* generated by Xtext
*/

package org.eclipse.xtext.testlanguages.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class TreeTestLanguageGrammarAccess implements IGrammarAccess {
	
	
	public class ModelElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Assignment cAssignmentChildren = (Assignment)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallNode = (RuleCall)cAssignmentChildren.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Assignment eleAssignmentChildren() { return cAssignmentChildren; }

		// not supported
		public RuleCall ele0ParserRuleCallNode() { return c0ParserRuleCallNode; }
	}

	public class NodeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Node");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentName = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00TerminalRuleCallID = (RuleCall)c0AssignmentName.eContents().get(0);
		private final Keyword c1KeywordLeftParenthesis = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentAttrib = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallSTRING = (RuleCall)c2AssignmentAttrib.eContents().get(0);
		private final Keyword c3KeywordRightParenthesis = (Keyword)cGroup.eContents().get(3);
		private final Keyword c4KeywordLeftCurlyBracket = (Keyword)cGroup.eContents().get(4);
		private final Assignment c5AssignmentChildren = (Assignment)cGroup.eContents().get(5);
		private final RuleCall c50ParserRuleCallNode = (RuleCall)c5AssignmentChildren.eContents().get(0);
		private final Keyword c6KeywordRightCurlyBracketSemicolon = (Keyword)cGroup.eContents().get(6);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentName() { return c0AssignmentName; }

		// not supported
		public RuleCall ele00TerminalRuleCallID() { return c00TerminalRuleCallID; }

		// not supported
		public Keyword ele1KeywordLeftParenthesis() { return c1KeywordLeftParenthesis; }

		// not supported
		public Assignment ele2AssignmentAttrib() { return c2AssignmentAttrib; }

		// not supported
		public RuleCall ele20TerminalRuleCallSTRING() { return c20TerminalRuleCallSTRING; }

		// not supported
		public Keyword ele3KeywordRightParenthesis() { return c3KeywordRightParenthesis; }

		// not supported
		public Keyword ele4KeywordLeftCurlyBracket() { return c4KeywordLeftCurlyBracket; }

		// not supported
		public Assignment ele5AssignmentChildren() { return c5AssignmentChildren; }

		// not supported
		public RuleCall ele50ParserRuleCallNode() { return c50ParserRuleCallNode; }

		// not supported
		public Keyword ele6KeywordRightCurlyBracketSemicolon() { return c6KeywordRightCurlyBracketSemicolon; }
	}
	
	private ModelElements pModel;
	private NodeElements pNode;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess terminalsGrammarAccess;

	@Inject
	public TreeTestLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess terminalsGrammarAccess) {
		this.grammarProvider = grammarProvider;
		this.terminalsGrammarAccess = terminalsGrammarAccess;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return terminalsGrammarAccess;
	}

	
	// not supported
	public ModelElements prModel() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	} 

	// not supported
	public NodeElements prNode() {
		return (pNode != null) ? pNode : (pNode = new NodeElements());
	} 

	// not supported
	public TerminalRule trID() {
		return terminalsGrammarAccess.trID();
	} 

	// not supported
	public TerminalRule trINT() {
		return terminalsGrammarAccess.trINT();
	} 

	// not supported
	public TerminalRule trSTRING() {
		return terminalsGrammarAccess.trSTRING();
	} 

	// not supported
	public TerminalRule trML_COMMENT() {
		return terminalsGrammarAccess.trML_COMMENT();
	} 

	// not supported
	public TerminalRule trSL_COMMENT() {
		return terminalsGrammarAccess.trSL_COMMENT();
	} 

	// not supported
	public TerminalRule trWS() {
		return terminalsGrammarAccess.trWS();
	} 

	// not supported
	public TerminalRule trANY_OTHER() {
		return terminalsGrammarAccess.trANY_OTHER();
	} 
}
