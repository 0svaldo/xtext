/*
Generated with Xtext
*/

import xtext;

import org::eclipse::emf::ecore;
import org::eclipse::jface::text::contentassist;
import org::eclipse::xtext::crossref;
import org::eclipse::xtext::ui::common::editor::contentassist;
import org::eclipse::xtext::ui::common::xtend::contentassist;

import TreeTestLanguage;

extension org::eclipse::xtext::ui::common::xtend::contentassist::ContentAssist reexport;
extension org::eclipse::xtend::util::stdlib::io;

/**
 * Represents a generated, default implementation of interface {@link IProposalProvider}.
 * 
 * @see org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider
 */

	 
List[ICompletionProposal] completeModelChildren(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeModelChildren feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeNodeName(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeNodeName feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "NodeName", contentAssistContext) };
	 
List[ICompletionProposal] completeNodeAttrib(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeNodeAttrib feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "\"NodeAttrib\"", contentAssistContext) };
	 
List[ICompletionProposal] completeNodeChildren(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeNodeChildren feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 	  
List[ICompletionProposal] complete(RuleCall ruleCall, IContentAssistContext contentAssistContext) :
	{};

/*
	// TODO 
    @Override
	protected String getDefaultImageFilePath() {
		return "icons/editor.gif";
	}

	@Override
	protected String getPluginId() {
		return UI_PLUGIN_ID;
	}
*/
