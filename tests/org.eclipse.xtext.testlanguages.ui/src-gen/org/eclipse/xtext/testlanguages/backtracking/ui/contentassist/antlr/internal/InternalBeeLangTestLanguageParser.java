package org.eclipse.xtext.testlanguages.backtracking.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.xtext.testlanguages.backtracking.services.BeeLangTestLanguageGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
interface InternalBeeLangTestLanguageParserSignatures {
     void entryRuleModel() throws RecognitionException;
     void ruleModel() throws RecognitionException;
     void entryRuleUnit() throws RecognitionException;
     void ruleUnit() throws RecognitionException;
     void entryRuleProvidedCapability() throws RecognitionException;
     void ruleProvidedCapability() throws RecognitionException;
     void entryRuleAliasedRequiredCapability() throws RecognitionException;
     void ruleAliasedRequiredCapability() throws RecognitionException;
     void entryRuleRequiredCapability() throws RecognitionException;
     void ruleRequiredCapability() throws RecognitionException;
     void entryRulePath() throws RecognitionException;
     void rulePath() throws RecognitionException;
     void entryRuleParameterList() throws RecognitionException;
     void ruleParameterList() throws RecognitionException;
     void entryRuleFirstParameter() throws RecognitionException;
     void ruleFirstParameter() throws RecognitionException;
     void entryRuleParameter() throws RecognitionException;
     void ruleParameter() throws RecognitionException;
     void entryRuleClosureParameter() throws RecognitionException;
     void ruleClosureParameter() throws RecognitionException;
     void entryRuleParameterDeclaration() throws RecognitionException;
     void ruleParameterDeclaration() throws RecognitionException;
     void entryRuleFunction() throws RecognitionException;
     void ruleFunction() throws RecognitionException;
     void entryRuleGuardExpression() throws RecognitionException;
     void ruleGuardExpression() throws RecognitionException;
     void entryRuleAssignmentOperator() throws RecognitionException;
     void ruleAssignmentOperator() throws RecognitionException;
     void entryRuleRelationalOperator() throws RecognitionException;
     void ruleRelationalOperator() throws RecognitionException;
     void entryRuleTopLevelExpression() throws RecognitionException;
     void ruleTopLevelExpression() throws RecognitionException;
     void entryRuleExpression() throws RecognitionException;
     void ruleExpression() throws RecognitionException;
     void entryRuleAssignmentExpression() throws RecognitionException;
     void ruleAssignmentExpression() throws RecognitionException;
     void entryRuleVarDeclaration() throws RecognitionException;
     void ruleVarDeclaration() throws RecognitionException;
     void entryRuleValDeclaration() throws RecognitionException;
     void ruleValDeclaration() throws RecognitionException;
     void entryRuleTypeRef() throws RecognitionException;
     void ruleTypeRef() throws RecognitionException;
     void entryRuleSimpleTypeRef() throws RecognitionException;
     void ruleSimpleTypeRef() throws RecognitionException;
     void entryRuleClosureTypeRef() throws RecognitionException;
     void ruleClosureTypeRef() throws RecognitionException;
     void entryRuleCachedExpression() throws RecognitionException;
     void ruleCachedExpression() throws RecognitionException;
     void entryRuleOrExpression() throws RecognitionException;
     void ruleOrExpression() throws RecognitionException;
     void entryRuleAndExpression() throws RecognitionException;
     void ruleAndExpression() throws RecognitionException;
     void entryRuleRelationalExpression() throws RecognitionException;
     void ruleRelationalExpression() throws RecognitionException;
     void entryRuleAdditiveExpression() throws RecognitionException;
     void ruleAdditiveExpression() throws RecognitionException;
     void entryRuleMultiplicativeExpression() throws RecognitionException;
     void ruleMultiplicativeExpression() throws RecognitionException;
     void entryRuleSetExpression() throws RecognitionException;
     void ruleSetExpression() throws RecognitionException;
     void entryRuleUnaryOrInfixExpression() throws RecognitionException;
     void ruleUnaryOrInfixExpression() throws RecognitionException;
     void entryRuleUnaryExpression() throws RecognitionException;
     void ruleUnaryExpression() throws RecognitionException;
     void entryRulePreopExpression() throws RecognitionException;
     void rulePreopExpression() throws RecognitionException;
     void entryRulePostopExpression() throws RecognitionException;
     void rulePostopExpression() throws RecognitionException;
     void entryRuleInfixExpression() throws RecognitionException;
     void ruleInfixExpression() throws RecognitionException;
     void entryRuleCallExpression() throws RecognitionException;
     void ruleCallExpression() throws RecognitionException;
     void entryRulePrimaryExpression() throws RecognitionException;
     void rulePrimaryExpression() throws RecognitionException;
     void entryRuleWithExpression() throws RecognitionException;
     void ruleWithExpression() throws RecognitionException;
     void entryRuleWithContextExpression() throws RecognitionException;
     void ruleWithContextExpression() throws RecognitionException;
     void entryRuleBlockExpression() throws RecognitionException;
     void ruleBlockExpression() throws RecognitionException;
     void entryRuleValue() throws RecognitionException;
     void ruleValue() throws RecognitionException;
     void entryRuleKeywordVariables() throws RecognitionException;
     void ruleKeywordVariables() throws RecognitionException;
     void entryRuleFeatureCall() throws RecognitionException;
     void ruleFeatureCall() throws RecognitionException;
     void entryRuleOperationCall() throws RecognitionException;
     void ruleOperationCall() throws RecognitionException;
     void entryRuleConstructorCallExpression() throws RecognitionException;
     void ruleConstructorCallExpression() throws RecognitionException;
     void entryRuleInitializationBlockExpression() throws RecognitionException;
     void ruleInitializationBlockExpression() throws RecognitionException;
     void entryRuleInitializationExpression() throws RecognitionException;
     void ruleInitializationExpression() throws RecognitionException;
     void entryRuleFeatureOfThis() throws RecognitionException;
     void ruleFeatureOfThis() throws RecognitionException;
     void entryRuleLiteral() throws RecognitionException;
     void ruleLiteral() throws RecognitionException;
     void entryRuleLiteralFunction() throws RecognitionException;
     void ruleLiteralFunction() throws RecognitionException;
     void entryRuleClosureExpression() throws RecognitionException;
     void ruleClosureExpression() throws RecognitionException;
     void entryRuleOneOrManyExpressions() throws RecognitionException;
     void ruleOneOrManyExpressions() throws RecognitionException;
     void entryRuleBlockExpressionWithoutBrackets() throws RecognitionException;
     void ruleBlockExpressionWithoutBrackets() throws RecognitionException;
     void entryRuleValueLiteral() throws RecognitionException;
     void ruleValueLiteral() throws RecognitionException;
     void entryRuleParanthesizedExpression() throws RecognitionException;
     void ruleParanthesizedExpression() throws RecognitionException;
     void entryRuleQID() throws RecognitionException;
     void ruleQID() throws RecognitionException;
     void rule__Model__Alternatives() throws RecognitionException;
     void rule__ProvidedCapability__Alternatives_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Alternatives_0() throws RecognitionException;
     void rule__RequiredCapability__Alternatives_1() throws RecognitionException;
     void rule__Path__Alternatives() throws RecognitionException;
     void rule__FirstParameter__Alternatives() throws RecognitionException;
     void rule__Function__Alternatives_6_1() throws RecognitionException;
     void rule__Function__Alternatives_8() throws RecognitionException;
     void rule__GuardExpression__Alternatives() throws RecognitionException;
     void rule__AssignmentOperator__Alternatives() throws RecognitionException;
     void rule__RelationalOperator__Alternatives() throws RecognitionException;
     void rule__TopLevelExpression__Alternatives() throws RecognitionException;
     void rule__VarDeclaration__Alternatives_2_0() throws RecognitionException;
     void rule__TypeRef__Alternatives() throws RecognitionException;
     void rule__ClosureTypeRef__Alternatives_1() throws RecognitionException;
     void rule__CachedExpression__Alternatives() throws RecognitionException;
     void rule__AdditiveExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__UnaryOrInfixExpression__Alternatives() throws RecognitionException;
     void rule__UnaryExpression__FunctionNameAlternatives_1_0() throws RecognitionException;
     void rule__PreopExpression__FunctionNameAlternatives_1_0() throws RecognitionException;
     void rule__PostopExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__InfixExpression__Alternatives_1() throws RecognitionException;
     void rule__PrimaryExpression__Alternatives() throws RecognitionException;
     void rule__WithExpression__Alternatives_2() throws RecognitionException;
     void rule__KeywordVariables__NameAlternatives_1_0() throws RecognitionException;
     void rule__Literal__Alternatives() throws RecognitionException;
     void rule__ClosureExpression__Alternatives_2() throws RecognitionException;
     void rule__OneOrManyExpressions__Alternatives() throws RecognitionException;
     void rule__QID__Alternatives_1() throws RecognitionException;
     void rule__QID__Alternatives_2_2() throws RecognitionException;
     void rule__Unit__Group__0() throws RecognitionException;
     void rule__Unit__Group__0__Impl() throws RecognitionException;
     void rule__Unit__Group__1() throws RecognitionException;
     void rule__Unit__Group__1__Impl() throws RecognitionException;
     void rule__Unit__Group__2() throws RecognitionException;
     void rule__Unit__Group__2__Impl() throws RecognitionException;
     void rule__Unit__Group__3() throws RecognitionException;
     void rule__Unit__Group__3__Impl() throws RecognitionException;
     void rule__Unit__Group__4() throws RecognitionException;
     void rule__Unit__Group__4__Impl() throws RecognitionException;
     void rule__Unit__Group__5() throws RecognitionException;
     void rule__Unit__Group__5__Impl() throws RecognitionException;
     void rule__Unit__Group__6() throws RecognitionException;
     void rule__Unit__Group__6__Impl() throws RecognitionException;
     void rule__Unit__Group__7() throws RecognitionException;
     void rule__Unit__Group__7__Impl() throws RecognitionException;
     void rule__Unit__Group__8() throws RecognitionException;
     void rule__Unit__Group__8__Impl() throws RecognitionException;
     void rule__Unit__Group_4__0() throws RecognitionException;
     void rule__Unit__Group_4__0__Impl() throws RecognitionException;
     void rule__Unit__Group_4__1() throws RecognitionException;
     void rule__Unit__Group_4__1__Impl() throws RecognitionException;
     void rule__Unit__Group_5__0() throws RecognitionException;
     void rule__Unit__Group_5__0__Impl() throws RecognitionException;
     void rule__Unit__Group_5__1() throws RecognitionException;
     void rule__Unit__Group_5__1__Impl() throws RecognitionException;
     void rule__Unit__Group_5__2() throws RecognitionException;
     void rule__Unit__Group_5__2__Impl() throws RecognitionException;
     void rule__Unit__Group_5_2__0() throws RecognitionException;
     void rule__Unit__Group_5_2__0__Impl() throws RecognitionException;
     void rule__Unit__Group_5_2__1() throws RecognitionException;
     void rule__Unit__Group_5_2__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__0() throws RecognitionException;
     void rule__Unit__Group_7_0__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__1() throws RecognitionException;
     void rule__Unit__Group_7_0__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__2() throws RecognitionException;
     void rule__Unit__Group_7_0__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__3() throws RecognitionException;
     void rule__Unit__Group_7_0__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__0() throws RecognitionException;
     void rule__Unit__Group_7_1__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__1() throws RecognitionException;
     void rule__Unit__Group_7_1__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__2() throws RecognitionException;
     void rule__Unit__Group_7_1__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__3() throws RecognitionException;
     void rule__Unit__Group_7_1__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__0() throws RecognitionException;
     void rule__Unit__Group_7_2__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__1() throws RecognitionException;
     void rule__Unit__Group_7_2__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__2() throws RecognitionException;
     void rule__Unit__Group_7_2__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__3() throws RecognitionException;
     void rule__Unit__Group_7_2__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__0() throws RecognitionException;
     void rule__Unit__Group_7_3__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__1() throws RecognitionException;
     void rule__Unit__Group_7_3__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__2() throws RecognitionException;
     void rule__Unit__Group_7_3__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__3() throws RecognitionException;
     void rule__Unit__Group_7_3__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__0() throws RecognitionException;
     void rule__Unit__Group_7_4__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__1() throws RecognitionException;
     void rule__Unit__Group_7_4__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__2() throws RecognitionException;
     void rule__Unit__Group_7_4__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__3() throws RecognitionException;
     void rule__Unit__Group_7_4__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__4() throws RecognitionException;
     void rule__Unit__Group_7_4__4__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__0() throws RecognitionException;
     void rule__ProvidedCapability__Group__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__1() throws RecognitionException;
     void rule__ProvidedCapability__Group__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__2() throws RecognitionException;
     void rule__ProvidedCapability__Group__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__3__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__3__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__0() throws RecognitionException;
     void rule__RequiredCapability__Group__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__1() throws RecognitionException;
     void rule__RequiredCapability__Group__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__2() throws RecognitionException;
     void rule__RequiredCapability__Group__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__3() throws RecognitionException;
     void rule__RequiredCapability__Group__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException;
     void rule__Path__Group_1__0() throws RecognitionException;
     void rule__Path__Group_1__0__Impl() throws RecognitionException;
     void rule__Path__Group_1__1() throws RecognitionException;
     void rule__Path__Group_1__1__Impl() throws RecognitionException;
     void rule__Path__Group_1__2() throws RecognitionException;
     void rule__Path__Group_1__2__Impl() throws RecognitionException;
     void rule__Path__Group_1__3() throws RecognitionException;
     void rule__Path__Group_1__3__Impl() throws RecognitionException;
     void rule__Path__Group_1_2__0() throws RecognitionException;
     void rule__Path__Group_1_2__0__Impl() throws RecognitionException;
     void rule__Path__Group_1_2__1() throws RecognitionException;
     void rule__Path__Group_1_2__1__Impl() throws RecognitionException;
     void rule__ParameterList__Group__0() throws RecognitionException;
     void rule__ParameterList__Group__0__Impl() throws RecognitionException;
     void rule__ParameterList__Group__1() throws RecognitionException;
     void rule__ParameterList__Group__1__Impl() throws RecognitionException;
     void rule__ParameterList__Group_1__0() throws RecognitionException;
     void rule__ParameterList__Group_1__0__Impl() throws RecognitionException;
     void rule__ParameterList__Group_1__1() throws RecognitionException;
     void rule__ParameterList__Group_1__1__Impl() throws RecognitionException;
     void rule__ParameterDeclaration__Group__0() throws RecognitionException;
     void rule__ParameterDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__ParameterDeclaration__Group__1() throws RecognitionException;
     void rule__ParameterDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__Function__Group__0() throws RecognitionException;
     void rule__Function__Group__0__Impl() throws RecognitionException;
     void rule__Function__Group__1() throws RecognitionException;
     void rule__Function__Group__1__Impl() throws RecognitionException;
     void rule__Function__Group__2() throws RecognitionException;
     void rule__Function__Group__2__Impl() throws RecognitionException;
     void rule__Function__Group__3() throws RecognitionException;
     void rule__Function__Group__3__Impl() throws RecognitionException;
     void rule__Function__Group__4() throws RecognitionException;
     void rule__Function__Group__4__Impl() throws RecognitionException;
     void rule__Function__Group__5() throws RecognitionException;
     void rule__Function__Group__5__Impl() throws RecognitionException;
     void rule__Function__Group__6() throws RecognitionException;
     void rule__Function__Group__6__Impl() throws RecognitionException;
     void rule__Function__Group__7() throws RecognitionException;
     void rule__Function__Group__7__Impl() throws RecognitionException;
     void rule__Function__Group__8() throws RecognitionException;
     void rule__Function__Group__8__Impl() throws RecognitionException;
     void rule__Function__Group_6__0() throws RecognitionException;
     void rule__Function__Group_6__0__Impl() throws RecognitionException;
     void rule__Function__Group_6__1() throws RecognitionException;
     void rule__Function__Group_6__1__Impl() throws RecognitionException;
     void rule__Function__Group_6__2() throws RecognitionException;
     void rule__Function__Group_6__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__0() throws RecognitionException;
     void rule__Function__Group_6_1_0__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__1() throws RecognitionException;
     void rule__Function__Group_6_1_0__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__2() throws RecognitionException;
     void rule__Function__Group_6_1_0__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__0() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__1() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__0() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__1() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__2() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_1__0() throws RecognitionException;
     void rule__Function__Group_6_1_1__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_1__1() throws RecognitionException;
     void rule__Function__Group_6_1_1__1__Impl() throws RecognitionException;
     void rule__Function__Group_7__0() throws RecognitionException;
     void rule__Function__Group_7__0__Impl() throws RecognitionException;
     void rule__Function__Group_7__1() throws RecognitionException;
     void rule__Function__Group_7__1__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__0() throws RecognitionException;
     void rule__Function__Group_8_0__0__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__1() throws RecognitionException;
     void rule__Function__Group_8_0__1__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__2() throws RecognitionException;
     void rule__Function__Group_8_0__2__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__0() throws RecognitionException;
     void rule__GuardExpression__Group_0__0__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__1() throws RecognitionException;
     void rule__GuardExpression__Group_0__1__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__2() throws RecognitionException;
     void rule__GuardExpression__Group_0__2__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group__0() throws RecognitionException;
     void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group__1() throws RecognitionException;
     void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__0() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__1() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__2() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__0() throws RecognitionException;
     void rule__VarDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__1() throws RecognitionException;
     void rule__VarDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__2() throws RecognitionException;
     void rule__VarDeclaration__Group__2__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__3() throws RecognitionException;
     void rule__VarDeclaration__Group__3__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_2__0() throws RecognitionException;
     void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_2__1() throws RecognitionException;
     void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_3__0() throws RecognitionException;
     void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_3__1() throws RecognitionException;
     void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__0() throws RecognitionException;
     void rule__ValDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__1() throws RecognitionException;
     void rule__ValDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__2() throws RecognitionException;
     void rule__ValDeclaration__Group__2__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__3() throws RecognitionException;
     void rule__ValDeclaration__Group__3__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__4() throws RecognitionException;
     void rule__ValDeclaration__Group__4__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__5() throws RecognitionException;
     void rule__ValDeclaration__Group__5__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__6() throws RecognitionException;
     void rule__ValDeclaration__Group__6__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group__1__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__1__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__2() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__2__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__3() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__3__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__3() throws RecognitionException;
     void rule__ClosureTypeRef__Group__3__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__4() throws RecognitionException;
     void rule__ClosureTypeRef__Group__4__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__1__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__0() throws RecognitionException;
     void rule__CachedExpression__Group_0__0__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__1() throws RecognitionException;
     void rule__CachedExpression__Group_0__1__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__2() throws RecognitionException;
     void rule__CachedExpression__Group_0__2__Impl() throws RecognitionException;
     void rule__OrExpression__Group__0() throws RecognitionException;
     void rule__OrExpression__Group__0__Impl() throws RecognitionException;
     void rule__OrExpression__Group__1() throws RecognitionException;
     void rule__OrExpression__Group__1__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__0() throws RecognitionException;
     void rule__OrExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__1() throws RecognitionException;
     void rule__OrExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__2() throws RecognitionException;
     void rule__OrExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__AndExpression__Group__0() throws RecognitionException;
     void rule__AndExpression__Group__0__Impl() throws RecognitionException;
     void rule__AndExpression__Group__1() throws RecognitionException;
     void rule__AndExpression__Group__1__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__0() throws RecognitionException;
     void rule__AndExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__1() throws RecognitionException;
     void rule__AndExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__2() throws RecognitionException;
     void rule__AndExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group__0() throws RecognitionException;
     void rule__RelationalExpression__Group__0__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group__1() throws RecognitionException;
     void rule__RelationalExpression__Group__1__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__0() throws RecognitionException;
     void rule__RelationalExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__1() throws RecognitionException;
     void rule__RelationalExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__2() throws RecognitionException;
     void rule__RelationalExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group__0() throws RecognitionException;
     void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group__1() throws RecognitionException;
     void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__0() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__1() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__2() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__0() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__1() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__2() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__SetExpression__Group__0() throws RecognitionException;
     void rule__SetExpression__Group__0__Impl() throws RecognitionException;
     void rule__SetExpression__Group__1() throws RecognitionException;
     void rule__SetExpression__Group__1__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__0() throws RecognitionException;
     void rule__SetExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__1() throws RecognitionException;
     void rule__SetExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__2() throws RecognitionException;
     void rule__SetExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__0() throws RecognitionException;
     void rule__UnaryExpression__Group__0__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__1() throws RecognitionException;
     void rule__UnaryExpression__Group__1__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__2() throws RecognitionException;
     void rule__UnaryExpression__Group__2__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__0() throws RecognitionException;
     void rule__PreopExpression__Group__0__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__1() throws RecognitionException;
     void rule__PreopExpression__Group__1__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__2() throws RecognitionException;
     void rule__PreopExpression__Group__2__Impl() throws RecognitionException;
     void rule__PostopExpression__Group__0() throws RecognitionException;
     void rule__PostopExpression__Group__0__Impl() throws RecognitionException;
     void rule__PostopExpression__Group__1() throws RecognitionException;
     void rule__PostopExpression__Group__1__Impl() throws RecognitionException;
     void rule__PostopExpression__Group_1__0() throws RecognitionException;
     void rule__PostopExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__PostopExpression__Group_1__1() throws RecognitionException;
     void rule__PostopExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group__0() throws RecognitionException;
     void rule__InfixExpression__Group__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group__1() throws RecognitionException;
     void rule__InfixExpression__Group__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__2__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__3() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__3__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__4() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__4__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__5() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__5__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__2__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__3() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__3__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__2__Impl() throws RecognitionException;
     void rule__CallExpression__Group__0() throws RecognitionException;
     void rule__CallExpression__Group__0__Impl() throws RecognitionException;
     void rule__CallExpression__Group__1() throws RecognitionException;
     void rule__CallExpression__Group__1__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__0() throws RecognitionException;
     void rule__CallExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__1() throws RecognitionException;
     void rule__CallExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__2() throws RecognitionException;
     void rule__CallExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__3() throws RecognitionException;
     void rule__CallExpression__Group_1__3__Impl() throws RecognitionException;
     void rule__WithExpression__Group__0() throws RecognitionException;
     void rule__WithExpression__Group__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group__1() throws RecognitionException;
     void rule__WithExpression__Group__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group__2() throws RecognitionException;
     void rule__WithExpression__Group__2__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1__0() throws RecognitionException;
     void rule__WithExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1__1() throws RecognitionException;
     void rule__WithExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1_1__0() throws RecognitionException;
     void rule__WithExpression__Group_1_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1_1__1() throws RecognitionException;
     void rule__WithExpression__Group_1_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_0__0() throws RecognitionException;
     void rule__WithExpression__Group_2_0__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_0__1() throws RecognitionException;
     void rule__WithExpression__Group_2_0__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__0() throws RecognitionException;
     void rule__WithExpression__Group_2_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__1() throws RecognitionException;
     void rule__WithExpression__Group_2_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__2() throws RecognitionException;
     void rule__WithExpression__Group_2_1__2__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__0() throws RecognitionException;
     void rule__WithContextExpression__Group__0__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__1() throws RecognitionException;
     void rule__WithContextExpression__Group__1__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__2() throws RecognitionException;
     void rule__WithContextExpression__Group__2__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__3() throws RecognitionException;
     void rule__WithContextExpression__Group__3__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__4() throws RecognitionException;
     void rule__WithContextExpression__Group__4__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group_3__0() throws RecognitionException;
     void rule__WithContextExpression__Group_3__0__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group_3__1() throws RecognitionException;
     void rule__WithContextExpression__Group_3__1__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__0() throws RecognitionException;
     void rule__BlockExpression__Group__0__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__1() throws RecognitionException;
     void rule__BlockExpression__Group__1__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__2() throws RecognitionException;
     void rule__BlockExpression__Group__2__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__3() throws RecognitionException;
     void rule__BlockExpression__Group__3__Impl() throws RecognitionException;
     void rule__BlockExpression__Group_2__0() throws RecognitionException;
     void rule__BlockExpression__Group_2__0__Impl() throws RecognitionException;
     void rule__BlockExpression__Group_2__1() throws RecognitionException;
     void rule__BlockExpression__Group_2__1__Impl() throws RecognitionException;
     void rule__Value__Group__0() throws RecognitionException;
     void rule__Value__Group__0__Impl() throws RecognitionException;
     void rule__Value__Group__1() throws RecognitionException;
     void rule__Value__Group__1__Impl() throws RecognitionException;
     void rule__KeywordVariables__Group__0() throws RecognitionException;
     void rule__KeywordVariables__Group__0__Impl() throws RecognitionException;
     void rule__KeywordVariables__Group__1() throws RecognitionException;
     void rule__KeywordVariables__Group__1__Impl() throws RecognitionException;
     void rule__OperationCall__Group__0() throws RecognitionException;
     void rule__OperationCall__Group__0__Impl() throws RecognitionException;
     void rule__OperationCall__Group__1() throws RecognitionException;
     void rule__OperationCall__Group__1__Impl() throws RecognitionException;
     void rule__OperationCall__Group__2() throws RecognitionException;
     void rule__OperationCall__Group__2__Impl() throws RecognitionException;
     void rule__OperationCall__Group__3() throws RecognitionException;
     void rule__OperationCall__Group__3__Impl() throws RecognitionException;
     void rule__OperationCall__Group__4() throws RecognitionException;
     void rule__OperationCall__Group__4__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__1__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__2() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__2__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__3() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__3__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__4() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__4__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__5() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__5__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__1__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__2() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__2__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__1__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__0() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__0__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__1() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__1__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__2() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__2__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__3() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__3__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__4() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__4__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__0() throws RecognitionException;
     void rule__InitializationExpression__Group__0__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__1() throws RecognitionException;
     void rule__InitializationExpression__Group__1__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__2() throws RecognitionException;
     void rule__InitializationExpression__Group__2__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__3() throws RecognitionException;
     void rule__InitializationExpression__Group__3__Impl() throws RecognitionException;
     void rule__FeatureOfThis__Group__0() throws RecognitionException;
     void rule__FeatureOfThis__Group__0__Impl() throws RecognitionException;
     void rule__FeatureOfThis__Group__1() throws RecognitionException;
     void rule__FeatureOfThis__Group__1__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__0() throws RecognitionException;
     void rule__LiteralFunction__Group__0__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__1() throws RecognitionException;
     void rule__LiteralFunction__Group__1__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__2() throws RecognitionException;
     void rule__LiteralFunction__Group__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__0() throws RecognitionException;
     void rule__ClosureExpression__Group__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__1() throws RecognitionException;
     void rule__ClosureExpression__Group__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__2() throws RecognitionException;
     void rule__ClosureExpression__Group__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__3() throws RecognitionException;
     void rule__ClosureExpression__Group__3__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__4() throws RecognitionException;
     void rule__ClosureExpression__Group__4__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__2() throws RecognitionException;
     void rule__ClosureExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__2() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__2() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__1__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__0() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__0__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__1() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__1__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__0() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__0__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__1() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__1__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__0() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__0__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__1() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__1__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__2() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__2__Impl() throws RecognitionException;
     void rule__QID__Group__0() throws RecognitionException;
     void rule__QID__Group__0__Impl() throws RecognitionException;
     void rule__QID__Group__1() throws RecognitionException;
     void rule__QID__Group__1__Impl() throws RecognitionException;
     void rule__QID__Group__2() throws RecognitionException;
     void rule__QID__Group__2__Impl() throws RecognitionException;
     void rule__QID__Group_2__0() throws RecognitionException;
     void rule__QID__Group_2__0__Impl() throws RecognitionException;
     void rule__QID__Group_2__1() throws RecognitionException;
     void rule__QID__Group_2__1__Impl() throws RecognitionException;
     void rule__QID__Group_2__2() throws RecognitionException;
     void rule__QID__Group_2__2__Impl() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__Impl() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__0() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__1() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__2() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__3() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__4() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__5() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__0() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__1() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException;
     void rule__Model__UnitsAssignment_0() throws RecognitionException;
     void rule__Model__FunctionsAssignment_1() throws RecognitionException;
     void rule__Unit__DocumentationAssignment_1() throws RecognitionException;
     void rule__Unit__NameAssignment_3() throws RecognitionException;
     void rule__Unit__VersionAssignment_4_1() throws RecognitionException;
     void rule__Unit__ImplementsAssignment_5_1() throws RecognitionException;
     void rule__Unit__ImplementsAssignment_5_2_1() throws RecognitionException;
     void rule__Unit__SourceLocationAssignment_7_0_2() throws RecognitionException;
     void rule__Unit__OutputLocationAssignment_7_1_2() throws RecognitionException;
     void rule__Unit__ProvidedCapabilitiesAssignment_7_2_2() throws RecognitionException;
     void rule__Unit__RequiredCapabilitiesAssignment_7_3_2() throws RecognitionException;
     void rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3() throws RecognitionException;
     void rule__Unit__FunctionsAssignment_7_5() throws RecognitionException;
     void rule__ProvidedCapability__NameSpaceAssignment_1_0() throws RecognitionException;
     void rule__ProvidedCapability__CondExprAssignment_2_1_0_2() throws RecognitionException;
     void rule__ProvidedCapability__NameAssignment_2_1_1_2() throws RecognitionException;
     void rule__ProvidedCapability__VersionAssignment_2_1_2_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__NameSpaceAssignment_0_0() throws RecognitionException;
     void rule__AliasedRequiredCapability__NameAssignment_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__AliasAssignment_2_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException;
     void rule__AliasedRequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException;
     void rule__RequiredCapability__NameSpaceAssignment_1_0() throws RecognitionException;
     void rule__RequiredCapability__NameAssignment_2() throws RecognitionException;
     void rule__RequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException;
     void rule__RequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException;
     void rule__RequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException;
     void rule__RequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException;
     void rule__RequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException;
     void rule__ParameterList__ParametersAssignment_0() throws RecognitionException;
     void rule__ParameterList__ParametersAssignment_1_1() throws RecognitionException;
     void rule__Parameter__ExprAssignment() throws RecognitionException;
     void rule__ClosureParameter__ExprAssignment() throws RecognitionException;
     void rule__ParameterDeclaration__TypeAssignment_0() throws RecognitionException;
     void rule__ParameterDeclaration__NameAssignment_1() throws RecognitionException;
     void rule__Function__DocumentationAssignment_0() throws RecognitionException;
     void rule__Function__VisibilityAssignment_1() throws RecognitionException;
     void rule__Function__FinalAssignment_2() throws RecognitionException;
     void rule__Function__ReturnTypeAssignment_4() throws RecognitionException;
     void rule__Function__NameAssignment_5() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_0() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_1_1() throws RecognitionException;
     void rule__Function__VarArgsAssignment_6_1_0_2_1() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_2_2() throws RecognitionException;
     void rule__Function__VarArgsAssignment_6_1_1_0() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_1_1() throws RecognitionException;
     void rule__Function__GuardAssignment_7_1() throws RecognitionException;
     void rule__Function__FuncExprAssignment_8_0_1() throws RecognitionException;
     void rule__Function__FuncExprAssignment_8_1() throws RecognitionException;
     void rule__GuardExpression__GuardExprAssignment_0_1() throws RecognitionException;
     void rule__GuardExpression__GuardExprAssignment_1() throws RecognitionException;
     void rule__AssignmentExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__AssignmentExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__VarDeclaration__FinalAssignment_1() throws RecognitionException;
     void rule__VarDeclaration__TypeAssignment_2_0_1() throws RecognitionException;
     void rule__VarDeclaration__NameAssignment_2_1() throws RecognitionException;
     void rule__VarDeclaration__ValueExprAssignment_3_1() throws RecognitionException;
     void rule__ValDeclaration__FinalAssignment_1() throws RecognitionException;
     void rule__ValDeclaration__ImmutableAssignment_2() throws RecognitionException;
     void rule__ValDeclaration__TypeAssignment_3() throws RecognitionException;
     void rule__ValDeclaration__NameAssignment_4() throws RecognitionException;
     void rule__ValDeclaration__ValueExprAssignment_6() throws RecognitionException;
     void rule__SimpleTypeRef__RawTypeAssignment_0() throws RecognitionException;
     void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1() throws RecognitionException;
     void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1() throws RecognitionException;
     void rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2() throws RecognitionException;
     void rule__ClosureTypeRef__VarArgsAssignment_1_1_0() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1() throws RecognitionException;
     void rule__ClosureTypeRef__ReturnTypeAssignment_4() throws RecognitionException;
     void rule__CachedExpression__ExprAssignment_0_2() throws RecognitionException;
     void rule__OrExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__AndExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__RelationalExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__RelationalExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__AdditiveExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__AdditiveExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__MultiplicativeExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__MultiplicativeExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__SetExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__SetExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__UnaryExpression__FunctionNameAssignment_1() throws RecognitionException;
     void rule__UnaryExpression__ExprAssignment_2() throws RecognitionException;
     void rule__PreopExpression__FunctionNameAssignment_1() throws RecognitionException;
     void rule__PreopExpression__ExprAssignment_2() throws RecognitionException;
     void rule__PostopExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__InfixExpression__NameAssignment_1_0_2() throws RecognitionException;
     void rule__InfixExpression__ParameterListAssignment_1_0_4() throws RecognitionException;
     void rule__InfixExpression__IndexExprAssignment_1_1_2() throws RecognitionException;
     void rule__InfixExpression__FeatureNameAssignment_1_2_2() throws RecognitionException;
     void rule__CallExpression__ParameterListAssignment_1_2() throws RecognitionException;
     void rule__WithExpression__ReferencedAdviceAssignment_1_0() throws RecognitionException;
     void rule__WithExpression__ReferencedAdviceAssignment_1_1_1() throws RecognitionException;
     void rule__WithExpression__FuncExprAssignment_2_0_1() throws RecognitionException;
     void rule__WithExpression__FuncExprAssignment_2_1_1() throws RecognitionException;
     void rule__WithContextExpression__ExprAssignment_2() throws RecognitionException;
     void rule__WithContextExpression__AliasAssignment_3_1() throws RecognitionException;
     void rule__WithContextExpression__ContextBlockAssignment_4() throws RecognitionException;
     void rule__BlockExpression__ExpressionsAssignment_2_0() throws RecognitionException;
     void rule__Value__NameAssignment_1() throws RecognitionException;
     void rule__KeywordVariables__NameAssignment_1() throws RecognitionException;
     void rule__OperationCall__NameAssignment_1() throws RecognitionException;
     void rule__OperationCall__ParameterListAssignment_3() throws RecognitionException;
     void rule__ConstructorCallExpression__TypeExprAssignment_2() throws RecognitionException;
     void rule__ConstructorCallExpression__ParameterListAssignment_3_1() throws RecognitionException;
     void rule__ConstructorCallExpression__AliasAssignment_4_1() throws RecognitionException;
     void rule__ConstructorCallExpression__ContextBlockAssignment_5() throws RecognitionException;
     void rule__InitializationBlockExpression__ExpressionsAssignment_2() throws RecognitionException;
     void rule__InitializationExpression__LeftExprAssignment_1() throws RecognitionException;
     void rule__InitializationExpression__FunctionNameAssignment_2() throws RecognitionException;
     void rule__InitializationExpression__RightExprAssignment_3() throws RecognitionException;
     void rule__FeatureOfThis__FeatureNameAssignment_1() throws RecognitionException;
     void rule__ClosureExpression__ReturnTypeAssignment_1_1() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_0() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_1_1() throws RecognitionException;
     void rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_2_2() throws RecognitionException;
     void rule__ClosureExpression__VarArgsAssignment_2_1_0() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_1_1() throws RecognitionException;
     void rule__ClosureExpression__FuncExprAssignment_4() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0() throws RecognitionException;
     void rule__ValueLiteral__ValueAssignment() throws RecognitionException;
     void synpred2_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred8_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred25_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred39_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred41_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred43_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred44_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred47_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred48_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred58_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred84_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred94_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred95_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred96_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred97_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred98_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred99_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred100_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred101_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred103_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred110_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred111_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred115_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred123_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred124_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred125_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred126_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred127_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred128_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred129_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred130_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred131_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred132_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred133_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred134_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred135_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred136_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred137_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred138_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred139_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred140_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred141_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred142_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred143_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred144_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred145_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred146_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred147_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred148_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred149_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred150_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred151_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred152_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred153_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred154_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred155_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred156_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred157_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred158_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred159_InternalBeeLangTestLanguage_fragment() throws RecognitionException;   
}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser1 extends AbstractInternalContentAssistParser implements InternalBeeLangTestLanguageParserSignatures {

        InternalBeeLangTestLanguageParser1(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser1(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_INT", "RULE_HEX", "RULE_ID", "RULE_DOCUMENTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'unit'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'~='", "'=='", "'==='", "'!='", "'!=='", "'>='", "'<='", "'>'", "'<'", "'var'", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", "'++'", "'--'", "'input'", "'output'", "'source'", "'properties'", "'builder'", "'this'", "'{'", "'}'", "'version'", "'implements'", "','", "':'", "';'", "'provides'", "'requires'", "'env'", "'when'", "'name'", "'as'", "'requires-min'", "'requires-max'", "'function'", "'('", "')'", "'=>'", "'cached'", "'||'", "'&&'", "'.'", "'['", "']'", "'with'", "'context'", "'new'", "'|'", "'greedy'", "'final'", "'...'", "'val'", "'..'"
    };
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int RULE_ID=7;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__29=29;
    public static final int T__65=65;
    public static final int T__28=28;
    public static final int T__62=62;
    public static final int T__27=27;
    public static final int T__63=63;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int EOF=-1;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__19=19;
    public static final int T__57=57;
    public static final int RULE_HEX=6;
    public static final int T__58=58;
    public static final int T__16=16;
    public static final int T__51=51;
    public static final int T__15=15;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__18=18;
    public static final int T__54=54;
    public static final int T__17=17;
    public static final int T__14=14;
    public static final int T__13=13;
    public static final int T__59=59;
    public static final int RULE_INT=5;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_SL_COMMENT=10;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int RULE_STRING=4;
    public static final int T__32=32;
    public static final int T__71=71;
    public static final int T__33=33;
    public static final int T__72=72;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int RULE_DOCUMENTATION=8;
    public static final int T__70=70;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=11;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int T__77=77;


    public String[] getTokenNames() { return InternalBeeLangTestLanguageParser.tokenNames; }
    public String getGrammarFileName() { return "InternalBeeLangTestLanguage.g"; }


     
     	protected BeeLangTestLanguageGrammarAccess grammarAccess;
     	
        public void setGrammarAccess(BeeLangTestLanguageGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }
        
        @Override
        protected String getValueForTokenName(String tokenName) {
        	return tokenName;
        }





    // Delegated rules

    public final boolean synpred127_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA8 dfa8 = new DFA8(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA104 dfa104 = new DFA104(this);
    static final String DFA8_eotS =
        "\56\uffff";
    static final String DFA8_eofS =
        "\3\uffff\1\4\4\uffff\2\4\12\uffff\2\4\4\uffff\1\4\12\uffff\2\4\7\uffff";
    static final String DFA8_minS =
        "\1\4\1\uffff\1\4\1\7\1\uffff\1\16\2\4\2\16\1\7\1\4\1\0\2\4\1\7\1\0\1\16\1\7\1\76\1\7\1\16\1\60\1\7\1\76\1\7\1\16\1\75\1\7\2\4\1\7\1\75\2\7\1\60\1\7\1\16\1\7\1\60\2\7\1\75\1\0\1\75\1\0";
    static final String DFA8_maxS =
        "\1\113\1\uffff\1\113\1\115\1\uffff\1\115\1\107\1\113\2\115\1\74\1\113\1\0\1\113\1\107\1\113\1\0\1\115\1\7\1\76\2\115\1\75\1\7\1\76\1\113\1\115\1\75\1\7\1\107\2\113\1\75\2\7\1\75\1\7\2\115\1\75\2\7\1\75\1\0\1\75\1\0";
    static final String DFA8_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\51\uffff";
    static final String DFA8_specialS =
        "\14\uffff\1\1\3\uffff\1\0\32\uffff\1\2\1\uffff\1\3}>";
    static final String[] DFA8_transitionS = {
            "\1\4\2\uffff\1\3\5\uffff\1\4\16\uffff\1\1\2\uffff\1\4\3\uffff\12\4\17\uffff\1\2\2\uffff\1\4\5\uffff\1\4\1\uffff\1\4\1\1\2\uffff\1\1",
            "",
            "\1\4\2\uffff\1\5\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4\3\uffff\1\1",
            "\1\1\6\uffff\16\4\1\6\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\1\13\uffff\1\4\1\10\2\uffff\4\4\11\uffff\1\4",
            "\1\4\2\uffff\1\11\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\4\2\uffff\1\14\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\13\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\12",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\4\13\uffff\2\4\1\1\1\uffff\4\4\11\uffff\1\4",
            "\15\4\1\16\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\15\13\uffff\2\4\2\uffff\4\4\11\uffff\1\4",
            "\1\20\64\uffff\1\17",
            "\1\4\2\uffff\1\21\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\1\23\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4\3\uffff\1\22",
            "\1\uffff",
            "\1\4\2\uffff\1\24\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\4",
            "\1\4\2\uffff\1\25\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\26\65\uffff\1\30\15\uffff\1\27",
            "\1\uffff",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\31\13\uffff\1\4\1\32\2\uffff\4\4\11\uffff\1\4",
            "\1\33",
            "\1\34",
            "\1\4\6\uffff\15\4\1\35\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\36\13\uffff\2\4\2\uffff\4\4\4\uffff\1\4\4\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "\1\37\14\uffff\1\30",
            "\1\40",
            "\1\41",
            "\1\43\103\uffff\1\42",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\4\13\uffff\2\4\1\34\1\uffff\4\4\11\uffff\1\4",
            "\1\23",
            "\1\44",
            "\1\4\2\uffff\1\45\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\4\2\uffff\1\46\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\4",
            "\1\47\103\uffff\1\50",
            "\1\30",
            "\1\51",
            "\1\52",
            "\1\31\14\uffff\1\23",
            "\1\53",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "\1\4\6\uffff\15\4\1\35\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\36\13\uffff\2\4\2\uffff\4\4\4\uffff\1\4\4\uffff\1\4",
            "\1\37\14\uffff\1\30",
            "\1\54",
            "\1\55",
            "\1\23",
            "\1\uffff",
            "\1\30",
            "\1\uffff"
    };

    static final short[] DFA8_eot = DFA.unpackEncodedString(DFA8_eotS);
    static final short[] DFA8_eof = DFA.unpackEncodedString(DFA8_eofS);
    static final char[] DFA8_min = DFA.unpackEncodedStringToUnsignedChars(DFA8_minS);
    static final char[] DFA8_max = DFA.unpackEncodedStringToUnsignedChars(DFA8_maxS);
    static final short[] DFA8_accept = DFA.unpackEncodedString(DFA8_acceptS);
    static final short[] DFA8_special = DFA.unpackEncodedString(DFA8_specialS);
    static final short[][] DFA8_transition;

    static {
        int numStates = DFA8_transitionS.length;
        DFA8_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA8_transition[i] = DFA.unpackEncodedString(DFA8_transitionS[i]);
        }
    }

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = DFA8_eot;
            this.eof = DFA8_eof;
            this.min = DFA8_min;
            this.max = DFA8_max;
            this.accept = DFA8_accept;
            this.special = DFA8_special;
            this.transition = DFA8_transition;
        }
        public String getDescription() {
            return "1762:1: rule__FirstParameter__Alternatives : ( ( ruleClosureParameter ) | ( ruleParameter ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_16 = input.LA(1);

                         
                        int index8_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_16);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA8_12 = input.LA(1);

                         
                        int index8_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA8_43 = input.LA(1);

                         
                        int index8_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_43);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA8_45 = input.LA(1);

                         
                        int index8_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA14_eotS =
        "\15\uffff";
    static final String DFA14_eofS =
        "\4\uffff\1\6\4\uffff\2\6\2\uffff";
    static final String DFA14_minS =
        "\1\4\1\7\1\uffff\1\4\1\7\2\uffff\1\16\1\4\2\16\1\4\1\0";
    static final String DFA14_maxS =
        "\2\114\1\uffff\1\113\1\115\2\uffff\1\115\1\107\2\115\1\107\1\0";
    static final String DFA14_acceptS =
        "\2\uffff\1\1\2\uffff\1\2\1\3\6\uffff";
    static final String DFA14_specialS =
        "\14\uffff\1\0}>";
    static final String[] DFA14_transitionS = {
            "\1\6\2\uffff\1\4\5\uffff\1\6\17\uffff\1\2\1\uffff\1\6\3\uffff\12\6\17\uffff\1\3\2\uffff\1\6\5\uffff\1\6\1\uffff\1\6\2\uffff\1\1\1\uffff\1\5",
            "\1\2\25\uffff\1\2\36\uffff\1\2\17\uffff\1\5",
            "",
            "\1\6\2\uffff\1\7\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\1\2\1\uffff\1\6\5\uffff\1\6\1\uffff\1\6\3\uffff\1\2",
            "\1\2\6\uffff\16\6\1\10\1\uffff\5\6\1\uffff\2\6\14\uffff\1\6\11\uffff\1\6\3\uffff\4\6\11\uffff\1\6",
            "",
            "",
            "\17\6\1\uffff\5\6\1\uffff\2\6\12\uffff\1\2\13\uffff\1\6\1\11\2\uffff\4\6\11\uffff\1\6",
            "\1\6\2\uffff\1\12\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\10\uffff\1\6\1\uffff\1\6",
            "\17\6\1\uffff\5\6\1\uffff\2\6\14\uffff\1\6\11\uffff\1\6\1\uffff\1\2\1\uffff\4\6\11\uffff\1\6",
            "\15\6\1\13\1\6\1\uffff\5\6\1\uffff\2\6\12\uffff\1\2\1\uffff\1\6\11\uffff\1\6\3\uffff\4\6\11\uffff\1\6",
            "\1\6\2\uffff\1\14\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\10\uffff\1\6\1\uffff\1\6",
            "\1\uffff"
    };

    static final short[] DFA14_eot = DFA.unpackEncodedString(DFA14_eotS);
    static final short[] DFA14_eof = DFA.unpackEncodedString(DFA14_eofS);
    static final char[] DFA14_min = DFA.unpackEncodedStringToUnsignedChars(DFA14_minS);
    static final char[] DFA14_max = DFA.unpackEncodedStringToUnsignedChars(DFA14_maxS);
    static final short[] DFA14_accept = DFA.unpackEncodedString(DFA14_acceptS);
    static final short[] DFA14_special = DFA.unpackEncodedString(DFA14_specialS);
    static final short[][] DFA14_transition;

    static {
        int numStates = DFA14_transitionS.length;
        DFA14_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA14_transition[i] = DFA.unpackEncodedString(DFA14_transitionS[i]);
        }
    }

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = DFA14_eot;
            this.eof = DFA14_eof;
            this.min = DFA14_min;
            this.max = DFA14_max;
            this.accept = DFA14_accept;
            this.special = DFA14_special;
            this.transition = DFA14_transition;
        }
        public String getDescription() {
            return "1990:1: rule__TopLevelExpression__Alternatives : ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_12 = input.LA(1);

                         
                        int index14_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index14_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA26_eotS =
        "\23\uffff";
    static final String DFA26_eofS =
        "\23\uffff";
    static final String DFA26_minS =
        "\1\4\1\0\2\uffff\1\0\10\uffff\1\0\5\uffff";
    static final String DFA26_maxS =
        "\1\107\1\0\2\uffff\1\0\10\uffff\1\0\5\uffff";
    static final String DFA26_acceptS =
        "\2\uffff\1\2\1\4\1\uffff\1\5\6\uffff\1\6\1\uffff\1\1\1\3\1\7\1\10\1\11";
    static final String DFA26_specialS =
        "\1\uffff\1\0\2\uffff\1\1\10\uffff\1\2\5\uffff}>";
    static final String[] DFA26_transitionS = {
            "\1\3\2\uffff\1\1\5\uffff\1\5\30\uffff\6\5\1\4\17\uffff\1\14\10\uffff\1\15\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA26_eot = DFA.unpackEncodedString(DFA26_eotS);
    static final short[] DFA26_eof = DFA.unpackEncodedString(DFA26_eofS);
    static final char[] DFA26_min = DFA.unpackEncodedStringToUnsignedChars(DFA26_minS);
    static final char[] DFA26_max = DFA.unpackEncodedStringToUnsignedChars(DFA26_maxS);
    static final short[] DFA26_accept = DFA.unpackEncodedString(DFA26_acceptS);
    static final short[] DFA26_special = DFA.unpackEncodedString(DFA26_specialS);
    static final short[][] DFA26_transition;

    static {
        int numStates = DFA26_transitionS.length;
        DFA26_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA26_transition[i] = DFA.unpackEncodedString(DFA26_transitionS[i]);
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = DFA26_eot;
            this.eof = DFA26_eof;
            this.min = DFA26_min;
            this.max = DFA26_max;
            this.accept = DFA26_accept;
            this.special = DFA26_special;
            this.transition = DFA26_transition;
        }
        public String getDescription() {
            return "2302:1: rule__PrimaryExpression__Alternatives : ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalBeeLangTestLanguage()) ) {s = 14;}

                        else if ( (synpred43_InternalBeeLangTestLanguage()) ) {s = 15;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalBeeLangTestLanguage()) ) {s = 3;}

                        else if ( (synpred47_InternalBeeLangTestLanguage()) ) {s = 16;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_13 = input.LA(1);

                         
                        int index26_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalBeeLangTestLanguage()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index26_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA31_eotS =
        "\27\uffff";
    static final String DFA31_eofS =
        "\27\uffff";
    static final String DFA31_minS =
        "\1\4\2\uffff\2\0\1\uffff\20\0\1\uffff";
    static final String DFA31_maxS =
        "\1\114\2\uffff\2\0\1\uffff\20\0\1\uffff";
    static final String DFA31_acceptS =
        "\1\uffff\1\1\24\uffff\1\2";
    static final String DFA31_specialS =
        "\3\uffff\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\uffff}>";
    static final String[] DFA31_transitionS = {
            "\1\10\2\uffff\1\4\5\uffff\1\17\17\uffff\1\1\1\uffff\1\23\3\uffff\1\22\1\24\1\25\1\12\1\13\1\14\1\15\1\16\1\20\1\11\17\uffff\1\3\2\uffff\1\6\5\uffff\1\21\1\uffff\1\7\2\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA31_eot = DFA.unpackEncodedString(DFA31_eotS);
    static final short[] DFA31_eof = DFA.unpackEncodedString(DFA31_eofS);
    static final char[] DFA31_min = DFA.unpackEncodedStringToUnsignedChars(DFA31_minS);
    static final char[] DFA31_max = DFA.unpackEncodedStringToUnsignedChars(DFA31_maxS);
    static final short[] DFA31_accept = DFA.unpackEncodedString(DFA31_acceptS);
    static final short[] DFA31_special = DFA.unpackEncodedString(DFA31_specialS);
    static final short[][] DFA31_transition;

    static {
        int numStates = DFA31_transitionS.length;
        DFA31_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA31_transition[i] = DFA.unpackEncodedString(DFA31_transitionS[i]);
        }
    }

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = DFA31_eot;
            this.eof = DFA31_eof;
            this.min = DFA31_min;
            this.max = DFA31_max;
            this.accept = DFA31_accept;
            this.special = DFA31_special;
            this.transition = DFA31_transition;
        }
        public String getDescription() {
            return "2498:1: rule__OneOrManyExpressions__Alternatives : ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_3 = input.LA(1);

                         
                        int index31_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_4 = input.LA(1);

                         
                        int index31_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA31_6 = input.LA(1);

                         
                        int index31_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA31_7 = input.LA(1);

                         
                        int index31_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA31_8 = input.LA(1);

                         
                        int index31_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA31_9 = input.LA(1);

                         
                        int index31_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA31_10 = input.LA(1);

                         
                        int index31_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA31_11 = input.LA(1);

                         
                        int index31_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_11);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA31_12 = input.LA(1);

                         
                        int index31_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_12);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA31_13 = input.LA(1);

                         
                        int index31_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_13);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA31_14 = input.LA(1);

                         
                        int index31_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_14);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA31_15 = input.LA(1);

                         
                        int index31_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_15);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA31_16 = input.LA(1);

                         
                        int index31_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_16);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA31_17 = input.LA(1);

                         
                        int index31_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_17);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA31_18 = input.LA(1);

                         
                        int index31_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_18);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA31_19 = input.LA(1);

                         
                        int index31_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_19);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA31_20 = input.LA(1);

                         
                        int index31_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_20);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA31_21 = input.LA(1);

                         
                        int index31_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA67_eotS =
        "\14\uffff";
    static final String DFA67_eofS =
        "\1\1\13\uffff";
    static final String DFA67_minS =
        "\1\16\1\uffff\11\0\1\uffff";
    static final String DFA67_maxS =
        "\1\115\1\uffff\11\0\1\uffff";
    static final String DFA67_acceptS =
        "\1\uffff\1\2\11\uffff\1\1";
    static final String DFA67_specialS =
        "\2\uffff\1\7\1\2\1\3\1\6\1\10\1\5\1\0\1\1\1\4\1\uffff}>";
    static final String[] DFA67_transitionS = {
            "\6\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\uffff\5\1\1\uffff\2\1\6\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\1\1\3\uffff\2\1\2\uffff\5\1\10\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA67_eot = DFA.unpackEncodedString(DFA67_eotS);
    static final short[] DFA67_eof = DFA.unpackEncodedString(DFA67_eofS);
    static final char[] DFA67_min = DFA.unpackEncodedStringToUnsignedChars(DFA67_minS);
    static final char[] DFA67_max = DFA.unpackEncodedStringToUnsignedChars(DFA67_maxS);
    static final short[] DFA67_accept = DFA.unpackEncodedString(DFA67_acceptS);
    static final short[] DFA67_special = DFA.unpackEncodedString(DFA67_specialS);
    static final short[][] DFA67_transition;

    static {
        int numStates = DFA67_transitionS.length;
        DFA67_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA67_transition[i] = DFA.unpackEncodedString(DFA67_transitionS[i]);
        }
    }

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = DFA67_eot;
            this.eof = DFA67_eof;
            this.min = DFA67_min;
            this.max = DFA67_max;
            this.accept = DFA67_accept;
            this.special = DFA67_special;
            this.transition = DFA67_transition;
        }
        public String getDescription() {
            return "()* loopback of 9118:1: ( rule__RelationalExpression__Group_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_8 = input.LA(1);

                         
                        int index67_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA81_eotS =
        "\46\uffff";
    static final String DFA81_eofS =
        "\1\2\45\uffff";
    static final String DFA81_minS =
        "\1\16\1\0\44\uffff";
    static final String DFA81_maxS =
        "\1\115\1\0\44\uffff";
    static final String DFA81_acceptS =
        "\2\uffff\1\2\42\uffff\1\1";
    static final String DFA81_specialS =
        "\1\uffff\1\0\44\uffff}>";
    static final String[] DFA81_transitionS = {
            "\17\2\1\uffff\5\2\1\uffff\2\2\6\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\1\2\3\uffff\1\1\1\2\2\uffff\5\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
    static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
    static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
    static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
    static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
    static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
    static final short[][] DFA81_transition;

    static {
        int numStates = DFA81_transitionS.length;
        DFA81_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = DFA81_eot;
            this.eof = DFA81_eof;
            this.min = DFA81_min;
            this.max = DFA81_max;
            this.accept = DFA81_accept;
            this.special = DFA81_special;
            this.transition = DFA81_transition;
        }
        public String getDescription() {
            return "11858:1: ( rule__ConstructorCallExpression__Group_3__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalBeeLangTestLanguage()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA86_eotS =
        "\71\uffff";
    static final String DFA86_eofS =
        "\5\uffff\1\3\6\uffff\1\3\3\uffff\1\3\16\uffff\2\3\4\uffff\1\3\12\uffff\2\3\7\uffff";
    static final String DFA86_minS =
        "\1\7\1\4\2\uffff\1\4\1\7\1\16\1\7\1\76\1\4\1\16\1\4\1\16\1\7\1\75\1\7\1\16\1\7\1\4\1\0\1\7\1\60\1\7\2\4\1\7\1\0\1\16\1\7\1\76\1\75\1\7\1\16\1\60\1\7\1\76\1\7\1\16\1\75\1\7\2\4\1\7\1\75\2\7\1\60\1\7\1\16\1\7\1\60\2\7\1\75\1\0\1\75\1\0";
    static final String DFA86_maxS =
        "\1\113\1\114\2\uffff\1\113\2\115\1\7\1\76\1\107\1\110\1\113\1\115\1\113\1\75\1\7\1\115\1\74\1\113\1\0\1\7\1\75\1\7\1\113\1\107\1\113\1\0\1\115\1\7\1\76\1\75\2\115\1\75\1\7\1\76\1\113\1\115\1\75\1\7\1\107\2\113\1\75\2\7\1\75\1\7\2\115\1\75\2\7\1\75\1\0\1\75\1\0";
    static final String DFA86_acceptS =
        "\2\uffff\1\1\1\2\65\uffff";
    static final String DFA86_specialS =
        "\23\uffff\1\2\6\uffff\1\1\33\uffff\1\0\1\uffff\1\3}>";
    static final String[] DFA86_transitionS = {
            "\1\2\64\uffff\1\2\13\uffff\1\1\2\uffff\1\2",
            "\1\3\2\uffff\1\5\5\uffff\1\3\17\uffff\1\3\1\uffff\1\3\3\uffff\12\3\17\uffff\1\4\2\uffff\1\3\5\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3",
            "",
            "",
            "\1\3\2\uffff\1\6\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\1\10\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3\3\uffff\1\7",
            "\1\12\6\uffff\16\3\1\11\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\15\13\uffff\1\3\1\14\2\uffff\4\3\11\uffff\1\3",
            "\1\16",
            "\1\17",
            "\1\3\2\uffff\1\20\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\3\41\uffff\1\2\1\uffff\1\3\25\uffff\1\2",
            "\1\3\2\uffff\1\23\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\22\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\21",
            "\17\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\3\1\uffff\1\3\11\uffff\2\3\1\17\1\uffff\4\3\11\uffff\1\3",
            "\1\25\103\uffff\1\24",
            "\1\10",
            "\1\26",
            "\15\3\1\30\1\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\27\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\11\uffff\1\3",
            "\1\32\64\uffff\1\31",
            "\1\3\2\uffff\1\33\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\1\35\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3\3\uffff\1\34",
            "\1\uffff",
            "\1\36",
            "\1\15\14\uffff\1\10",
            "\1\12",
            "\1\3\2\uffff\1\37\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\1\40\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\41\65\uffff\1\43\15\uffff\1\42",
            "\1\uffff",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\44\13\uffff\1\3\1\45\2\uffff\4\3\11\uffff\1\3",
            "\1\46",
            "\1\47",
            "\1\10",
            "\1\3\6\uffff\15\3\1\50\1\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\51\13\uffff\2\3\2\uffff\4\3\4\uffff\1\3\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\1\52\14\uffff\1\43",
            "\1\53",
            "\1\54",
            "\1\56\103\uffff\1\55",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\3\13\uffff\2\3\1\47\1\uffff\4\3\11\uffff\1\3",
            "\1\35",
            "\1\57",
            "\1\3\2\uffff\1\60\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\3\2\uffff\1\61\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\3",
            "\1\62\103\uffff\1\63",
            "\1\43",
            "\1\64",
            "\1\65",
            "\1\44\14\uffff\1\35",
            "\1\66",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\1\3\6\uffff\15\3\1\50\1\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\51\13\uffff\2\3\2\uffff\4\3\4\uffff\1\3\4\uffff\1\3",
            "\1\52\14\uffff\1\43",
            "\1\67",
            "\1\70",
            "\1\35",
            "\1\uffff",
            "\1\43",
            "\1\uffff"
    };

    static final short[] DFA86_eot = DFA.unpackEncodedString(DFA86_eotS);
    static final short[] DFA86_eof = DFA.unpackEncodedString(DFA86_eofS);
    static final char[] DFA86_min = DFA.unpackEncodedStringToUnsignedChars(DFA86_minS);
    static final char[] DFA86_max = DFA.unpackEncodedStringToUnsignedChars(DFA86_maxS);
    static final short[] DFA86_accept = DFA.unpackEncodedString(DFA86_acceptS);
    static final short[] DFA86_special = DFA.unpackEncodedString(DFA86_specialS);
    static final short[][] DFA86_transition;

    static {
        int numStates = DFA86_transitionS.length;
        DFA86_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA86_transition[i] = DFA.unpackEncodedString(DFA86_transitionS[i]);
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = DFA86_eot;
            this.eof = DFA86_eof;
            this.min = DFA86_min;
            this.max = DFA86_max;
            this.accept = DFA86_accept;
            this.special = DFA86_special;
            this.transition = DFA86_transition;
        }
        public String getDescription() {
            return "12621:1: ( rule__ClosureExpression__Alternatives_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_54 = input.LA(1);

                         
                        int index86_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_54);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_26 = input.LA(1);

                         
                        int index86_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_26);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_19 = input.LA(1);

                         
                        int index86_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_19);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_56 = input.LA(1);

                         
                        int index86_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_56);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA94_eotS =
        "\12\uffff";
    static final String DFA94_eofS =
        "\12\uffff";
    static final String DFA94_minS =
        "\1\7\11\uffff";
    static final String DFA94_maxS =
        "\1\112\11\uffff";
    static final String DFA94_acceptS =
        "\1\uffff\10\1\1\2";
    static final String DFA94_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA94_transitionS = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA94_eot = DFA.unpackEncodedString(DFA94_eotS);
    static final short[] DFA94_eof = DFA.unpackEncodedString(DFA94_eofS);
    static final char[] DFA94_min = DFA.unpackEncodedStringToUnsignedChars(DFA94_minS);
    static final char[] DFA94_max = DFA.unpackEncodedStringToUnsignedChars(DFA94_maxS);
    static final short[] DFA94_accept = DFA.unpackEncodedString(DFA94_acceptS);
    static final short[] DFA94_special = DFA.unpackEncodedString(DFA94_specialS);
    static final short[][] DFA94_transition;

    static {
        int numStates = DFA94_transitionS.length;
        DFA94_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA94_transition[i] = DFA.unpackEncodedString(DFA94_transitionS[i]);
        }
    }

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = DFA94_eot;
            this.eof = DFA94_eof;
            this.min = DFA94_min;
            this.max = DFA94_max;
            this.accept = DFA94_accept;
            this.special = DFA94_special;
            this.transition = DFA94_transition;
        }
        public String getDescription() {
            return "13591:2: ( rule__Unit__UnorderedGroup_7__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA94_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA94_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA94_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA94_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA94_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA94_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA94_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA94_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA94_0==45) ) {s = 9;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA95_eotS =
        "\14\uffff";
    static final String DFA95_eofS =
        "\1\1\13\uffff";
    static final String DFA95_minS =
        "\1\7\2\uffff\1\0\10\uffff";
    static final String DFA95_maxS =
        "\1\112\2\uffff\1\0\10\uffff";
    static final String DFA95_acceptS =
        "\1\uffff\1\2\11\uffff\1\1";
    static final String DFA95_specialS =
        "\3\uffff\1\0\10\uffff}>";
    static final String[] DFA95_transitionS = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\3\1\1\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA95_eot = DFA.unpackEncodedString(DFA95_eotS);
    static final short[] DFA95_eof = DFA.unpackEncodedString(DFA95_eofS);
    static final char[] DFA95_min = DFA.unpackEncodedStringToUnsignedChars(DFA95_minS);
    static final char[] DFA95_max = DFA.unpackEncodedStringToUnsignedChars(DFA95_maxS);
    static final short[] DFA95_accept = DFA.unpackEncodedString(DFA95_acceptS);
    static final short[] DFA95_special = DFA.unpackEncodedString(DFA95_specialS);
    static final short[][] DFA95_transition;

    static {
        int numStates = DFA95_transitionS.length;
        DFA95_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA95_transition[i] = DFA.unpackEncodedString(DFA95_transitionS[i]);
        }
    }

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = DFA95_eot;
            this.eof = DFA95_eof;
            this.min = DFA95_min;
            this.max = DFA95_max;
            this.accept = DFA95_accept;
            this.special = DFA95_special;
            this.transition = DFA95_transition;
        }
        public String getDescription() {
            return "()* loopback of 13659:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_3 = input.LA(1);

                         
                        int index95_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA96_eotS =
        "\14\uffff";
    static final String DFA96_eofS =
        "\1\1\13\uffff";
    static final String DFA96_minS =
        "\1\7\3\uffff\1\0\7\uffff";
    static final String DFA96_maxS =
        "\1\112\3\uffff\1\0\7\uffff";
    static final String DFA96_acceptS =
        "\1\uffff\1\2\11\uffff\1\1";
    static final String DFA96_specialS =
        "\4\uffff\1\0\7\uffff}>";
    static final String[] DFA96_transitionS = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\1\1\4\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA96_eot = DFA.unpackEncodedString(DFA96_eotS);
    static final short[] DFA96_eof = DFA.unpackEncodedString(DFA96_eofS);
    static final char[] DFA96_min = DFA.unpackEncodedStringToUnsignedChars(DFA96_minS);
    static final char[] DFA96_max = DFA.unpackEncodedStringToUnsignedChars(DFA96_maxS);
    static final short[] DFA96_accept = DFA.unpackEncodedString(DFA96_acceptS);
    static final short[] DFA96_special = DFA.unpackEncodedString(DFA96_specialS);
    static final short[][] DFA96_transition;

    static {
        int numStates = DFA96_transitionS.length;
        DFA96_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA96_transition[i] = DFA.unpackEncodedString(DFA96_transitionS[i]);
        }
    }

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = DFA96_eot;
            this.eof = DFA96_eof;
            this.min = DFA96_min;
            this.max = DFA96_max;
            this.accept = DFA96_accept;
            this.special = DFA96_special;
            this.transition = DFA96_transition;
        }
        public String getDescription() {
            return "()* loopback of 13681:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_4 = input.LA(1);

                         
                        int index96_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA97_eotS =
        "\14\uffff";
    static final String DFA97_eofS =
        "\1\1\13\uffff";
    static final String DFA97_minS =
        "\1\7\3\uffff\1\0\7\uffff";
    static final String DFA97_maxS =
        "\1\112\3\uffff\1\0\7\uffff";
    static final String DFA97_acceptS =
        "\1\uffff\1\2\11\uffff\1\1";
    static final String DFA97_specialS =
        "\4\uffff\1\0\7\uffff}>";
    static final String[] DFA97_transitionS = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\1\1\4\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA97_eot = DFA.unpackEncodedString(DFA97_eotS);
    static final short[] DFA97_eof = DFA.unpackEncodedString(DFA97_eofS);
    static final char[] DFA97_min = DFA.unpackEncodedStringToUnsignedChars(DFA97_minS);
    static final char[] DFA97_max = DFA.unpackEncodedStringToUnsignedChars(DFA97_maxS);
    static final short[] DFA97_accept = DFA.unpackEncodedString(DFA97_acceptS);
    static final short[] DFA97_special = DFA.unpackEncodedString(DFA97_specialS);
    static final short[][] DFA97_transition;

    static {
        int numStates = DFA97_transitionS.length;
        DFA97_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA97_transition[i] = DFA.unpackEncodedString(DFA97_transitionS[i]);
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = DFA97_eot;
            this.eof = DFA97_eof;
            this.min = DFA97_min;
            this.max = DFA97_max;
            this.accept = DFA97_accept;
            this.special = DFA97_special;
            this.transition = DFA97_transition;
        }
        public String getDescription() {
            return "()* loopback of 13703:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_4 = input.LA(1);

                         
                        int index97_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index97_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA98_eotS =
        "\14\uffff";
    static final String DFA98_eofS =
        "\1\1\13\uffff";
    static final String DFA98_minS =
        "\1\7\4\uffff\4\0\3\uffff";
    static final String DFA98_maxS =
        "\1\112\4\uffff\4\0\3\uffff";
    static final String DFA98_acceptS =
        "\1\uffff\1\2\11\uffff\1\1";
    static final String DFA98_specialS =
        "\5\uffff\1\0\1\1\1\2\1\3\3\uffff}>";
    static final String[] DFA98_transitionS = {
            "\1\6\1\5\36\uffff\2\1\4\uffff\1\1\5\uffff\2\1\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] DFA98_eot = DFA.unpackEncodedString(DFA98_eotS);
    static final short[] DFA98_eof = DFA.unpackEncodedString(DFA98_eofS);
    static final char[] DFA98_min = DFA.unpackEncodedStringToUnsignedChars(DFA98_minS);
    static final char[] DFA98_max = DFA.unpackEncodedStringToUnsignedChars(DFA98_maxS);
    static final short[] DFA98_accept = DFA.unpackEncodedString(DFA98_acceptS);
    static final short[] DFA98_special = DFA.unpackEncodedString(DFA98_specialS);
    static final short[][] DFA98_transition;

    static {
        int numStates = DFA98_transitionS.length;
        DFA98_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA98_transition[i] = DFA.unpackEncodedString(DFA98_transitionS[i]);
        }
    }

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = DFA98_eot;
            this.eof = DFA98_eof;
            this.min = DFA98_min;
            this.max = DFA98_max;
            this.accept = DFA98_accept;
            this.special = DFA98_special;
            this.transition = DFA98_transition;
        }
        public String getDescription() {
            return "()* loopback of 13725:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_5 = input.LA(1);

                         
                        int index98_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_6 = input.LA(1);

                         
                        int index98_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA98_7 = input.LA(1);

                         
                        int index98_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA98_8 = input.LA(1);

                         
                        int index98_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA100_eotS =
        "\12\uffff";
    static final String DFA100_eofS =
        "\1\11\11\uffff";
    static final String DFA100_minS =
        "\1\7\11\uffff";
    static final String DFA100_maxS =
        "\1\112\11\uffff";
    static final String DFA100_acceptS =
        "\1\uffff\10\1\1\2";
    static final String DFA100_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA100_transitionS = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA100_eot = DFA.unpackEncodedString(DFA100_eotS);
    static final short[] DFA100_eof = DFA.unpackEncodedString(DFA100_eofS);
    static final char[] DFA100_min = DFA.unpackEncodedStringToUnsignedChars(DFA100_minS);
    static final char[] DFA100_max = DFA.unpackEncodedStringToUnsignedChars(DFA100_maxS);
    static final short[] DFA100_accept = DFA.unpackEncodedString(DFA100_acceptS);
    static final short[] DFA100_special = DFA.unpackEncodedString(DFA100_specialS);
    static final short[][] DFA100_transition;

    static {
        int numStates = DFA100_transitionS.length;
        DFA100_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA100_transition[i] = DFA.unpackEncodedString(DFA100_transitionS[i]);
        }
    }

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = DFA100_eot;
            this.eof = DFA100_eof;
            this.min = DFA100_min;
            this.max = DFA100_max;
            this.accept = DFA100_accept;
            this.special = DFA100_special;
            this.transition = DFA100_transition;
        }
        public String getDescription() {
            return "13746:2: ( rule__Unit__UnorderedGroup_7__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA100_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA100_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA100_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA100_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA100_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA100_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA100_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA100_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA100_0==EOF||LA100_0==45) ) {s = 9;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA101_eotS =
        "\12\uffff";
    static final String DFA101_eofS =
        "\1\11\11\uffff";
    static final String DFA101_minS =
        "\1\7\11\uffff";
    static final String DFA101_maxS =
        "\1\112\11\uffff";
    static final String DFA101_acceptS =
        "\1\uffff\10\1\1\2";
    static final String DFA101_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA101_transitionS = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA101_eot = DFA.unpackEncodedString(DFA101_eotS);
    static final short[] DFA101_eof = DFA.unpackEncodedString(DFA101_eofS);
    static final char[] DFA101_min = DFA.unpackEncodedStringToUnsignedChars(DFA101_minS);
    static final char[] DFA101_max = DFA.unpackEncodedStringToUnsignedChars(DFA101_maxS);
    static final short[] DFA101_accept = DFA.unpackEncodedString(DFA101_acceptS);
    static final short[] DFA101_special = DFA.unpackEncodedString(DFA101_specialS);
    static final short[][] DFA101_transition;

    static {
        int numStates = DFA101_transitionS.length;
        DFA101_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA101_transition[i] = DFA.unpackEncodedString(DFA101_transitionS[i]);
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = DFA101_eot;
            this.eof = DFA101_eof;
            this.min = DFA101_min;
            this.max = DFA101_max;
            this.accept = DFA101_accept;
            this.special = DFA101_special;
            this.transition = DFA101_transition;
        }
        public String getDescription() {
            return "13759:2: ( rule__Unit__UnorderedGroup_7__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_0 = input.LA(1);

                         
                        int index101_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA101_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA101_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA101_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA101_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA101_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA101_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA101_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA101_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA101_0==EOF||LA101_0==45) ) {s = 9;}

                         
                        input.seek(index101_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA102_eotS =
        "\12\uffff";
    static final String DFA102_eofS =
        "\1\11\11\uffff";
    static final String DFA102_minS =
        "\1\7\11\uffff";
    static final String DFA102_maxS =
        "\1\112\11\uffff";
    static final String DFA102_acceptS =
        "\1\uffff\10\1\1\2";
    static final String DFA102_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA102_transitionS = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA102_eot = DFA.unpackEncodedString(DFA102_eotS);
    static final short[] DFA102_eof = DFA.unpackEncodedString(DFA102_eofS);
    static final char[] DFA102_min = DFA.unpackEncodedStringToUnsignedChars(DFA102_minS);
    static final char[] DFA102_max = DFA.unpackEncodedStringToUnsignedChars(DFA102_maxS);
    static final short[] DFA102_accept = DFA.unpackEncodedString(DFA102_acceptS);
    static final short[] DFA102_special = DFA.unpackEncodedString(DFA102_specialS);
    static final short[][] DFA102_transition;

    static {
        int numStates = DFA102_transitionS.length;
        DFA102_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA102_transition[i] = DFA.unpackEncodedString(DFA102_transitionS[i]);
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = DFA102_eot;
            this.eof = DFA102_eof;
            this.min = DFA102_min;
            this.max = DFA102_max;
            this.accept = DFA102_accept;
            this.special = DFA102_special;
            this.transition = DFA102_transition;
        }
        public String getDescription() {
            return "13772:2: ( rule__Unit__UnorderedGroup_7__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA102_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA102_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA102_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA102_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA102_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA102_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA102_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA102_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA102_0==EOF||LA102_0==45) ) {s = 9;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA103_eotS =
        "\12\uffff";
    static final String DFA103_eofS =
        "\1\11\11\uffff";
    static final String DFA103_minS =
        "\1\7\11\uffff";
    static final String DFA103_maxS =
        "\1\112\11\uffff";
    static final String DFA103_acceptS =
        "\1\uffff\10\1\1\2";
    static final String DFA103_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA103_transitionS = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA103_eot = DFA.unpackEncodedString(DFA103_eotS);
    static final short[] DFA103_eof = DFA.unpackEncodedString(DFA103_eofS);
    static final char[] DFA103_min = DFA.unpackEncodedStringToUnsignedChars(DFA103_minS);
    static final char[] DFA103_max = DFA.unpackEncodedStringToUnsignedChars(DFA103_maxS);
    static final short[] DFA103_accept = DFA.unpackEncodedString(DFA103_acceptS);
    static final short[] DFA103_special = DFA.unpackEncodedString(DFA103_specialS);
    static final short[][] DFA103_transition;

    static {
        int numStates = DFA103_transitionS.length;
        DFA103_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA103_transition[i] = DFA.unpackEncodedString(DFA103_transitionS[i]);
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = DFA103_eot;
            this.eof = DFA103_eof;
            this.min = DFA103_min;
            this.max = DFA103_max;
            this.accept = DFA103_accept;
            this.special = DFA103_special;
            this.transition = DFA103_transition;
        }
        public String getDescription() {
            return "13785:2: ( rule__Unit__UnorderedGroup_7__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_0 = input.LA(1);

                         
                        int index103_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA103_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA103_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA103_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA103_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA103_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA103_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA103_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA103_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA103_0==EOF||LA103_0==45) ) {s = 9;}

                         
                        input.seek(index103_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA104_eotS =
        "\12\uffff";
    static final String DFA104_eofS =
        "\1\11\11\uffff";
    static final String DFA104_minS =
        "\1\7\11\uffff";
    static final String DFA104_maxS =
        "\1\112\11\uffff";
    static final String DFA104_acceptS =
        "\1\uffff\10\1\1\2";
    static final String DFA104_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA104_transitionS = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA104_eot = DFA.unpackEncodedString(DFA104_eotS);
    static final short[] DFA104_eof = DFA.unpackEncodedString(DFA104_eofS);
    static final char[] DFA104_min = DFA.unpackEncodedStringToUnsignedChars(DFA104_minS);
    static final char[] DFA104_max = DFA.unpackEncodedStringToUnsignedChars(DFA104_maxS);
    static final short[] DFA104_accept = DFA.unpackEncodedString(DFA104_acceptS);
    static final short[] DFA104_special = DFA.unpackEncodedString(DFA104_specialS);
    static final short[][] DFA104_transition;

    static {
        int numStates = DFA104_transitionS.length;
        DFA104_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA104_transition[i] = DFA.unpackEncodedString(DFA104_transitionS[i]);
        }
    }

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = DFA104_eot;
            this.eof = DFA104_eof;
            this.min = DFA104_min;
            this.max = DFA104_max;
            this.accept = DFA104_accept;
            this.special = DFA104_special;
            this.transition = DFA104_transition;
        }
        public String getDescription() {
            return "13798:2: ( rule__Unit__UnorderedGroup_7__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_0 = input.LA(1);

                         
                        int index104_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA104_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA104_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA104_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA104_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA104_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA104_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA104_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA104_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA104_0==EOF||LA104_0==45) ) {s = 9;}

                         
                        input.seek(index104_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    protected static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000002102L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0800000000000182L,0x0000000000000400L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000002100L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000D00000000080L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0818018000000180L,0x0000000000000400L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0001000000000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0001000000000002L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000200000090L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0004000000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000002080L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00C0400000000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x90001FF880002090L,0x00000000000000A0L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0100100000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0640400000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000200000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000200000002L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x90001FF890002090L,0x00000000000009A0L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x1000000000000080L,0x0000000000000100L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0800000000000180L,0x0000000000000400L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x1000000000000080L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x1042100000000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x3000000000000080L,0x0000000000000900L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0002100000000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00000000000FC000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x1000000020000080L,0x0000000000000400L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000004000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001400L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001000008000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x2000000000000080L,0x0000000000000800L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x000000001FF00000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x000000001FF00002L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x00000000C0000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00000000C0000002L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000700000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000700000002L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000880000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x10001FC000002090L,0x00000000000000A0L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000003000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000CL});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xB0001FF890002090L,0x00000000000009A0L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0002100000000080L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x90001FF8A0002090L,0x00000000000014A0L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x90003FF8A0002090L,0x00000000000014A0L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x90001FF8A0002092L,0x00000000000014A0L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x00000FC000002000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x1100100000000000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x1000000010000080L,0x0000000000000900L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x00000000000000E0L,0x0000000000000004L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x00000000000000E2L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x00000000000000E0L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0008000000000002L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0010000000000002L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0818018000000182L,0x0000000000000400L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x00C0400000000002L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0640400000000002L,0x0000000000000200L});
    }


}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser2 extends InternalBeeLangTestLanguageParser1 {

        InternalBeeLangTestLanguageParser2(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser2(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "entryRuleModel"
    // InternalBeeLangTestLanguage.g:62:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        int entryRuleModel_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return ; }
            // InternalBeeLangTestLanguage.g:63:1: ( ruleModel EOF )
            // InternalBeeLangTestLanguage.g:64:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, entryRuleModel_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalBeeLangTestLanguage.g:71:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {
        int ruleModel_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return ; }
            // InternalBeeLangTestLanguage.g:75:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:76:1: ( ( rule__Model__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:76:1: ( ( rule__Model__Alternatives ) )
            // InternalBeeLangTestLanguage.g:77:1: ( rule__Model__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:78:1: ( rule__Model__Alternatives )
            // InternalBeeLangTestLanguage.g:78:2: rule__Model__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, ruleModel_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleUnit"
    // InternalBeeLangTestLanguage.g:90:1: entryRuleUnit : ruleUnit EOF ;
    public final void entryRuleUnit() throws RecognitionException {
        int entryRuleUnit_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return ; }
            // InternalBeeLangTestLanguage.g:91:1: ( ruleUnit EOF )
            // InternalBeeLangTestLanguage.g:92:1: ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, entryRuleUnit_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalBeeLangTestLanguage.g:99:1: ruleUnit : ( ( rule__Unit__Group__0 ) ) ;
    public final void ruleUnit() throws RecognitionException {
        int ruleUnit_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return ; }
            // InternalBeeLangTestLanguage.g:103:2: ( ( ( rule__Unit__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:104:1: ( ( rule__Unit__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:104:1: ( ( rule__Unit__Group__0 ) )
            // InternalBeeLangTestLanguage.g:105:1: ( rule__Unit__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:106:1: ( rule__Unit__Group__0 )
            // InternalBeeLangTestLanguage.g:106:2: rule__Unit__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, ruleUnit_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleProvidedCapability"
    // InternalBeeLangTestLanguage.g:118:1: entryRuleProvidedCapability : ruleProvidedCapability EOF ;
    public final void entryRuleProvidedCapability() throws RecognitionException {
        int entryRuleProvidedCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return ; }
            // InternalBeeLangTestLanguage.g:119:1: ( ruleProvidedCapability EOF )
            // InternalBeeLangTestLanguage.g:120:1: ruleProvidedCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleProvidedCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, entryRuleProvidedCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleProvidedCapability"


    // $ANTLR start "ruleProvidedCapability"
    // InternalBeeLangTestLanguage.g:127:1: ruleProvidedCapability : ( ( rule__ProvidedCapability__Group__0 ) ) ;
    public final void ruleProvidedCapability() throws RecognitionException {
        int ruleProvidedCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return ; }
            // InternalBeeLangTestLanguage.g:131:2: ( ( ( rule__ProvidedCapability__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:132:1: ( ( rule__ProvidedCapability__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:132:1: ( ( rule__ProvidedCapability__Group__0 ) )
            // InternalBeeLangTestLanguage.g:133:1: ( rule__ProvidedCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:134:1: ( rule__ProvidedCapability__Group__0 )
            // InternalBeeLangTestLanguage.g:134:2: rule__ProvidedCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, ruleProvidedCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProvidedCapability"


    // $ANTLR start "entryRuleAliasedRequiredCapability"
    // InternalBeeLangTestLanguage.g:146:1: entryRuleAliasedRequiredCapability : ruleAliasedRequiredCapability EOF ;
    public final void entryRuleAliasedRequiredCapability() throws RecognitionException {
        int entryRuleAliasedRequiredCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return ; }
            // InternalBeeLangTestLanguage.g:147:1: ( ruleAliasedRequiredCapability EOF )
            // InternalBeeLangTestLanguage.g:148:1: ruleAliasedRequiredCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAliasedRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, entryRuleAliasedRequiredCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedRequiredCapability"


    // $ANTLR start "ruleAliasedRequiredCapability"
    // InternalBeeLangTestLanguage.g:155:1: ruleAliasedRequiredCapability : ( ( rule__AliasedRequiredCapability__Group__0 ) ) ;
    public final void ruleAliasedRequiredCapability() throws RecognitionException {
        int ruleAliasedRequiredCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return ; }
            // InternalBeeLangTestLanguage.g:159:2: ( ( ( rule__AliasedRequiredCapability__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:160:1: ( ( rule__AliasedRequiredCapability__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:160:1: ( ( rule__AliasedRequiredCapability__Group__0 ) )
            // InternalBeeLangTestLanguage.g:161:1: ( rule__AliasedRequiredCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:162:1: ( rule__AliasedRequiredCapability__Group__0 )
            // InternalBeeLangTestLanguage.g:162:2: rule__AliasedRequiredCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, ruleAliasedRequiredCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedRequiredCapability"


    // $ANTLR start "entryRuleRequiredCapability"
    // InternalBeeLangTestLanguage.g:174:1: entryRuleRequiredCapability : ruleRequiredCapability EOF ;
    public final void entryRuleRequiredCapability() throws RecognitionException {
        int entryRuleRequiredCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return ; }
            // InternalBeeLangTestLanguage.g:175:1: ( ruleRequiredCapability EOF )
            // InternalBeeLangTestLanguage.g:176:1: ruleRequiredCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, entryRuleRequiredCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRequiredCapability"


    // $ANTLR start "ruleRequiredCapability"
    // InternalBeeLangTestLanguage.g:183:1: ruleRequiredCapability : ( ( rule__RequiredCapability__Group__0 ) ) ;
    public final void ruleRequiredCapability() throws RecognitionException {
        int ruleRequiredCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return ; }
            // InternalBeeLangTestLanguage.g:187:2: ( ( ( rule__RequiredCapability__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:188:1: ( ( rule__RequiredCapability__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:188:1: ( ( rule__RequiredCapability__Group__0 ) )
            // InternalBeeLangTestLanguage.g:189:1: ( rule__RequiredCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:190:1: ( rule__RequiredCapability__Group__0 )
            // InternalBeeLangTestLanguage.g:190:2: rule__RequiredCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, ruleRequiredCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRequiredCapability"


    // $ANTLR start "entryRulePath"
    // InternalBeeLangTestLanguage.g:202:1: entryRulePath : rulePath EOF ;
    public final void entryRulePath() throws RecognitionException {
        int entryRulePath_StartIndex = input.index();

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return ; }
            // InternalBeeLangTestLanguage.g:206:1: ( rulePath EOF )
            // InternalBeeLangTestLanguage.g:207:1: rulePath EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, entryRulePath_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalBeeLangTestLanguage.g:217:1: rulePath : ( ( rule__Path__Alternatives ) ) ;
    public final void rulePath() throws RecognitionException {
        int rulePath_StartIndex = input.index();

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return ; }
            // InternalBeeLangTestLanguage.g:222:2: ( ( ( rule__Path__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:223:1: ( ( rule__Path__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:223:1: ( ( rule__Path__Alternatives ) )
            // InternalBeeLangTestLanguage.g:224:1: ( rule__Path__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:225:1: ( rule__Path__Alternatives )
            // InternalBeeLangTestLanguage.g:225:2: rule__Path__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, rulePath_StartIndex); }

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleParameterList"
    // InternalBeeLangTestLanguage.g:238:1: entryRuleParameterList : ruleParameterList EOF ;
    public final void entryRuleParameterList() throws RecognitionException {
        int entryRuleParameterList_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return ; }
            // InternalBeeLangTestLanguage.g:239:1: ( ruleParameterList EOF )
            // InternalBeeLangTestLanguage.g:240:1: ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, entryRuleParameterList_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalBeeLangTestLanguage.g:247:1: ruleParameterList : ( ( rule__ParameterList__Group__0 ) ) ;
    public final void ruleParameterList() throws RecognitionException {
        int ruleParameterList_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return ; }
            // InternalBeeLangTestLanguage.g:251:2: ( ( ( rule__ParameterList__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:252:1: ( ( rule__ParameterList__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:252:1: ( ( rule__ParameterList__Group__0 ) )
            // InternalBeeLangTestLanguage.g:253:1: ( rule__ParameterList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:254:1: ( rule__ParameterList__Group__0 )
            // InternalBeeLangTestLanguage.g:254:2: rule__ParameterList__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, ruleParameterList_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleFirstParameter"
    // InternalBeeLangTestLanguage.g:266:1: entryRuleFirstParameter : ruleFirstParameter EOF ;
    public final void entryRuleFirstParameter() throws RecognitionException {
        int entryRuleFirstParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return ; }
            // InternalBeeLangTestLanguage.g:267:1: ( ruleFirstParameter EOF )
            // InternalBeeLangTestLanguage.g:268:1: ruleFirstParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, entryRuleFirstParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFirstParameter"


    // $ANTLR start "ruleFirstParameter"
    // InternalBeeLangTestLanguage.g:275:1: ruleFirstParameter : ( ( rule__FirstParameter__Alternatives ) ) ;
    public final void ruleFirstParameter() throws RecognitionException {
        int ruleFirstParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return ; }
            // InternalBeeLangTestLanguage.g:279:2: ( ( ( rule__FirstParameter__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:280:1: ( ( rule__FirstParameter__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:280:1: ( ( rule__FirstParameter__Alternatives ) )
            // InternalBeeLangTestLanguage.g:281:1: ( rule__FirstParameter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstParameterAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:282:1: ( rule__FirstParameter__Alternatives )
            // InternalBeeLangTestLanguage.g:282:2: rule__FirstParameter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FirstParameter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstParameterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, ruleFirstParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFirstParameter"


    // $ANTLR start "entryRuleParameter"
    // InternalBeeLangTestLanguage.g:294:1: entryRuleParameter : ruleParameter EOF ;
    public final void entryRuleParameter() throws RecognitionException {
        int entryRuleParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return ; }
            // InternalBeeLangTestLanguage.g:295:1: ( ruleParameter EOF )
            // InternalBeeLangTestLanguage.g:296:1: ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, entryRuleParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalBeeLangTestLanguage.g:303:1: ruleParameter : ( ( rule__Parameter__ExprAssignment ) ) ;
    public final void ruleParameter() throws RecognitionException {
        int ruleParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return ; }
            // InternalBeeLangTestLanguage.g:307:2: ( ( ( rule__Parameter__ExprAssignment ) ) )
            // InternalBeeLangTestLanguage.g:308:1: ( ( rule__Parameter__ExprAssignment ) )
            {
            // InternalBeeLangTestLanguage.g:308:1: ( ( rule__Parameter__ExprAssignment ) )
            // InternalBeeLangTestLanguage.g:309:1: ( rule__Parameter__ExprAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExprAssignment()); 
            }
            // InternalBeeLangTestLanguage.g:310:1: ( rule__Parameter__ExprAssignment )
            // InternalBeeLangTestLanguage.g:310:2: rule__Parameter__ExprAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Parameter__ExprAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExprAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, ruleParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleClosureParameter"
    // InternalBeeLangTestLanguage.g:322:1: entryRuleClosureParameter : ruleClosureParameter EOF ;
    public final void entryRuleClosureParameter() throws RecognitionException {
        int entryRuleClosureParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return ; }
            // InternalBeeLangTestLanguage.g:323:1: ( ruleClosureParameter EOF )
            // InternalBeeLangTestLanguage.g:324:1: ruleClosureParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, entryRuleClosureParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureParameter"


    // $ANTLR start "ruleClosureParameter"
    // InternalBeeLangTestLanguage.g:331:1: ruleClosureParameter : ( ( rule__ClosureParameter__ExprAssignment ) ) ;
    public final void ruleClosureParameter() throws RecognitionException {
        int ruleClosureParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return ; }
            // InternalBeeLangTestLanguage.g:335:2: ( ( ( rule__ClosureParameter__ExprAssignment ) ) )
            // InternalBeeLangTestLanguage.g:336:1: ( ( rule__ClosureParameter__ExprAssignment ) )
            {
            // InternalBeeLangTestLanguage.g:336:1: ( ( rule__ClosureParameter__ExprAssignment ) )
            // InternalBeeLangTestLanguage.g:337:1: ( rule__ClosureParameter__ExprAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterAccess().getExprAssignment()); 
            }
            // InternalBeeLangTestLanguage.g:338:1: ( rule__ClosureParameter__ExprAssignment )
            // InternalBeeLangTestLanguage.g:338:2: rule__ClosureParameter__ExprAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureParameter__ExprAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterAccess().getExprAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, ruleClosureParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureParameter"


    // $ANTLR start "entryRuleParameterDeclaration"
    // InternalBeeLangTestLanguage.g:350:1: entryRuleParameterDeclaration : ruleParameterDeclaration EOF ;
    public final void entryRuleParameterDeclaration() throws RecognitionException {
        int entryRuleParameterDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return ; }
            // InternalBeeLangTestLanguage.g:351:1: ( ruleParameterDeclaration EOF )
            // InternalBeeLangTestLanguage.g:352:1: ruleParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, entryRuleParameterDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterDeclaration"


    // $ANTLR start "ruleParameterDeclaration"
    // InternalBeeLangTestLanguage.g:359:1: ruleParameterDeclaration : ( ( rule__ParameterDeclaration__Group__0 ) ) ;
    public final void ruleParameterDeclaration() throws RecognitionException {
        int ruleParameterDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return ; }
            // InternalBeeLangTestLanguage.g:363:2: ( ( ( rule__ParameterDeclaration__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:364:1: ( ( rule__ParameterDeclaration__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:364:1: ( ( rule__ParameterDeclaration__Group__0 ) )
            // InternalBeeLangTestLanguage.g:365:1: ( rule__ParameterDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:366:1: ( rule__ParameterDeclaration__Group__0 )
            // InternalBeeLangTestLanguage.g:366:2: rule__ParameterDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, ruleParameterDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterDeclaration"


    // $ANTLR start "entryRuleFunction"
    // InternalBeeLangTestLanguage.g:378:1: entryRuleFunction : ruleFunction EOF ;
    public final void entryRuleFunction() throws RecognitionException {
        int entryRuleFunction_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return ; }
            // InternalBeeLangTestLanguage.g:379:1: ( ruleFunction EOF )
            // InternalBeeLangTestLanguage.g:380:1: ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, entryRuleFunction_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalBeeLangTestLanguage.g:387:1: ruleFunction : ( ( rule__Function__Group__0 ) ) ;
    public final void ruleFunction() throws RecognitionException {
        int ruleFunction_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return ; }
            // InternalBeeLangTestLanguage.g:391:2: ( ( ( rule__Function__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:392:1: ( ( rule__Function__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:392:1: ( ( rule__Function__Group__0 ) )
            // InternalBeeLangTestLanguage.g:393:1: ( rule__Function__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:394:1: ( rule__Function__Group__0 )
            // InternalBeeLangTestLanguage.g:394:2: rule__Function__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, ruleFunction_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleGuardExpression"
    // InternalBeeLangTestLanguage.g:406:1: entryRuleGuardExpression : ruleGuardExpression EOF ;
    public final void entryRuleGuardExpression() throws RecognitionException {
        int entryRuleGuardExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return ; }
            // InternalBeeLangTestLanguage.g:407:1: ( ruleGuardExpression EOF )
            // InternalBeeLangTestLanguage.g:408:1: ruleGuardExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleGuardExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, entryRuleGuardExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleGuardExpression"


    // $ANTLR start "ruleGuardExpression"
    // InternalBeeLangTestLanguage.g:415:1: ruleGuardExpression : ( ( rule__GuardExpression__Alternatives ) ) ;
    public final void ruleGuardExpression() throws RecognitionException {
        int ruleGuardExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return ; }
            // InternalBeeLangTestLanguage.g:419:2: ( ( ( rule__GuardExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:420:1: ( ( rule__GuardExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:420:1: ( ( rule__GuardExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:421:1: ( rule__GuardExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:422:1: ( rule__GuardExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:422:2: rule__GuardExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, ruleGuardExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGuardExpression"


    // $ANTLR start "entryRuleAssignmentOperator"
    // InternalBeeLangTestLanguage.g:434:1: entryRuleAssignmentOperator : ruleAssignmentOperator EOF ;
    public final void entryRuleAssignmentOperator() throws RecognitionException {
        int entryRuleAssignmentOperator_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return ; }
            // InternalBeeLangTestLanguage.g:435:1: ( ruleAssignmentOperator EOF )
            // InternalBeeLangTestLanguage.g:436:1: ruleAssignmentOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentOperatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentOperatorRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, entryRuleAssignmentOperator_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentOperator"


    // $ANTLR start "ruleAssignmentOperator"
    // InternalBeeLangTestLanguage.g:443:1: ruleAssignmentOperator : ( ( rule__AssignmentOperator__Alternatives ) ) ;
    public final void ruleAssignmentOperator() throws RecognitionException {
        int ruleAssignmentOperator_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return ; }
            // InternalBeeLangTestLanguage.g:447:2: ( ( ( rule__AssignmentOperator__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:448:1: ( ( rule__AssignmentOperator__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:448:1: ( ( rule__AssignmentOperator__Alternatives ) )
            // InternalBeeLangTestLanguage.g:449:1: ( rule__AssignmentOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:450:1: ( rule__AssignmentOperator__Alternatives )
            // InternalBeeLangTestLanguage.g:450:2: rule__AssignmentOperator__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, ruleAssignmentOperator_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentOperator"


    // $ANTLR start "entryRuleRelationalOperator"
    // InternalBeeLangTestLanguage.g:462:1: entryRuleRelationalOperator : ruleRelationalOperator EOF ;
    public final void entryRuleRelationalOperator() throws RecognitionException {
        int entryRuleRelationalOperator_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return ; }
            // InternalBeeLangTestLanguage.g:463:1: ( ruleRelationalOperator EOF )
            // InternalBeeLangTestLanguage.g:464:1: ruleRelationalOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalOperatorRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, entryRuleRelationalOperator_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRelationalOperator"


    // $ANTLR start "ruleRelationalOperator"
    // InternalBeeLangTestLanguage.g:471:1: ruleRelationalOperator : ( ( rule__RelationalOperator__Alternatives ) ) ;
    public final void ruleRelationalOperator() throws RecognitionException {
        int ruleRelationalOperator_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return ; }
            // InternalBeeLangTestLanguage.g:475:2: ( ( ( rule__RelationalOperator__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:476:1: ( ( rule__RelationalOperator__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:476:1: ( ( rule__RelationalOperator__Alternatives ) )
            // InternalBeeLangTestLanguage.g:477:1: ( rule__RelationalOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:478:1: ( rule__RelationalOperator__Alternatives )
            // InternalBeeLangTestLanguage.g:478:2: rule__RelationalOperator__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, ruleRelationalOperator_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelationalOperator"


    // $ANTLR start "entryRuleTopLevelExpression"
    // InternalBeeLangTestLanguage.g:490:1: entryRuleTopLevelExpression : ruleTopLevelExpression EOF ;
    public final void entryRuleTopLevelExpression() throws RecognitionException {
        int entryRuleTopLevelExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return ; }
            // InternalBeeLangTestLanguage.g:491:1: ( ruleTopLevelExpression EOF )
            // InternalBeeLangTestLanguage.g:492:1: ruleTopLevelExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, entryRuleTopLevelExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleTopLevelExpression"


    // $ANTLR start "ruleTopLevelExpression"
    // InternalBeeLangTestLanguage.g:499:1: ruleTopLevelExpression : ( ( rule__TopLevelExpression__Alternatives ) ) ;
    public final void ruleTopLevelExpression() throws RecognitionException {
        int ruleTopLevelExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return ; }
            // InternalBeeLangTestLanguage.g:503:2: ( ( ( rule__TopLevelExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:504:1: ( ( rule__TopLevelExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:504:1: ( ( rule__TopLevelExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:505:1: ( rule__TopLevelExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:506:1: ( rule__TopLevelExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:506:2: rule__TopLevelExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TopLevelExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, ruleTopLevelExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTopLevelExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalBeeLangTestLanguage.g:518:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        int entryRuleExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return ; }
            // InternalBeeLangTestLanguage.g:519:1: ( ruleExpression EOF )
            // InternalBeeLangTestLanguage.g:520:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, entryRuleExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalBeeLangTestLanguage.g:527:1: ruleExpression : ( ruleAssignmentExpression ) ;
    public final void ruleExpression() throws RecognitionException {
        int ruleExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return ; }
            // InternalBeeLangTestLanguage.g:531:2: ( ( ruleAssignmentExpression ) )
            // InternalBeeLangTestLanguage.g:532:1: ( ruleAssignmentExpression )
            {
            // InternalBeeLangTestLanguage.g:532:1: ( ruleAssignmentExpression )
            // InternalBeeLangTestLanguage.g:533:1: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, ruleExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleAssignmentExpression"
    // InternalBeeLangTestLanguage.g:546:1: entryRuleAssignmentExpression : ruleAssignmentExpression EOF ;
    public final void entryRuleAssignmentExpression() throws RecognitionException {
        int entryRuleAssignmentExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return ; }
            // InternalBeeLangTestLanguage.g:547:1: ( ruleAssignmentExpression EOF )
            // InternalBeeLangTestLanguage.g:548:1: ruleAssignmentExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, entryRuleAssignmentExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentExpression"


    // $ANTLR start "ruleAssignmentExpression"
    // InternalBeeLangTestLanguage.g:555:1: ruleAssignmentExpression : ( ( rule__AssignmentExpression__Group__0 ) ) ;
    public final void ruleAssignmentExpression() throws RecognitionException {
        int ruleAssignmentExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return ; }
            // InternalBeeLangTestLanguage.g:559:2: ( ( ( rule__AssignmentExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:560:1: ( ( rule__AssignmentExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:560:1: ( ( rule__AssignmentExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:561:1: ( rule__AssignmentExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:562:1: ( rule__AssignmentExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:562:2: rule__AssignmentExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, ruleAssignmentExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentExpression"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalBeeLangTestLanguage.g:574:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        int entryRuleVarDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return ; }
            // InternalBeeLangTestLanguage.g:575:1: ( ruleVarDeclaration EOF )
            // InternalBeeLangTestLanguage.g:576:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, entryRuleVarDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalBeeLangTestLanguage.g:583:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {
        int ruleVarDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return ; }
            // InternalBeeLangTestLanguage.g:587:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:588:1: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:588:1: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalBeeLangTestLanguage.g:589:1: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:590:1: ( rule__VarDeclaration__Group__0 )
            // InternalBeeLangTestLanguage.g:590:2: rule__VarDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, ruleVarDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleValDeclaration"
    // InternalBeeLangTestLanguage.g:602:1: entryRuleValDeclaration : ruleValDeclaration EOF ;
    public final void entryRuleValDeclaration() throws RecognitionException {
        int entryRuleValDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return ; }
            // InternalBeeLangTestLanguage.g:603:1: ( ruleValDeclaration EOF )
            // InternalBeeLangTestLanguage.g:604:1: ruleValDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, entryRuleValDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValDeclaration"


    // $ANTLR start "ruleValDeclaration"
    // InternalBeeLangTestLanguage.g:611:1: ruleValDeclaration : ( ( rule__ValDeclaration__Group__0 ) ) ;
    public final void ruleValDeclaration() throws RecognitionException {
        int ruleValDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return ; }
            // InternalBeeLangTestLanguage.g:615:2: ( ( ( rule__ValDeclaration__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:616:1: ( ( rule__ValDeclaration__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:616:1: ( ( rule__ValDeclaration__Group__0 ) )
            // InternalBeeLangTestLanguage.g:617:1: ( rule__ValDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:618:1: ( rule__ValDeclaration__Group__0 )
            // InternalBeeLangTestLanguage.g:618:2: rule__ValDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, ruleValDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValDeclaration"


    // $ANTLR start "entryRuleTypeRef"
    // InternalBeeLangTestLanguage.g:630:1: entryRuleTypeRef : ruleTypeRef EOF ;
    public final void entryRuleTypeRef() throws RecognitionException {
        int entryRuleTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return ; }
            // InternalBeeLangTestLanguage.g:631:1: ( ruleTypeRef EOF )
            // InternalBeeLangTestLanguage.g:632:1: ruleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, entryRuleTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeRef"


    // $ANTLR start "ruleTypeRef"
    // InternalBeeLangTestLanguage.g:639:1: ruleTypeRef : ( ( rule__TypeRef__Alternatives ) ) ;
    public final void ruleTypeRef() throws RecognitionException {
        int ruleTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return ; }
            // InternalBeeLangTestLanguage.g:643:2: ( ( ( rule__TypeRef__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:644:1: ( ( rule__TypeRef__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:644:1: ( ( rule__TypeRef__Alternatives ) )
            // InternalBeeLangTestLanguage.g:645:1: ( rule__TypeRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:646:1: ( rule__TypeRef__Alternatives )
            // InternalBeeLangTestLanguage.g:646:2: rule__TypeRef__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, ruleTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeRef"


    // $ANTLR start "entryRuleSimpleTypeRef"
    // InternalBeeLangTestLanguage.g:658:1: entryRuleSimpleTypeRef : ruleSimpleTypeRef EOF ;
    public final void entryRuleSimpleTypeRef() throws RecognitionException {
        int entryRuleSimpleTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return ; }
            // InternalBeeLangTestLanguage.g:659:1: ( ruleSimpleTypeRef EOF )
            // InternalBeeLangTestLanguage.g:660:1: ruleSimpleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, entryRuleSimpleTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleTypeRef"


    // $ANTLR start "ruleSimpleTypeRef"
    // InternalBeeLangTestLanguage.g:667:1: ruleSimpleTypeRef : ( ( rule__SimpleTypeRef__Group__0 ) ) ;
    public final void ruleSimpleTypeRef() throws RecognitionException {
        int ruleSimpleTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return ; }
            // InternalBeeLangTestLanguage.g:671:2: ( ( ( rule__SimpleTypeRef__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:672:1: ( ( rule__SimpleTypeRef__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:672:1: ( ( rule__SimpleTypeRef__Group__0 ) )
            // InternalBeeLangTestLanguage.g:673:1: ( rule__SimpleTypeRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:674:1: ( rule__SimpleTypeRef__Group__0 )
            // InternalBeeLangTestLanguage.g:674:2: rule__SimpleTypeRef__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, ruleSimpleTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleTypeRef"


    // $ANTLR start "entryRuleClosureTypeRef"
    // InternalBeeLangTestLanguage.g:686:1: entryRuleClosureTypeRef : ruleClosureTypeRef EOF ;
    public final void entryRuleClosureTypeRef() throws RecognitionException {
        int entryRuleClosureTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return ; }
            // InternalBeeLangTestLanguage.g:687:1: ( ruleClosureTypeRef EOF )
            // InternalBeeLangTestLanguage.g:688:1: ruleClosureTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, entryRuleClosureTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureTypeRef"


    // $ANTLR start "ruleClosureTypeRef"
    // InternalBeeLangTestLanguage.g:695:1: ruleClosureTypeRef : ( ( rule__ClosureTypeRef__Group__0 ) ) ;
    public final void ruleClosureTypeRef() throws RecognitionException {
        int ruleClosureTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return ; }
            // InternalBeeLangTestLanguage.g:699:2: ( ( ( rule__ClosureTypeRef__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:700:1: ( ( rule__ClosureTypeRef__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:700:1: ( ( rule__ClosureTypeRef__Group__0 ) )
            // InternalBeeLangTestLanguage.g:701:1: ( rule__ClosureTypeRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:702:1: ( rule__ClosureTypeRef__Group__0 )
            // InternalBeeLangTestLanguage.g:702:2: rule__ClosureTypeRef__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, ruleClosureTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureTypeRef"


    // $ANTLR start "entryRuleCachedExpression"
    // InternalBeeLangTestLanguage.g:714:1: entryRuleCachedExpression : ruleCachedExpression EOF ;
    public final void entryRuleCachedExpression() throws RecognitionException {
        int entryRuleCachedExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return ; }
            // InternalBeeLangTestLanguage.g:715:1: ( ruleCachedExpression EOF )
            // InternalBeeLangTestLanguage.g:716:1: ruleCachedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCachedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, entryRuleCachedExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleCachedExpression"


    // $ANTLR start "ruleCachedExpression"
    // InternalBeeLangTestLanguage.g:723:1: ruleCachedExpression : ( ( rule__CachedExpression__Alternatives ) ) ;
    public final void ruleCachedExpression() throws RecognitionException {
        int ruleCachedExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return ; }
            // InternalBeeLangTestLanguage.g:727:2: ( ( ( rule__CachedExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:728:1: ( ( rule__CachedExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:728:1: ( ( rule__CachedExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:729:1: ( rule__CachedExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:730:1: ( rule__CachedExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:730:2: rule__CachedExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, ruleCachedExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCachedExpression"


    // $ANTLR start "entryRuleOrExpression"
    // InternalBeeLangTestLanguage.g:742:1: entryRuleOrExpression : ruleOrExpression EOF ;
    public final void entryRuleOrExpression() throws RecognitionException {
        int entryRuleOrExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return ; }
            // InternalBeeLangTestLanguage.g:743:1: ( ruleOrExpression EOF )
            // InternalBeeLangTestLanguage.g:744:1: ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, entryRuleOrExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalBeeLangTestLanguage.g:751:1: ruleOrExpression : ( ( rule__OrExpression__Group__0 ) ) ;
    public final void ruleOrExpression() throws RecognitionException {
        int ruleOrExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return ; }
            // InternalBeeLangTestLanguage.g:755:2: ( ( ( rule__OrExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:756:1: ( ( rule__OrExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:756:1: ( ( rule__OrExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:757:1: ( rule__OrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:758:1: ( rule__OrExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:758:2: rule__OrExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, ruleOrExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleAndExpression"
    // InternalBeeLangTestLanguage.g:770:1: entryRuleAndExpression : ruleAndExpression EOF ;
    public final void entryRuleAndExpression() throws RecognitionException {
        int entryRuleAndExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return ; }
            // InternalBeeLangTestLanguage.g:771:1: ( ruleAndExpression EOF )
            // InternalBeeLangTestLanguage.g:772:1: ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, entryRuleAndExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalBeeLangTestLanguage.g:779:1: ruleAndExpression : ( ( rule__AndExpression__Group__0 ) ) ;
    public final void ruleAndExpression() throws RecognitionException {
        int ruleAndExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return ; }
            // InternalBeeLangTestLanguage.g:783:2: ( ( ( rule__AndExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:784:1: ( ( rule__AndExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:784:1: ( ( rule__AndExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:785:1: ( rule__AndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:786:1: ( rule__AndExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:786:2: rule__AndExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, ruleAndExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalBeeLangTestLanguage.g:798:1: entryRuleRelationalExpression : ruleRelationalExpression EOF ;
    public final void entryRuleRelationalExpression() throws RecognitionException {
        int entryRuleRelationalExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return ; }
            // InternalBeeLangTestLanguage.g:799:1: ( ruleRelationalExpression EOF )
            // InternalBeeLangTestLanguage.g:800:1: ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, entryRuleRelationalExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalBeeLangTestLanguage.g:807:1: ruleRelationalExpression : ( ( rule__RelationalExpression__Group__0 ) ) ;
    public final void ruleRelationalExpression() throws RecognitionException {
        int ruleRelationalExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return ; }
            // InternalBeeLangTestLanguage.g:811:2: ( ( ( rule__RelationalExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:812:1: ( ( rule__RelationalExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:812:1: ( ( rule__RelationalExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:813:1: ( rule__RelationalExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:814:1: ( rule__RelationalExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:814:2: rule__RelationalExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, ruleRelationalExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalBeeLangTestLanguage.g:826:1: entryRuleAdditiveExpression : ruleAdditiveExpression EOF ;
    public final void entryRuleAdditiveExpression() throws RecognitionException {
        int entryRuleAdditiveExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return ; }
            // InternalBeeLangTestLanguage.g:827:1: ( ruleAdditiveExpression EOF )
            // InternalBeeLangTestLanguage.g:828:1: ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, entryRuleAdditiveExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalBeeLangTestLanguage.g:835:1: ruleAdditiveExpression : ( ( rule__AdditiveExpression__Group__0 ) ) ;
    public final void ruleAdditiveExpression() throws RecognitionException {
        int ruleAdditiveExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return ; }
            // InternalBeeLangTestLanguage.g:839:2: ( ( ( rule__AdditiveExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:840:1: ( ( rule__AdditiveExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:840:1: ( ( rule__AdditiveExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:841:1: ( rule__AdditiveExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:842:1: ( rule__AdditiveExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:842:2: rule__AdditiveExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, ruleAdditiveExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalBeeLangTestLanguage.g:854:1: entryRuleMultiplicativeExpression : ruleMultiplicativeExpression EOF ;
    public final void entryRuleMultiplicativeExpression() throws RecognitionException {
        int entryRuleMultiplicativeExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return ; }
            // InternalBeeLangTestLanguage.g:855:1: ( ruleMultiplicativeExpression EOF )
            // InternalBeeLangTestLanguage.g:856:1: ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, entryRuleMultiplicativeExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalBeeLangTestLanguage.g:863:1: ruleMultiplicativeExpression : ( ( rule__MultiplicativeExpression__Group__0 ) ) ;
    public final void ruleMultiplicativeExpression() throws RecognitionException {
        int ruleMultiplicativeExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return ; }
            // InternalBeeLangTestLanguage.g:867:2: ( ( ( rule__MultiplicativeExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:868:1: ( ( rule__MultiplicativeExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:868:1: ( ( rule__MultiplicativeExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:869:1: ( rule__MultiplicativeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:870:1: ( rule__MultiplicativeExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:870:2: rule__MultiplicativeExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, ruleMultiplicativeExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleSetExpression"
    // InternalBeeLangTestLanguage.g:882:1: entryRuleSetExpression : ruleSetExpression EOF ;
    public final void entryRuleSetExpression() throws RecognitionException {
        int entryRuleSetExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return ; }
            // InternalBeeLangTestLanguage.g:883:1: ( ruleSetExpression EOF )
            // InternalBeeLangTestLanguage.g:884:1: ruleSetExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, entryRuleSetExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleSetExpression"


    // $ANTLR start "ruleSetExpression"
    // InternalBeeLangTestLanguage.g:891:1: ruleSetExpression : ( ( rule__SetExpression__Group__0 ) ) ;
    public final void ruleSetExpression() throws RecognitionException {
        int ruleSetExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return ; }
            // InternalBeeLangTestLanguage.g:895:2: ( ( ( rule__SetExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:896:1: ( ( rule__SetExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:896:1: ( ( rule__SetExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:897:1: ( rule__SetExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:898:1: ( rule__SetExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:898:2: rule__SetExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, ruleSetExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSetExpression"


    // $ANTLR start "entryRuleUnaryOrInfixExpression"
    // InternalBeeLangTestLanguage.g:910:1: entryRuleUnaryOrInfixExpression : ruleUnaryOrInfixExpression EOF ;
    public final void entryRuleUnaryOrInfixExpression() throws RecognitionException {
        int entryRuleUnaryOrInfixExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return ; }
            // InternalBeeLangTestLanguage.g:911:1: ( ruleUnaryOrInfixExpression EOF )
            // InternalBeeLangTestLanguage.g:912:1: ruleUnaryOrInfixExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOrInfixExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOrInfixExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, entryRuleUnaryOrInfixExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryOrInfixExpression"


    // $ANTLR start "ruleUnaryOrInfixExpression"
    // InternalBeeLangTestLanguage.g:919:1: ruleUnaryOrInfixExpression : ( ( rule__UnaryOrInfixExpression__Alternatives ) ) ;
    public final void ruleUnaryOrInfixExpression() throws RecognitionException {
        int ruleUnaryOrInfixExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return ; }
            // InternalBeeLangTestLanguage.g:923:2: ( ( ( rule__UnaryOrInfixExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:924:1: ( ( rule__UnaryOrInfixExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:924:1: ( ( rule__UnaryOrInfixExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:925:1: ( rule__UnaryOrInfixExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:926:1: ( rule__UnaryOrInfixExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:926:2: rule__UnaryOrInfixExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryOrInfixExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, ruleUnaryOrInfixExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOrInfixExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalBeeLangTestLanguage.g:938:1: entryRuleUnaryExpression : ruleUnaryExpression EOF ;
    public final void entryRuleUnaryExpression() throws RecognitionException {
        int entryRuleUnaryExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return ; }
            // InternalBeeLangTestLanguage.g:939:1: ( ruleUnaryExpression EOF )
            // InternalBeeLangTestLanguage.g:940:1: ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, entryRuleUnaryExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalBeeLangTestLanguage.g:947:1: ruleUnaryExpression : ( ( rule__UnaryExpression__Group__0 ) ) ;
    public final void ruleUnaryExpression() throws RecognitionException {
        int ruleUnaryExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return ; }
            // InternalBeeLangTestLanguage.g:951:2: ( ( ( rule__UnaryExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:952:1: ( ( rule__UnaryExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:952:1: ( ( rule__UnaryExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:953:1: ( rule__UnaryExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:954:1: ( rule__UnaryExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:954:2: rule__UnaryExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, ruleUnaryExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRulePreopExpression"
    // InternalBeeLangTestLanguage.g:966:1: entryRulePreopExpression : rulePreopExpression EOF ;
    public final void entryRulePreopExpression() throws RecognitionException {
        int entryRulePreopExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return ; }
            // InternalBeeLangTestLanguage.g:967:1: ( rulePreopExpression EOF )
            // InternalBeeLangTestLanguage.g:968:1: rulePreopExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreopExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, entryRulePreopExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePreopExpression"


    // $ANTLR start "rulePreopExpression"
    // InternalBeeLangTestLanguage.g:975:1: rulePreopExpression : ( ( rule__PreopExpression__Group__0 ) ) ;
    public final void rulePreopExpression() throws RecognitionException {
        int rulePreopExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return ; }
            // InternalBeeLangTestLanguage.g:979:2: ( ( ( rule__PreopExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:980:1: ( ( rule__PreopExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:980:1: ( ( rule__PreopExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:981:1: ( rule__PreopExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:982:1: ( rule__PreopExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:982:2: rule__PreopExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, rulePreopExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreopExpression"


    // $ANTLR start "entryRulePostopExpression"
    // InternalBeeLangTestLanguage.g:994:1: entryRulePostopExpression : rulePostopExpression EOF ;
    public final void entryRulePostopExpression() throws RecognitionException {
        int entryRulePostopExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return ; }
            // InternalBeeLangTestLanguage.g:995:1: ( rulePostopExpression EOF )
            // InternalBeeLangTestLanguage.g:996:1: rulePostopExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePostopExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, entryRulePostopExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePostopExpression"


    // $ANTLR start "rulePostopExpression"
    // InternalBeeLangTestLanguage.g:1003:1: rulePostopExpression : ( ( rule__PostopExpression__Group__0 ) ) ;
    public final void rulePostopExpression() throws RecognitionException {
        int rulePostopExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return ; }
            // InternalBeeLangTestLanguage.g:1007:2: ( ( ( rule__PostopExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1008:1: ( ( rule__PostopExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1008:1: ( ( rule__PostopExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1009:1: ( rule__PostopExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1010:1: ( rule__PostopExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1010:2: rule__PostopExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, rulePostopExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePostopExpression"


    // $ANTLR start "entryRuleInfixExpression"
    // InternalBeeLangTestLanguage.g:1022:1: entryRuleInfixExpression : ruleInfixExpression EOF ;
    public final void entryRuleInfixExpression() throws RecognitionException {
        int entryRuleInfixExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return ; }
            // InternalBeeLangTestLanguage.g:1023:1: ( ruleInfixExpression EOF )
            // InternalBeeLangTestLanguage.g:1024:1: ruleInfixExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, entryRuleInfixExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInfixExpression"


    // $ANTLR start "ruleInfixExpression"
    // InternalBeeLangTestLanguage.g:1031:1: ruleInfixExpression : ( ( rule__InfixExpression__Group__0 ) ) ;
    public final void ruleInfixExpression() throws RecognitionException {
        int ruleInfixExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return ; }
            // InternalBeeLangTestLanguage.g:1035:2: ( ( ( rule__InfixExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1036:1: ( ( rule__InfixExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1036:1: ( ( rule__InfixExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1037:1: ( rule__InfixExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1038:1: ( rule__InfixExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1038:2: rule__InfixExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, ruleInfixExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInfixExpression"


    // $ANTLR start "entryRuleCallExpression"
    // InternalBeeLangTestLanguage.g:1050:1: entryRuleCallExpression : ruleCallExpression EOF ;
    public final void entryRuleCallExpression() throws RecognitionException {
        int entryRuleCallExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return ; }
            // InternalBeeLangTestLanguage.g:1051:1: ( ruleCallExpression EOF )
            // InternalBeeLangTestLanguage.g:1052:1: ruleCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, entryRuleCallExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleCallExpression"


    // $ANTLR start "ruleCallExpression"
    // InternalBeeLangTestLanguage.g:1059:1: ruleCallExpression : ( ( rule__CallExpression__Group__0 ) ) ;
    public final void ruleCallExpression() throws RecognitionException {
        int ruleCallExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return ; }
            // InternalBeeLangTestLanguage.g:1063:2: ( ( ( rule__CallExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1064:1: ( ( rule__CallExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1064:1: ( ( rule__CallExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1065:1: ( rule__CallExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1066:1: ( rule__CallExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1066:2: rule__CallExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, ruleCallExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCallExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalBeeLangTestLanguage.g:1078:1: entryRulePrimaryExpression : rulePrimaryExpression EOF ;
    public final void entryRulePrimaryExpression() throws RecognitionException {
        int entryRulePrimaryExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return ; }
            // InternalBeeLangTestLanguage.g:1079:1: ( rulePrimaryExpression EOF )
            // InternalBeeLangTestLanguage.g:1080:1: rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, entryRulePrimaryExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalBeeLangTestLanguage.g:1087:1: rulePrimaryExpression : ( ( rule__PrimaryExpression__Alternatives ) ) ;
    public final void rulePrimaryExpression() throws RecognitionException {
        int rulePrimaryExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return ; }
            // InternalBeeLangTestLanguage.g:1091:2: ( ( ( rule__PrimaryExpression__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:1092:1: ( ( rule__PrimaryExpression__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:1092:1: ( ( rule__PrimaryExpression__Alternatives ) )
            // InternalBeeLangTestLanguage.g:1093:1: ( rule__PrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:1094:1: ( rule__PrimaryExpression__Alternatives )
            // InternalBeeLangTestLanguage.g:1094:2: rule__PrimaryExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, rulePrimaryExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleWithExpression"
    // InternalBeeLangTestLanguage.g:1106:1: entryRuleWithExpression : ruleWithExpression EOF ;
    public final void entryRuleWithExpression() throws RecognitionException {
        int entryRuleWithExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return ; }
            // InternalBeeLangTestLanguage.g:1107:1: ( ruleWithExpression EOF )
            // InternalBeeLangTestLanguage.g:1108:1: ruleWithExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWithExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, entryRuleWithExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleWithExpression"


    // $ANTLR start "ruleWithExpression"
    // InternalBeeLangTestLanguage.g:1115:1: ruleWithExpression : ( ( rule__WithExpression__Group__0 ) ) ;
    public final void ruleWithExpression() throws RecognitionException {
        int ruleWithExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return ; }
            // InternalBeeLangTestLanguage.g:1119:2: ( ( ( rule__WithExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1120:1: ( ( rule__WithExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1120:1: ( ( rule__WithExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1121:1: ( rule__WithExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1122:1: ( rule__WithExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1122:2: rule__WithExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, ruleWithExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithExpression"


    // $ANTLR start "entryRuleWithContextExpression"
    // InternalBeeLangTestLanguage.g:1134:1: entryRuleWithContextExpression : ruleWithContextExpression EOF ;
    public final void entryRuleWithContextExpression() throws RecognitionException {
        int entryRuleWithContextExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return ; }
            // InternalBeeLangTestLanguage.g:1135:1: ( ruleWithContextExpression EOF )
            // InternalBeeLangTestLanguage.g:1136:1: ruleWithContextExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWithContextExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, entryRuleWithContextExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleWithContextExpression"


    // $ANTLR start "ruleWithContextExpression"
    // InternalBeeLangTestLanguage.g:1143:1: ruleWithContextExpression : ( ( rule__WithContextExpression__Group__0 ) ) ;
    public final void ruleWithContextExpression() throws RecognitionException {
        int ruleWithContextExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return ; }
            // InternalBeeLangTestLanguage.g:1147:2: ( ( ( rule__WithContextExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1148:1: ( ( rule__WithContextExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1148:1: ( ( rule__WithContextExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1149:1: ( rule__WithContextExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1150:1: ( rule__WithContextExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1150:2: rule__WithContextExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, ruleWithContextExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithContextExpression"


    // $ANTLR start "entryRuleBlockExpression"
    // InternalBeeLangTestLanguage.g:1162:1: entryRuleBlockExpression : ruleBlockExpression EOF ;
    public final void entryRuleBlockExpression() throws RecognitionException {
        int entryRuleBlockExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return ; }
            // InternalBeeLangTestLanguage.g:1163:1: ( ruleBlockExpression EOF )
            // InternalBeeLangTestLanguage.g:1164:1: ruleBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, entryRuleBlockExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockExpression"


    // $ANTLR start "ruleBlockExpression"
    // InternalBeeLangTestLanguage.g:1171:1: ruleBlockExpression : ( ( rule__BlockExpression__Group__0 ) ) ;
    public final void ruleBlockExpression() throws RecognitionException {
        int ruleBlockExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return ; }
            // InternalBeeLangTestLanguage.g:1175:2: ( ( ( rule__BlockExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1176:1: ( ( rule__BlockExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1176:1: ( ( rule__BlockExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1177:1: ( rule__BlockExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1178:1: ( rule__BlockExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1178:2: rule__BlockExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, ruleBlockExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockExpression"


    // $ANTLR start "entryRuleValue"
    // InternalBeeLangTestLanguage.g:1190:1: entryRuleValue : ruleValue EOF ;
    public final void entryRuleValue() throws RecognitionException {
        int entryRuleValue_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return ; }
            // InternalBeeLangTestLanguage.g:1191:1: ( ruleValue EOF )
            // InternalBeeLangTestLanguage.g:1192:1: ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, entryRuleValue_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalBeeLangTestLanguage.g:1199:1: ruleValue : ( ( rule__Value__Group__0 ) ) ;
    public final void ruleValue() throws RecognitionException {
        int ruleValue_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return ; }
            // InternalBeeLangTestLanguage.g:1203:2: ( ( ( rule__Value__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1204:1: ( ( rule__Value__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1204:1: ( ( rule__Value__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1205:1: ( rule__Value__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1206:1: ( rule__Value__Group__0 )
            // InternalBeeLangTestLanguage.g:1206:2: rule__Value__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, ruleValue_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleKeywordVariables"
    // InternalBeeLangTestLanguage.g:1218:1: entryRuleKeywordVariables : ruleKeywordVariables EOF ;
    public final void entryRuleKeywordVariables() throws RecognitionException {
        int entryRuleKeywordVariables_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return ; }
            // InternalBeeLangTestLanguage.g:1219:1: ( ruleKeywordVariables EOF )
            // InternalBeeLangTestLanguage.g:1220:1: ruleKeywordVariables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleKeywordVariables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, entryRuleKeywordVariables_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleKeywordVariables"


    // $ANTLR start "ruleKeywordVariables"
    // InternalBeeLangTestLanguage.g:1227:1: ruleKeywordVariables : ( ( rule__KeywordVariables__Group__0 ) ) ;
    public final void ruleKeywordVariables() throws RecognitionException {
        int ruleKeywordVariables_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return ; }
            // InternalBeeLangTestLanguage.g:1231:2: ( ( ( rule__KeywordVariables__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1232:1: ( ( rule__KeywordVariables__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1232:1: ( ( rule__KeywordVariables__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1233:1: ( rule__KeywordVariables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1234:1: ( rule__KeywordVariables__Group__0 )
            // InternalBeeLangTestLanguage.g:1234:2: rule__KeywordVariables__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, ruleKeywordVariables_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleKeywordVariables"


    // $ANTLR start "entryRuleFeatureCall"
    // InternalBeeLangTestLanguage.g:1246:1: entryRuleFeatureCall : ruleFeatureCall EOF ;
    public final void entryRuleFeatureCall() throws RecognitionException {
        int entryRuleFeatureCall_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return ; }
            // InternalBeeLangTestLanguage.g:1247:1: ( ruleFeatureCall EOF )
            // InternalBeeLangTestLanguage.g:1248:1: ruleFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFeatureCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, entryRuleFeatureCall_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureCall"


    // $ANTLR start "ruleFeatureCall"
    // InternalBeeLangTestLanguage.g:1255:1: ruleFeatureCall : ( ruleOperationCall ) ;
    public final void ruleFeatureCall() throws RecognitionException {
        int ruleFeatureCall_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return ; }
            // InternalBeeLangTestLanguage.g:1259:2: ( ( ruleOperationCall ) )
            // InternalBeeLangTestLanguage.g:1260:1: ( ruleOperationCall )
            {
            // InternalBeeLangTestLanguage.g:1260:1: ( ruleOperationCall )
            // InternalBeeLangTestLanguage.g:1261:1: ruleOperationCall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOperationCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, ruleFeatureCall_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFeatureCall"


    // $ANTLR start "entryRuleOperationCall"
    // InternalBeeLangTestLanguage.g:1274:1: entryRuleOperationCall : ruleOperationCall EOF ;
    public final void entryRuleOperationCall() throws RecognitionException {
        int entryRuleOperationCall_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return ; }
            // InternalBeeLangTestLanguage.g:1275:1: ( ruleOperationCall EOF )
            // InternalBeeLangTestLanguage.g:1276:1: ruleOperationCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOperationCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, entryRuleOperationCall_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOperationCall"


    // $ANTLR start "ruleOperationCall"
    // InternalBeeLangTestLanguage.g:1283:1: ruleOperationCall : ( ( rule__OperationCall__Group__0 ) ) ;
    public final void ruleOperationCall() throws RecognitionException {
        int ruleOperationCall_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return ; }
            // InternalBeeLangTestLanguage.g:1287:2: ( ( ( rule__OperationCall__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1288:1: ( ( rule__OperationCall__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1288:1: ( ( rule__OperationCall__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1289:1: ( rule__OperationCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1290:1: ( rule__OperationCall__Group__0 )
            // InternalBeeLangTestLanguage.g:1290:2: rule__OperationCall__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, ruleOperationCall_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperationCall"


    // $ANTLR start "entryRuleConstructorCallExpression"
    // InternalBeeLangTestLanguage.g:1302:1: entryRuleConstructorCallExpression : ruleConstructorCallExpression EOF ;
    public final void entryRuleConstructorCallExpression() throws RecognitionException {
        int entryRuleConstructorCallExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return ; }
            // InternalBeeLangTestLanguage.g:1303:1: ( ruleConstructorCallExpression EOF )
            // InternalBeeLangTestLanguage.g:1304:1: ruleConstructorCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConstructorCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, entryRuleConstructorCallExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleConstructorCallExpression"


    // $ANTLR start "ruleConstructorCallExpression"
    // InternalBeeLangTestLanguage.g:1311:1: ruleConstructorCallExpression : ( ( rule__ConstructorCallExpression__Group__0 ) ) ;
    public final void ruleConstructorCallExpression() throws RecognitionException {
        int ruleConstructorCallExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return ; }
            // InternalBeeLangTestLanguage.g:1315:2: ( ( ( rule__ConstructorCallExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1316:1: ( ( rule__ConstructorCallExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1316:1: ( ( rule__ConstructorCallExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1317:1: ( rule__ConstructorCallExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1318:1: ( rule__ConstructorCallExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1318:2: rule__ConstructorCallExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, ruleConstructorCallExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConstructorCallExpression"


    // $ANTLR start "entryRuleInitializationBlockExpression"
    // InternalBeeLangTestLanguage.g:1330:1: entryRuleInitializationBlockExpression : ruleInitializationBlockExpression EOF ;
    public final void entryRuleInitializationBlockExpression() throws RecognitionException {
        int entryRuleInitializationBlockExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return ; }
            // InternalBeeLangTestLanguage.g:1331:1: ( ruleInitializationBlockExpression EOF )
            // InternalBeeLangTestLanguage.g:1332:1: ruleInitializationBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInitializationBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, entryRuleInitializationBlockExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializationBlockExpression"


    // $ANTLR start "ruleInitializationBlockExpression"
    // InternalBeeLangTestLanguage.g:1339:1: ruleInitializationBlockExpression : ( ( rule__InitializationBlockExpression__Group__0 ) ) ;
    public final void ruleInitializationBlockExpression() throws RecognitionException {
        int ruleInitializationBlockExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return ; }
            // InternalBeeLangTestLanguage.g:1343:2: ( ( ( rule__InitializationBlockExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1344:1: ( ( rule__InitializationBlockExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1344:1: ( ( rule__InitializationBlockExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1345:1: ( rule__InitializationBlockExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1346:1: ( rule__InitializationBlockExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1346:2: rule__InitializationBlockExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, ruleInitializationBlockExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializationBlockExpression"


    // $ANTLR start "entryRuleInitializationExpression"
    // InternalBeeLangTestLanguage.g:1358:1: entryRuleInitializationExpression : ruleInitializationExpression EOF ;
    public final void entryRuleInitializationExpression() throws RecognitionException {
        int entryRuleInitializationExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return ; }
            // InternalBeeLangTestLanguage.g:1359:1: ( ruleInitializationExpression EOF )
            // InternalBeeLangTestLanguage.g:1360:1: ruleInitializationExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInitializationExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, entryRuleInitializationExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializationExpression"


    // $ANTLR start "ruleInitializationExpression"
    // InternalBeeLangTestLanguage.g:1367:1: ruleInitializationExpression : ( ( rule__InitializationExpression__Group__0 ) ) ;
    public final void ruleInitializationExpression() throws RecognitionException {
        int ruleInitializationExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return ; }
            // InternalBeeLangTestLanguage.g:1371:2: ( ( ( rule__InitializationExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1372:1: ( ( rule__InitializationExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1372:1: ( ( rule__InitializationExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1373:1: ( rule__InitializationExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1374:1: ( rule__InitializationExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1374:2: rule__InitializationExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, ruleInitializationExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializationExpression"


    // $ANTLR start "entryRuleFeatureOfThis"
    // InternalBeeLangTestLanguage.g:1386:1: entryRuleFeatureOfThis : ruleFeatureOfThis EOF ;
    public final void entryRuleFeatureOfThis() throws RecognitionException {
        int entryRuleFeatureOfThis_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return ; }
            // InternalBeeLangTestLanguage.g:1387:1: ( ruleFeatureOfThis EOF )
            // InternalBeeLangTestLanguage.g:1388:1: ruleFeatureOfThis EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFeatureOfThis();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, entryRuleFeatureOfThis_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureOfThis"


    // $ANTLR start "ruleFeatureOfThis"
    // InternalBeeLangTestLanguage.g:1395:1: ruleFeatureOfThis : ( ( rule__FeatureOfThis__Group__0 ) ) ;
    public final void ruleFeatureOfThis() throws RecognitionException {
        int ruleFeatureOfThis_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return ; }
            // InternalBeeLangTestLanguage.g:1399:2: ( ( ( rule__FeatureOfThis__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1400:1: ( ( rule__FeatureOfThis__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1400:1: ( ( rule__FeatureOfThis__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1401:1: ( rule__FeatureOfThis__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1402:1: ( rule__FeatureOfThis__Group__0 )
            // InternalBeeLangTestLanguage.g:1402:2: rule__FeatureOfThis__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, ruleFeatureOfThis_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFeatureOfThis"


    // $ANTLR start "entryRuleLiteral"
    // InternalBeeLangTestLanguage.g:1414:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        int entryRuleLiteral_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return ; }
            // InternalBeeLangTestLanguage.g:1415:1: ( ruleLiteral EOF )
            // InternalBeeLangTestLanguage.g:1416:1: ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, entryRuleLiteral_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalBeeLangTestLanguage.g:1423:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {
        int ruleLiteral_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return ; }
            // InternalBeeLangTestLanguage.g:1427:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:1428:1: ( ( rule__Literal__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:1428:1: ( ( rule__Literal__Alternatives ) )
            // InternalBeeLangTestLanguage.g:1429:1: ( rule__Literal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:1430:1: ( rule__Literal__Alternatives )
            // InternalBeeLangTestLanguage.g:1430:2: rule__Literal__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, ruleLiteral_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralFunction"
    // InternalBeeLangTestLanguage.g:1442:1: entryRuleLiteralFunction : ruleLiteralFunction EOF ;
    public final void entryRuleLiteralFunction() throws RecognitionException {
        int entryRuleLiteralFunction_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return ; }
            // InternalBeeLangTestLanguage.g:1443:1: ( ruleLiteralFunction EOF )
            // InternalBeeLangTestLanguage.g:1444:1: ruleLiteralFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLiteralFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, entryRuleLiteralFunction_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralFunction"


    // $ANTLR start "ruleLiteralFunction"
    // InternalBeeLangTestLanguage.g:1451:1: ruleLiteralFunction : ( ( rule__LiteralFunction__Group__0 ) ) ;
    public final void ruleLiteralFunction() throws RecognitionException {
        int ruleLiteralFunction_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return ; }
            // InternalBeeLangTestLanguage.g:1455:2: ( ( ( rule__LiteralFunction__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1456:1: ( ( rule__LiteralFunction__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1456:1: ( ( rule__LiteralFunction__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1457:1: ( rule__LiteralFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1458:1: ( rule__LiteralFunction__Group__0 )
            // InternalBeeLangTestLanguage.g:1458:2: rule__LiteralFunction__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, ruleLiteralFunction_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralFunction"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser3 extends InternalBeeLangTestLanguageParser2 {

        InternalBeeLangTestLanguageParser3(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser3(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "entryRuleClosureExpression"
    // InternalBeeLangTestLanguage.g:1470:1: entryRuleClosureExpression : ruleClosureExpression EOF ;
    public final void entryRuleClosureExpression() throws RecognitionException {
        int entryRuleClosureExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return ; }
            // InternalBeeLangTestLanguage.g:1471:1: ( ruleClosureExpression EOF )
            // InternalBeeLangTestLanguage.g:1472:1: ruleClosureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, entryRuleClosureExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureExpression"


    // $ANTLR start "ruleClosureExpression"
    // InternalBeeLangTestLanguage.g:1479:1: ruleClosureExpression : ( ( rule__ClosureExpression__Group__0 ) ) ;
    public final void ruleClosureExpression() throws RecognitionException {
        int ruleClosureExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return ; }
            // InternalBeeLangTestLanguage.g:1483:2: ( ( ( rule__ClosureExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1484:1: ( ( rule__ClosureExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1484:1: ( ( rule__ClosureExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1485:1: ( rule__ClosureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1486:1: ( rule__ClosureExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1486:2: rule__ClosureExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, ruleClosureExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureExpression"


    // $ANTLR start "entryRuleOneOrManyExpressions"
    // InternalBeeLangTestLanguage.g:1498:1: entryRuleOneOrManyExpressions : ruleOneOrManyExpressions EOF ;
    public final void entryRuleOneOrManyExpressions() throws RecognitionException {
        int entryRuleOneOrManyExpressions_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return ; }
            // InternalBeeLangTestLanguage.g:1499:1: ( ruleOneOrManyExpressions EOF )
            // InternalBeeLangTestLanguage.g:1500:1: ruleOneOrManyExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOneOrManyExpressionsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOneOrManyExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOneOrManyExpressionsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, entryRuleOneOrManyExpressions_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOneOrManyExpressions"


    // $ANTLR start "ruleOneOrManyExpressions"
    // InternalBeeLangTestLanguage.g:1507:1: ruleOneOrManyExpressions : ( ( rule__OneOrManyExpressions__Alternatives ) ) ;
    public final void ruleOneOrManyExpressions() throws RecognitionException {
        int ruleOneOrManyExpressions_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return ; }
            // InternalBeeLangTestLanguage.g:1511:2: ( ( ( rule__OneOrManyExpressions__Alternatives ) ) )
            // InternalBeeLangTestLanguage.g:1512:1: ( ( rule__OneOrManyExpressions__Alternatives ) )
            {
            // InternalBeeLangTestLanguage.g:1512:1: ( ( rule__OneOrManyExpressions__Alternatives ) )
            // InternalBeeLangTestLanguage.g:1513:1: ( rule__OneOrManyExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); 
            }
            // InternalBeeLangTestLanguage.g:1514:1: ( rule__OneOrManyExpressions__Alternatives )
            // InternalBeeLangTestLanguage.g:1514:2: rule__OneOrManyExpressions__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OneOrManyExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, ruleOneOrManyExpressions_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOneOrManyExpressions"


    // $ANTLR start "entryRuleBlockExpressionWithoutBrackets"
    // InternalBeeLangTestLanguage.g:1526:1: entryRuleBlockExpressionWithoutBrackets : ruleBlockExpressionWithoutBrackets EOF ;
    public final void entryRuleBlockExpressionWithoutBrackets() throws RecognitionException {
        int entryRuleBlockExpressionWithoutBrackets_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return ; }
            // InternalBeeLangTestLanguage.g:1527:1: ( ruleBlockExpressionWithoutBrackets EOF )
            // InternalBeeLangTestLanguage.g:1528:1: ruleBlockExpressionWithoutBrackets EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBlockExpressionWithoutBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, entryRuleBlockExpressionWithoutBrackets_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockExpressionWithoutBrackets"


    // $ANTLR start "ruleBlockExpressionWithoutBrackets"
    // InternalBeeLangTestLanguage.g:1535:1: ruleBlockExpressionWithoutBrackets : ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) ) ;
    public final void ruleBlockExpressionWithoutBrackets() throws RecognitionException {
        int ruleBlockExpressionWithoutBrackets_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return ; }
            // InternalBeeLangTestLanguage.g:1539:2: ( ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1540:1: ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1540:1: ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1541:1: ( rule__BlockExpressionWithoutBrackets__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1542:1: ( rule__BlockExpressionWithoutBrackets__Group__0 )
            // InternalBeeLangTestLanguage.g:1542:2: rule__BlockExpressionWithoutBrackets__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, ruleBlockExpressionWithoutBrackets_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockExpressionWithoutBrackets"


    // $ANTLR start "entryRuleValueLiteral"
    // InternalBeeLangTestLanguage.g:1554:1: entryRuleValueLiteral : ruleValueLiteral EOF ;
    public final void entryRuleValueLiteral() throws RecognitionException {
        int entryRuleValueLiteral_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return ; }
            // InternalBeeLangTestLanguage.g:1555:1: ( ruleValueLiteral EOF )
            // InternalBeeLangTestLanguage.g:1556:1: ruleValueLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValueLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, entryRuleValueLiteral_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValueLiteral"


    // $ANTLR start "ruleValueLiteral"
    // InternalBeeLangTestLanguage.g:1563:1: ruleValueLiteral : ( ( rule__ValueLiteral__ValueAssignment ) ) ;
    public final void ruleValueLiteral() throws RecognitionException {
        int ruleValueLiteral_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return ; }
            // InternalBeeLangTestLanguage.g:1567:2: ( ( ( rule__ValueLiteral__ValueAssignment ) ) )
            // InternalBeeLangTestLanguage.g:1568:1: ( ( rule__ValueLiteral__ValueAssignment ) )
            {
            // InternalBeeLangTestLanguage.g:1568:1: ( ( rule__ValueLiteral__ValueAssignment ) )
            // InternalBeeLangTestLanguage.g:1569:1: ( rule__ValueLiteral__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralAccess().getValueAssignment()); 
            }
            // InternalBeeLangTestLanguage.g:1570:1: ( rule__ValueLiteral__ValueAssignment )
            // InternalBeeLangTestLanguage.g:1570:2: rule__ValueLiteral__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValueLiteral__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, ruleValueLiteral_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValueLiteral"


    // $ANTLR start "entryRuleParanthesizedExpression"
    // InternalBeeLangTestLanguage.g:1582:1: entryRuleParanthesizedExpression : ruleParanthesizedExpression EOF ;
    public final void entryRuleParanthesizedExpression() throws RecognitionException {
        int entryRuleParanthesizedExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return ; }
            // InternalBeeLangTestLanguage.g:1583:1: ( ruleParanthesizedExpression EOF )
            // InternalBeeLangTestLanguage.g:1584:1: ruleParanthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParanthesizedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, entryRuleParanthesizedExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParanthesizedExpression"


    // $ANTLR start "ruleParanthesizedExpression"
    // InternalBeeLangTestLanguage.g:1591:1: ruleParanthesizedExpression : ( ( rule__ParanthesizedExpression__Group__0 ) ) ;
    public final void ruleParanthesizedExpression() throws RecognitionException {
        int ruleParanthesizedExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return ; }
            // InternalBeeLangTestLanguage.g:1595:2: ( ( ( rule__ParanthesizedExpression__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1596:1: ( ( rule__ParanthesizedExpression__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1596:1: ( ( rule__ParanthesizedExpression__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1597:1: ( rule__ParanthesizedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1598:1: ( rule__ParanthesizedExpression__Group__0 )
            // InternalBeeLangTestLanguage.g:1598:2: rule__ParanthesizedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, ruleParanthesizedExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParanthesizedExpression"


    // $ANTLR start "entryRuleQID"
    // InternalBeeLangTestLanguage.g:1610:1: entryRuleQID : ruleQID EOF ;
    public final void entryRuleQID() throws RecognitionException {
        int entryRuleQID_StartIndex = input.index();

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return ; }
            // InternalBeeLangTestLanguage.g:1614:1: ( ruleQID EOF )
            // InternalBeeLangTestLanguage.g:1615:1: ruleQID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, entryRuleQID_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleQID"


    // $ANTLR start "ruleQID"
    // InternalBeeLangTestLanguage.g:1625:1: ruleQID : ( ( rule__QID__Group__0 ) ) ;
    public final void ruleQID() throws RecognitionException {
        int ruleQID_StartIndex = input.index();

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return ; }
            // InternalBeeLangTestLanguage.g:1630:2: ( ( ( rule__QID__Group__0 ) ) )
            // InternalBeeLangTestLanguage.g:1631:1: ( ( rule__QID__Group__0 ) )
            {
            // InternalBeeLangTestLanguage.g:1631:1: ( ( rule__QID__Group__0 ) )
            // InternalBeeLangTestLanguage.g:1632:1: ( rule__QID__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getGroup()); 
            }
            // InternalBeeLangTestLanguage.g:1633:1: ( rule__QID__Group__0 )
            // InternalBeeLangTestLanguage.g:1633:2: rule__QID__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, ruleQID_StartIndex); }

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleQID"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalBeeLangTestLanguage.g:1646:1: rule__Model__Alternatives : ( ( ( rule__Model__UnitsAssignment_0 )* ) | ( ( rule__Model__FunctionsAssignment_1 )* ) );
    public final void rule__Model__Alternatives() throws RecognitionException {
        int rule__Model__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return ; }
            // InternalBeeLangTestLanguage.g:1650:1: ( ( ( rule__Model__UnitsAssignment_0 )* ) | ( ( rule__Model__FunctionsAssignment_1 )* ) )
            int alt3=2;
            switch ( input.LA(1) ) {
            case RULE_DOCUMENTATION:
                {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==RULE_ID||LA3_1==59||LA3_1==74) ) {
                    alt3=2;
                }
                else if ( (LA3_1==13) ) {
                    alt3=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
                }
                break;
            case 13:
                {
                alt3=1;
                }
                break;
            case EOF:
                {
                int LA3_3 = input.LA(2);

                if ( (synpred2_InternalBeeLangTestLanguage()) ) {
                    alt3=1;
                }
                else if ( (true) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case 59:
            case 74:
                {
                alt3=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1651:1: ( ( rule__Model__UnitsAssignment_0 )* )
                    {
                    // InternalBeeLangTestLanguage.g:1651:1: ( ( rule__Model__UnitsAssignment_0 )* )
                    // InternalBeeLangTestLanguage.g:1652:1: ( rule__Model__UnitsAssignment_0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1653:1: ( rule__Model__UnitsAssignment_0 )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==RULE_DOCUMENTATION||LA1_0==13) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:1653:2: rule__Model__UnitsAssignment_0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_3);
                    	    rule__Model__UnitsAssignment_0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1657:6: ( ( rule__Model__FunctionsAssignment_1 )* )
                    {
                    // InternalBeeLangTestLanguage.g:1657:6: ( ( rule__Model__FunctionsAssignment_1 )* )
                    // InternalBeeLangTestLanguage.g:1658:1: ( rule__Model__FunctionsAssignment_1 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getFunctionsAssignment_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1659:1: ( rule__Model__FunctionsAssignment_1 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( ((LA2_0>=RULE_ID && LA2_0<=RULE_DOCUMENTATION)||LA2_0==59||LA2_0==74) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:1659:2: rule__Model__FunctionsAssignment_1
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_4);
                    	    rule__Model__FunctionsAssignment_1();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getFunctionsAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, rule__Model__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__ProvidedCapability__Alternatives_1"
    // InternalBeeLangTestLanguage.g:1668:1: rule__ProvidedCapability__Alternatives_1 : ( ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) );
    public final void rule__ProvidedCapability__Alternatives_1() throws RecognitionException {
        int rule__ProvidedCapability__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return ; }
            // InternalBeeLangTestLanguage.g:1672:1: ( ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                alt4=1;
            }
            else if ( (LA4_0==13) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1673:1: ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1673:1: ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) )
                    // InternalBeeLangTestLanguage.g:1674:1: ( rule__ProvidedCapability__NameSpaceAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1675:1: ( rule__ProvidedCapability__NameSpaceAssignment_1_0 )
                    // InternalBeeLangTestLanguage.g:1675:2: rule__ProvidedCapability__NameSpaceAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__NameSpaceAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1679:6: ( 'unit' )
                    {
                    // InternalBeeLangTestLanguage.g:1679:6: ( 'unit' )
                    // InternalBeeLangTestLanguage.g:1680:1: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, rule__ProvidedCapability__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Alternatives_1"


    // $ANTLR start "rule__AliasedRequiredCapability__Alternatives_0"
    // InternalBeeLangTestLanguage.g:1692:1: rule__AliasedRequiredCapability__Alternatives_0 : ( ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) ) | ( 'unit' ) );
    public final void rule__AliasedRequiredCapability__Alternatives_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Alternatives_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return ; }
            // InternalBeeLangTestLanguage.g:1696:1: ( ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) ) | ( 'unit' ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_ID) ) {
                alt5=1;
            }
            else if ( (LA5_0==13) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1697:1: ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1697:1: ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) )
                    // InternalBeeLangTestLanguage.g:1698:1: ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceAssignment_0_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1699:1: ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 )
                    // InternalBeeLangTestLanguage.g:1699:2: rule__AliasedRequiredCapability__NameSpaceAssignment_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__NameSpaceAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1703:6: ( 'unit' )
                    {
                    // InternalBeeLangTestLanguage.g:1703:6: ( 'unit' )
                    // InternalBeeLangTestLanguage.g:1704:1: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, rule__AliasedRequiredCapability__Alternatives_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Alternatives_0"


    // $ANTLR start "rule__RequiredCapability__Alternatives_1"
    // InternalBeeLangTestLanguage.g:1716:1: rule__RequiredCapability__Alternatives_1 : ( ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) );
    public final void rule__RequiredCapability__Alternatives_1() throws RecognitionException {
        int rule__RequiredCapability__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return ; }
            // InternalBeeLangTestLanguage.g:1720:1: ( ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ID) ) {
                alt6=1;
            }
            else if ( (LA6_0==13) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1721:1: ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1721:1: ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) )
                    // InternalBeeLangTestLanguage.g:1722:1: ( rule__RequiredCapability__NameSpaceAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1723:1: ( rule__RequiredCapability__NameSpaceAssignment_1_0 )
                    // InternalBeeLangTestLanguage.g:1723:2: rule__RequiredCapability__NameSpaceAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__NameSpaceAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1727:6: ( 'unit' )
                    {
                    // InternalBeeLangTestLanguage.g:1727:6: ( 'unit' )
                    // InternalBeeLangTestLanguage.g:1728:1: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, rule__RequiredCapability__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Alternatives_1"


    // $ANTLR start "rule__Path__Alternatives"
    // InternalBeeLangTestLanguage.g:1740:1: rule__Path__Alternatives : ( ( RULE_STRING ) | ( ( rule__Path__Group_1__0 ) ) );
    public final void rule__Path__Alternatives() throws RecognitionException {
        int rule__Path__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return ; }
            // InternalBeeLangTestLanguage.g:1744:1: ( ( RULE_STRING ) | ( ( rule__Path__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_STRING) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_ID||LA7_0==33) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1745:1: ( RULE_STRING )
                    {
                    // InternalBeeLangTestLanguage.g:1745:1: ( RULE_STRING )
                    // InternalBeeLangTestLanguage.g:1746:1: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); 
                    }
                    match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1751:6: ( ( rule__Path__Group_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1751:6: ( ( rule__Path__Group_1__0 ) )
                    // InternalBeeLangTestLanguage.g:1752:1: ( rule__Path__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathAccess().getGroup_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1753:1: ( rule__Path__Group_1__0 )
                    // InternalBeeLangTestLanguage.g:1753:2: rule__Path__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Path__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, rule__Path__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Alternatives"


    // $ANTLR start "rule__FirstParameter__Alternatives"
    // InternalBeeLangTestLanguage.g:1762:1: rule__FirstParameter__Alternatives : ( ( ruleClosureParameter ) | ( ruleParameter ) );
    public final void rule__FirstParameter__Alternatives() throws RecognitionException {
        int rule__FirstParameter__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return ; }
            // InternalBeeLangTestLanguage.g:1766:1: ( ( ruleClosureParameter ) | ( ruleParameter ) )
            int alt8=2;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1767:1: ( ruleClosureParameter )
                    {
                    // InternalBeeLangTestLanguage.g:1767:1: ( ruleClosureParameter )
                    // InternalBeeLangTestLanguage.g:1768:1: ruleClosureParameter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleClosureParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1773:6: ( ruleParameter )
                    {
                    // InternalBeeLangTestLanguage.g:1773:6: ( ruleParameter )
                    // InternalBeeLangTestLanguage.g:1774:1: ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, rule__FirstParameter__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FirstParameter__Alternatives"


    // $ANTLR start "rule__Function__Alternatives_6_1"
    // InternalBeeLangTestLanguage.g:1784:1: rule__Function__Alternatives_6_1 : ( ( ( rule__Function__Group_6_1_0__0 ) ) | ( ( rule__Function__Group_6_1_1__0 ) ) );
    public final void rule__Function__Alternatives_6_1() throws RecognitionException {
        int rule__Function__Alternatives_6_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return ; }
            // InternalBeeLangTestLanguage.g:1788:1: ( ( ( rule__Function__Group_6_1_0__0 ) ) | ( ( rule__Function__Group_6_1_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID||LA9_0==60) ) {
                alt9=1;
            }
            else if ( (LA9_0==75) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1789:1: ( ( rule__Function__Group_6_1_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1789:1: ( ( rule__Function__Group_6_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:1790:1: ( rule__Function__Group_6_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_6_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1791:1: ( rule__Function__Group_6_1_0__0 )
                    // InternalBeeLangTestLanguage.g:1791:2: rule__Function__Group_6_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_6_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1795:6: ( ( rule__Function__Group_6_1_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1795:6: ( ( rule__Function__Group_6_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:1796:1: ( rule__Function__Group_6_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_6_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1797:1: ( rule__Function__Group_6_1_1__0 )
                    // InternalBeeLangTestLanguage.g:1797:2: rule__Function__Group_6_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_6_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, rule__Function__Alternatives_6_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Alternatives_6_1"


    // $ANTLR start "rule__Function__Alternatives_8"
    // InternalBeeLangTestLanguage.g:1806:1: rule__Function__Alternatives_8 : ( ( ( rule__Function__Group_8_0__0 ) ) | ( ( rule__Function__FuncExprAssignment_8_1 ) ) );
    public final void rule__Function__Alternatives_8() throws RecognitionException {
        int rule__Function__Alternatives_8_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return ; }
            // InternalBeeLangTestLanguage.g:1810:1: ( ( ( rule__Function__Group_8_0__0 ) ) | ( ( rule__Function__FuncExprAssignment_8_1 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==49) ) {
                alt10=1;
            }
            else if ( (LA10_0==44) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1811:1: ( ( rule__Function__Group_8_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1811:1: ( ( rule__Function__Group_8_0__0 ) )
                    // InternalBeeLangTestLanguage.g:1812:1: ( rule__Function__Group_8_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_8_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1813:1: ( rule__Function__Group_8_0__0 )
                    // InternalBeeLangTestLanguage.g:1813:2: rule__Function__Group_8_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_8_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_8_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1817:6: ( ( rule__Function__FuncExprAssignment_8_1 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1817:6: ( ( rule__Function__FuncExprAssignment_8_1 ) )
                    // InternalBeeLangTestLanguage.g:1818:1: ( rule__Function__FuncExprAssignment_8_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1819:1: ( rule__Function__FuncExprAssignment_8_1 )
                    // InternalBeeLangTestLanguage.g:1819:2: rule__Function__FuncExprAssignment_8_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__FuncExprAssignment_8_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, rule__Function__Alternatives_8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Alternatives_8"


    // $ANTLR start "rule__GuardExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:1828:1: rule__GuardExpression__Alternatives : ( ( ( rule__GuardExpression__Group_0__0 ) ) | ( ( rule__GuardExpression__GuardExprAssignment_1 ) ) );
    public final void rule__GuardExpression__Alternatives() throws RecognitionException {
        int rule__GuardExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return ; }
            // InternalBeeLangTestLanguage.g:1832:1: ( ( ( rule__GuardExpression__Group_0__0 ) ) | ( ( rule__GuardExpression__GuardExprAssignment_1 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==49) ) {
                alt11=1;
            }
            else if ( (LA11_0==44) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1833:1: ( ( rule__GuardExpression__Group_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1833:1: ( ( rule__GuardExpression__Group_0__0 ) )
                    // InternalBeeLangTestLanguage.g:1834:1: ( rule__GuardExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGuardExpressionAccess().getGroup_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:1835:1: ( rule__GuardExpression__Group_0__0 )
                    // InternalBeeLangTestLanguage.g:1835:2: rule__GuardExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__GuardExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGuardExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1839:6: ( ( rule__GuardExpression__GuardExprAssignment_1 ) )
                    {
                    // InternalBeeLangTestLanguage.g:1839:6: ( ( rule__GuardExpression__GuardExprAssignment_1 ) )
                    // InternalBeeLangTestLanguage.g:1840:1: ( rule__GuardExpression__GuardExprAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:1841:1: ( rule__GuardExpression__GuardExprAssignment_1 )
                    // InternalBeeLangTestLanguage.g:1841:2: rule__GuardExpression__GuardExprAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__GuardExpression__GuardExprAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, rule__GuardExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Alternatives"


    // $ANTLR start "rule__AssignmentOperator__Alternatives"
    // InternalBeeLangTestLanguage.g:1850:1: rule__AssignmentOperator__Alternatives : ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) );
    public final void rule__AssignmentOperator__Alternatives() throws RecognitionException {
        int rule__AssignmentOperator__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return ; }
            // InternalBeeLangTestLanguage.g:1854:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) )
            int alt12=6;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt12=1;
                }
                break;
            case 15:
                {
                alt12=2;
                }
                break;
            case 16:
                {
                alt12=3;
                }
                break;
            case 17:
                {
                alt12=4;
                }
                break;
            case 18:
                {
                alt12=5;
                }
                break;
            case 19:
                {
                alt12=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1855:1: ( '=' )
                    {
                    // InternalBeeLangTestLanguage.g:1855:1: ( '=' )
                    // InternalBeeLangTestLanguage.g:1856:1: '='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                    }
                    match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1863:6: ( '+=' )
                    {
                    // InternalBeeLangTestLanguage.g:1863:6: ( '+=' )
                    // InternalBeeLangTestLanguage.g:1864:1: '+='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
                    }
                    match(input,15,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:1871:6: ( '-=' )
                    {
                    // InternalBeeLangTestLanguage.g:1871:6: ( '-=' )
                    // InternalBeeLangTestLanguage.g:1872:1: '-='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
                    }
                    match(input,16,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:1879:6: ( '*=' )
                    {
                    // InternalBeeLangTestLanguage.g:1879:6: ( '*=' )
                    // InternalBeeLangTestLanguage.g:1880:1: '*='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
                    }
                    match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:1887:6: ( '/=' )
                    {
                    // InternalBeeLangTestLanguage.g:1887:6: ( '/=' )
                    // InternalBeeLangTestLanguage.g:1888:1: '/='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
                    }
                    match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:1895:6: ( '%=' )
                    {
                    // InternalBeeLangTestLanguage.g:1895:6: ( '%=' )
                    // InternalBeeLangTestLanguage.g:1896:1: '%='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
                    }
                    match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, rule__AssignmentOperator__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentOperator__Alternatives"


    // $ANTLR start "rule__RelationalOperator__Alternatives"
    // InternalBeeLangTestLanguage.g:1908:1: rule__RelationalOperator__Alternatives : ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) );
    public final void rule__RelationalOperator__Alternatives() throws RecognitionException {
        int rule__RelationalOperator__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return ; }
            // InternalBeeLangTestLanguage.g:1912:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) )
            int alt13=9;
            switch ( input.LA(1) ) {
            case 20:
                {
                alt13=1;
                }
                break;
            case 21:
                {
                alt13=2;
                }
                break;
            case 22:
                {
                alt13=3;
                }
                break;
            case 23:
                {
                alt13=4;
                }
                break;
            case 24:
                {
                alt13=5;
                }
                break;
            case 25:
                {
                alt13=6;
                }
                break;
            case 26:
                {
                alt13=7;
                }
                break;
            case 27:
                {
                alt13=8;
                }
                break;
            case 28:
                {
                alt13=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1913:1: ( '~=' )
                    {
                    // InternalBeeLangTestLanguage.g:1913:1: ( '~=' )
                    // InternalBeeLangTestLanguage.g:1914:1: '~='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); 
                    }
                    match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:1921:6: ( '==' )
                    {
                    // InternalBeeLangTestLanguage.g:1921:6: ( '==' )
                    // InternalBeeLangTestLanguage.g:1922:1: '=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); 
                    }
                    match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:1929:6: ( '===' )
                    {
                    // InternalBeeLangTestLanguage.g:1929:6: ( '===' )
                    // InternalBeeLangTestLanguage.g:1930:1: '==='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                    }
                    match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:1937:6: ( '!=' )
                    {
                    // InternalBeeLangTestLanguage.g:1937:6: ( '!=' )
                    // InternalBeeLangTestLanguage.g:1938:1: '!='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
                    }
                    match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:1945:6: ( '!==' )
                    {
                    // InternalBeeLangTestLanguage.g:1945:6: ( '!==' )
                    // InternalBeeLangTestLanguage.g:1946:1: '!=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); 
                    }
                    match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:1953:6: ( '>=' )
                    {
                    // InternalBeeLangTestLanguage.g:1953:6: ( '>=' )
                    // InternalBeeLangTestLanguage.g:1954:1: '>='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
                    }
                    match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalBeeLangTestLanguage.g:1961:6: ( '<=' )
                    {
                    // InternalBeeLangTestLanguage.g:1961:6: ( '<=' )
                    // InternalBeeLangTestLanguage.g:1962:1: '<='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); 
                    }
                    match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalBeeLangTestLanguage.g:1969:6: ( '>' )
                    {
                    // InternalBeeLangTestLanguage.g:1969:6: ( '>' )
                    // InternalBeeLangTestLanguage.g:1970:1: '>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); 
                    }
                    match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalBeeLangTestLanguage.g:1977:6: ( '<' )
                    {
                    // InternalBeeLangTestLanguage.g:1977:6: ( '<' )
                    // InternalBeeLangTestLanguage.g:1978:1: '<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); 
                    }
                    match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, rule__RelationalOperator__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalOperator__Alternatives"


    // $ANTLR start "rule__TopLevelExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:1990:1: rule__TopLevelExpression__Alternatives : ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) );
    public final void rule__TopLevelExpression__Alternatives() throws RecognitionException {
        int rule__TopLevelExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return ; }
            // InternalBeeLangTestLanguage.g:1994:1: ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) )
            int alt14=3;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:1995:1: ( ruleVarDeclaration )
                    {
                    // InternalBeeLangTestLanguage.g:1995:1: ( ruleVarDeclaration )
                    // InternalBeeLangTestLanguage.g:1996:1: ruleVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleVarDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2001:6: ( ruleValDeclaration )
                    {
                    // InternalBeeLangTestLanguage.g:2001:6: ( ruleValDeclaration )
                    // InternalBeeLangTestLanguage.g:2002:1: ruleValDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2007:6: ( ruleAssignmentExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2007:6: ( ruleAssignmentExpression )
                    // InternalBeeLangTestLanguage.g:2008:1: ruleAssignmentExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, rule__TopLevelExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TopLevelExpression__Alternatives"


    // $ANTLR start "rule__VarDeclaration__Alternatives_2_0"
    // InternalBeeLangTestLanguage.g:2018:1: rule__VarDeclaration__Alternatives_2_0 : ( ( 'var' ) | ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) ) );
    public final void rule__VarDeclaration__Alternatives_2_0() throws RecognitionException {
        int rule__VarDeclaration__Alternatives_2_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return ; }
            // InternalBeeLangTestLanguage.g:2022:1: ( ( 'var' ) | ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==29) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_ID||LA15_0==60) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2023:1: ( 'var' )
                    {
                    // InternalBeeLangTestLanguage.g:2023:1: ( 'var' )
                    // InternalBeeLangTestLanguage.g:2024:1: 'var'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); 
                    }
                    match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2031:6: ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2031:6: ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) )
                    // InternalBeeLangTestLanguage.g:2032:1: ( rule__VarDeclaration__TypeAssignment_2_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:2033:1: ( rule__VarDeclaration__TypeAssignment_2_0_1 )
                    // InternalBeeLangTestLanguage.g:2033:2: rule__VarDeclaration__TypeAssignment_2_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__TypeAssignment_2_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, rule__VarDeclaration__Alternatives_2_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_2_0"


    // $ANTLR start "rule__TypeRef__Alternatives"
    // InternalBeeLangTestLanguage.g:2042:1: rule__TypeRef__Alternatives : ( ( ruleClosureTypeRef ) | ( ruleSimpleTypeRef ) );
    public final void rule__TypeRef__Alternatives() throws RecognitionException {
        int rule__TypeRef__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return ; }
            // InternalBeeLangTestLanguage.g:2046:1: ( ( ruleClosureTypeRef ) | ( ruleSimpleTypeRef ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==60) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_ID) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2047:1: ( ruleClosureTypeRef )
                    {
                    // InternalBeeLangTestLanguage.g:2047:1: ( ruleClosureTypeRef )
                    // InternalBeeLangTestLanguage.g:2048:1: ruleClosureTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleClosureTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2053:6: ( ruleSimpleTypeRef )
                    {
                    // InternalBeeLangTestLanguage.g:2053:6: ( ruleSimpleTypeRef )
                    // InternalBeeLangTestLanguage.g:2054:1: ruleSimpleTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSimpleTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, rule__TypeRef__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeRef__Alternatives"


    // $ANTLR start "rule__ClosureTypeRef__Alternatives_1"
    // InternalBeeLangTestLanguage.g:2064:1: rule__ClosureTypeRef__Alternatives_1 : ( ( ( rule__ClosureTypeRef__Group_1_0__0 ) ) | ( ( rule__ClosureTypeRef__Group_1_1__0 ) ) );
    public final void rule__ClosureTypeRef__Alternatives_1() throws RecognitionException {
        int rule__ClosureTypeRef__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return ; }
            // InternalBeeLangTestLanguage.g:2068:1: ( ( ( rule__ClosureTypeRef__Group_1_0__0 ) ) | ( ( rule__ClosureTypeRef__Group_1_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID) ) {
                alt17=1;
            }
            else if ( (LA17_0==75) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2069:1: ( ( rule__ClosureTypeRef__Group_1_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2069:1: ( ( rule__ClosureTypeRef__Group_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:2070:1: ( rule__ClosureTypeRef__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:2071:1: ( rule__ClosureTypeRef__Group_1_0__0 )
                    // InternalBeeLangTestLanguage.g:2071:2: rule__ClosureTypeRef__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2075:6: ( ( rule__ClosureTypeRef__Group_1_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2075:6: ( ( rule__ClosureTypeRef__Group_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:2076:1: ( rule__ClosureTypeRef__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:2077:1: ( rule__ClosureTypeRef__Group_1_1__0 )
                    // InternalBeeLangTestLanguage.g:2077:2: rule__ClosureTypeRef__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, rule__ClosureTypeRef__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Alternatives_1"


    // $ANTLR start "rule__CachedExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:2086:1: rule__CachedExpression__Alternatives : ( ( ( rule__CachedExpression__Group_0__0 ) ) | ( ruleOrExpression ) );
    public final void rule__CachedExpression__Alternatives() throws RecognitionException {
        int rule__CachedExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return ; }
            // InternalBeeLangTestLanguage.g:2090:1: ( ( ( rule__CachedExpression__Group_0__0 ) ) | ( ruleOrExpression ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==63) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_STRING||LA18_0==RULE_ID||LA18_0==13||LA18_0==31||(LA18_0>=35 && LA18_0<=44)||LA18_0==60||LA18_0==69||LA18_0==71) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2091:1: ( ( rule__CachedExpression__Group_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2091:1: ( ( rule__CachedExpression__Group_0__0 ) )
                    // InternalBeeLangTestLanguage.g:2092:1: ( rule__CachedExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCachedExpressionAccess().getGroup_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:2093:1: ( rule__CachedExpression__Group_0__0 )
                    // InternalBeeLangTestLanguage.g:2093:2: rule__CachedExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CachedExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCachedExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2097:6: ( ruleOrExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2097:6: ( ruleOrExpression )
                    // InternalBeeLangTestLanguage.g:2098:1: ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, rule__CachedExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Alternatives"


    // $ANTLR start "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0"
    // InternalBeeLangTestLanguage.g:2108:1: rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 : ( ( '+' ) | ( '-' ) );
    public final void rule__AdditiveExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__AdditiveExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return ; }
            // InternalBeeLangTestLanguage.g:2112:1: ( ( '+' ) | ( '-' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==30) ) {
                alt19=1;
            }
            else if ( (LA19_0==31) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2113:1: ( '+' )
                    {
                    // InternalBeeLangTestLanguage.g:2113:1: ( '+' )
                    // InternalBeeLangTestLanguage.g:2114:1: '+'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); 
                    }
                    match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2121:6: ( '-' )
                    {
                    // InternalBeeLangTestLanguage.g:2121:6: ( '-' )
                    // InternalBeeLangTestLanguage.g:2122:1: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); 
                    }
                    match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, rule__AdditiveExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0"
    // InternalBeeLangTestLanguage.g:2134:1: rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 : ( ( '*' ) | ( '/' ) | ( '%' ) );
    public final void rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return ; }
            // InternalBeeLangTestLanguage.g:2138:1: ( ( '*' ) | ( '/' ) | ( '%' ) )
            int alt20=3;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt20=1;
                }
                break;
            case 33:
                {
                alt20=2;
                }
                break;
            case 34:
                {
                alt20=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2139:1: ( '*' )
                    {
                    // InternalBeeLangTestLanguage.g:2139:1: ( '*' )
                    // InternalBeeLangTestLanguage.g:2140:1: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); 
                    }
                    match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2147:6: ( '/' )
                    {
                    // InternalBeeLangTestLanguage.g:2147:6: ( '/' )
                    // InternalBeeLangTestLanguage.g:2148:1: '/'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); 
                    }
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2155:6: ( '%' )
                    {
                    // InternalBeeLangTestLanguage.g:2155:6: ( '%' )
                    // InternalBeeLangTestLanguage.g:2156:1: '%'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); 
                    }
                    match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__UnaryOrInfixExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:2168:1: rule__UnaryOrInfixExpression__Alternatives : ( ( rulePostopExpression ) | ( ruleUnaryExpression ) | ( rulePreopExpression ) );
    public final void rule__UnaryOrInfixExpression__Alternatives() throws RecognitionException {
        int rule__UnaryOrInfixExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return ; }
            // InternalBeeLangTestLanguage.g:2172:1: ( ( rulePostopExpression ) | ( ruleUnaryExpression ) | ( rulePreopExpression ) )
            int alt21=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_ID:
            case 13:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 60:
            case 69:
            case 71:
                {
                alt21=1;
                }
                break;
            case 31:
            case 35:
                {
                alt21=2;
                }
                break;
            case 36:
            case 37:
                {
                alt21=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2173:1: ( rulePostopExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2173:1: ( rulePostopExpression )
                    // InternalBeeLangTestLanguage.g:2174:1: rulePostopExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePostopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2179:6: ( ruleUnaryExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2179:6: ( ruleUnaryExpression )
                    // InternalBeeLangTestLanguage.g:2180:1: ruleUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2185:6: ( rulePreopExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2185:6: ( rulePreopExpression )
                    // InternalBeeLangTestLanguage.g:2186:1: rulePreopExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, rule__UnaryOrInfixExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOrInfixExpression__Alternatives"


    // $ANTLR start "rule__UnaryExpression__FunctionNameAlternatives_1_0"
    // InternalBeeLangTestLanguage.g:2196:1: rule__UnaryExpression__FunctionNameAlternatives_1_0 : ( ( '!' ) | ( '-' ) );
    public final void rule__UnaryExpression__FunctionNameAlternatives_1_0() throws RecognitionException {
        int rule__UnaryExpression__FunctionNameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return ; }
            // InternalBeeLangTestLanguage.g:2200:1: ( ( '!' ) | ( '-' ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==35) ) {
                alt22=1;
            }
            else if ( (LA22_0==31) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2201:1: ( '!' )
                    {
                    // InternalBeeLangTestLanguage.g:2201:1: ( '!' )
                    // InternalBeeLangTestLanguage.g:2202:1: '!'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); 
                    }
                    match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2209:6: ( '-' )
                    {
                    // InternalBeeLangTestLanguage.g:2209:6: ( '-' )
                    // InternalBeeLangTestLanguage.g:2210:1: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, rule__UnaryExpression__FunctionNameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__FunctionNameAlternatives_1_0"


    // $ANTLR start "rule__PreopExpression__FunctionNameAlternatives_1_0"
    // InternalBeeLangTestLanguage.g:2222:1: rule__PreopExpression__FunctionNameAlternatives_1_0 : ( ( '++' ) | ( '--' ) );
    public final void rule__PreopExpression__FunctionNameAlternatives_1_0() throws RecognitionException {
        int rule__PreopExpression__FunctionNameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return ; }
            // InternalBeeLangTestLanguage.g:2226:1: ( ( '++' ) | ( '--' ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==36) ) {
                alt23=1;
            }
            else if ( (LA23_0==37) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2227:1: ( '++' )
                    {
                    // InternalBeeLangTestLanguage.g:2227:1: ( '++' )
                    // InternalBeeLangTestLanguage.g:2228:1: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); 
                    }
                    match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2235:6: ( '--' )
                    {
                    // InternalBeeLangTestLanguage.g:2235:6: ( '--' )
                    // InternalBeeLangTestLanguage.g:2236:1: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, rule__PreopExpression__FunctionNameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__FunctionNameAlternatives_1_0"


    // $ANTLR start "rule__PostopExpression__FunctionNameAlternatives_1_1_0"
    // InternalBeeLangTestLanguage.g:2248:1: rule__PostopExpression__FunctionNameAlternatives_1_1_0 : ( ( '--' ) | ( '++' ) );
    public final void rule__PostopExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__PostopExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return ; }
            // InternalBeeLangTestLanguage.g:2252:1: ( ( '--' ) | ( '++' ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==37) ) {
                alt24=1;
            }
            else if ( (LA24_0==36) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2253:1: ( '--' )
                    {
                    // InternalBeeLangTestLanguage.g:2253:1: ( '--' )
                    // InternalBeeLangTestLanguage.g:2254:1: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); 
                    }
                    match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2261:6: ( '++' )
                    {
                    // InternalBeeLangTestLanguage.g:2261:6: ( '++' )
                    // InternalBeeLangTestLanguage.g:2262:1: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); 
                    }
                    match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, rule__PostopExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__InfixExpression__Alternatives_1"
    // InternalBeeLangTestLanguage.g:2274:1: rule__InfixExpression__Alternatives_1 : ( ( ( rule__InfixExpression__Group_1_0__0 ) ) | ( ( rule__InfixExpression__Group_1_1__0 ) ) | ( ( rule__InfixExpression__Group_1_2__0 ) ) );
    public final void rule__InfixExpression__Alternatives_1() throws RecognitionException {
        int rule__InfixExpression__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return ; }
            // InternalBeeLangTestLanguage.g:2278:1: ( ( ( rule__InfixExpression__Group_1_0__0 ) ) | ( ( rule__InfixExpression__Group_1_1__0 ) ) | ( ( rule__InfixExpression__Group_1_2__0 ) ) )
            int alt25=3;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==66) ) {
                int LA25_1 = input.LA(2);

                if ( (synpred39_InternalBeeLangTestLanguage()) ) {
                    alt25=1;
                }
                else if ( (true) ) {
                    alt25=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA25_0==67) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2279:1: ( ( rule__InfixExpression__Group_1_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2279:1: ( ( rule__InfixExpression__Group_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:2280:1: ( rule__InfixExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:2281:1: ( rule__InfixExpression__Group_1_0__0 )
                    // InternalBeeLangTestLanguage.g:2281:2: rule__InfixExpression__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2285:6: ( ( rule__InfixExpression__Group_1_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2285:6: ( ( rule__InfixExpression__Group_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:2286:1: ( rule__InfixExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:2287:1: ( rule__InfixExpression__Group_1_1__0 )
                    // InternalBeeLangTestLanguage.g:2287:2: rule__InfixExpression__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2291:6: ( ( rule__InfixExpression__Group_1_2__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2291:6: ( ( rule__InfixExpression__Group_1_2__0 ) )
                    // InternalBeeLangTestLanguage.g:2292:1: ( rule__InfixExpression__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:2293:1: ( rule__InfixExpression__Group_1_2__0 )
                    // InternalBeeLangTestLanguage.g:2293:2: rule__InfixExpression__Group_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, rule__InfixExpression__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Alternatives_1"


    // $ANTLR start "rule__PrimaryExpression__Alternatives"
    // InternalBeeLangTestLanguage.g:2302:1: rule__PrimaryExpression__Alternatives : ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) );
    public final void rule__PrimaryExpression__Alternatives() throws RecognitionException {
        int rule__PrimaryExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return ; }
            // InternalBeeLangTestLanguage.g:2306:1: ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) )
            int alt26=9;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2307:1: ( ruleFeatureCall )
                    {
                    // InternalBeeLangTestLanguage.g:2307:1: ( ruleFeatureCall )
                    // InternalBeeLangTestLanguage.g:2308:1: ruleFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFeatureCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2313:6: ( ruleConstructorCallExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2313:6: ( ruleConstructorCallExpression )
                    // InternalBeeLangTestLanguage.g:2314:1: ruleConstructorCallExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConstructorCallExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2319:6: ( ruleValue )
                    {
                    // InternalBeeLangTestLanguage.g:2319:6: ( ruleValue )
                    // InternalBeeLangTestLanguage.g:2320:1: ruleValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:2325:6: ( ruleLiteral )
                    {
                    // InternalBeeLangTestLanguage.g:2325:6: ( ruleLiteral )
                    // InternalBeeLangTestLanguage.g:2326:1: ruleLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:2331:6: ( ruleKeywordVariables )
                    {
                    // InternalBeeLangTestLanguage.g:2331:6: ( ruleKeywordVariables )
                    // InternalBeeLangTestLanguage.g:2332:1: ruleKeywordVariables
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleKeywordVariables();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:2337:6: ( ruleParanthesizedExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2337:6: ( ruleParanthesizedExpression )
                    // InternalBeeLangTestLanguage.g:2338:1: ruleParanthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParanthesizedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalBeeLangTestLanguage.g:2343:6: ( ruleBlockExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2343:6: ( ruleBlockExpression )
                    // InternalBeeLangTestLanguage.g:2344:1: ruleBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBlockExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalBeeLangTestLanguage.g:2349:6: ( ruleWithExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2349:6: ( ruleWithExpression )
                    // InternalBeeLangTestLanguage.g:2350:1: ruleWithExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWithExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalBeeLangTestLanguage.g:2355:6: ( ruleWithContextExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2355:6: ( ruleWithContextExpression )
                    // InternalBeeLangTestLanguage.g:2356:1: ruleWithContextExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWithContextExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, rule__PrimaryExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Alternatives"


    // $ANTLR start "rule__WithExpression__Alternatives_2"
    // InternalBeeLangTestLanguage.g:2366:1: rule__WithExpression__Alternatives_2 : ( ( ( rule__WithExpression__Group_2_0__0 ) ) | ( ( rule__WithExpression__Group_2_1__0 ) ) );
    public final void rule__WithExpression__Alternatives_2() throws RecognitionException {
        int rule__WithExpression__Alternatives_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return ; }
            // InternalBeeLangTestLanguage.g:2370:1: ( ( ( rule__WithExpression__Group_2_0__0 ) ) | ( ( rule__WithExpression__Group_2_1__0 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==49) ) {
                alt27=1;
            }
            else if ( (LA27_0==44) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2371:1: ( ( rule__WithExpression__Group_2_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2371:1: ( ( rule__WithExpression__Group_2_0__0 ) )
                    // InternalBeeLangTestLanguage.g:2372:1: ( rule__WithExpression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWithExpressionAccess().getGroup_2_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:2373:1: ( rule__WithExpression__Group_2_0__0 )
                    // InternalBeeLangTestLanguage.g:2373:2: rule__WithExpression__Group_2_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWithExpressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2377:6: ( ( rule__WithExpression__Group_2_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2377:6: ( ( rule__WithExpression__Group_2_1__0 ) )
                    // InternalBeeLangTestLanguage.g:2378:1: ( rule__WithExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWithExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:2379:1: ( rule__WithExpression__Group_2_1__0 )
                    // InternalBeeLangTestLanguage.g:2379:2: rule__WithExpression__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWithExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, rule__WithExpression__Alternatives_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Alternatives_2"


    // $ANTLR start "rule__KeywordVariables__NameAlternatives_1_0"
    // InternalBeeLangTestLanguage.g:2388:1: rule__KeywordVariables__NameAlternatives_1_0 : ( ( 'input' ) | ( 'output' ) | ( 'source' ) | ( 'properties' ) | ( 'builder' ) | ( 'unit' ) | ( 'this' ) );
    public final void rule__KeywordVariables__NameAlternatives_1_0() throws RecognitionException {
        int rule__KeywordVariables__NameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return ; }
            // InternalBeeLangTestLanguage.g:2392:1: ( ( 'input' ) | ( 'output' ) | ( 'source' ) | ( 'properties' ) | ( 'builder' ) | ( 'unit' ) | ( 'this' ) )
            int alt28=7;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt28=1;
                }
                break;
            case 39:
                {
                alt28=2;
                }
                break;
            case 40:
                {
                alt28=3;
                }
                break;
            case 41:
                {
                alt28=4;
                }
                break;
            case 42:
                {
                alt28=5;
                }
                break;
            case 13:
                {
                alt28=6;
                }
                break;
            case 43:
                {
                alt28=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2393:1: ( 'input' )
                    {
                    // InternalBeeLangTestLanguage.g:2393:1: ( 'input' )
                    // InternalBeeLangTestLanguage.g:2394:1: 'input'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0()); 
                    }
                    match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2401:6: ( 'output' )
                    {
                    // InternalBeeLangTestLanguage.g:2401:6: ( 'output' )
                    // InternalBeeLangTestLanguage.g:2402:1: 'output'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1()); 
                    }
                    match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2409:6: ( 'source' )
                    {
                    // InternalBeeLangTestLanguage.g:2409:6: ( 'source' )
                    // InternalBeeLangTestLanguage.g:2410:1: 'source'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2()); 
                    }
                    match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:2417:6: ( 'properties' )
                    {
                    // InternalBeeLangTestLanguage.g:2417:6: ( 'properties' )
                    // InternalBeeLangTestLanguage.g:2418:1: 'properties'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3()); 
                    }
                    match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:2425:6: ( 'builder' )
                    {
                    // InternalBeeLangTestLanguage.g:2425:6: ( 'builder' )
                    // InternalBeeLangTestLanguage.g:2426:1: 'builder'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4()); 
                    }
                    match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:2433:6: ( 'unit' )
                    {
                    // InternalBeeLangTestLanguage.g:2433:6: ( 'unit' )
                    // InternalBeeLangTestLanguage.g:2434:1: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalBeeLangTestLanguage.g:2441:6: ( 'this' )
                    {
                    // InternalBeeLangTestLanguage.g:2441:6: ( 'this' )
                    // InternalBeeLangTestLanguage.g:2442:1: 'this'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6()); 
                    }
                    match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, rule__KeywordVariables__NameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__NameAlternatives_1_0"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalBeeLangTestLanguage.g:2454:1: rule__Literal__Alternatives : ( ( ruleValueLiteral ) | ( ruleLiteralFunction ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {
        int rule__Literal__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return ; }
            // InternalBeeLangTestLanguage.g:2458:1: ( ( ruleValueLiteral ) | ( ruleLiteralFunction ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_STRING) ) {
                alt29=1;
            }
            else if ( (LA29_0==44) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2459:1: ( ruleValueLiteral )
                    {
                    // InternalBeeLangTestLanguage.g:2459:1: ( ruleValueLiteral )
                    // InternalBeeLangTestLanguage.g:2460:1: ruleValueLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValueLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2465:6: ( ruleLiteralFunction )
                    {
                    // InternalBeeLangTestLanguage.g:2465:6: ( ruleLiteralFunction )
                    // InternalBeeLangTestLanguage.g:2466:1: ruleLiteralFunction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLiteralFunction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, rule__Literal__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__ClosureExpression__Alternatives_2"
    // InternalBeeLangTestLanguage.g:2476:1: rule__ClosureExpression__Alternatives_2 : ( ( ( rule__ClosureExpression__Group_2_0__0 ) ) | ( ( rule__ClosureExpression__Group_2_1__0 ) ) );
    public final void rule__ClosureExpression__Alternatives_2() throws RecognitionException {
        int rule__ClosureExpression__Alternatives_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return ; }
            // InternalBeeLangTestLanguage.g:2480:1: ( ( ( rule__ClosureExpression__Group_2_0__0 ) ) | ( ( rule__ClosureExpression__Group_2_1__0 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_ID||LA30_0==60||LA30_0==72) ) {
                alt30=1;
            }
            else if ( (LA30_0==75) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2481:1: ( ( rule__ClosureExpression__Group_2_0__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2481:1: ( ( rule__ClosureExpression__Group_2_0__0 ) )
                    // InternalBeeLangTestLanguage.g:2482:1: ( rule__ClosureExpression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureExpressionAccess().getGroup_2_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:2483:1: ( rule__ClosureExpression__Group_2_0__0 )
                    // InternalBeeLangTestLanguage.g:2483:2: rule__ClosureExpression__Group_2_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureExpressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2487:6: ( ( rule__ClosureExpression__Group_2_1__0 ) )
                    {
                    // InternalBeeLangTestLanguage.g:2487:6: ( ( rule__ClosureExpression__Group_2_1__0 ) )
                    // InternalBeeLangTestLanguage.g:2488:1: ( rule__ClosureExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:2489:1: ( rule__ClosureExpression__Group_2_1__0 )
                    // InternalBeeLangTestLanguage.g:2489:2: rule__ClosureExpression__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, rule__ClosureExpression__Alternatives_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Alternatives_2"


    // $ANTLR start "rule__OneOrManyExpressions__Alternatives"
    // InternalBeeLangTestLanguage.g:2498:1: rule__OneOrManyExpressions__Alternatives : ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) );
    public final void rule__OneOrManyExpressions__Alternatives() throws RecognitionException {
        int rule__OneOrManyExpressions__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return ; }
            // InternalBeeLangTestLanguage.g:2502:1: ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) )
            int alt31=2;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2503:1: ( ruleBlockExpressionWithoutBrackets )
                    {
                    // InternalBeeLangTestLanguage.g:2503:1: ( ruleBlockExpressionWithoutBrackets )
                    // InternalBeeLangTestLanguage.g:2504:1: ruleBlockExpressionWithoutBrackets
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBlockExpressionWithoutBrackets();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2509:6: ( ruleExpression )
                    {
                    // InternalBeeLangTestLanguage.g:2509:6: ( ruleExpression )
                    // InternalBeeLangTestLanguage.g:2510:1: ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, rule__OneOrManyExpressions__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OneOrManyExpressions__Alternatives"


    // $ANTLR start "rule__QID__Alternatives_1"
    // InternalBeeLangTestLanguage.g:2520:1: rule__QID__Alternatives_1 : ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) );
    public final void rule__QID__Alternatives_1() throws RecognitionException {
        int rule__QID__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return ; }
            // InternalBeeLangTestLanguage.g:2524:1: ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) )
            int alt32=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt32=1;
                }
                break;
            case RULE_HEX:
                {
                alt32=2;
                }
                break;
            case RULE_ID:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2525:1: ( RULE_INT )
                    {
                    // InternalBeeLangTestLanguage.g:2525:1: ( RULE_INT )
                    // InternalBeeLangTestLanguage.g:2526:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2531:6: ( RULE_HEX )
                    {
                    // InternalBeeLangTestLanguage.g:2531:6: ( RULE_HEX )
                    // InternalBeeLangTestLanguage.g:2532:1: RULE_HEX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_HEX,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2537:6: ( RULE_ID )
                    {
                    // InternalBeeLangTestLanguage.g:2537:6: ( RULE_ID )
                    // InternalBeeLangTestLanguage.g:2538:1: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); 
                    }
                    match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, rule__QID__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Alternatives_1"


    // $ANTLR start "rule__QID__Alternatives_2_2"
    // InternalBeeLangTestLanguage.g:2548:1: rule__QID__Alternatives_2_2 : ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) );
    public final void rule__QID__Alternatives_2_2() throws RecognitionException {
        int rule__QID__Alternatives_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return ; }
            // InternalBeeLangTestLanguage.g:2552:1: ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) )
            int alt33=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt33=1;
                }
                break;
            case RULE_HEX:
                {
                alt33=2;
                }
                break;
            case RULE_ID:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2553:1: ( RULE_INT )
                    {
                    // InternalBeeLangTestLanguage.g:2553:1: ( RULE_INT )
                    // InternalBeeLangTestLanguage.g:2554:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); 
                    }
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:2559:6: ( RULE_HEX )
                    {
                    // InternalBeeLangTestLanguage.g:2559:6: ( RULE_HEX )
                    // InternalBeeLangTestLanguage.g:2560:1: RULE_HEX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); 
                    }
                    match(input,RULE_HEX,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:2565:6: ( RULE_ID )
                    {
                    // InternalBeeLangTestLanguage.g:2565:6: ( RULE_ID )
                    // InternalBeeLangTestLanguage.g:2566:1: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); 
                    }
                    match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, rule__QID__Alternatives_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Alternatives_2_2"


    // $ANTLR start "rule__Unit__Group__0"
    // InternalBeeLangTestLanguage.g:2578:1: rule__Unit__Group__0 : rule__Unit__Group__0__Impl rule__Unit__Group__1 ;
    public final void rule__Unit__Group__0() throws RecognitionException {
        int rule__Unit__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return ; }
            // InternalBeeLangTestLanguage.g:2582:1: ( rule__Unit__Group__0__Impl rule__Unit__Group__1 )
            // InternalBeeLangTestLanguage.g:2583:2: rule__Unit__Group__0__Impl rule__Unit__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Unit__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, rule__Unit__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0"


    // $ANTLR start "rule__Unit__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:2590:1: rule__Unit__Group__0__Impl : ( () ) ;
    public final void rule__Unit__Group__0__Impl() throws RecognitionException {
        int rule__Unit__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return ; }
            // InternalBeeLangTestLanguage.g:2594:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:2595:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:2595:1: ( () )
            // InternalBeeLangTestLanguage.g:2596:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:2597:1: ()
            // InternalBeeLangTestLanguage.g:2599:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, rule__Unit__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0__Impl"


    // $ANTLR start "rule__Unit__Group__1"
    // InternalBeeLangTestLanguage.g:2609:1: rule__Unit__Group__1 : rule__Unit__Group__1__Impl rule__Unit__Group__2 ;
    public final void rule__Unit__Group__1() throws RecognitionException {
        int rule__Unit__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return ; }
            // InternalBeeLangTestLanguage.g:2613:1: ( rule__Unit__Group__1__Impl rule__Unit__Group__2 )
            // InternalBeeLangTestLanguage.g:2614:2: rule__Unit__Group__1__Impl rule__Unit__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Unit__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, rule__Unit__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1"


    // $ANTLR start "rule__Unit__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:2621:1: rule__Unit__Group__1__Impl : ( ( rule__Unit__DocumentationAssignment_1 )? ) ;
    public final void rule__Unit__Group__1__Impl() throws RecognitionException {
        int rule__Unit__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return ; }
            // InternalBeeLangTestLanguage.g:2625:1: ( ( ( rule__Unit__DocumentationAssignment_1 )? ) )
            // InternalBeeLangTestLanguage.g:2626:1: ( ( rule__Unit__DocumentationAssignment_1 )? )
            {
            // InternalBeeLangTestLanguage.g:2626:1: ( ( rule__Unit__DocumentationAssignment_1 )? )
            // InternalBeeLangTestLanguage.g:2627:1: ( rule__Unit__DocumentationAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:2628:1: ( rule__Unit__DocumentationAssignment_1 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_DOCUMENTATION) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2628:2: rule__Unit__DocumentationAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__DocumentationAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, rule__Unit__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1__Impl"


    // $ANTLR start "rule__Unit__Group__2"
    // InternalBeeLangTestLanguage.g:2638:1: rule__Unit__Group__2 : rule__Unit__Group__2__Impl rule__Unit__Group__3 ;
    public final void rule__Unit__Group__2() throws RecognitionException {
        int rule__Unit__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return ; }
            // InternalBeeLangTestLanguage.g:2642:1: ( rule__Unit__Group__2__Impl rule__Unit__Group__3 )
            // InternalBeeLangTestLanguage.g:2643:2: rule__Unit__Group__2__Impl rule__Unit__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, rule__Unit__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2"


    // $ANTLR start "rule__Unit__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:2650:1: rule__Unit__Group__2__Impl : ( 'unit' ) ;
    public final void rule__Unit__Group__2__Impl() throws RecognitionException {
        int rule__Unit__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return ; }
            // InternalBeeLangTestLanguage.g:2654:1: ( ( 'unit' ) )
            // InternalBeeLangTestLanguage.g:2655:1: ( 'unit' )
            {
            // InternalBeeLangTestLanguage.g:2655:1: ( 'unit' )
            // InternalBeeLangTestLanguage.g:2656:1: 'unit'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitKeyword_2()); 
            }
            match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, rule__Unit__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2__Impl"


    // $ANTLR start "rule__Unit__Group__3"
    // InternalBeeLangTestLanguage.g:2669:1: rule__Unit__Group__3 : rule__Unit__Group__3__Impl rule__Unit__Group__4 ;
    public final void rule__Unit__Group__3() throws RecognitionException {
        int rule__Unit__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return ; }
            // InternalBeeLangTestLanguage.g:2673:1: ( rule__Unit__Group__3__Impl rule__Unit__Group__4 )
            // InternalBeeLangTestLanguage.g:2674:2: rule__Unit__Group__3__Impl rule__Unit__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, rule__Unit__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__3"


    // $ANTLR start "rule__Unit__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:2681:1: rule__Unit__Group__3__Impl : ( ( rule__Unit__NameAssignment_3 )? ) ;
    public final void rule__Unit__Group__3__Impl() throws RecognitionException {
        int rule__Unit__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return ; }
            // InternalBeeLangTestLanguage.g:2685:1: ( ( ( rule__Unit__NameAssignment_3 )? ) )
            // InternalBeeLangTestLanguage.g:2686:1: ( ( rule__Unit__NameAssignment_3 )? )
            {
            // InternalBeeLangTestLanguage.g:2686:1: ( ( rule__Unit__NameAssignment_3 )? )
            // InternalBeeLangTestLanguage.g:2687:1: ( rule__Unit__NameAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getNameAssignment_3()); 
            }
            // InternalBeeLangTestLanguage.g:2688:1: ( rule__Unit__NameAssignment_3 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_ID) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2688:2: rule__Unit__NameAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__NameAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, rule__Unit__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__3__Impl"


    // $ANTLR start "rule__Unit__Group__4"
    // InternalBeeLangTestLanguage.g:2698:1: rule__Unit__Group__4 : rule__Unit__Group__4__Impl rule__Unit__Group__5 ;
    public final void rule__Unit__Group__4() throws RecognitionException {
        int rule__Unit__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return ; }
            // InternalBeeLangTestLanguage.g:2702:1: ( rule__Unit__Group__4__Impl rule__Unit__Group__5 )
            // InternalBeeLangTestLanguage.g:2703:2: rule__Unit__Group__4__Impl rule__Unit__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, rule__Unit__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__4"


    // $ANTLR start "rule__Unit__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:2710:1: rule__Unit__Group__4__Impl : ( ( rule__Unit__Group_4__0 )? ) ;
    public final void rule__Unit__Group__4__Impl() throws RecognitionException {
        int rule__Unit__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return ; }
            // InternalBeeLangTestLanguage.g:2714:1: ( ( ( rule__Unit__Group_4__0 )? ) )
            // InternalBeeLangTestLanguage.g:2715:1: ( ( rule__Unit__Group_4__0 )? )
            {
            // InternalBeeLangTestLanguage.g:2715:1: ( ( rule__Unit__Group_4__0 )? )
            // InternalBeeLangTestLanguage.g:2716:1: ( rule__Unit__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_4()); 
            }
            // InternalBeeLangTestLanguage.g:2717:1: ( rule__Unit__Group_4__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==46) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2717:2: rule__Unit__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, rule__Unit__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__4__Impl"


    // $ANTLR start "rule__Unit__Group__5"
    // InternalBeeLangTestLanguage.g:2727:1: rule__Unit__Group__5 : rule__Unit__Group__5__Impl rule__Unit__Group__6 ;
    public final void rule__Unit__Group__5() throws RecognitionException {
        int rule__Unit__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return ; }
            // InternalBeeLangTestLanguage.g:2731:1: ( rule__Unit__Group__5__Impl rule__Unit__Group__6 )
            // InternalBeeLangTestLanguage.g:2732:2: rule__Unit__Group__5__Impl rule__Unit__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, rule__Unit__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__5"


    // $ANTLR start "rule__Unit__Group__5__Impl"
    // InternalBeeLangTestLanguage.g:2739:1: rule__Unit__Group__5__Impl : ( ( rule__Unit__Group_5__0 )? ) ;
    public final void rule__Unit__Group__5__Impl() throws RecognitionException {
        int rule__Unit__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return ; }
            // InternalBeeLangTestLanguage.g:2743:1: ( ( ( rule__Unit__Group_5__0 )? ) )
            // InternalBeeLangTestLanguage.g:2744:1: ( ( rule__Unit__Group_5__0 )? )
            {
            // InternalBeeLangTestLanguage.g:2744:1: ( ( rule__Unit__Group_5__0 )? )
            // InternalBeeLangTestLanguage.g:2745:1: ( rule__Unit__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_5()); 
            }
            // InternalBeeLangTestLanguage.g:2746:1: ( rule__Unit__Group_5__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==47) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:2746:2: rule__Unit__Group_5__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, rule__Unit__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__5__Impl"


    // $ANTLR start "rule__Unit__Group__6"
    // InternalBeeLangTestLanguage.g:2756:1: rule__Unit__Group__6 : rule__Unit__Group__6__Impl rule__Unit__Group__7 ;
    public final void rule__Unit__Group__6() throws RecognitionException {
        int rule__Unit__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return ; }
            // InternalBeeLangTestLanguage.g:2760:1: ( rule__Unit__Group__6__Impl rule__Unit__Group__7 )
            // InternalBeeLangTestLanguage.g:2761:2: rule__Unit__Group__6__Impl rule__Unit__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__Unit__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, rule__Unit__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__6"


    // $ANTLR start "rule__Unit__Group__6__Impl"
    // InternalBeeLangTestLanguage.g:2768:1: rule__Unit__Group__6__Impl : ( '{' ) ;
    public final void rule__Unit__Group__6__Impl() throws RecognitionException {
        int rule__Unit__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return ; }
            // InternalBeeLangTestLanguage.g:2772:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:2773:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:2773:1: ( '{' )
            // InternalBeeLangTestLanguage.g:2774:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, rule__Unit__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__6__Impl"


    // $ANTLR start "rule__Unit__Group__7"
    // InternalBeeLangTestLanguage.g:2787:1: rule__Unit__Group__7 : rule__Unit__Group__7__Impl rule__Unit__Group__8 ;
    public final void rule__Unit__Group__7() throws RecognitionException {
        int rule__Unit__Group__7_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return ; }
            // InternalBeeLangTestLanguage.g:2791:1: ( rule__Unit__Group__7__Impl rule__Unit__Group__8 )
            // InternalBeeLangTestLanguage.g:2792:2: rule__Unit__Group__7__Impl rule__Unit__Group__8
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__Unit__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, rule__Unit__Group__7_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__7"


    // $ANTLR start "rule__Unit__Group__7__Impl"
    // InternalBeeLangTestLanguage.g:2799:1: rule__Unit__Group__7__Impl : ( ( rule__Unit__UnorderedGroup_7 ) ) ;
    public final void rule__Unit__Group__7__Impl() throws RecognitionException {
        int rule__Unit__Group__7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return ; }
            // InternalBeeLangTestLanguage.g:2803:1: ( ( ( rule__Unit__UnorderedGroup_7 ) ) )
            // InternalBeeLangTestLanguage.g:2804:1: ( ( rule__Unit__UnorderedGroup_7 ) )
            {
            // InternalBeeLangTestLanguage.g:2804:1: ( ( rule__Unit__UnorderedGroup_7 ) )
            // InternalBeeLangTestLanguage.g:2805:1: ( rule__Unit__UnorderedGroup_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnorderedGroup_7()); 
            }
            // InternalBeeLangTestLanguage.g:2806:1: ( rule__Unit__UnorderedGroup_7 )
            // InternalBeeLangTestLanguage.g:2806:2: rule__Unit__UnorderedGroup_7
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__UnorderedGroup_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnorderedGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, rule__Unit__Group__7__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__7__Impl"


    // $ANTLR start "rule__Unit__Group__8"
    // InternalBeeLangTestLanguage.g:2816:1: rule__Unit__Group__8 : rule__Unit__Group__8__Impl ;
    public final void rule__Unit__Group__8() throws RecognitionException {
        int rule__Unit__Group__8_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return ; }
            // InternalBeeLangTestLanguage.g:2820:1: ( rule__Unit__Group__8__Impl )
            // InternalBeeLangTestLanguage.g:2821:2: rule__Unit__Group__8__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, rule__Unit__Group__8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__8"


    // $ANTLR start "rule__Unit__Group__8__Impl"
    // InternalBeeLangTestLanguage.g:2827:1: rule__Unit__Group__8__Impl : ( '}' ) ;
    public final void rule__Unit__Group__8__Impl() throws RecognitionException {
        int rule__Unit__Group__8__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return ; }
            // InternalBeeLangTestLanguage.g:2831:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:2832:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:2832:1: ( '}' )
            // InternalBeeLangTestLanguage.g:2833:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, rule__Unit__Group__8__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__8__Impl"


    // $ANTLR start "rule__Unit__Group_4__0"
    // InternalBeeLangTestLanguage.g:2864:1: rule__Unit__Group_4__0 : rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1 ;
    public final void rule__Unit__Group_4__0() throws RecognitionException {
        int rule__Unit__Group_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return ; }
            // InternalBeeLangTestLanguage.g:2868:1: ( rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1 )
            // InternalBeeLangTestLanguage.g:2869:2: rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, rule__Unit__Group_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__0"


    // $ANTLR start "rule__Unit__Group_4__0__Impl"
    // InternalBeeLangTestLanguage.g:2876:1: rule__Unit__Group_4__0__Impl : ( 'version' ) ;
    public final void rule__Unit__Group_4__0__Impl() throws RecognitionException {
        int rule__Unit__Group_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return ; }
            // InternalBeeLangTestLanguage.g:2880:1: ( ( 'version' ) )
            // InternalBeeLangTestLanguage.g:2881:1: ( 'version' )
            {
            // InternalBeeLangTestLanguage.g:2881:1: ( 'version' )
            // InternalBeeLangTestLanguage.g:2882:1: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionKeyword_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, rule__Unit__Group_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__0__Impl"


    // $ANTLR start "rule__Unit__Group_4__1"
    // InternalBeeLangTestLanguage.g:2895:1: rule__Unit__Group_4__1 : rule__Unit__Group_4__1__Impl ;
    public final void rule__Unit__Group_4__1() throws RecognitionException {
        int rule__Unit__Group_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return ; }
            // InternalBeeLangTestLanguage.g:2899:1: ( rule__Unit__Group_4__1__Impl )
            // InternalBeeLangTestLanguage.g:2900:2: rule__Unit__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, rule__Unit__Group_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__1"


    // $ANTLR start "rule__Unit__Group_4__1__Impl"
    // InternalBeeLangTestLanguage.g:2906:1: rule__Unit__Group_4__1__Impl : ( ( rule__Unit__VersionAssignment_4_1 ) ) ;
    public final void rule__Unit__Group_4__1__Impl() throws RecognitionException {
        int rule__Unit__Group_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return ; }
            // InternalBeeLangTestLanguage.g:2910:1: ( ( ( rule__Unit__VersionAssignment_4_1 ) ) )
            // InternalBeeLangTestLanguage.g:2911:1: ( ( rule__Unit__VersionAssignment_4_1 ) )
            {
            // InternalBeeLangTestLanguage.g:2911:1: ( ( rule__Unit__VersionAssignment_4_1 ) )
            // InternalBeeLangTestLanguage.g:2912:1: ( rule__Unit__VersionAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionAssignment_4_1()); 
            }
            // InternalBeeLangTestLanguage.g:2913:1: ( rule__Unit__VersionAssignment_4_1 )
            // InternalBeeLangTestLanguage.g:2913:2: rule__Unit__VersionAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__VersionAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, rule__Unit__Group_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__1__Impl"


    // $ANTLR start "rule__Unit__Group_5__0"
    // InternalBeeLangTestLanguage.g:2927:1: rule__Unit__Group_5__0 : rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1 ;
    public final void rule__Unit__Group_5__0() throws RecognitionException {
        int rule__Unit__Group_5__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return ; }
            // InternalBeeLangTestLanguage.g:2931:1: ( rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1 )
            // InternalBeeLangTestLanguage.g:2932:2: rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, rule__Unit__Group_5__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__0"


    // $ANTLR start "rule__Unit__Group_5__0__Impl"
    // InternalBeeLangTestLanguage.g:2939:1: rule__Unit__Group_5__0__Impl : ( 'implements' ) ;
    public final void rule__Unit__Group_5__0__Impl() throws RecognitionException {
        int rule__Unit__Group_5__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return ; }
            // InternalBeeLangTestLanguage.g:2943:1: ( ( 'implements' ) )
            // InternalBeeLangTestLanguage.g:2944:1: ( 'implements' )
            {
            // InternalBeeLangTestLanguage.g:2944:1: ( 'implements' )
            // InternalBeeLangTestLanguage.g:2945:1: 'implements'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsKeyword_5_0()); 
            }
            match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, rule__Unit__Group_5__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__0__Impl"


    // $ANTLR start "rule__Unit__Group_5__1"
    // InternalBeeLangTestLanguage.g:2958:1: rule__Unit__Group_5__1 : rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2 ;
    public final void rule__Unit__Group_5__1() throws RecognitionException {
        int rule__Unit__Group_5__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return ; }
            // InternalBeeLangTestLanguage.g:2962:1: ( rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2 )
            // InternalBeeLangTestLanguage.g:2963:2: rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Unit__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, rule__Unit__Group_5__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__1"


    // $ANTLR start "rule__Unit__Group_5__1__Impl"
    // InternalBeeLangTestLanguage.g:2970:1: rule__Unit__Group_5__1__Impl : ( ( rule__Unit__ImplementsAssignment_5_1 ) ) ;
    public final void rule__Unit__Group_5__1__Impl() throws RecognitionException {
        int rule__Unit__Group_5__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return ; }
            // InternalBeeLangTestLanguage.g:2974:1: ( ( ( rule__Unit__ImplementsAssignment_5_1 ) ) )
            // InternalBeeLangTestLanguage.g:2975:1: ( ( rule__Unit__ImplementsAssignment_5_1 ) )
            {
            // InternalBeeLangTestLanguage.g:2975:1: ( ( rule__Unit__ImplementsAssignment_5_1 ) )
            // InternalBeeLangTestLanguage.g:2976:1: ( rule__Unit__ImplementsAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsAssignment_5_1()); 
            }
            // InternalBeeLangTestLanguage.g:2977:1: ( rule__Unit__ImplementsAssignment_5_1 )
            // InternalBeeLangTestLanguage.g:2977:2: rule__Unit__ImplementsAssignment_5_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ImplementsAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, rule__Unit__Group_5__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__1__Impl"


    // $ANTLR start "rule__Unit__Group_5__2"
    // InternalBeeLangTestLanguage.g:2987:1: rule__Unit__Group_5__2 : rule__Unit__Group_5__2__Impl ;
    public final void rule__Unit__Group_5__2() throws RecognitionException {
        int rule__Unit__Group_5__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return ; }
            // InternalBeeLangTestLanguage.g:2991:1: ( rule__Unit__Group_5__2__Impl )
            // InternalBeeLangTestLanguage.g:2992:2: rule__Unit__Group_5__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, rule__Unit__Group_5__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__2"


    // $ANTLR start "rule__Unit__Group_5__2__Impl"
    // InternalBeeLangTestLanguage.g:2998:1: rule__Unit__Group_5__2__Impl : ( ( rule__Unit__Group_5_2__0 )* ) ;
    public final void rule__Unit__Group_5__2__Impl() throws RecognitionException {
        int rule__Unit__Group_5__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return ; }
            // InternalBeeLangTestLanguage.g:3002:1: ( ( ( rule__Unit__Group_5_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:3003:1: ( ( rule__Unit__Group_5_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:3003:1: ( ( rule__Unit__Group_5_2__0 )* )
            // InternalBeeLangTestLanguage.g:3004:1: ( rule__Unit__Group_5_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_5_2()); 
            }
            // InternalBeeLangTestLanguage.g:3005:1: ( rule__Unit__Group_5_2__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==48) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:3005:2: rule__Unit__Group_5_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__Unit__Group_5_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, rule__Unit__Group_5__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__2__Impl"


    // $ANTLR start "rule__Unit__Group_5_2__0"
    // InternalBeeLangTestLanguage.g:3021:1: rule__Unit__Group_5_2__0 : rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1 ;
    public final void rule__Unit__Group_5_2__0() throws RecognitionException {
        int rule__Unit__Group_5_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return ; }
            // InternalBeeLangTestLanguage.g:3025:1: ( rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1 )
            // InternalBeeLangTestLanguage.g:3026:2: rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_5_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, rule__Unit__Group_5_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__0"


    // $ANTLR start "rule__Unit__Group_5_2__0__Impl"
    // InternalBeeLangTestLanguage.g:3033:1: rule__Unit__Group_5_2__0__Impl : ( ',' ) ;
    public final void rule__Unit__Group_5_2__0__Impl() throws RecognitionException {
        int rule__Unit__Group_5_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return ; }
            // InternalBeeLangTestLanguage.g:3037:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:3038:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:3038:1: ( ',' )
            // InternalBeeLangTestLanguage.g:3039:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, rule__Unit__Group_5_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__0__Impl"


    // $ANTLR start "rule__Unit__Group_5_2__1"
    // InternalBeeLangTestLanguage.g:3052:1: rule__Unit__Group_5_2__1 : rule__Unit__Group_5_2__1__Impl ;
    public final void rule__Unit__Group_5_2__1() throws RecognitionException {
        int rule__Unit__Group_5_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return ; }
            // InternalBeeLangTestLanguage.g:3056:1: ( rule__Unit__Group_5_2__1__Impl )
            // InternalBeeLangTestLanguage.g:3057:2: rule__Unit__Group_5_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, rule__Unit__Group_5_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__1"


    // $ANTLR start "rule__Unit__Group_5_2__1__Impl"
    // InternalBeeLangTestLanguage.g:3063:1: rule__Unit__Group_5_2__1__Impl : ( ( rule__Unit__ImplementsAssignment_5_2_1 ) ) ;
    public final void rule__Unit__Group_5_2__1__Impl() throws RecognitionException {
        int rule__Unit__Group_5_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return ; }
            // InternalBeeLangTestLanguage.g:3067:1: ( ( ( rule__Unit__ImplementsAssignment_5_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:3068:1: ( ( rule__Unit__ImplementsAssignment_5_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:3068:1: ( ( rule__Unit__ImplementsAssignment_5_2_1 ) )
            // InternalBeeLangTestLanguage.g:3069:1: ( rule__Unit__ImplementsAssignment_5_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:3070:1: ( rule__Unit__ImplementsAssignment_5_2_1 )
            // InternalBeeLangTestLanguage.g:3070:2: rule__Unit__ImplementsAssignment_5_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ImplementsAssignment_5_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, rule__Unit__Group_5_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__0"
    // InternalBeeLangTestLanguage.g:3084:1: rule__Unit__Group_7_0__0 : rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1 ;
    public final void rule__Unit__Group_7_0__0() throws RecognitionException {
        int rule__Unit__Group_7_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return ; }
            // InternalBeeLangTestLanguage.g:3088:1: ( rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1 )
            // InternalBeeLangTestLanguage.g:3089:2: rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, rule__Unit__Group_7_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__0"


    // $ANTLR start "rule__Unit__Group_7_0__0__Impl"
    // InternalBeeLangTestLanguage.g:3096:1: rule__Unit__Group_7_0__0__Impl : ( 'source' ) ;
    public final void rule__Unit__Group_7_0__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return ; }
            // InternalBeeLangTestLanguage.g:3100:1: ( ( 'source' ) )
            // InternalBeeLangTestLanguage.g:3101:1: ( 'source' )
            {
            // InternalBeeLangTestLanguage.g:3101:1: ( 'source' )
            // InternalBeeLangTestLanguage.g:3102:1: 'source'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0()); 
            }
            match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, rule__Unit__Group_7_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__1"
    // InternalBeeLangTestLanguage.g:3115:1: rule__Unit__Group_7_0__1 : rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2 ;
    public final void rule__Unit__Group_7_0__1() throws RecognitionException {
        int rule__Unit__Group_7_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return ; }
            // InternalBeeLangTestLanguage.g:3119:1: ( rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2 )
            // InternalBeeLangTestLanguage.g:3120:2: rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Unit__Group_7_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, rule__Unit__Group_7_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__1"


    // $ANTLR start "rule__Unit__Group_7_0__1__Impl"
    // InternalBeeLangTestLanguage.g:3127:1: rule__Unit__Group_7_0__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_0__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return ; }
            // InternalBeeLangTestLanguage.g:3131:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3132:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3132:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3133:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, rule__Unit__Group_7_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__2"
    // InternalBeeLangTestLanguage.g:3146:1: rule__Unit__Group_7_0__2 : rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3 ;
    public final void rule__Unit__Group_7_0__2() throws RecognitionException {
        int rule__Unit__Group_7_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return ; }
            // InternalBeeLangTestLanguage.g:3150:1: ( rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3 )
            // InternalBeeLangTestLanguage.g:3151:2: rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, rule__Unit__Group_7_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__2"


    // $ANTLR start "rule__Unit__Group_7_0__2__Impl"
    // InternalBeeLangTestLanguage.g:3158:1: rule__Unit__Group_7_0__2__Impl : ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) ) ;
    public final void rule__Unit__Group_7_0__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return ; }
            // InternalBeeLangTestLanguage.g:3162:1: ( ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:3163:1: ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3163:1: ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) )
            // InternalBeeLangTestLanguage.g:3164:1: ( rule__Unit__SourceLocationAssignment_7_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceLocationAssignment_7_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:3165:1: ( rule__Unit__SourceLocationAssignment_7_0_2 )
            // InternalBeeLangTestLanguage.g:3165:2: rule__Unit__SourceLocationAssignment_7_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__SourceLocationAssignment_7_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceLocationAssignment_7_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 181, rule__Unit__Group_7_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__3"
    // InternalBeeLangTestLanguage.g:3175:1: rule__Unit__Group_7_0__3 : rule__Unit__Group_7_0__3__Impl ;
    public final void rule__Unit__Group_7_0__3() throws RecognitionException {
        int rule__Unit__Group_7_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return ; }
            // InternalBeeLangTestLanguage.g:3179:1: ( rule__Unit__Group_7_0__3__Impl )
            // InternalBeeLangTestLanguage.g:3180:2: rule__Unit__Group_7_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 182, rule__Unit__Group_7_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__3"


    // $ANTLR start "rule__Unit__Group_7_0__3__Impl"
    // InternalBeeLangTestLanguage.g:3186:1: rule__Unit__Group_7_0__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_0__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return ; }
            // InternalBeeLangTestLanguage.g:3190:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3191:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3191:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3192:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 183, rule__Unit__Group_7_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__0"
    // InternalBeeLangTestLanguage.g:3213:1: rule__Unit__Group_7_1__0 : rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1 ;
    public final void rule__Unit__Group_7_1__0() throws RecognitionException {
        int rule__Unit__Group_7_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return ; }
            // InternalBeeLangTestLanguage.g:3217:1: ( rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1 )
            // InternalBeeLangTestLanguage.g:3218:2: rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 184, rule__Unit__Group_7_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__0"


    // $ANTLR start "rule__Unit__Group_7_1__0__Impl"
    // InternalBeeLangTestLanguage.g:3225:1: rule__Unit__Group_7_1__0__Impl : ( 'output' ) ;
    public final void rule__Unit__Group_7_1__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return ; }
            // InternalBeeLangTestLanguage.g:3229:1: ( ( 'output' ) )
            // InternalBeeLangTestLanguage.g:3230:1: ( 'output' )
            {
            // InternalBeeLangTestLanguage.g:3230:1: ( 'output' )
            // InternalBeeLangTestLanguage.g:3231:1: 'output'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0()); 
            }
            match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 185, rule__Unit__Group_7_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__1"
    // InternalBeeLangTestLanguage.g:3244:1: rule__Unit__Group_7_1__1 : rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2 ;
    public final void rule__Unit__Group_7_1__1() throws RecognitionException {
        int rule__Unit__Group_7_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return ; }
            // InternalBeeLangTestLanguage.g:3248:1: ( rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2 )
            // InternalBeeLangTestLanguage.g:3249:2: rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Unit__Group_7_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 186, rule__Unit__Group_7_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__1"


    // $ANTLR start "rule__Unit__Group_7_1__1__Impl"
    // InternalBeeLangTestLanguage.g:3256:1: rule__Unit__Group_7_1__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_1__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return ; }
            // InternalBeeLangTestLanguage.g:3260:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3261:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3261:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3262:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_1_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 187, rule__Unit__Group_7_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__2"
    // InternalBeeLangTestLanguage.g:3275:1: rule__Unit__Group_7_1__2 : rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3 ;
    public final void rule__Unit__Group_7_1__2() throws RecognitionException {
        int rule__Unit__Group_7_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return ; }
            // InternalBeeLangTestLanguage.g:3279:1: ( rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3 )
            // InternalBeeLangTestLanguage.g:3280:2: rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 188, rule__Unit__Group_7_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__2"


    // $ANTLR start "rule__Unit__Group_7_1__2__Impl"
    // InternalBeeLangTestLanguage.g:3287:1: rule__Unit__Group_7_1__2__Impl : ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) ) ;
    public final void rule__Unit__Group_7_1__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return ; }
            // InternalBeeLangTestLanguage.g:3291:1: ( ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:3292:1: ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3292:1: ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) )
            // InternalBeeLangTestLanguage.g:3293:1: ( rule__Unit__OutputLocationAssignment_7_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputLocationAssignment_7_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:3294:1: ( rule__Unit__OutputLocationAssignment_7_1_2 )
            // InternalBeeLangTestLanguage.g:3294:2: rule__Unit__OutputLocationAssignment_7_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__OutputLocationAssignment_7_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputLocationAssignment_7_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 189, rule__Unit__Group_7_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__3"
    // InternalBeeLangTestLanguage.g:3304:1: rule__Unit__Group_7_1__3 : rule__Unit__Group_7_1__3__Impl ;
    public final void rule__Unit__Group_7_1__3() throws RecognitionException {
        int rule__Unit__Group_7_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return ; }
            // InternalBeeLangTestLanguage.g:3308:1: ( rule__Unit__Group_7_1__3__Impl )
            // InternalBeeLangTestLanguage.g:3309:2: rule__Unit__Group_7_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 190, rule__Unit__Group_7_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__3"


    // $ANTLR start "rule__Unit__Group_7_1__3__Impl"
    // InternalBeeLangTestLanguage.g:3315:1: rule__Unit__Group_7_1__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_1__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return ; }
            // InternalBeeLangTestLanguage.g:3319:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3320:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3320:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3321:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 191, rule__Unit__Group_7_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__0"
    // InternalBeeLangTestLanguage.g:3342:1: rule__Unit__Group_7_2__0 : rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1 ;
    public final void rule__Unit__Group_7_2__0() throws RecognitionException {
        int rule__Unit__Group_7_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return ; }
            // InternalBeeLangTestLanguage.g:3346:1: ( rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1 )
            // InternalBeeLangTestLanguage.g:3347:2: rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 192, rule__Unit__Group_7_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__0"


    // $ANTLR start "rule__Unit__Group_7_2__0__Impl"
    // InternalBeeLangTestLanguage.g:3354:1: rule__Unit__Group_7_2__0__Impl : ( 'provides' ) ;
    public final void rule__Unit__Group_7_2__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return ; }
            // InternalBeeLangTestLanguage.g:3358:1: ( ( 'provides' ) )
            // InternalBeeLangTestLanguage.g:3359:1: ( 'provides' )
            {
            // InternalBeeLangTestLanguage.g:3359:1: ( 'provides' )
            // InternalBeeLangTestLanguage.g:3360:1: 'provides'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 193, rule__Unit__Group_7_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__1"
    // InternalBeeLangTestLanguage.g:3373:1: rule__Unit__Group_7_2__1 : rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2 ;
    public final void rule__Unit__Group_7_2__1() throws RecognitionException {
        int rule__Unit__Group_7_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return ; }
            // InternalBeeLangTestLanguage.g:3377:1: ( rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2 )
            // InternalBeeLangTestLanguage.g:3378:2: rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 194, rule__Unit__Group_7_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__1"


    // $ANTLR start "rule__Unit__Group_7_2__1__Impl"
    // InternalBeeLangTestLanguage.g:3385:1: rule__Unit__Group_7_2__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_2__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return ; }
            // InternalBeeLangTestLanguage.g:3389:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3390:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3390:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3391:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 195, rule__Unit__Group_7_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__2"
    // InternalBeeLangTestLanguage.g:3404:1: rule__Unit__Group_7_2__2 : rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3 ;
    public final void rule__Unit__Group_7_2__2() throws RecognitionException {
        int rule__Unit__Group_7_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return ; }
            // InternalBeeLangTestLanguage.g:3408:1: ( rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3 )
            // InternalBeeLangTestLanguage.g:3409:2: rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 196, rule__Unit__Group_7_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__2"


    // $ANTLR start "rule__Unit__Group_7_2__2__Impl"
    // InternalBeeLangTestLanguage.g:3416:1: rule__Unit__Group_7_2__2__Impl : ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) ) ;
    public final void rule__Unit__Group_7_2__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return ; }
            // InternalBeeLangTestLanguage.g:3420:1: ( ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:3421:1: ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3421:1: ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) )
            // InternalBeeLangTestLanguage.g:3422:1: ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:3423:1: ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 )
            // InternalBeeLangTestLanguage.g:3423:2: rule__Unit__ProvidedCapabilitiesAssignment_7_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ProvidedCapabilitiesAssignment_7_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 197, rule__Unit__Group_7_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__3"
    // InternalBeeLangTestLanguage.g:3433:1: rule__Unit__Group_7_2__3 : rule__Unit__Group_7_2__3__Impl ;
    public final void rule__Unit__Group_7_2__3() throws RecognitionException {
        int rule__Unit__Group_7_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return ; }
            // InternalBeeLangTestLanguage.g:3437:1: ( rule__Unit__Group_7_2__3__Impl )
            // InternalBeeLangTestLanguage.g:3438:2: rule__Unit__Group_7_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 198, rule__Unit__Group_7_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__3"


    // $ANTLR start "rule__Unit__Group_7_2__3__Impl"
    // InternalBeeLangTestLanguage.g:3444:1: rule__Unit__Group_7_2__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_2__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return ; }
            // InternalBeeLangTestLanguage.g:3448:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3449:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3449:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3450:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 199, rule__Unit__Group_7_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__0"
    // InternalBeeLangTestLanguage.g:3471:1: rule__Unit__Group_7_3__0 : rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1 ;
    public final void rule__Unit__Group_7_3__0() throws RecognitionException {
        int rule__Unit__Group_7_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return ; }
            // InternalBeeLangTestLanguage.g:3475:1: ( rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1 )
            // InternalBeeLangTestLanguage.g:3476:2: rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 200, rule__Unit__Group_7_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__0"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser4 extends InternalBeeLangTestLanguageParser3 {

        InternalBeeLangTestLanguageParser4(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser4(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__Unit__Group_7_3__0__Impl"
    // InternalBeeLangTestLanguage.g:3483:1: rule__Unit__Group_7_3__0__Impl : ( 'requires' ) ;
    public final void rule__Unit__Group_7_3__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return ; }
            // InternalBeeLangTestLanguage.g:3487:1: ( ( 'requires' ) )
            // InternalBeeLangTestLanguage.g:3488:1: ( 'requires' )
            {
            // InternalBeeLangTestLanguage.g:3488:1: ( 'requires' )
            // InternalBeeLangTestLanguage.g:3489:1: 'requires'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 201, rule__Unit__Group_7_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__1"
    // InternalBeeLangTestLanguage.g:3502:1: rule__Unit__Group_7_3__1 : rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2 ;
    public final void rule__Unit__Group_7_3__1() throws RecognitionException {
        int rule__Unit__Group_7_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return ; }
            // InternalBeeLangTestLanguage.g:3506:1: ( rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2 )
            // InternalBeeLangTestLanguage.g:3507:2: rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 202, rule__Unit__Group_7_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__1"


    // $ANTLR start "rule__Unit__Group_7_3__1__Impl"
    // InternalBeeLangTestLanguage.g:3514:1: rule__Unit__Group_7_3__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_3__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return ; }
            // InternalBeeLangTestLanguage.g:3518:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3519:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3519:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3520:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 203, rule__Unit__Group_7_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__2"
    // InternalBeeLangTestLanguage.g:3533:1: rule__Unit__Group_7_3__2 : rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3 ;
    public final void rule__Unit__Group_7_3__2() throws RecognitionException {
        int rule__Unit__Group_7_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return ; }
            // InternalBeeLangTestLanguage.g:3537:1: ( rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3 )
            // InternalBeeLangTestLanguage.g:3538:2: rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 204, rule__Unit__Group_7_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__2"


    // $ANTLR start "rule__Unit__Group_7_3__2__Impl"
    // InternalBeeLangTestLanguage.g:3545:1: rule__Unit__Group_7_3__2__Impl : ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) ) ;
    public final void rule__Unit__Group_7_3__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return ; }
            // InternalBeeLangTestLanguage.g:3549:1: ( ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) ) )
            // InternalBeeLangTestLanguage.g:3550:1: ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) )
            {
            // InternalBeeLangTestLanguage.g:3550:1: ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) )
            // InternalBeeLangTestLanguage.g:3551:1: ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_2()); 
            }
            // InternalBeeLangTestLanguage.g:3552:1: ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 )
            // InternalBeeLangTestLanguage.g:3552:2: rule__Unit__RequiredCapabilitiesAssignment_7_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__RequiredCapabilitiesAssignment_7_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 205, rule__Unit__Group_7_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__3"
    // InternalBeeLangTestLanguage.g:3562:1: rule__Unit__Group_7_3__3 : rule__Unit__Group_7_3__3__Impl ;
    public final void rule__Unit__Group_7_3__3() throws RecognitionException {
        int rule__Unit__Group_7_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return ; }
            // InternalBeeLangTestLanguage.g:3566:1: ( rule__Unit__Group_7_3__3__Impl )
            // InternalBeeLangTestLanguage.g:3567:2: rule__Unit__Group_7_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 206, rule__Unit__Group_7_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__3"


    // $ANTLR start "rule__Unit__Group_7_3__3__Impl"
    // InternalBeeLangTestLanguage.g:3573:1: rule__Unit__Group_7_3__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_3__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return ; }
            // InternalBeeLangTestLanguage.g:3577:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3578:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3578:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3579:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 207, rule__Unit__Group_7_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__0"
    // InternalBeeLangTestLanguage.g:3600:1: rule__Unit__Group_7_4__0 : rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1 ;
    public final void rule__Unit__Group_7_4__0() throws RecognitionException {
        int rule__Unit__Group_7_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return ; }
            // InternalBeeLangTestLanguage.g:3604:1: ( rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1 )
            // InternalBeeLangTestLanguage.g:3605:2: rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__Unit__Group_7_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 208, rule__Unit__Group_7_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__0"


    // $ANTLR start "rule__Unit__Group_7_4__0__Impl"
    // InternalBeeLangTestLanguage.g:3612:1: rule__Unit__Group_7_4__0__Impl : ( 'requires' ) ;
    public final void rule__Unit__Group_7_4__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return ; }
            // InternalBeeLangTestLanguage.g:3616:1: ( ( 'requires' ) )
            // InternalBeeLangTestLanguage.g:3617:1: ( 'requires' )
            {
            // InternalBeeLangTestLanguage.g:3617:1: ( 'requires' )
            // InternalBeeLangTestLanguage.g:3618:1: 'requires'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 209, rule__Unit__Group_7_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__1"
    // InternalBeeLangTestLanguage.g:3631:1: rule__Unit__Group_7_4__1 : rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2 ;
    public final void rule__Unit__Group_7_4__1() throws RecognitionException {
        int rule__Unit__Group_7_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return ; }
            // InternalBeeLangTestLanguage.g:3635:1: ( rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2 )
            // InternalBeeLangTestLanguage.g:3636:2: rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 210, rule__Unit__Group_7_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__1"


    // $ANTLR start "rule__Unit__Group_7_4__1__Impl"
    // InternalBeeLangTestLanguage.g:3643:1: rule__Unit__Group_7_4__1__Impl : ( 'env' ) ;
    public final void rule__Unit__Group_7_4__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return ; }
            // InternalBeeLangTestLanguage.g:3647:1: ( ( 'env' ) )
            // InternalBeeLangTestLanguage.g:3648:1: ( 'env' )
            {
            // InternalBeeLangTestLanguage.g:3648:1: ( 'env' )
            // InternalBeeLangTestLanguage.g:3649:1: 'env'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1()); 
            }
            match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 211, rule__Unit__Group_7_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__2"
    // InternalBeeLangTestLanguage.g:3662:1: rule__Unit__Group_7_4__2 : rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3 ;
    public final void rule__Unit__Group_7_4__2() throws RecognitionException {
        int rule__Unit__Group_7_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return ; }
            // InternalBeeLangTestLanguage.g:3666:1: ( rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3 )
            // InternalBeeLangTestLanguage.g:3667:2: rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 212, rule__Unit__Group_7_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__2"


    // $ANTLR start "rule__Unit__Group_7_4__2__Impl"
    // InternalBeeLangTestLanguage.g:3674:1: rule__Unit__Group_7_4__2__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_4__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return ; }
            // InternalBeeLangTestLanguage.g:3678:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:3679:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:3679:1: ( ':' )
            // InternalBeeLangTestLanguage.g:3680:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_4_2()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 213, rule__Unit__Group_7_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__3"
    // InternalBeeLangTestLanguage.g:3693:1: rule__Unit__Group_7_4__3 : rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4 ;
    public final void rule__Unit__Group_7_4__3() throws RecognitionException {
        int rule__Unit__Group_7_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return ; }
            // InternalBeeLangTestLanguage.g:3697:1: ( rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4 )
            // InternalBeeLangTestLanguage.g:3698:2: rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 214, rule__Unit__Group_7_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__3"


    // $ANTLR start "rule__Unit__Group_7_4__3__Impl"
    // InternalBeeLangTestLanguage.g:3705:1: rule__Unit__Group_7_4__3__Impl : ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) ) ;
    public final void rule__Unit__Group_7_4__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return ; }
            // InternalBeeLangTestLanguage.g:3709:1: ( ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) ) )
            // InternalBeeLangTestLanguage.g:3710:1: ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) )
            {
            // InternalBeeLangTestLanguage.g:3710:1: ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) )
            // InternalBeeLangTestLanguage.g:3711:1: ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3()); 
            }
            // InternalBeeLangTestLanguage.g:3712:1: ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 )
            // InternalBeeLangTestLanguage.g:3712:2: rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 215, rule__Unit__Group_7_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__4"
    // InternalBeeLangTestLanguage.g:3722:1: rule__Unit__Group_7_4__4 : rule__Unit__Group_7_4__4__Impl ;
    public final void rule__Unit__Group_7_4__4() throws RecognitionException {
        int rule__Unit__Group_7_4__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return ; }
            // InternalBeeLangTestLanguage.g:3726:1: ( rule__Unit__Group_7_4__4__Impl )
            // InternalBeeLangTestLanguage.g:3727:2: rule__Unit__Group_7_4__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 216, rule__Unit__Group_7_4__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__4"


    // $ANTLR start "rule__Unit__Group_7_4__4__Impl"
    // InternalBeeLangTestLanguage.g:3733:1: rule__Unit__Group_7_4__4__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_4__4__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return ; }
            // InternalBeeLangTestLanguage.g:3737:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:3738:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:3738:1: ( ';' )
            // InternalBeeLangTestLanguage.g:3739:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 217, rule__Unit__Group_7_4__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__4__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__0"
    // InternalBeeLangTestLanguage.g:3762:1: rule__ProvidedCapability__Group__0 : rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1 ;
    public final void rule__ProvidedCapability__Group__0() throws RecognitionException {
        int rule__ProvidedCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return ; }
            // InternalBeeLangTestLanguage.g:3766:1: ( rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1 )
            // InternalBeeLangTestLanguage.g:3767:2: rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__ProvidedCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 218, rule__ProvidedCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__0"


    // $ANTLR start "rule__ProvidedCapability__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:3774:1: rule__ProvidedCapability__Group__0__Impl : ( () ) ;
    public final void rule__ProvidedCapability__Group__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return ; }
            // InternalBeeLangTestLanguage.g:3778:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:3779:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:3779:1: ( () )
            // InternalBeeLangTestLanguage.g:3780:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:3781:1: ()
            // InternalBeeLangTestLanguage.g:3783:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 219, rule__ProvidedCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__1"
    // InternalBeeLangTestLanguage.g:3793:1: rule__ProvidedCapability__Group__1 : rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2 ;
    public final void rule__ProvidedCapability__Group__1() throws RecognitionException {
        int rule__ProvidedCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return ; }
            // InternalBeeLangTestLanguage.g:3797:1: ( rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2 )
            // InternalBeeLangTestLanguage.g:3798:2: rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ProvidedCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 220, rule__ProvidedCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__1"


    // $ANTLR start "rule__ProvidedCapability__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:3805:1: rule__ProvidedCapability__Group__1__Impl : ( ( rule__ProvidedCapability__Alternatives_1 ) ) ;
    public final void rule__ProvidedCapability__Group__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return ; }
            // InternalBeeLangTestLanguage.g:3809:1: ( ( ( rule__ProvidedCapability__Alternatives_1 ) ) )
            // InternalBeeLangTestLanguage.g:3810:1: ( ( rule__ProvidedCapability__Alternatives_1 ) )
            {
            // InternalBeeLangTestLanguage.g:3810:1: ( ( rule__ProvidedCapability__Alternatives_1 ) )
            // InternalBeeLangTestLanguage.g:3811:1: ( rule__ProvidedCapability__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:3812:1: ( rule__ProvidedCapability__Alternatives_1 )
            // InternalBeeLangTestLanguage.g:3812:2: rule__ProvidedCapability__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 221, rule__ProvidedCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__2"
    // InternalBeeLangTestLanguage.g:3822:1: rule__ProvidedCapability__Group__2 : rule__ProvidedCapability__Group__2__Impl ;
    public final void rule__ProvidedCapability__Group__2() throws RecognitionException {
        int rule__ProvidedCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return ; }
            // InternalBeeLangTestLanguage.g:3826:1: ( rule__ProvidedCapability__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:3827:2: rule__ProvidedCapability__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 222, rule__ProvidedCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__2"


    // $ANTLR start "rule__ProvidedCapability__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:3833:1: rule__ProvidedCapability__Group__2__Impl : ( ( rule__ProvidedCapability__Group_2__0 )? ) ;
    public final void rule__ProvidedCapability__Group__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return ; }
            // InternalBeeLangTestLanguage.g:3837:1: ( ( ( rule__ProvidedCapability__Group_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:3838:1: ( ( rule__ProvidedCapability__Group_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:3838:1: ( ( rule__ProvidedCapability__Group_2__0 )? )
            // InternalBeeLangTestLanguage.g:3839:1: ( rule__ProvidedCapability__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:3840:1: ( rule__ProvidedCapability__Group_2__0 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==44) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:3840:2: rule__ProvidedCapability__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 223, rule__ProvidedCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__0"
    // InternalBeeLangTestLanguage.g:3856:1: rule__ProvidedCapability__Group_2__0 : rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1 ;
    public final void rule__ProvidedCapability__Group_2__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return ; }
            // InternalBeeLangTestLanguage.g:3860:1: ( rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1 )
            // InternalBeeLangTestLanguage.g:3861:2: rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ProvidedCapability__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 224, rule__ProvidedCapability__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:3868:1: rule__ProvidedCapability__Group_2__0__Impl : ( '{' ) ;
    public final void rule__ProvidedCapability__Group_2__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return ; }
            // InternalBeeLangTestLanguage.g:3872:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:3873:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:3873:1: ( '{' )
            // InternalBeeLangTestLanguage.g:3874:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 225, rule__ProvidedCapability__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__1"
    // InternalBeeLangTestLanguage.g:3887:1: rule__ProvidedCapability__Group_2__1 : rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2 ;
    public final void rule__ProvidedCapability__Group_2__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return ; }
            // InternalBeeLangTestLanguage.g:3891:1: ( rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2 )
            // InternalBeeLangTestLanguage.g:3892:2: rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ProvidedCapability__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 226, rule__ProvidedCapability__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:3899:1: rule__ProvidedCapability__Group_2__1__Impl : ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) ) ;
    public final void rule__ProvidedCapability__Group_2__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return ; }
            // InternalBeeLangTestLanguage.g:3903:1: ( ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:3904:1: ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:3904:1: ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) )
            // InternalBeeLangTestLanguage.g:3905:1: ( rule__ProvidedCapability__UnorderedGroup_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:3906:1: ( rule__ProvidedCapability__UnorderedGroup_2_1 )
            // InternalBeeLangTestLanguage.g:3906:2: rule__ProvidedCapability__UnorderedGroup_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 227, rule__ProvidedCapability__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__2"
    // InternalBeeLangTestLanguage.g:3916:1: rule__ProvidedCapability__Group_2__2 : rule__ProvidedCapability__Group_2__2__Impl ;
    public final void rule__ProvidedCapability__Group_2__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return ; }
            // InternalBeeLangTestLanguage.g:3920:1: ( rule__ProvidedCapability__Group_2__2__Impl )
            // InternalBeeLangTestLanguage.g:3921:2: rule__ProvidedCapability__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 228, rule__ProvidedCapability__Group_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2__2__Impl"
    // InternalBeeLangTestLanguage.g:3927:1: rule__ProvidedCapability__Group_2__2__Impl : ( '}' ) ;
    public final void rule__ProvidedCapability__Group_2__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return ; }
            // InternalBeeLangTestLanguage.g:3931:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:3932:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:3932:1: ( '}' )
            // InternalBeeLangTestLanguage.g:3933:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 229, rule__ProvidedCapability__Group_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__0"
    // InternalBeeLangTestLanguage.g:3952:1: rule__ProvidedCapability__Group_2_1_0__0 : rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1 ;
    public final void rule__ProvidedCapability__Group_2_1_0__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return ; }
            // InternalBeeLangTestLanguage.g:3956:1: ( rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1 )
            // InternalBeeLangTestLanguage.g:3957:2: rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 230, rule__ProvidedCapability__Group_2_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:3964:1: rule__ProvidedCapability__Group_2_1_0__0__Impl : ( 'when' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return ; }
            // InternalBeeLangTestLanguage.g:3968:1: ( ( 'when' ) )
            // InternalBeeLangTestLanguage.g:3969:1: ( 'when' )
            {
            // InternalBeeLangTestLanguage.g:3969:1: ( 'when' )
            // InternalBeeLangTestLanguage.g:3970:1: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 231, rule__ProvidedCapability__Group_2_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__1"
    // InternalBeeLangTestLanguage.g:3983:1: rule__ProvidedCapability__Group_2_1_0__1 : rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2 ;
    public final void rule__ProvidedCapability__Group_2_1_0__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return ; }
            // InternalBeeLangTestLanguage.g:3987:1: ( rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2 )
            // InternalBeeLangTestLanguage.g:3988:2: rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ProvidedCapability__Group_2_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 232, rule__ProvidedCapability__Group_2_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:3995:1: rule__ProvidedCapability__Group_2_1_0__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return ; }
            // InternalBeeLangTestLanguage.g:3999:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4000:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4000:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4001:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 233, rule__ProvidedCapability__Group_2_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__2"
    // InternalBeeLangTestLanguage.g:4014:1: rule__ProvidedCapability__Group_2_1_0__2 : rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3 ;
    public final void rule__ProvidedCapability__Group_2_1_0__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return ; }
            // InternalBeeLangTestLanguage.g:4018:1: ( rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3 )
            // InternalBeeLangTestLanguage.g:4019:2: rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 234, rule__ProvidedCapability__Group_2_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:4026:1: rule__ProvidedCapability__Group_2_1_0__2__Impl : ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return ; }
            // InternalBeeLangTestLanguage.g:4030:1: ( ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:4031:1: ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4031:1: ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) )
            // InternalBeeLangTestLanguage.g:4032:1: ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_2_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:4033:1: ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 )
            // InternalBeeLangTestLanguage.g:4033:2: rule__ProvidedCapability__CondExprAssignment_2_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__CondExprAssignment_2_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_2_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 235, rule__ProvidedCapability__Group_2_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__3"
    // InternalBeeLangTestLanguage.g:4043:1: rule__ProvidedCapability__Group_2_1_0__3 : rule__ProvidedCapability__Group_2_1_0__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_0__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return ; }
            // InternalBeeLangTestLanguage.g:4047:1: ( rule__ProvidedCapability__Group_2_1_0__3__Impl )
            // InternalBeeLangTestLanguage.g:4048:2: rule__ProvidedCapability__Group_2_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 236, rule__ProvidedCapability__Group_2_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__3__Impl"
    // InternalBeeLangTestLanguage.g:4054:1: rule__ProvidedCapability__Group_2_1_0__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return ; }
            // InternalBeeLangTestLanguage.g:4058:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4059:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4059:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4060:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 237, rule__ProvidedCapability__Group_2_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__3__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__0"
    // InternalBeeLangTestLanguage.g:4081:1: rule__ProvidedCapability__Group_2_1_1__0 : rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1 ;
    public final void rule__ProvidedCapability__Group_2_1_1__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return ; }
            // InternalBeeLangTestLanguage.g:4085:1: ( rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1 )
            // InternalBeeLangTestLanguage.g:4086:2: rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 238, rule__ProvidedCapability__Group_2_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:4093:1: rule__ProvidedCapability__Group_2_1_1__0__Impl : ( 'name' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return ; }
            // InternalBeeLangTestLanguage.g:4097:1: ( ( 'name' ) )
            // InternalBeeLangTestLanguage.g:4098:1: ( 'name' )
            {
            // InternalBeeLangTestLanguage.g:4098:1: ( 'name' )
            // InternalBeeLangTestLanguage.g:4099:1: 'name'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0()); 
            }
            match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 239, rule__ProvidedCapability__Group_2_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__1"
    // InternalBeeLangTestLanguage.g:4112:1: rule__ProvidedCapability__Group_2_1_1__1 : rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2 ;
    public final void rule__ProvidedCapability__Group_2_1_1__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return ; }
            // InternalBeeLangTestLanguage.g:4116:1: ( rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2 )
            // InternalBeeLangTestLanguage.g:4117:2: rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ProvidedCapability__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 240, rule__ProvidedCapability__Group_2_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:4124:1: rule__ProvidedCapability__Group_2_1_1__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return ; }
            // InternalBeeLangTestLanguage.g:4128:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4129:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4129:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4130:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 241, rule__ProvidedCapability__Group_2_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__2"
    // InternalBeeLangTestLanguage.g:4143:1: rule__ProvidedCapability__Group_2_1_1__2 : rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3 ;
    public final void rule__ProvidedCapability__Group_2_1_1__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return ; }
            // InternalBeeLangTestLanguage.g:4147:1: ( rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3 )
            // InternalBeeLangTestLanguage.g:4148:2: rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 242, rule__ProvidedCapability__Group_2_1_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__2__Impl"
    // InternalBeeLangTestLanguage.g:4155:1: rule__ProvidedCapability__Group_2_1_1__2__Impl : ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return ; }
            // InternalBeeLangTestLanguage.g:4159:1: ( ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:4160:1: ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4160:1: ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) )
            // InternalBeeLangTestLanguage.g:4161:1: ( rule__ProvidedCapability__NameAssignment_2_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_2_1_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:4162:1: ( rule__ProvidedCapability__NameAssignment_2_1_1_2 )
            // InternalBeeLangTestLanguage.g:4162:2: rule__ProvidedCapability__NameAssignment_2_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__NameAssignment_2_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_2_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 243, rule__ProvidedCapability__Group_2_1_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__3"
    // InternalBeeLangTestLanguage.g:4172:1: rule__ProvidedCapability__Group_2_1_1__3 : rule__ProvidedCapability__Group_2_1_1__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_1__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return ; }
            // InternalBeeLangTestLanguage.g:4176:1: ( rule__ProvidedCapability__Group_2_1_1__3__Impl )
            // InternalBeeLangTestLanguage.g:4177:2: rule__ProvidedCapability__Group_2_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 244, rule__ProvidedCapability__Group_2_1_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__3__Impl"
    // InternalBeeLangTestLanguage.g:4183:1: rule__ProvidedCapability__Group_2_1_1__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return ; }
            // InternalBeeLangTestLanguage.g:4187:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4188:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4188:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4189:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 245, rule__ProvidedCapability__Group_2_1_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__3__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__0"
    // InternalBeeLangTestLanguage.g:4210:1: rule__ProvidedCapability__Group_2_1_2__0 : rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1 ;
    public final void rule__ProvidedCapability__Group_2_1_2__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return ; }
            // InternalBeeLangTestLanguage.g:4214:1: ( rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1 )
            // InternalBeeLangTestLanguage.g:4215:2: rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 246, rule__ProvidedCapability__Group_2_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:4222:1: rule__ProvidedCapability__Group_2_1_2__0__Impl : ( 'version' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return ; }
            // InternalBeeLangTestLanguage.g:4226:1: ( ( 'version' ) )
            // InternalBeeLangTestLanguage.g:4227:1: ( 'version' )
            {
            // InternalBeeLangTestLanguage.g:4227:1: ( 'version' )
            // InternalBeeLangTestLanguage.g:4228:1: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 247, rule__ProvidedCapability__Group_2_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__1"
    // InternalBeeLangTestLanguage.g:4241:1: rule__ProvidedCapability__Group_2_1_2__1 : rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2 ;
    public final void rule__ProvidedCapability__Group_2_1_2__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return ; }
            // InternalBeeLangTestLanguage.g:4245:1: ( rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2 )
            // InternalBeeLangTestLanguage.g:4246:2: rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ProvidedCapability__Group_2_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 248, rule__ProvidedCapability__Group_2_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:4253:1: rule__ProvidedCapability__Group_2_1_2__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return ; }
            // InternalBeeLangTestLanguage.g:4257:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4258:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4258:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4259:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 249, rule__ProvidedCapability__Group_2_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__2"
    // InternalBeeLangTestLanguage.g:4272:1: rule__ProvidedCapability__Group_2_1_2__2 : rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3 ;
    public final void rule__ProvidedCapability__Group_2_1_2__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return ; }
            // InternalBeeLangTestLanguage.g:4276:1: ( rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3 )
            // InternalBeeLangTestLanguage.g:4277:2: rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 250, rule__ProvidedCapability__Group_2_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:4284:1: rule__ProvidedCapability__Group_2_1_2__2__Impl : ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return ; }
            // InternalBeeLangTestLanguage.g:4288:1: ( ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:4289:1: ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4289:1: ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:4290:1: ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_2_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:4291:1: ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 )
            // InternalBeeLangTestLanguage.g:4291:2: rule__ProvidedCapability__VersionAssignment_2_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__VersionAssignment_2_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_2_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 251, rule__ProvidedCapability__Group_2_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__3"
    // InternalBeeLangTestLanguage.g:4301:1: rule__ProvidedCapability__Group_2_1_2__3 : rule__ProvidedCapability__Group_2_1_2__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_2__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return ; }
            // InternalBeeLangTestLanguage.g:4305:1: ( rule__ProvidedCapability__Group_2_1_2__3__Impl )
            // InternalBeeLangTestLanguage.g:4306:2: rule__ProvidedCapability__Group_2_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 252, rule__ProvidedCapability__Group_2_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__3__Impl"
    // InternalBeeLangTestLanguage.g:4312:1: rule__ProvidedCapability__Group_2_1_2__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return ; }
            // InternalBeeLangTestLanguage.g:4316:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4317:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4317:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4318:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 253, rule__ProvidedCapability__Group_2_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__0"
    // InternalBeeLangTestLanguage.g:4339:1: rule__AliasedRequiredCapability__Group__0 : rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1 ;
    public final void rule__AliasedRequiredCapability__Group__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return ; }
            // InternalBeeLangTestLanguage.g:4343:1: ( rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1 )
            // InternalBeeLangTestLanguage.g:4344:2: rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 254, rule__AliasedRequiredCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:4351:1: rule__AliasedRequiredCapability__Group__0__Impl : ( ( rule__AliasedRequiredCapability__Alternatives_0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return ; }
            // InternalBeeLangTestLanguage.g:4355:1: ( ( ( rule__AliasedRequiredCapability__Alternatives_0 ) ) )
            // InternalBeeLangTestLanguage.g:4356:1: ( ( rule__AliasedRequiredCapability__Alternatives_0 ) )
            {
            // InternalBeeLangTestLanguage.g:4356:1: ( ( rule__AliasedRequiredCapability__Alternatives_0 ) )
            // InternalBeeLangTestLanguage.g:4357:1: ( rule__AliasedRequiredCapability__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAlternatives_0()); 
            }
            // InternalBeeLangTestLanguage.g:4358:1: ( rule__AliasedRequiredCapability__Alternatives_0 )
            // InternalBeeLangTestLanguage.g:4358:2: rule__AliasedRequiredCapability__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 255, rule__AliasedRequiredCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__1"
    // InternalBeeLangTestLanguage.g:4368:1: rule__AliasedRequiredCapability__Group__1 : rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2 ;
    public final void rule__AliasedRequiredCapability__Group__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return ; }
            // InternalBeeLangTestLanguage.g:4372:1: ( rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2 )
            // InternalBeeLangTestLanguage.g:4373:2: rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__AliasedRequiredCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 256, rule__AliasedRequiredCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:4380:1: rule__AliasedRequiredCapability__Group__1__Impl : ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return ; }
            // InternalBeeLangTestLanguage.g:4384:1: ( ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:4385:1: ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:4385:1: ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:4386:1: ( rule__AliasedRequiredCapability__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:4387:1: ( rule__AliasedRequiredCapability__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:4387:2: rule__AliasedRequiredCapability__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 257, rule__AliasedRequiredCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__2"
    // InternalBeeLangTestLanguage.g:4397:1: rule__AliasedRequiredCapability__Group__2 : rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3 ;
    public final void rule__AliasedRequiredCapability__Group__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return ; }
            // InternalBeeLangTestLanguage.g:4401:1: ( rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3 )
            // InternalBeeLangTestLanguage.g:4402:2: rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__AliasedRequiredCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 258, rule__AliasedRequiredCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:4409:1: rule__AliasedRequiredCapability__Group__2__Impl : ( ( rule__AliasedRequiredCapability__Group_2__0 )? ) ;
    public final void rule__AliasedRequiredCapability__Group__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return ; }
            // InternalBeeLangTestLanguage.g:4413:1: ( ( ( rule__AliasedRequiredCapability__Group_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:4414:1: ( ( rule__AliasedRequiredCapability__Group_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:4414:1: ( ( rule__AliasedRequiredCapability__Group_2__0 )? )
            // InternalBeeLangTestLanguage.g:4415:1: ( rule__AliasedRequiredCapability__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:4416:1: ( rule__AliasedRequiredCapability__Group_2__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==56) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:4416:2: rule__AliasedRequiredCapability__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 259, rule__AliasedRequiredCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__3"
    // InternalBeeLangTestLanguage.g:4426:1: rule__AliasedRequiredCapability__Group__3 : rule__AliasedRequiredCapability__Group__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return ; }
            // InternalBeeLangTestLanguage.g:4430:1: ( rule__AliasedRequiredCapability__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:4431:2: rule__AliasedRequiredCapability__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 260, rule__AliasedRequiredCapability__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:4437:1: rule__AliasedRequiredCapability__Group__3__Impl : ( ( rule__AliasedRequiredCapability__Group_3__0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return ; }
            // InternalBeeLangTestLanguage.g:4441:1: ( ( ( rule__AliasedRequiredCapability__Group_3__0 ) ) )
            // InternalBeeLangTestLanguage.g:4442:1: ( ( rule__AliasedRequiredCapability__Group_3__0 ) )
            {
            // InternalBeeLangTestLanguage.g:4442:1: ( ( rule__AliasedRequiredCapability__Group_3__0 ) )
            // InternalBeeLangTestLanguage.g:4443:1: ( rule__AliasedRequiredCapability__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:4444:1: ( rule__AliasedRequiredCapability__Group_3__0 )
            // InternalBeeLangTestLanguage.g:4444:2: rule__AliasedRequiredCapability__Group_3__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 261, rule__AliasedRequiredCapability__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__0"
    // InternalBeeLangTestLanguage.g:4462:1: rule__AliasedRequiredCapability__Group_2__0 : rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1 ;
    public final void rule__AliasedRequiredCapability__Group_2__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return ; }
            // InternalBeeLangTestLanguage.g:4466:1: ( rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1 )
            // InternalBeeLangTestLanguage.g:4467:2: rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 262, rule__AliasedRequiredCapability__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:4474:1: rule__AliasedRequiredCapability__Group_2__0__Impl : ( 'as' ) ;
    public final void rule__AliasedRequiredCapability__Group_2__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return ; }
            // InternalBeeLangTestLanguage.g:4478:1: ( ( 'as' ) )
            // InternalBeeLangTestLanguage.g:4479:1: ( 'as' )
            {
            // InternalBeeLangTestLanguage.g:4479:1: ( 'as' )
            // InternalBeeLangTestLanguage.g:4480:1: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 263, rule__AliasedRequiredCapability__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__1"
    // InternalBeeLangTestLanguage.g:4493:1: rule__AliasedRequiredCapability__Group_2__1 : rule__AliasedRequiredCapability__Group_2__1__Impl ;
    public final void rule__AliasedRequiredCapability__Group_2__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return ; }
            // InternalBeeLangTestLanguage.g:4497:1: ( rule__AliasedRequiredCapability__Group_2__1__Impl )
            // InternalBeeLangTestLanguage.g:4498:2: rule__AliasedRequiredCapability__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 264, rule__AliasedRequiredCapability__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:4504:1: rule__AliasedRequiredCapability__Group_2__1__Impl : ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_2__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return ; }
            // InternalBeeLangTestLanguage.g:4508:1: ( ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:4509:1: ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:4509:1: ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) )
            // InternalBeeLangTestLanguage.g:4510:1: ( rule__AliasedRequiredCapability__AliasAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasAssignment_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:4511:1: ( rule__AliasedRequiredCapability__AliasAssignment_2_1 )
            // InternalBeeLangTestLanguage.g:4511:2: rule__AliasedRequiredCapability__AliasAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__AliasAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 265, rule__AliasedRequiredCapability__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__0"
    // InternalBeeLangTestLanguage.g:4525:1: rule__AliasedRequiredCapability__Group_3__0 : rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1 ;
    public final void rule__AliasedRequiredCapability__Group_3__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return ; }
            // InternalBeeLangTestLanguage.g:4529:1: ( rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1 )
            // InternalBeeLangTestLanguage.g:4530:2: rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AliasedRequiredCapability__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 266, rule__AliasedRequiredCapability__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:4537:1: rule__AliasedRequiredCapability__Group_3__0__Impl : ( '{' ) ;
    public final void rule__AliasedRequiredCapability__Group_3__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return ; }
            // InternalBeeLangTestLanguage.g:4541:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:4542:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:4542:1: ( '{' )
            // InternalBeeLangTestLanguage.g:4543:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 267, rule__AliasedRequiredCapability__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__1"
    // InternalBeeLangTestLanguage.g:4556:1: rule__AliasedRequiredCapability__Group_3__1 : rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2 ;
    public final void rule__AliasedRequiredCapability__Group_3__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return ; }
            // InternalBeeLangTestLanguage.g:4560:1: ( rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2 )
            // InternalBeeLangTestLanguage.g:4561:2: rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AliasedRequiredCapability__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 268, rule__AliasedRequiredCapability__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:4568:1: rule__AliasedRequiredCapability__Group_3__1__Impl : ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return ; }
            // InternalBeeLangTestLanguage.g:4572:1: ( ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) ) )
            // InternalBeeLangTestLanguage.g:4573:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) )
            {
            // InternalBeeLangTestLanguage.g:4573:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) )
            // InternalBeeLangTestLanguage.g:4574:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:4575:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 )
            // InternalBeeLangTestLanguage.g:4575:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 269, rule__AliasedRequiredCapability__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__2"
    // InternalBeeLangTestLanguage.g:4585:1: rule__AliasedRequiredCapability__Group_3__2 : rule__AliasedRequiredCapability__Group_3__2__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return ; }
            // InternalBeeLangTestLanguage.g:4589:1: ( rule__AliasedRequiredCapability__Group_3__2__Impl )
            // InternalBeeLangTestLanguage.g:4590:2: rule__AliasedRequiredCapability__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 270, rule__AliasedRequiredCapability__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__2__Impl"
    // InternalBeeLangTestLanguage.g:4596:1: rule__AliasedRequiredCapability__Group_3__2__Impl : ( '}' ) ;
    public final void rule__AliasedRequiredCapability__Group_3__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return ; }
            // InternalBeeLangTestLanguage.g:4600:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:4601:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:4601:1: ( '}' )
            // InternalBeeLangTestLanguage.g:4602:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 271, rule__AliasedRequiredCapability__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__0"
    // InternalBeeLangTestLanguage.g:4621:1: rule__AliasedRequiredCapability__Group_3_1_0__0 : rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return ; }
            // InternalBeeLangTestLanguage.g:4625:1: ( rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1 )
            // InternalBeeLangTestLanguage.g:4626:2: rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 272, rule__AliasedRequiredCapability__Group_3_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:4633:1: rule__AliasedRequiredCapability__Group_3_1_0__0__Impl : ( 'when' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return ; }
            // InternalBeeLangTestLanguage.g:4637:1: ( ( 'when' ) )
            // InternalBeeLangTestLanguage.g:4638:1: ( 'when' )
            {
            // InternalBeeLangTestLanguage.g:4638:1: ( 'when' )
            // InternalBeeLangTestLanguage.g:4639:1: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 273, rule__AliasedRequiredCapability__Group_3_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__1"
    // InternalBeeLangTestLanguage.g:4652:1: rule__AliasedRequiredCapability__Group_3_1_0__1 : rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return ; }
            // InternalBeeLangTestLanguage.g:4656:1: ( rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2 )
            // InternalBeeLangTestLanguage.g:4657:2: rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AliasedRequiredCapability__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 274, rule__AliasedRequiredCapability__Group_3_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:4664:1: rule__AliasedRequiredCapability__Group_3_1_0__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return ; }
            // InternalBeeLangTestLanguage.g:4668:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4669:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4669:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4670:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 275, rule__AliasedRequiredCapability__Group_3_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__2"
    // InternalBeeLangTestLanguage.g:4683:1: rule__AliasedRequiredCapability__Group_3_1_0__2 : rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return ; }
            // InternalBeeLangTestLanguage.g:4687:1: ( rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3 )
            // InternalBeeLangTestLanguage.g:4688:2: rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 276, rule__AliasedRequiredCapability__Group_3_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:4695:1: rule__AliasedRequiredCapability__Group_3_1_0__2__Impl : ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return ; }
            // InternalBeeLangTestLanguage.g:4699:1: ( ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:4700:1: ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4700:1: ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) )
            // InternalBeeLangTestLanguage.g:4701:1: ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:4702:1: ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 )
            // InternalBeeLangTestLanguage.g:4702:2: rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 277, rule__AliasedRequiredCapability__Group_3_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__3"
    // InternalBeeLangTestLanguage.g:4712:1: rule__AliasedRequiredCapability__Group_3_1_0__3 : rule__AliasedRequiredCapability__Group_3_1_0__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return ; }
            // InternalBeeLangTestLanguage.g:4716:1: ( rule__AliasedRequiredCapability__Group_3_1_0__3__Impl )
            // InternalBeeLangTestLanguage.g:4717:2: rule__AliasedRequiredCapability__Group_3_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 278, rule__AliasedRequiredCapability__Group_3_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__3__Impl"
    // InternalBeeLangTestLanguage.g:4723:1: rule__AliasedRequiredCapability__Group_3_1_0__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return ; }
            // InternalBeeLangTestLanguage.g:4727:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4728:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4728:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4729:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 279, rule__AliasedRequiredCapability__Group_3_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__0"
    // InternalBeeLangTestLanguage.g:4750:1: rule__AliasedRequiredCapability__Group_3_1_1__0 : rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return ; }
            // InternalBeeLangTestLanguage.g:4754:1: ( rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1 )
            // InternalBeeLangTestLanguage.g:4755:2: rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 280, rule__AliasedRequiredCapability__Group_3_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:4762:1: rule__AliasedRequiredCapability__Group_3_1_1__0__Impl : ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return ; }
            // InternalBeeLangTestLanguage.g:4766:1: ( ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:4767:1: ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:4767:1: ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:4768:1: ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:4769:1: ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 )
            // InternalBeeLangTestLanguage.g:4769:2: rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 281, rule__AliasedRequiredCapability__Group_3_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__1"
    // InternalBeeLangTestLanguage.g:4779:1: rule__AliasedRequiredCapability__Group_3_1_1__1 : rule__AliasedRequiredCapability__Group_3_1_1__1__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return ; }
            // InternalBeeLangTestLanguage.g:4783:1: ( rule__AliasedRequiredCapability__Group_3_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:4784:2: rule__AliasedRequiredCapability__Group_3_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 282, rule__AliasedRequiredCapability__Group_3_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:4790:1: rule__AliasedRequiredCapability__Group_3_1_1__1__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return ; }
            // InternalBeeLangTestLanguage.g:4794:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4795:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4795:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4796:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 283, rule__AliasedRequiredCapability__Group_3_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__0"
    // InternalBeeLangTestLanguage.g:4813:1: rule__AliasedRequiredCapability__Group_3_1_2__0 : rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return ; }
            // InternalBeeLangTestLanguage.g:4817:1: ( rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1 )
            // InternalBeeLangTestLanguage.g:4818:2: rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 284, rule__AliasedRequiredCapability__Group_3_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:4825:1: rule__AliasedRequiredCapability__Group_3_1_2__0__Impl : ( 'requires-min' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return ; }
            // InternalBeeLangTestLanguage.g:4829:1: ( ( 'requires-min' ) )
            // InternalBeeLangTestLanguage.g:4830:1: ( 'requires-min' )
            {
            // InternalBeeLangTestLanguage.g:4830:1: ( 'requires-min' )
            // InternalBeeLangTestLanguage.g:4831:1: 'requires-min'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 285, rule__AliasedRequiredCapability__Group_3_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__1"
    // InternalBeeLangTestLanguage.g:4844:1: rule__AliasedRequiredCapability__Group_3_1_2__1 : rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return ; }
            // InternalBeeLangTestLanguage.g:4848:1: ( rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2 )
            // InternalBeeLangTestLanguage.g:4849:2: rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AliasedRequiredCapability__Group_3_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 286, rule__AliasedRequiredCapability__Group_3_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:4856:1: rule__AliasedRequiredCapability__Group_3_1_2__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return ; }
            // InternalBeeLangTestLanguage.g:4860:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4861:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4861:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4862:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 287, rule__AliasedRequiredCapability__Group_3_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__2"
    // InternalBeeLangTestLanguage.g:4875:1: rule__AliasedRequiredCapability__Group_3_1_2__2 : rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return ; }
            // InternalBeeLangTestLanguage.g:4879:1: ( rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3 )
            // InternalBeeLangTestLanguage.g:4880:2: rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 288, rule__AliasedRequiredCapability__Group_3_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:4887:1: rule__AliasedRequiredCapability__Group_3_1_2__2__Impl : ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return ; }
            // InternalBeeLangTestLanguage.g:4891:1: ( ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:4892:1: ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:4892:1: ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:4893:1: ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:4894:1: ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 )
            // InternalBeeLangTestLanguage.g:4894:2: rule__AliasedRequiredCapability__MinAssignment_3_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__MinAssignment_3_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 289, rule__AliasedRequiredCapability__Group_3_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__3"
    // InternalBeeLangTestLanguage.g:4904:1: rule__AliasedRequiredCapability__Group_3_1_2__3 : rule__AliasedRequiredCapability__Group_3_1_2__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return ; }
            // InternalBeeLangTestLanguage.g:4908:1: ( rule__AliasedRequiredCapability__Group_3_1_2__3__Impl )
            // InternalBeeLangTestLanguage.g:4909:2: rule__AliasedRequiredCapability__Group_3_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 290, rule__AliasedRequiredCapability__Group_3_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__3__Impl"
    // InternalBeeLangTestLanguage.g:4915:1: rule__AliasedRequiredCapability__Group_3_1_2__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return ; }
            // InternalBeeLangTestLanguage.g:4919:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:4920:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:4920:1: ( ';' )
            // InternalBeeLangTestLanguage.g:4921:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 291, rule__AliasedRequiredCapability__Group_3_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__0"
    // InternalBeeLangTestLanguage.g:4942:1: rule__AliasedRequiredCapability__Group_3_1_3__0 : rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return ; }
            // InternalBeeLangTestLanguage.g:4946:1: ( rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1 )
            // InternalBeeLangTestLanguage.g:4947:2: rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 292, rule__AliasedRequiredCapability__Group_3_1_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__0__Impl"
    // InternalBeeLangTestLanguage.g:4954:1: rule__AliasedRequiredCapability__Group_3_1_3__0__Impl : ( 'requires-max' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return ; }
            // InternalBeeLangTestLanguage.g:4958:1: ( ( 'requires-max' ) )
            // InternalBeeLangTestLanguage.g:4959:1: ( 'requires-max' )
            {
            // InternalBeeLangTestLanguage.g:4959:1: ( 'requires-max' )
            // InternalBeeLangTestLanguage.g:4960:1: 'requires-max'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }
            match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 293, rule__AliasedRequiredCapability__Group_3_1_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__1"
    // InternalBeeLangTestLanguage.g:4973:1: rule__AliasedRequiredCapability__Group_3_1_3__1 : rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return ; }
            // InternalBeeLangTestLanguage.g:4977:1: ( rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2 )
            // InternalBeeLangTestLanguage.g:4978:2: rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AliasedRequiredCapability__Group_3_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 294, rule__AliasedRequiredCapability__Group_3_1_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__1__Impl"
    // InternalBeeLangTestLanguage.g:4985:1: rule__AliasedRequiredCapability__Group_3_1_3__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return ; }
            // InternalBeeLangTestLanguage.g:4989:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:4990:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:4990:1: ( ':' )
            // InternalBeeLangTestLanguage.g:4991:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 295, rule__AliasedRequiredCapability__Group_3_1_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__2"
    // InternalBeeLangTestLanguage.g:5004:1: rule__AliasedRequiredCapability__Group_3_1_3__2 : rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return ; }
            // InternalBeeLangTestLanguage.g:5008:1: ( rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3 )
            // InternalBeeLangTestLanguage.g:5009:2: rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 296, rule__AliasedRequiredCapability__Group_3_1_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__2__Impl"
    // InternalBeeLangTestLanguage.g:5016:1: rule__AliasedRequiredCapability__Group_3_1_3__2__Impl : ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return ; }
            // InternalBeeLangTestLanguage.g:5020:1: ( ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) ) )
            // InternalBeeLangTestLanguage.g:5021:1: ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5021:1: ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) )
            // InternalBeeLangTestLanguage.g:5022:1: ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }
            // InternalBeeLangTestLanguage.g:5023:1: ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 )
            // InternalBeeLangTestLanguage.g:5023:2: rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 297, rule__AliasedRequiredCapability__Group_3_1_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__3"
    // InternalBeeLangTestLanguage.g:5033:1: rule__AliasedRequiredCapability__Group_3_1_3__3 : rule__AliasedRequiredCapability__Group_3_1_3__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return ; }
            // InternalBeeLangTestLanguage.g:5037:1: ( rule__AliasedRequiredCapability__Group_3_1_3__3__Impl )
            // InternalBeeLangTestLanguage.g:5038:2: rule__AliasedRequiredCapability__Group_3_1_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 298, rule__AliasedRequiredCapability__Group_3_1_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__3__Impl"
    // InternalBeeLangTestLanguage.g:5044:1: rule__AliasedRequiredCapability__Group_3_1_3__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return ; }
            // InternalBeeLangTestLanguage.g:5048:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5049:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5049:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5050:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 299, rule__AliasedRequiredCapability__Group_3_1_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__0"
    // InternalBeeLangTestLanguage.g:5071:1: rule__AliasedRequiredCapability__Group_3_1_4__0 : rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return ; }
            // InternalBeeLangTestLanguage.g:5075:1: ( rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1 )
            // InternalBeeLangTestLanguage.g:5076:2: rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 300, rule__AliasedRequiredCapability__Group_3_1_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__0"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser5 extends InternalBeeLangTestLanguageParser4 {

        InternalBeeLangTestLanguageParser5(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser5(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__0__Impl"
    // InternalBeeLangTestLanguage.g:5083:1: rule__AliasedRequiredCapability__Group_3_1_4__0__Impl : ( 'version' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return ; }
            // InternalBeeLangTestLanguage.g:5087:1: ( ( 'version' ) )
            // InternalBeeLangTestLanguage.g:5088:1: ( 'version' )
            {
            // InternalBeeLangTestLanguage.g:5088:1: ( 'version' )
            // InternalBeeLangTestLanguage.g:5089:1: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 301, rule__AliasedRequiredCapability__Group_3_1_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__1"
    // InternalBeeLangTestLanguage.g:5102:1: rule__AliasedRequiredCapability__Group_3_1_4__1 : rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return ; }
            // InternalBeeLangTestLanguage.g:5106:1: ( rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2 )
            // InternalBeeLangTestLanguage.g:5107:2: rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group_3_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 302, rule__AliasedRequiredCapability__Group_3_1_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__1__Impl"
    // InternalBeeLangTestLanguage.g:5114:1: rule__AliasedRequiredCapability__Group_3_1_4__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return ; }
            // InternalBeeLangTestLanguage.g:5118:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:5119:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:5119:1: ( ':' )
            // InternalBeeLangTestLanguage.g:5120:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 303, rule__AliasedRequiredCapability__Group_3_1_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__2"
    // InternalBeeLangTestLanguage.g:5133:1: rule__AliasedRequiredCapability__Group_3_1_4__2 : rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return ; }
            // InternalBeeLangTestLanguage.g:5137:1: ( rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3 )
            // InternalBeeLangTestLanguage.g:5138:2: rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 304, rule__AliasedRequiredCapability__Group_3_1_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__2__Impl"
    // InternalBeeLangTestLanguage.g:5145:1: rule__AliasedRequiredCapability__Group_3_1_4__2__Impl : ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return ; }
            // InternalBeeLangTestLanguage.g:5149:1: ( ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) )
            // InternalBeeLangTestLanguage.g:5150:1: ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5150:1: ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            // InternalBeeLangTestLanguage.g:5151:1: ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }
            // InternalBeeLangTestLanguage.g:5152:1: ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 )
            // InternalBeeLangTestLanguage.g:5152:2: rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 305, rule__AliasedRequiredCapability__Group_3_1_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__3"
    // InternalBeeLangTestLanguage.g:5162:1: rule__AliasedRequiredCapability__Group_3_1_4__3 : rule__AliasedRequiredCapability__Group_3_1_4__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return ; }
            // InternalBeeLangTestLanguage.g:5166:1: ( rule__AliasedRequiredCapability__Group_3_1_4__3__Impl )
            // InternalBeeLangTestLanguage.g:5167:2: rule__AliasedRequiredCapability__Group_3_1_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 306, rule__AliasedRequiredCapability__Group_3_1_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__3__Impl"
    // InternalBeeLangTestLanguage.g:5173:1: rule__AliasedRequiredCapability__Group_3_1_4__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return ; }
            // InternalBeeLangTestLanguage.g:5177:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5178:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5178:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5179:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 307, rule__AliasedRequiredCapability__Group_3_1_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__0"
    // InternalBeeLangTestLanguage.g:5200:1: rule__RequiredCapability__Group__0 : rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1 ;
    public final void rule__RequiredCapability__Group__0() throws RecognitionException {
        int rule__RequiredCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return ; }
            // InternalBeeLangTestLanguage.g:5204:1: ( rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1 )
            // InternalBeeLangTestLanguage.g:5205:2: rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__RequiredCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 308, rule__RequiredCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__0"


    // $ANTLR start "rule__RequiredCapability__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:5212:1: rule__RequiredCapability__Group__0__Impl : ( () ) ;
    public final void rule__RequiredCapability__Group__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return ; }
            // InternalBeeLangTestLanguage.g:5216:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:5217:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:5217:1: ( () )
            // InternalBeeLangTestLanguage.g:5218:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:5219:1: ()
            // InternalBeeLangTestLanguage.g:5221:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 309, rule__RequiredCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__1"
    // InternalBeeLangTestLanguage.g:5231:1: rule__RequiredCapability__Group__1 : rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2 ;
    public final void rule__RequiredCapability__Group__1() throws RecognitionException {
        int rule__RequiredCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return ; }
            // InternalBeeLangTestLanguage.g:5235:1: ( rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2 )
            // InternalBeeLangTestLanguage.g:5236:2: rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__RequiredCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 310, rule__RequiredCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__1"


    // $ANTLR start "rule__RequiredCapability__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:5243:1: rule__RequiredCapability__Group__1__Impl : ( ( rule__RequiredCapability__Alternatives_1 ) ) ;
    public final void rule__RequiredCapability__Group__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return ; }
            // InternalBeeLangTestLanguage.g:5247:1: ( ( ( rule__RequiredCapability__Alternatives_1 ) ) )
            // InternalBeeLangTestLanguage.g:5248:1: ( ( rule__RequiredCapability__Alternatives_1 ) )
            {
            // InternalBeeLangTestLanguage.g:5248:1: ( ( rule__RequiredCapability__Alternatives_1 ) )
            // InternalBeeLangTestLanguage.g:5249:1: ( rule__RequiredCapability__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:5250:1: ( rule__RequiredCapability__Alternatives_1 )
            // InternalBeeLangTestLanguage.g:5250:2: rule__RequiredCapability__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 311, rule__RequiredCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__2"
    // InternalBeeLangTestLanguage.g:5260:1: rule__RequiredCapability__Group__2 : rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3 ;
    public final void rule__RequiredCapability__Group__2() throws RecognitionException {
        int rule__RequiredCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return ; }
            // InternalBeeLangTestLanguage.g:5264:1: ( rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3 )
            // InternalBeeLangTestLanguage.g:5265:2: rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__RequiredCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 312, rule__RequiredCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__2"


    // $ANTLR start "rule__RequiredCapability__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:5272:1: rule__RequiredCapability__Group__2__Impl : ( ( rule__RequiredCapability__NameAssignment_2 ) ) ;
    public final void rule__RequiredCapability__Group__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return ; }
            // InternalBeeLangTestLanguage.g:5276:1: ( ( ( rule__RequiredCapability__NameAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:5277:1: ( ( rule__RequiredCapability__NameAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5277:1: ( ( rule__RequiredCapability__NameAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:5278:1: ( rule__RequiredCapability__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:5279:1: ( rule__RequiredCapability__NameAssignment_2 )
            // InternalBeeLangTestLanguage.g:5279:2: rule__RequiredCapability__NameAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 313, rule__RequiredCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__3"
    // InternalBeeLangTestLanguage.g:5289:1: rule__RequiredCapability__Group__3 : rule__RequiredCapability__Group__3__Impl ;
    public final void rule__RequiredCapability__Group__3() throws RecognitionException {
        int rule__RequiredCapability__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return ; }
            // InternalBeeLangTestLanguage.g:5293:1: ( rule__RequiredCapability__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:5294:2: rule__RequiredCapability__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 314, rule__RequiredCapability__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__3"


    // $ANTLR start "rule__RequiredCapability__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:5300:1: rule__RequiredCapability__Group__3__Impl : ( ( rule__RequiredCapability__Group_3__0 ) ) ;
    public final void rule__RequiredCapability__Group__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return ; }
            // InternalBeeLangTestLanguage.g:5304:1: ( ( ( rule__RequiredCapability__Group_3__0 ) ) )
            // InternalBeeLangTestLanguage.g:5305:1: ( ( rule__RequiredCapability__Group_3__0 ) )
            {
            // InternalBeeLangTestLanguage.g:5305:1: ( ( rule__RequiredCapability__Group_3__0 ) )
            // InternalBeeLangTestLanguage.g:5306:1: ( rule__RequiredCapability__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:5307:1: ( rule__RequiredCapability__Group_3__0 )
            // InternalBeeLangTestLanguage.g:5307:2: rule__RequiredCapability__Group_3__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 315, rule__RequiredCapability__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__0"
    // InternalBeeLangTestLanguage.g:5325:1: rule__RequiredCapability__Group_3__0 : rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1 ;
    public final void rule__RequiredCapability__Group_3__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return ; }
            // InternalBeeLangTestLanguage.g:5329:1: ( rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1 )
            // InternalBeeLangTestLanguage.g:5330:2: rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__RequiredCapability__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 316, rule__RequiredCapability__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__0"


    // $ANTLR start "rule__RequiredCapability__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:5337:1: rule__RequiredCapability__Group_3__0__Impl : ( '{' ) ;
    public final void rule__RequiredCapability__Group_3__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return ; }
            // InternalBeeLangTestLanguage.g:5341:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:5342:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:5342:1: ( '{' )
            // InternalBeeLangTestLanguage.g:5343:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 317, rule__RequiredCapability__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__1"
    // InternalBeeLangTestLanguage.g:5356:1: rule__RequiredCapability__Group_3__1 : rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2 ;
    public final void rule__RequiredCapability__Group_3__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 318) ) { return ; }
            // InternalBeeLangTestLanguage.g:5360:1: ( rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2 )
            // InternalBeeLangTestLanguage.g:5361:2: rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__RequiredCapability__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 318, rule__RequiredCapability__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__1"


    // $ANTLR start "rule__RequiredCapability__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:5368:1: rule__RequiredCapability__Group_3__1__Impl : ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) ) ;
    public final void rule__RequiredCapability__Group_3__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 319) ) { return ; }
            // InternalBeeLangTestLanguage.g:5372:1: ( ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) ) )
            // InternalBeeLangTestLanguage.g:5373:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) )
            {
            // InternalBeeLangTestLanguage.g:5373:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) )
            // InternalBeeLangTestLanguage.g:5374:1: ( rule__RequiredCapability__UnorderedGroup_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:5375:1: ( rule__RequiredCapability__UnorderedGroup_3_1 )
            // InternalBeeLangTestLanguage.g:5375:2: rule__RequiredCapability__UnorderedGroup_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__UnorderedGroup_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 319, rule__RequiredCapability__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__2"
    // InternalBeeLangTestLanguage.g:5385:1: rule__RequiredCapability__Group_3__2 : rule__RequiredCapability__Group_3__2__Impl ;
    public final void rule__RequiredCapability__Group_3__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 320) ) { return ; }
            // InternalBeeLangTestLanguage.g:5389:1: ( rule__RequiredCapability__Group_3__2__Impl )
            // InternalBeeLangTestLanguage.g:5390:2: rule__RequiredCapability__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 320, rule__RequiredCapability__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__2"


    // $ANTLR start "rule__RequiredCapability__Group_3__2__Impl"
    // InternalBeeLangTestLanguage.g:5396:1: rule__RequiredCapability__Group_3__2__Impl : ( '}' ) ;
    public final void rule__RequiredCapability__Group_3__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 321) ) { return ; }
            // InternalBeeLangTestLanguage.g:5400:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:5401:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:5401:1: ( '}' )
            // InternalBeeLangTestLanguage.g:5402:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 321, rule__RequiredCapability__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__0"
    // InternalBeeLangTestLanguage.g:5421:1: rule__RequiredCapability__Group_3_1_0__0 : rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1 ;
    public final void rule__RequiredCapability__Group_3_1_0__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 322) ) { return ; }
            // InternalBeeLangTestLanguage.g:5425:1: ( rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1 )
            // InternalBeeLangTestLanguage.g:5426:2: rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 322, rule__RequiredCapability__Group_3_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:5433:1: rule__RequiredCapability__Group_3_1_0__0__Impl : ( 'when' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 323) ) { return ; }
            // InternalBeeLangTestLanguage.g:5437:1: ( ( 'when' ) )
            // InternalBeeLangTestLanguage.g:5438:1: ( 'when' )
            {
            // InternalBeeLangTestLanguage.g:5438:1: ( 'when' )
            // InternalBeeLangTestLanguage.g:5439:1: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 323, rule__RequiredCapability__Group_3_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__1"
    // InternalBeeLangTestLanguage.g:5452:1: rule__RequiredCapability__Group_3_1_0__1 : rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2 ;
    public final void rule__RequiredCapability__Group_3_1_0__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 324) ) { return ; }
            // InternalBeeLangTestLanguage.g:5456:1: ( rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2 )
            // InternalBeeLangTestLanguage.g:5457:2: rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__RequiredCapability__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 324, rule__RequiredCapability__Group_3_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:5464:1: rule__RequiredCapability__Group_3_1_0__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 325) ) { return ; }
            // InternalBeeLangTestLanguage.g:5468:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:5469:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:5469:1: ( ':' )
            // InternalBeeLangTestLanguage.g:5470:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 325, rule__RequiredCapability__Group_3_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__2"
    // InternalBeeLangTestLanguage.g:5483:1: rule__RequiredCapability__Group_3_1_0__2 : rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3 ;
    public final void rule__RequiredCapability__Group_3_1_0__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 326) ) { return ; }
            // InternalBeeLangTestLanguage.g:5487:1: ( rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3 )
            // InternalBeeLangTestLanguage.g:5488:2: rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 326, rule__RequiredCapability__Group_3_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:5495:1: rule__RequiredCapability__Group_3_1_0__2__Impl : ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 327) ) { return ; }
            // InternalBeeLangTestLanguage.g:5499:1: ( ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:5500:1: ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5500:1: ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) )
            // InternalBeeLangTestLanguage.g:5501:1: ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:5502:1: ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 )
            // InternalBeeLangTestLanguage.g:5502:2: rule__RequiredCapability__CondExprAssignment_3_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__CondExprAssignment_3_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 327, rule__RequiredCapability__Group_3_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__3"
    // InternalBeeLangTestLanguage.g:5512:1: rule__RequiredCapability__Group_3_1_0__3 : rule__RequiredCapability__Group_3_1_0__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_0__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 328) ) { return ; }
            // InternalBeeLangTestLanguage.g:5516:1: ( rule__RequiredCapability__Group_3_1_0__3__Impl )
            // InternalBeeLangTestLanguage.g:5517:2: rule__RequiredCapability__Group_3_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 328, rule__RequiredCapability__Group_3_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__3__Impl"
    // InternalBeeLangTestLanguage.g:5523:1: rule__RequiredCapability__Group_3_1_0__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 329) ) { return ; }
            // InternalBeeLangTestLanguage.g:5527:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5528:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5528:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5529:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 329, rule__RequiredCapability__Group_3_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__0"
    // InternalBeeLangTestLanguage.g:5550:1: rule__RequiredCapability__Group_3_1_1__0 : rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1 ;
    public final void rule__RequiredCapability__Group_3_1_1__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 330) ) { return ; }
            // InternalBeeLangTestLanguage.g:5554:1: ( rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1 )
            // InternalBeeLangTestLanguage.g:5555:2: rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 330, rule__RequiredCapability__Group_3_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:5562:1: rule__RequiredCapability__Group_3_1_1__0__Impl : ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 331) ) { return ; }
            // InternalBeeLangTestLanguage.g:5566:1: ( ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:5567:1: ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:5567:1: ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:5568:1: ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:5569:1: ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 )
            // InternalBeeLangTestLanguage.g:5569:2: rule__RequiredCapability__GreedyAssignment_3_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__GreedyAssignment_3_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 331, rule__RequiredCapability__Group_3_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__1"
    // InternalBeeLangTestLanguage.g:5579:1: rule__RequiredCapability__Group_3_1_1__1 : rule__RequiredCapability__Group_3_1_1__1__Impl ;
    public final void rule__RequiredCapability__Group_3_1_1__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 332) ) { return ; }
            // InternalBeeLangTestLanguage.g:5583:1: ( rule__RequiredCapability__Group_3_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:5584:2: rule__RequiredCapability__Group_3_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 332, rule__RequiredCapability__Group_3_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:5590:1: rule__RequiredCapability__Group_3_1_1__1__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 333) ) { return ; }
            // InternalBeeLangTestLanguage.g:5594:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5595:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5595:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5596:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 333, rule__RequiredCapability__Group_3_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__0"
    // InternalBeeLangTestLanguage.g:5613:1: rule__RequiredCapability__Group_3_1_2__0 : rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1 ;
    public final void rule__RequiredCapability__Group_3_1_2__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 334) ) { return ; }
            // InternalBeeLangTestLanguage.g:5617:1: ( rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1 )
            // InternalBeeLangTestLanguage.g:5618:2: rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 334, rule__RequiredCapability__Group_3_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:5625:1: rule__RequiredCapability__Group_3_1_2__0__Impl : ( 'requires-min' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 335) ) { return ; }
            // InternalBeeLangTestLanguage.g:5629:1: ( ( 'requires-min' ) )
            // InternalBeeLangTestLanguage.g:5630:1: ( 'requires-min' )
            {
            // InternalBeeLangTestLanguage.g:5630:1: ( 'requires-min' )
            // InternalBeeLangTestLanguage.g:5631:1: 'requires-min'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 335, rule__RequiredCapability__Group_3_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__1"
    // InternalBeeLangTestLanguage.g:5644:1: rule__RequiredCapability__Group_3_1_2__1 : rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2 ;
    public final void rule__RequiredCapability__Group_3_1_2__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 336) ) { return ; }
            // InternalBeeLangTestLanguage.g:5648:1: ( rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2 )
            // InternalBeeLangTestLanguage.g:5649:2: rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__RequiredCapability__Group_3_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 336, rule__RequiredCapability__Group_3_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:5656:1: rule__RequiredCapability__Group_3_1_2__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 337) ) { return ; }
            // InternalBeeLangTestLanguage.g:5660:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:5661:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:5661:1: ( ':' )
            // InternalBeeLangTestLanguage.g:5662:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 337, rule__RequiredCapability__Group_3_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__2"
    // InternalBeeLangTestLanguage.g:5675:1: rule__RequiredCapability__Group_3_1_2__2 : rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3 ;
    public final void rule__RequiredCapability__Group_3_1_2__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 338) ) { return ; }
            // InternalBeeLangTestLanguage.g:5679:1: ( rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3 )
            // InternalBeeLangTestLanguage.g:5680:2: rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 338, rule__RequiredCapability__Group_3_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:5687:1: rule__RequiredCapability__Group_3_1_2__2__Impl : ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 339) ) { return ; }
            // InternalBeeLangTestLanguage.g:5691:1: ( ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:5692:1: ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5692:1: ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:5693:1: ( rule__RequiredCapability__MinAssignment_3_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:5694:1: ( rule__RequiredCapability__MinAssignment_3_1_2_2 )
            // InternalBeeLangTestLanguage.g:5694:2: rule__RequiredCapability__MinAssignment_3_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__MinAssignment_3_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 339, rule__RequiredCapability__Group_3_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__3"
    // InternalBeeLangTestLanguage.g:5704:1: rule__RequiredCapability__Group_3_1_2__3 : rule__RequiredCapability__Group_3_1_2__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_2__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 340) ) { return ; }
            // InternalBeeLangTestLanguage.g:5708:1: ( rule__RequiredCapability__Group_3_1_2__3__Impl )
            // InternalBeeLangTestLanguage.g:5709:2: rule__RequiredCapability__Group_3_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 340, rule__RequiredCapability__Group_3_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__3__Impl"
    // InternalBeeLangTestLanguage.g:5715:1: rule__RequiredCapability__Group_3_1_2__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 341) ) { return ; }
            // InternalBeeLangTestLanguage.g:5719:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5720:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5720:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5721:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 341, rule__RequiredCapability__Group_3_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__0"
    // InternalBeeLangTestLanguage.g:5742:1: rule__RequiredCapability__Group_3_1_3__0 : rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1 ;
    public final void rule__RequiredCapability__Group_3_1_3__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 342) ) { return ; }
            // InternalBeeLangTestLanguage.g:5746:1: ( rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1 )
            // InternalBeeLangTestLanguage.g:5747:2: rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 342, rule__RequiredCapability__Group_3_1_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__0__Impl"
    // InternalBeeLangTestLanguage.g:5754:1: rule__RequiredCapability__Group_3_1_3__0__Impl : ( 'requires-max' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 343) ) { return ; }
            // InternalBeeLangTestLanguage.g:5758:1: ( ( 'requires-max' ) )
            // InternalBeeLangTestLanguage.g:5759:1: ( 'requires-max' )
            {
            // InternalBeeLangTestLanguage.g:5759:1: ( 'requires-max' )
            // InternalBeeLangTestLanguage.g:5760:1: 'requires-max'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }
            match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 343, rule__RequiredCapability__Group_3_1_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__1"
    // InternalBeeLangTestLanguage.g:5773:1: rule__RequiredCapability__Group_3_1_3__1 : rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2 ;
    public final void rule__RequiredCapability__Group_3_1_3__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 344) ) { return ; }
            // InternalBeeLangTestLanguage.g:5777:1: ( rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2 )
            // InternalBeeLangTestLanguage.g:5778:2: rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__RequiredCapability__Group_3_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 344, rule__RequiredCapability__Group_3_1_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__1__Impl"
    // InternalBeeLangTestLanguage.g:5785:1: rule__RequiredCapability__Group_3_1_3__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 345) ) { return ; }
            // InternalBeeLangTestLanguage.g:5789:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:5790:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:5790:1: ( ':' )
            // InternalBeeLangTestLanguage.g:5791:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 345, rule__RequiredCapability__Group_3_1_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__2"
    // InternalBeeLangTestLanguage.g:5804:1: rule__RequiredCapability__Group_3_1_3__2 : rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3 ;
    public final void rule__RequiredCapability__Group_3_1_3__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 346) ) { return ; }
            // InternalBeeLangTestLanguage.g:5808:1: ( rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3 )
            // InternalBeeLangTestLanguage.g:5809:2: rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 346, rule__RequiredCapability__Group_3_1_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__2__Impl"
    // InternalBeeLangTestLanguage.g:5816:1: rule__RequiredCapability__Group_3_1_3__2__Impl : ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 347) ) { return ; }
            // InternalBeeLangTestLanguage.g:5820:1: ( ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) ) )
            // InternalBeeLangTestLanguage.g:5821:1: ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5821:1: ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) )
            // InternalBeeLangTestLanguage.g:5822:1: ( rule__RequiredCapability__MaxAssignment_3_1_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }
            // InternalBeeLangTestLanguage.g:5823:1: ( rule__RequiredCapability__MaxAssignment_3_1_3_2 )
            // InternalBeeLangTestLanguage.g:5823:2: rule__RequiredCapability__MaxAssignment_3_1_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__MaxAssignment_3_1_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 347, rule__RequiredCapability__Group_3_1_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__3"
    // InternalBeeLangTestLanguage.g:5833:1: rule__RequiredCapability__Group_3_1_3__3 : rule__RequiredCapability__Group_3_1_3__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_3__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 348) ) { return ; }
            // InternalBeeLangTestLanguage.g:5837:1: ( rule__RequiredCapability__Group_3_1_3__3__Impl )
            // InternalBeeLangTestLanguage.g:5838:2: rule__RequiredCapability__Group_3_1_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 348, rule__RequiredCapability__Group_3_1_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__3__Impl"
    // InternalBeeLangTestLanguage.g:5844:1: rule__RequiredCapability__Group_3_1_3__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 349) ) { return ; }
            // InternalBeeLangTestLanguage.g:5848:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5849:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5849:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5850:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 349, rule__RequiredCapability__Group_3_1_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__0"
    // InternalBeeLangTestLanguage.g:5871:1: rule__RequiredCapability__Group_3_1_4__0 : rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1 ;
    public final void rule__RequiredCapability__Group_3_1_4__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 350) ) { return ; }
            // InternalBeeLangTestLanguage.g:5875:1: ( rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1 )
            // InternalBeeLangTestLanguage.g:5876:2: rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 350, rule__RequiredCapability__Group_3_1_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__0__Impl"
    // InternalBeeLangTestLanguage.g:5883:1: rule__RequiredCapability__Group_3_1_4__0__Impl : ( 'version' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 351) ) { return ; }
            // InternalBeeLangTestLanguage.g:5887:1: ( ( 'version' ) )
            // InternalBeeLangTestLanguage.g:5888:1: ( 'version' )
            {
            // InternalBeeLangTestLanguage.g:5888:1: ( 'version' )
            // InternalBeeLangTestLanguage.g:5889:1: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 351, rule__RequiredCapability__Group_3_1_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__1"
    // InternalBeeLangTestLanguage.g:5902:1: rule__RequiredCapability__Group_3_1_4__1 : rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2 ;
    public final void rule__RequiredCapability__Group_3_1_4__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 352) ) { return ; }
            // InternalBeeLangTestLanguage.g:5906:1: ( rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2 )
            // InternalBeeLangTestLanguage.g:5907:2: rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__RequiredCapability__Group_3_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 352, rule__RequiredCapability__Group_3_1_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__1__Impl"
    // InternalBeeLangTestLanguage.g:5914:1: rule__RequiredCapability__Group_3_1_4__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 353) ) { return ; }
            // InternalBeeLangTestLanguage.g:5918:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:5919:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:5919:1: ( ':' )
            // InternalBeeLangTestLanguage.g:5920:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 353, rule__RequiredCapability__Group_3_1_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__2"
    // InternalBeeLangTestLanguage.g:5933:1: rule__RequiredCapability__Group_3_1_4__2 : rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3 ;
    public final void rule__RequiredCapability__Group_3_1_4__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 354) ) { return ; }
            // InternalBeeLangTestLanguage.g:5937:1: ( rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3 )
            // InternalBeeLangTestLanguage.g:5938:2: rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 354, rule__RequiredCapability__Group_3_1_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__2__Impl"
    // InternalBeeLangTestLanguage.g:5945:1: rule__RequiredCapability__Group_3_1_4__2__Impl : ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 355) ) { return ; }
            // InternalBeeLangTestLanguage.g:5949:1: ( ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) )
            // InternalBeeLangTestLanguage.g:5950:1: ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            {
            // InternalBeeLangTestLanguage.g:5950:1: ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            // InternalBeeLangTestLanguage.g:5951:1: ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }
            // InternalBeeLangTestLanguage.g:5952:1: ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 )
            // InternalBeeLangTestLanguage.g:5952:2: rule__RequiredCapability__VersionRangeAssignment_3_1_4_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__VersionRangeAssignment_3_1_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 355, rule__RequiredCapability__Group_3_1_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__3"
    // InternalBeeLangTestLanguage.g:5962:1: rule__RequiredCapability__Group_3_1_4__3 : rule__RequiredCapability__Group_3_1_4__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_4__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 356) ) { return ; }
            // InternalBeeLangTestLanguage.g:5966:1: ( rule__RequiredCapability__Group_3_1_4__3__Impl )
            // InternalBeeLangTestLanguage.g:5967:2: rule__RequiredCapability__Group_3_1_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 356, rule__RequiredCapability__Group_3_1_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__3__Impl"
    // InternalBeeLangTestLanguage.g:5973:1: rule__RequiredCapability__Group_3_1_4__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 357) ) { return ; }
            // InternalBeeLangTestLanguage.g:5977:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:5978:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:5978:1: ( ';' )
            // InternalBeeLangTestLanguage.g:5979:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 357, rule__RequiredCapability__Group_3_1_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__3__Impl"


    // $ANTLR start "rule__Path__Group_1__0"
    // InternalBeeLangTestLanguage.g:6000:1: rule__Path__Group_1__0 : rule__Path__Group_1__0__Impl rule__Path__Group_1__1 ;
    public final void rule__Path__Group_1__0() throws RecognitionException {
        int rule__Path__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 358) ) { return ; }
            // InternalBeeLangTestLanguage.g:6004:1: ( rule__Path__Group_1__0__Impl rule__Path__Group_1__1 )
            // InternalBeeLangTestLanguage.g:6005:2: rule__Path__Group_1__0__Impl rule__Path__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Path__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 358, rule__Path__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__0"


    // $ANTLR start "rule__Path__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:6012:1: rule__Path__Group_1__0__Impl : ( ( '/' )? ) ;
    public final void rule__Path__Group_1__0__Impl() throws RecognitionException {
        int rule__Path__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 359) ) { return ; }
            // InternalBeeLangTestLanguage.g:6016:1: ( ( ( '/' )? ) )
            // InternalBeeLangTestLanguage.g:6017:1: ( ( '/' )? )
            {
            // InternalBeeLangTestLanguage.g:6017:1: ( ( '/' )? )
            // InternalBeeLangTestLanguage.g:6018:1: ( '/' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:6019:1: ( '/' )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==33) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6020:2: '/'
                    {
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 359, rule__Path__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__0__Impl"


    // $ANTLR start "rule__Path__Group_1__1"
    // InternalBeeLangTestLanguage.g:6031:1: rule__Path__Group_1__1 : rule__Path__Group_1__1__Impl rule__Path__Group_1__2 ;
    public final void rule__Path__Group_1__1() throws RecognitionException {
        int rule__Path__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 360) ) { return ; }
            // InternalBeeLangTestLanguage.g:6035:1: ( rule__Path__Group_1__1__Impl rule__Path__Group_1__2 )
            // InternalBeeLangTestLanguage.g:6036:2: rule__Path__Group_1__1__Impl rule__Path__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__Path__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 360, rule__Path__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__1"


    // $ANTLR start "rule__Path__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:6043:1: rule__Path__Group_1__1__Impl : ( ruleQID ) ;
    public final void rule__Path__Group_1__1__Impl() throws RecognitionException {
        int rule__Path__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 361) ) { return ; }
            // InternalBeeLangTestLanguage.g:6047:1: ( ( ruleQID ) )
            // InternalBeeLangTestLanguage.g:6048:1: ( ruleQID )
            {
            // InternalBeeLangTestLanguage.g:6048:1: ( ruleQID )
            // InternalBeeLangTestLanguage.g:6049:1: ruleQID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 361, rule__Path__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__1__Impl"


    // $ANTLR start "rule__Path__Group_1__2"
    // InternalBeeLangTestLanguage.g:6060:1: rule__Path__Group_1__2 : rule__Path__Group_1__2__Impl rule__Path__Group_1__3 ;
    public final void rule__Path__Group_1__2() throws RecognitionException {
        int rule__Path__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 362) ) { return ; }
            // InternalBeeLangTestLanguage.g:6064:1: ( rule__Path__Group_1__2__Impl rule__Path__Group_1__3 )
            // InternalBeeLangTestLanguage.g:6065:2: rule__Path__Group_1__2__Impl rule__Path__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__Path__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 362, rule__Path__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__2"


    // $ANTLR start "rule__Path__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:6072:1: rule__Path__Group_1__2__Impl : ( ( rule__Path__Group_1_2__0 )* ) ;
    public final void rule__Path__Group_1__2__Impl() throws RecognitionException {
        int rule__Path__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 363) ) { return ; }
            // InternalBeeLangTestLanguage.g:6076:1: ( ( ( rule__Path__Group_1_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:6077:1: ( ( rule__Path__Group_1_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:6077:1: ( ( rule__Path__Group_1_2__0 )* )
            // InternalBeeLangTestLanguage.g:6078:1: ( rule__Path__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getGroup_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:6079:1: ( rule__Path__Group_1_2__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==33) ) {
                    int LA42_1 = input.LA(2);

                    if ( (LA42_1==RULE_ID) ) {
                        alt42=1;
                    }


                }


                switch (alt42) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:6079:2: rule__Path__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_24);
            	    rule__Path__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 363, rule__Path__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__2__Impl"


    // $ANTLR start "rule__Path__Group_1__3"
    // InternalBeeLangTestLanguage.g:6089:1: rule__Path__Group_1__3 : rule__Path__Group_1__3__Impl ;
    public final void rule__Path__Group_1__3() throws RecognitionException {
        int rule__Path__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 364) ) { return ; }
            // InternalBeeLangTestLanguage.g:6093:1: ( rule__Path__Group_1__3__Impl )
            // InternalBeeLangTestLanguage.g:6094:2: rule__Path__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 364, rule__Path__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__3"


    // $ANTLR start "rule__Path__Group_1__3__Impl"
    // InternalBeeLangTestLanguage.g:6100:1: rule__Path__Group_1__3__Impl : ( ( '/' )? ) ;
    public final void rule__Path__Group_1__3__Impl() throws RecognitionException {
        int rule__Path__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 365) ) { return ; }
            // InternalBeeLangTestLanguage.g:6104:1: ( ( ( '/' )? ) )
            // InternalBeeLangTestLanguage.g:6105:1: ( ( '/' )? )
            {
            // InternalBeeLangTestLanguage.g:6105:1: ( ( '/' )? )
            // InternalBeeLangTestLanguage.g:6106:1: ( '/' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); 
            }
            // InternalBeeLangTestLanguage.g:6107:1: ( '/' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==33) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6108:2: '/'
                    {
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 365, rule__Path__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__3__Impl"


    // $ANTLR start "rule__Path__Group_1_2__0"
    // InternalBeeLangTestLanguage.g:6127:1: rule__Path__Group_1_2__0 : rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1 ;
    public final void rule__Path__Group_1_2__0() throws RecognitionException {
        int rule__Path__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 366) ) { return ; }
            // InternalBeeLangTestLanguage.g:6131:1: ( rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1 )
            // InternalBeeLangTestLanguage.g:6132:2: rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Path__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 366, rule__Path__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__0"


    // $ANTLR start "rule__Path__Group_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:6139:1: rule__Path__Group_1_2__0__Impl : ( '/' ) ;
    public final void rule__Path__Group_1_2__0__Impl() throws RecognitionException {
        int rule__Path__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 367) ) { return ; }
            // InternalBeeLangTestLanguage.g:6143:1: ( ( '/' ) )
            // InternalBeeLangTestLanguage.g:6144:1: ( '/' )
            {
            // InternalBeeLangTestLanguage.g:6144:1: ( '/' )
            // InternalBeeLangTestLanguage.g:6145:1: '/'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); 
            }
            match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 367, rule__Path__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__0__Impl"


    // $ANTLR start "rule__Path__Group_1_2__1"
    // InternalBeeLangTestLanguage.g:6158:1: rule__Path__Group_1_2__1 : rule__Path__Group_1_2__1__Impl ;
    public final void rule__Path__Group_1_2__1() throws RecognitionException {
        int rule__Path__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 368) ) { return ; }
            // InternalBeeLangTestLanguage.g:6162:1: ( rule__Path__Group_1_2__1__Impl )
            // InternalBeeLangTestLanguage.g:6163:2: rule__Path__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 368, rule__Path__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__1"


    // $ANTLR start "rule__Path__Group_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:6169:1: rule__Path__Group_1_2__1__Impl : ( ruleQID ) ;
    public final void rule__Path__Group_1_2__1__Impl() throws RecognitionException {
        int rule__Path__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 369) ) { return ; }
            // InternalBeeLangTestLanguage.g:6173:1: ( ( ruleQID ) )
            // InternalBeeLangTestLanguage.g:6174:1: ( ruleQID )
            {
            // InternalBeeLangTestLanguage.g:6174:1: ( ruleQID )
            // InternalBeeLangTestLanguage.g:6175:1: ruleQID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 369, rule__Path__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__1__Impl"


    // $ANTLR start "rule__ParameterList__Group__0"
    // InternalBeeLangTestLanguage.g:6190:1: rule__ParameterList__Group__0 : rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 ;
    public final void rule__ParameterList__Group__0() throws RecognitionException {
        int rule__ParameterList__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 370) ) { return ; }
            // InternalBeeLangTestLanguage.g:6194:1: ( rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 )
            // InternalBeeLangTestLanguage.g:6195:2: rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ParameterList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 370, rule__ParameterList__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0"


    // $ANTLR start "rule__ParameterList__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:6202:1: rule__ParameterList__Group__0__Impl : ( ( rule__ParameterList__ParametersAssignment_0 ) ) ;
    public final void rule__ParameterList__Group__0__Impl() throws RecognitionException {
        int rule__ParameterList__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 371) ) { return ; }
            // InternalBeeLangTestLanguage.g:6206:1: ( ( ( rule__ParameterList__ParametersAssignment_0 ) ) )
            // InternalBeeLangTestLanguage.g:6207:1: ( ( rule__ParameterList__ParametersAssignment_0 ) )
            {
            // InternalBeeLangTestLanguage.g:6207:1: ( ( rule__ParameterList__ParametersAssignment_0 ) )
            // InternalBeeLangTestLanguage.g:6208:1: ( rule__ParameterList__ParametersAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersAssignment_0()); 
            }
            // InternalBeeLangTestLanguage.g:6209:1: ( rule__ParameterList__ParametersAssignment_0 )
            // InternalBeeLangTestLanguage.g:6209:2: rule__ParameterList__ParametersAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__ParametersAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 371, rule__ParameterList__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0__Impl"


    // $ANTLR start "rule__ParameterList__Group__1"
    // InternalBeeLangTestLanguage.g:6219:1: rule__ParameterList__Group__1 : rule__ParameterList__Group__1__Impl ;
    public final void rule__ParameterList__Group__1() throws RecognitionException {
        int rule__ParameterList__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 372) ) { return ; }
            // InternalBeeLangTestLanguage.g:6223:1: ( rule__ParameterList__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:6224:2: rule__ParameterList__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 372, rule__ParameterList__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1"


    // $ANTLR start "rule__ParameterList__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:6230:1: rule__ParameterList__Group__1__Impl : ( ( rule__ParameterList__Group_1__0 )* ) ;
    public final void rule__ParameterList__Group__1__Impl() throws RecognitionException {
        int rule__ParameterList__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 373) ) { return ; }
            // InternalBeeLangTestLanguage.g:6234:1: ( ( ( rule__ParameterList__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:6235:1: ( ( rule__ParameterList__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:6235:1: ( ( rule__ParameterList__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:6236:1: ( rule__ParameterList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:6237:1: ( rule__ParameterList__Group_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==48) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:6237:2: rule__ParameterList__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ParameterList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 373, rule__ParameterList__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__0"
    // InternalBeeLangTestLanguage.g:6251:1: rule__ParameterList__Group_1__0 : rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 ;
    public final void rule__ParameterList__Group_1__0() throws RecognitionException {
        int rule__ParameterList__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 374) ) { return ; }
            // InternalBeeLangTestLanguage.g:6255:1: ( rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 )
            // InternalBeeLangTestLanguage.g:6256:2: rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ParameterList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 374, rule__ParameterList__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0"


    // $ANTLR start "rule__ParameterList__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:6263:1: rule__ParameterList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ParameterList__Group_1__0__Impl() throws RecognitionException {
        int rule__ParameterList__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 375) ) { return ; }
            // InternalBeeLangTestLanguage.g:6267:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:6268:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:6268:1: ( ',' )
            // InternalBeeLangTestLanguage.g:6269:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 375, rule__ParameterList__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__1"
    // InternalBeeLangTestLanguage.g:6282:1: rule__ParameterList__Group_1__1 : rule__ParameterList__Group_1__1__Impl ;
    public final void rule__ParameterList__Group_1__1() throws RecognitionException {
        int rule__ParameterList__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 376) ) { return ; }
            // InternalBeeLangTestLanguage.g:6286:1: ( rule__ParameterList__Group_1__1__Impl )
            // InternalBeeLangTestLanguage.g:6287:2: rule__ParameterList__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 376, rule__ParameterList__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1"


    // $ANTLR start "rule__ParameterList__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:6293:1: rule__ParameterList__Group_1__1__Impl : ( ( rule__ParameterList__ParametersAssignment_1_1 ) ) ;
    public final void rule__ParameterList__Group_1__1__Impl() throws RecognitionException {
        int rule__ParameterList__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 377) ) { return ; }
            // InternalBeeLangTestLanguage.g:6297:1: ( ( ( rule__ParameterList__ParametersAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:6298:1: ( ( rule__ParameterList__ParametersAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6298:1: ( ( rule__ParameterList__ParametersAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:6299:1: ( rule__ParameterList__ParametersAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:6300:1: ( rule__ParameterList__ParametersAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:6300:2: rule__ParameterList__ParametersAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__ParametersAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 377, rule__ParameterList__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterDeclaration__Group__0"
    // InternalBeeLangTestLanguage.g:6314:1: rule__ParameterDeclaration__Group__0 : rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1 ;
    public final void rule__ParameterDeclaration__Group__0() throws RecognitionException {
        int rule__ParameterDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 378) ) { return ; }
            // InternalBeeLangTestLanguage.g:6318:1: ( rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1 )
            // InternalBeeLangTestLanguage.g:6319:2: rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ParameterDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 378, rule__ParameterDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__0"


    // $ANTLR start "rule__ParameterDeclaration__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:6326:1: rule__ParameterDeclaration__Group__0__Impl : ( ( rule__ParameterDeclaration__TypeAssignment_0 )? ) ;
    public final void rule__ParameterDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__ParameterDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 379) ) { return ; }
            // InternalBeeLangTestLanguage.g:6330:1: ( ( ( rule__ParameterDeclaration__TypeAssignment_0 )? ) )
            // InternalBeeLangTestLanguage.g:6331:1: ( ( rule__ParameterDeclaration__TypeAssignment_0 )? )
            {
            // InternalBeeLangTestLanguage.g:6331:1: ( ( rule__ParameterDeclaration__TypeAssignment_0 )? )
            // InternalBeeLangTestLanguage.g:6332:1: ( rule__ParameterDeclaration__TypeAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); 
            }
            // InternalBeeLangTestLanguage.g:6333:1: ( rule__ParameterDeclaration__TypeAssignment_0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==60) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_ID) ) {
                int LA45_2 = input.LA(2);

                if ( (LA45_2==RULE_ID||LA45_2==28) ) {
                    alt45=1;
                }
            }
            switch (alt45) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6333:2: rule__ParameterDeclaration__TypeAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ParameterDeclaration__TypeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 379, rule__ParameterDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__0__Impl"


    // $ANTLR start "rule__ParameterDeclaration__Group__1"
    // InternalBeeLangTestLanguage.g:6343:1: rule__ParameterDeclaration__Group__1 : rule__ParameterDeclaration__Group__1__Impl ;
    public final void rule__ParameterDeclaration__Group__1() throws RecognitionException {
        int rule__ParameterDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 380) ) { return ; }
            // InternalBeeLangTestLanguage.g:6347:1: ( rule__ParameterDeclaration__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:6348:2: rule__ParameterDeclaration__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 380, rule__ParameterDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__1"


    // $ANTLR start "rule__ParameterDeclaration__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:6354:1: rule__ParameterDeclaration__Group__1__Impl : ( ( rule__ParameterDeclaration__NameAssignment_1 ) ) ;
    public final void rule__ParameterDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__ParameterDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 381) ) { return ; }
            // InternalBeeLangTestLanguage.g:6358:1: ( ( ( rule__ParameterDeclaration__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:6359:1: ( ( rule__ParameterDeclaration__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6359:1: ( ( rule__ParameterDeclaration__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:6360:1: ( rule__ParameterDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:6361:1: ( rule__ParameterDeclaration__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:6361:2: rule__ParameterDeclaration__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 381, rule__ParameterDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // InternalBeeLangTestLanguage.g:6375:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {
        int rule__Function__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 382) ) { return ; }
            // InternalBeeLangTestLanguage.g:6379:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // InternalBeeLangTestLanguage.g:6380:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 382, rule__Function__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:6387:1: rule__Function__Group__0__Impl : ( ( rule__Function__DocumentationAssignment_0 )? ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {
        int rule__Function__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 383) ) { return ; }
            // InternalBeeLangTestLanguage.g:6391:1: ( ( ( rule__Function__DocumentationAssignment_0 )? ) )
            // InternalBeeLangTestLanguage.g:6392:1: ( ( rule__Function__DocumentationAssignment_0 )? )
            {
            // InternalBeeLangTestLanguage.g:6392:1: ( ( rule__Function__DocumentationAssignment_0 )? )
            // InternalBeeLangTestLanguage.g:6393:1: ( rule__Function__DocumentationAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getDocumentationAssignment_0()); 
            }
            // InternalBeeLangTestLanguage.g:6394:1: ( rule__Function__DocumentationAssignment_0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_DOCUMENTATION) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6394:2: rule__Function__DocumentationAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__DocumentationAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getDocumentationAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 383, rule__Function__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // InternalBeeLangTestLanguage.g:6404:1: rule__Function__Group__1 : rule__Function__Group__1__Impl rule__Function__Group__2 ;
    public final void rule__Function__Group__1() throws RecognitionException {
        int rule__Function__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 384) ) { return ; }
            // InternalBeeLangTestLanguage.g:6408:1: ( rule__Function__Group__1__Impl rule__Function__Group__2 )
            // InternalBeeLangTestLanguage.g:6409:2: rule__Function__Group__1__Impl rule__Function__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 384, rule__Function__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:6416:1: rule__Function__Group__1__Impl : ( ( rule__Function__VisibilityAssignment_1 )? ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {
        int rule__Function__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 385) ) { return ; }
            // InternalBeeLangTestLanguage.g:6420:1: ( ( ( rule__Function__VisibilityAssignment_1 )? ) )
            // InternalBeeLangTestLanguage.g:6421:1: ( ( rule__Function__VisibilityAssignment_1 )? )
            {
            // InternalBeeLangTestLanguage.g:6421:1: ( ( rule__Function__VisibilityAssignment_1 )? )
            // InternalBeeLangTestLanguage.g:6422:1: ( rule__Function__VisibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVisibilityAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:6423:1: ( rule__Function__VisibilityAssignment_1 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_ID) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6423:2: rule__Function__VisibilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__VisibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVisibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 385, rule__Function__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__2"
    // InternalBeeLangTestLanguage.g:6433:1: rule__Function__Group__2 : rule__Function__Group__2__Impl rule__Function__Group__3 ;
    public final void rule__Function__Group__2() throws RecognitionException {
        int rule__Function__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 386) ) { return ; }
            // InternalBeeLangTestLanguage.g:6437:1: ( rule__Function__Group__2__Impl rule__Function__Group__3 )
            // InternalBeeLangTestLanguage.g:6438:2: rule__Function__Group__2__Impl rule__Function__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 386, rule__Function__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2"


    // $ANTLR start "rule__Function__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:6445:1: rule__Function__Group__2__Impl : ( ( rule__Function__FinalAssignment_2 )? ) ;
    public final void rule__Function__Group__2__Impl() throws RecognitionException {
        int rule__Function__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 387) ) { return ; }
            // InternalBeeLangTestLanguage.g:6449:1: ( ( ( rule__Function__FinalAssignment_2 )? ) )
            // InternalBeeLangTestLanguage.g:6450:1: ( ( rule__Function__FinalAssignment_2 )? )
            {
            // InternalBeeLangTestLanguage.g:6450:1: ( ( rule__Function__FinalAssignment_2 )? )
            // InternalBeeLangTestLanguage.g:6451:1: ( rule__Function__FinalAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:6452:1: ( rule__Function__FinalAssignment_2 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==74) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6452:2: rule__Function__FinalAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__FinalAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 387, rule__Function__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__3"
    // InternalBeeLangTestLanguage.g:6462:1: rule__Function__Group__3 : rule__Function__Group__3__Impl rule__Function__Group__4 ;
    public final void rule__Function__Group__3() throws RecognitionException {
        int rule__Function__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 388) ) { return ; }
            // InternalBeeLangTestLanguage.g:6466:1: ( rule__Function__Group__3__Impl rule__Function__Group__4 )
            // InternalBeeLangTestLanguage.g:6467:2: rule__Function__Group__3__Impl rule__Function__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__Function__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 388, rule__Function__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3"


    // $ANTLR start "rule__Function__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:6474:1: rule__Function__Group__3__Impl : ( 'function' ) ;
    public final void rule__Function__Group__3__Impl() throws RecognitionException {
        int rule__Function__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 389) ) { return ; }
            // InternalBeeLangTestLanguage.g:6478:1: ( ( 'function' ) )
            // InternalBeeLangTestLanguage.g:6479:1: ( 'function' )
            {
            // InternalBeeLangTestLanguage.g:6479:1: ( 'function' )
            // InternalBeeLangTestLanguage.g:6480:1: 'function'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFunctionKeyword_3()); 
            }
            match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFunctionKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 389, rule__Function__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3__Impl"


    // $ANTLR start "rule__Function__Group__4"
    // InternalBeeLangTestLanguage.g:6493:1: rule__Function__Group__4 : rule__Function__Group__4__Impl rule__Function__Group__5 ;
    public final void rule__Function__Group__4() throws RecognitionException {
        int rule__Function__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 390) ) { return ; }
            // InternalBeeLangTestLanguage.g:6497:1: ( rule__Function__Group__4__Impl rule__Function__Group__5 )
            // InternalBeeLangTestLanguage.g:6498:2: rule__Function__Group__4__Impl rule__Function__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__Function__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 390, rule__Function__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4"


    // $ANTLR start "rule__Function__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:6505:1: rule__Function__Group__4__Impl : ( ( rule__Function__ReturnTypeAssignment_4 )? ) ;
    public final void rule__Function__Group__4__Impl() throws RecognitionException {
        int rule__Function__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 391) ) { return ; }
            // InternalBeeLangTestLanguage.g:6509:1: ( ( ( rule__Function__ReturnTypeAssignment_4 )? ) )
            // InternalBeeLangTestLanguage.g:6510:1: ( ( rule__Function__ReturnTypeAssignment_4 )? )
            {
            // InternalBeeLangTestLanguage.g:6510:1: ( ( rule__Function__ReturnTypeAssignment_4 )? )
            // InternalBeeLangTestLanguage.g:6511:1: ( rule__Function__ReturnTypeAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:6512:1: ( rule__Function__ReturnTypeAssignment_4 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==60) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_ID) ) {
                int LA49_2 = input.LA(2);

                if ( (LA49_2==RULE_ID||LA49_2==28) ) {
                    alt49=1;
                }
            }
            switch (alt49) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6512:2: rule__Function__ReturnTypeAssignment_4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__ReturnTypeAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 391, rule__Function__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4__Impl"


    // $ANTLR start "rule__Function__Group__5"
    // InternalBeeLangTestLanguage.g:6522:1: rule__Function__Group__5 : rule__Function__Group__5__Impl rule__Function__Group__6 ;
    public final void rule__Function__Group__5() throws RecognitionException {
        int rule__Function__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 392) ) { return ; }
            // InternalBeeLangTestLanguage.g:6526:1: ( rule__Function__Group__5__Impl rule__Function__Group__6 )
            // InternalBeeLangTestLanguage.g:6527:2: rule__Function__Group__5__Impl rule__Function__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 392, rule__Function__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5"


    // $ANTLR start "rule__Function__Group__5__Impl"
    // InternalBeeLangTestLanguage.g:6534:1: rule__Function__Group__5__Impl : ( ( rule__Function__NameAssignment_5 ) ) ;
    public final void rule__Function__Group__5__Impl() throws RecognitionException {
        int rule__Function__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 393) ) { return ; }
            // InternalBeeLangTestLanguage.g:6538:1: ( ( ( rule__Function__NameAssignment_5 ) ) )
            // InternalBeeLangTestLanguage.g:6539:1: ( ( rule__Function__NameAssignment_5 ) )
            {
            // InternalBeeLangTestLanguage.g:6539:1: ( ( rule__Function__NameAssignment_5 ) )
            // InternalBeeLangTestLanguage.g:6540:1: ( rule__Function__NameAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameAssignment_5()); 
            }
            // InternalBeeLangTestLanguage.g:6541:1: ( rule__Function__NameAssignment_5 )
            // InternalBeeLangTestLanguage.g:6541:2: rule__Function__NameAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__NameAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 393, rule__Function__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5__Impl"


    // $ANTLR start "rule__Function__Group__6"
    // InternalBeeLangTestLanguage.g:6551:1: rule__Function__Group__6 : rule__Function__Group__6__Impl rule__Function__Group__7 ;
    public final void rule__Function__Group__6() throws RecognitionException {
        int rule__Function__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 394) ) { return ; }
            // InternalBeeLangTestLanguage.g:6555:1: ( rule__Function__Group__6__Impl rule__Function__Group__7 )
            // InternalBeeLangTestLanguage.g:6556:2: rule__Function__Group__6__Impl rule__Function__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 394, rule__Function__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6"


    // $ANTLR start "rule__Function__Group__6__Impl"
    // InternalBeeLangTestLanguage.g:6563:1: rule__Function__Group__6__Impl : ( ( rule__Function__Group_6__0 )? ) ;
    public final void rule__Function__Group__6__Impl() throws RecognitionException {
        int rule__Function__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 395) ) { return ; }
            // InternalBeeLangTestLanguage.g:6567:1: ( ( ( rule__Function__Group_6__0 )? ) )
            // InternalBeeLangTestLanguage.g:6568:1: ( ( rule__Function__Group_6__0 )? )
            {
            // InternalBeeLangTestLanguage.g:6568:1: ( ( rule__Function__Group_6__0 )? )
            // InternalBeeLangTestLanguage.g:6569:1: ( rule__Function__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6()); 
            }
            // InternalBeeLangTestLanguage.g:6570:1: ( rule__Function__Group_6__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==60) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6570:2: rule__Function__Group_6__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 395, rule__Function__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6__Impl"


    // $ANTLR start "rule__Function__Group__7"
    // InternalBeeLangTestLanguage.g:6580:1: rule__Function__Group__7 : rule__Function__Group__7__Impl rule__Function__Group__8 ;
    public final void rule__Function__Group__7() throws RecognitionException {
        int rule__Function__Group__7_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 396) ) { return ; }
            // InternalBeeLangTestLanguage.g:6584:1: ( rule__Function__Group__7__Impl rule__Function__Group__8 )
            // InternalBeeLangTestLanguage.g:6585:2: rule__Function__Group__7__Impl rule__Function__Group__8
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 396, rule__Function__Group__7_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__7"


    // $ANTLR start "rule__Function__Group__7__Impl"
    // InternalBeeLangTestLanguage.g:6592:1: rule__Function__Group__7__Impl : ( ( rule__Function__Group_7__0 )? ) ;
    public final void rule__Function__Group__7__Impl() throws RecognitionException {
        int rule__Function__Group__7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 397) ) { return ; }
            // InternalBeeLangTestLanguage.g:6596:1: ( ( ( rule__Function__Group_7__0 )? ) )
            // InternalBeeLangTestLanguage.g:6597:1: ( ( rule__Function__Group_7__0 )? )
            {
            // InternalBeeLangTestLanguage.g:6597:1: ( ( rule__Function__Group_7__0 )? )
            // InternalBeeLangTestLanguage.g:6598:1: ( rule__Function__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_7()); 
            }
            // InternalBeeLangTestLanguage.g:6599:1: ( rule__Function__Group_7__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==54) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6599:2: rule__Function__Group_7__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 397, rule__Function__Group__7__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__7__Impl"


    // $ANTLR start "rule__Function__Group__8"
    // InternalBeeLangTestLanguage.g:6609:1: rule__Function__Group__8 : rule__Function__Group__8__Impl ;
    public final void rule__Function__Group__8() throws RecognitionException {
        int rule__Function__Group__8_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 398) ) { return ; }
            // InternalBeeLangTestLanguage.g:6613:1: ( rule__Function__Group__8__Impl )
            // InternalBeeLangTestLanguage.g:6614:2: rule__Function__Group__8__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 398, rule__Function__Group__8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__8"


    // $ANTLR start "rule__Function__Group__8__Impl"
    // InternalBeeLangTestLanguage.g:6620:1: rule__Function__Group__8__Impl : ( ( rule__Function__Alternatives_8 ) ) ;
    public final void rule__Function__Group__8__Impl() throws RecognitionException {
        int rule__Function__Group__8__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 399) ) { return ; }
            // InternalBeeLangTestLanguage.g:6624:1: ( ( ( rule__Function__Alternatives_8 ) ) )
            // InternalBeeLangTestLanguage.g:6625:1: ( ( rule__Function__Alternatives_8 ) )
            {
            // InternalBeeLangTestLanguage.g:6625:1: ( ( rule__Function__Alternatives_8 ) )
            // InternalBeeLangTestLanguage.g:6626:1: ( rule__Function__Alternatives_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getAlternatives_8()); 
            }
            // InternalBeeLangTestLanguage.g:6627:1: ( rule__Function__Alternatives_8 )
            // InternalBeeLangTestLanguage.g:6627:2: rule__Function__Alternatives_8
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Alternatives_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getAlternatives_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 399, rule__Function__Group__8__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__8__Impl"


    // $ANTLR start "rule__Function__Group_6__0"
    // InternalBeeLangTestLanguage.g:6655:1: rule__Function__Group_6__0 : rule__Function__Group_6__0__Impl rule__Function__Group_6__1 ;
    public final void rule__Function__Group_6__0() throws RecognitionException {
        int rule__Function__Group_6__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 400) ) { return ; }
            // InternalBeeLangTestLanguage.g:6659:1: ( rule__Function__Group_6__0__Impl rule__Function__Group_6__1 )
            // InternalBeeLangTestLanguage.g:6660:2: rule__Function__Group_6__0__Impl rule__Function__Group_6__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Function__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 400, rule__Function__Group_6__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__0"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser6 extends InternalBeeLangTestLanguageParser5 {

        InternalBeeLangTestLanguageParser6(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser6(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__Function__Group_6__0__Impl"
    // InternalBeeLangTestLanguage.g:6667:1: rule__Function__Group_6__0__Impl : ( '(' ) ;
    public final void rule__Function__Group_6__0__Impl() throws RecognitionException {
        int rule__Function__Group_6__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 401) ) { return ; }
            // InternalBeeLangTestLanguage.g:6671:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:6672:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:6672:1: ( '(' )
            // InternalBeeLangTestLanguage.g:6673:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 401, rule__Function__Group_6__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__0__Impl"


    // $ANTLR start "rule__Function__Group_6__1"
    // InternalBeeLangTestLanguage.g:6686:1: rule__Function__Group_6__1 : rule__Function__Group_6__1__Impl rule__Function__Group_6__2 ;
    public final void rule__Function__Group_6__1() throws RecognitionException {
        int rule__Function__Group_6__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 402) ) { return ; }
            // InternalBeeLangTestLanguage.g:6690:1: ( rule__Function__Group_6__1__Impl rule__Function__Group_6__2 )
            // InternalBeeLangTestLanguage.g:6691:2: rule__Function__Group_6__1__Impl rule__Function__Group_6__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Function__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 402, rule__Function__Group_6__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__1"


    // $ANTLR start "rule__Function__Group_6__1__Impl"
    // InternalBeeLangTestLanguage.g:6698:1: rule__Function__Group_6__1__Impl : ( ( rule__Function__Alternatives_6_1 )? ) ;
    public final void rule__Function__Group_6__1__Impl() throws RecognitionException {
        int rule__Function__Group_6__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 403) ) { return ; }
            // InternalBeeLangTestLanguage.g:6702:1: ( ( ( rule__Function__Alternatives_6_1 )? ) )
            // InternalBeeLangTestLanguage.g:6703:1: ( ( rule__Function__Alternatives_6_1 )? )
            {
            // InternalBeeLangTestLanguage.g:6703:1: ( ( rule__Function__Alternatives_6_1 )? )
            // InternalBeeLangTestLanguage.g:6704:1: ( rule__Function__Alternatives_6_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getAlternatives_6_1()); 
            }
            // InternalBeeLangTestLanguage.g:6705:1: ( rule__Function__Alternatives_6_1 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_ID||LA52_0==60||LA52_0==75) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6705:2: rule__Function__Alternatives_6_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Alternatives_6_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getAlternatives_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 403, rule__Function__Group_6__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__1__Impl"


    // $ANTLR start "rule__Function__Group_6__2"
    // InternalBeeLangTestLanguage.g:6715:1: rule__Function__Group_6__2 : rule__Function__Group_6__2__Impl ;
    public final void rule__Function__Group_6__2() throws RecognitionException {
        int rule__Function__Group_6__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 404) ) { return ; }
            // InternalBeeLangTestLanguage.g:6719:1: ( rule__Function__Group_6__2__Impl )
            // InternalBeeLangTestLanguage.g:6720:2: rule__Function__Group_6__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 404, rule__Function__Group_6__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__2"


    // $ANTLR start "rule__Function__Group_6__2__Impl"
    // InternalBeeLangTestLanguage.g:6726:1: rule__Function__Group_6__2__Impl : ( ')' ) ;
    public final void rule__Function__Group_6__2__Impl() throws RecognitionException {
        int rule__Function__Group_6__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 405) ) { return ; }
            // InternalBeeLangTestLanguage.g:6730:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:6731:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:6731:1: ( ')' )
            // InternalBeeLangTestLanguage.g:6732:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 405, rule__Function__Group_6__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__0"
    // InternalBeeLangTestLanguage.g:6751:1: rule__Function__Group_6_1_0__0 : rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1 ;
    public final void rule__Function__Group_6_1_0__0() throws RecognitionException {
        int rule__Function__Group_6_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 406) ) { return ; }
            // InternalBeeLangTestLanguage.g:6755:1: ( rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1 )
            // InternalBeeLangTestLanguage.g:6756:2: rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Function__Group_6_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 406, rule__Function__Group_6_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__0"


    // $ANTLR start "rule__Function__Group_6_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:6763:1: rule__Function__Group_6_1_0__0__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_0 ) ) ;
    public final void rule__Function__Group_6_1_0__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 407) ) { return ; }
            // InternalBeeLangTestLanguage.g:6767:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_0 ) ) )
            // InternalBeeLangTestLanguage.g:6768:1: ( ( rule__Function__ParametersAssignment_6_1_0_0 ) )
            {
            // InternalBeeLangTestLanguage.g:6768:1: ( ( rule__Function__ParametersAssignment_6_1_0_0 ) )
            // InternalBeeLangTestLanguage.g:6769:1: ( rule__Function__ParametersAssignment_6_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:6770:1: ( rule__Function__ParametersAssignment_6_1_0_0 )
            // InternalBeeLangTestLanguage.g:6770:2: rule__Function__ParametersAssignment_6_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 407, rule__Function__Group_6_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__1"
    // InternalBeeLangTestLanguage.g:6780:1: rule__Function__Group_6_1_0__1 : rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2 ;
    public final void rule__Function__Group_6_1_0__1() throws RecognitionException {
        int rule__Function__Group_6_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 408) ) { return ; }
            // InternalBeeLangTestLanguage.g:6784:1: ( rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2 )
            // InternalBeeLangTestLanguage.g:6785:2: rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Function__Group_6_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 408, rule__Function__Group_6_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__1"


    // $ANTLR start "rule__Function__Group_6_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:6792:1: rule__Function__Group_6_1_0__1__Impl : ( ( rule__Function__Group_6_1_0_1__0 )* ) ;
    public final void rule__Function__Group_6_1_0__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 409) ) { return ; }
            // InternalBeeLangTestLanguage.g:6796:1: ( ( ( rule__Function__Group_6_1_0_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:6797:1: ( ( rule__Function__Group_6_1_0_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:6797:1: ( ( rule__Function__Group_6_1_0_1__0 )* )
            // InternalBeeLangTestLanguage.g:6798:1: ( rule__Function__Group_6_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6_1_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:6799:1: ( rule__Function__Group_6_1_0_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==48) ) {
                    int LA53_1 = input.LA(2);

                    if ( (LA53_1==RULE_ID||LA53_1==60) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:6799:2: rule__Function__Group_6_1_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__Function__Group_6_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 409, rule__Function__Group_6_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__2"
    // InternalBeeLangTestLanguage.g:6809:1: rule__Function__Group_6_1_0__2 : rule__Function__Group_6_1_0__2__Impl ;
    public final void rule__Function__Group_6_1_0__2() throws RecognitionException {
        int rule__Function__Group_6_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 410) ) { return ; }
            // InternalBeeLangTestLanguage.g:6813:1: ( rule__Function__Group_6_1_0__2__Impl )
            // InternalBeeLangTestLanguage.g:6814:2: rule__Function__Group_6_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 410, rule__Function__Group_6_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__2"


    // $ANTLR start "rule__Function__Group_6_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:6820:1: rule__Function__Group_6_1_0__2__Impl : ( ( rule__Function__Group_6_1_0_2__0 )? ) ;
    public final void rule__Function__Group_6_1_0__2__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 411) ) { return ; }
            // InternalBeeLangTestLanguage.g:6824:1: ( ( ( rule__Function__Group_6_1_0_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:6825:1: ( ( rule__Function__Group_6_1_0_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:6825:1: ( ( rule__Function__Group_6_1_0_2__0 )? )
            // InternalBeeLangTestLanguage.g:6826:1: ( rule__Function__Group_6_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:6827:1: ( rule__Function__Group_6_1_0_2__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==48) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:6827:2: rule__Function__Group_6_1_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 411, rule__Function__Group_6_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_1__0"
    // InternalBeeLangTestLanguage.g:6843:1: rule__Function__Group_6_1_0_1__0 : rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1 ;
    public final void rule__Function__Group_6_1_0_1__0() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 412) ) { return ; }
            // InternalBeeLangTestLanguage.g:6847:1: ( rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1 )
            // InternalBeeLangTestLanguage.g:6848:2: rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 412, rule__Function__Group_6_1_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__0"


    // $ANTLR start "rule__Function__Group_6_1_0_1__0__Impl"
    // InternalBeeLangTestLanguage.g:6855:1: rule__Function__Group_6_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_6_1_0_1__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 413) ) { return ; }
            // InternalBeeLangTestLanguage.g:6859:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:6860:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:6860:1: ( ',' )
            // InternalBeeLangTestLanguage.g:6861:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 413, rule__Function__Group_6_1_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_1__1"
    // InternalBeeLangTestLanguage.g:6874:1: rule__Function__Group_6_1_0_1__1 : rule__Function__Group_6_1_0_1__1__Impl ;
    public final void rule__Function__Group_6_1_0_1__1() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 414) ) { return ; }
            // InternalBeeLangTestLanguage.g:6878:1: ( rule__Function__Group_6_1_0_1__1__Impl )
            // InternalBeeLangTestLanguage.g:6879:2: rule__Function__Group_6_1_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 414, rule__Function__Group_6_1_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__1"


    // $ANTLR start "rule__Function__Group_6_1_0_1__1__Impl"
    // InternalBeeLangTestLanguage.g:6885:1: rule__Function__Group_6_1_0_1__1__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) ) ;
    public final void rule__Function__Group_6_1_0_1__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 415) ) { return ; }
            // InternalBeeLangTestLanguage.g:6889:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:6890:1: ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6890:1: ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) )
            // InternalBeeLangTestLanguage.g:6891:1: ( rule__Function__ParametersAssignment_6_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:6892:1: ( rule__Function__ParametersAssignment_6_1_0_1_1 )
            // InternalBeeLangTestLanguage.g:6892:2: rule__Function__ParametersAssignment_6_1_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 415, rule__Function__Group_6_1_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__0"
    // InternalBeeLangTestLanguage.g:6906:1: rule__Function__Group_6_1_0_2__0 : rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1 ;
    public final void rule__Function__Group_6_1_0_2__0() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 416) ) { return ; }
            // InternalBeeLangTestLanguage.g:6910:1: ( rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1 )
            // InternalBeeLangTestLanguage.g:6911:2: rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Function__Group_6_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 416, rule__Function__Group_6_1_0_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__0"


    // $ANTLR start "rule__Function__Group_6_1_0_2__0__Impl"
    // InternalBeeLangTestLanguage.g:6918:1: rule__Function__Group_6_1_0_2__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_6_1_0_2__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 417) ) { return ; }
            // InternalBeeLangTestLanguage.g:6922:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:6923:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:6923:1: ( ',' )
            // InternalBeeLangTestLanguage.g:6924:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 417, rule__Function__Group_6_1_0_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__1"
    // InternalBeeLangTestLanguage.g:6937:1: rule__Function__Group_6_1_0_2__1 : rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2 ;
    public final void rule__Function__Group_6_1_0_2__1() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 418) ) { return ; }
            // InternalBeeLangTestLanguage.g:6941:1: ( rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2 )
            // InternalBeeLangTestLanguage.g:6942:2: rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 418, rule__Function__Group_6_1_0_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__1"


    // $ANTLR start "rule__Function__Group_6_1_0_2__1__Impl"
    // InternalBeeLangTestLanguage.g:6949:1: rule__Function__Group_6_1_0_2__1__Impl : ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) ) ;
    public final void rule__Function__Group_6_1_0_2__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 419) ) { return ; }
            // InternalBeeLangTestLanguage.g:6953:1: ( ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:6954:1: ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:6954:1: ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) )
            // InternalBeeLangTestLanguage.g:6955:1: ( rule__Function__VarArgsAssignment_6_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_0_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:6956:1: ( rule__Function__VarArgsAssignment_6_1_0_2_1 )
            // InternalBeeLangTestLanguage.g:6956:2: rule__Function__VarArgsAssignment_6_1_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__VarArgsAssignment_6_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 419, rule__Function__Group_6_1_0_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__2"
    // InternalBeeLangTestLanguage.g:6966:1: rule__Function__Group_6_1_0_2__2 : rule__Function__Group_6_1_0_2__2__Impl ;
    public final void rule__Function__Group_6_1_0_2__2() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 420) ) { return ; }
            // InternalBeeLangTestLanguage.g:6970:1: ( rule__Function__Group_6_1_0_2__2__Impl )
            // InternalBeeLangTestLanguage.g:6971:2: rule__Function__Group_6_1_0_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 420, rule__Function__Group_6_1_0_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__2"


    // $ANTLR start "rule__Function__Group_6_1_0_2__2__Impl"
    // InternalBeeLangTestLanguage.g:6977:1: rule__Function__Group_6_1_0_2__2__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) ) ;
    public final void rule__Function__Group_6_1_0_2__2__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 421) ) { return ; }
            // InternalBeeLangTestLanguage.g:6981:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:6982:1: ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:6982:1: ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) )
            // InternalBeeLangTestLanguage.g:6983:1: ( rule__Function__ParametersAssignment_6_1_0_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:6984:1: ( rule__Function__ParametersAssignment_6_1_0_2_2 )
            // InternalBeeLangTestLanguage.g:6984:2: rule__Function__ParametersAssignment_6_1_0_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 421, rule__Function__Group_6_1_0_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_1__0"
    // InternalBeeLangTestLanguage.g:7000:1: rule__Function__Group_6_1_1__0 : rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1 ;
    public final void rule__Function__Group_6_1_1__0() throws RecognitionException {
        int rule__Function__Group_6_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 422) ) { return ; }
            // InternalBeeLangTestLanguage.g:7004:1: ( rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1 )
            // InternalBeeLangTestLanguage.g:7005:2: rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 422, rule__Function__Group_6_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__0"


    // $ANTLR start "rule__Function__Group_6_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:7012:1: rule__Function__Group_6_1_1__0__Impl : ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) ) ;
    public final void rule__Function__Group_6_1_1__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 423) ) { return ; }
            // InternalBeeLangTestLanguage.g:7016:1: ( ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:7017:1: ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:7017:1: ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:7018:1: ( rule__Function__VarArgsAssignment_6_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:7019:1: ( rule__Function__VarArgsAssignment_6_1_1_0 )
            // InternalBeeLangTestLanguage.g:7019:2: rule__Function__VarArgsAssignment_6_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__VarArgsAssignment_6_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 423, rule__Function__Group_6_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_1__1"
    // InternalBeeLangTestLanguage.g:7029:1: rule__Function__Group_6_1_1__1 : rule__Function__Group_6_1_1__1__Impl ;
    public final void rule__Function__Group_6_1_1__1() throws RecognitionException {
        int rule__Function__Group_6_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 424) ) { return ; }
            // InternalBeeLangTestLanguage.g:7033:1: ( rule__Function__Group_6_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:7034:2: rule__Function__Group_6_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 424, rule__Function__Group_6_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__1"


    // $ANTLR start "rule__Function__Group_6_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:7040:1: rule__Function__Group_6_1_1__1__Impl : ( ( rule__Function__ParametersAssignment_6_1_1_1 ) ) ;
    public final void rule__Function__Group_6_1_1__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 425) ) { return ; }
            // InternalBeeLangTestLanguage.g:7044:1: ( ( ( rule__Function__ParametersAssignment_6_1_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:7045:1: ( ( rule__Function__ParametersAssignment_6_1_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7045:1: ( ( rule__Function__ParametersAssignment_6_1_1_1 ) )
            // InternalBeeLangTestLanguage.g:7046:1: ( rule__Function__ParametersAssignment_6_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:7047:1: ( rule__Function__ParametersAssignment_6_1_1_1 )
            // InternalBeeLangTestLanguage.g:7047:2: rule__Function__ParametersAssignment_6_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 425, rule__Function__Group_6_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__1__Impl"


    // $ANTLR start "rule__Function__Group_7__0"
    // InternalBeeLangTestLanguage.g:7061:1: rule__Function__Group_7__0 : rule__Function__Group_7__0__Impl rule__Function__Group_7__1 ;
    public final void rule__Function__Group_7__0() throws RecognitionException {
        int rule__Function__Group_7__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 426) ) { return ; }
            // InternalBeeLangTestLanguage.g:7065:1: ( rule__Function__Group_7__0__Impl rule__Function__Group_7__1 )
            // InternalBeeLangTestLanguage.g:7066:2: rule__Function__Group_7__0__Impl rule__Function__Group_7__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__Function__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 426, rule__Function__Group_7__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__0"


    // $ANTLR start "rule__Function__Group_7__0__Impl"
    // InternalBeeLangTestLanguage.g:7073:1: rule__Function__Group_7__0__Impl : ( 'when' ) ;
    public final void rule__Function__Group_7__0__Impl() throws RecognitionException {
        int rule__Function__Group_7__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 427) ) { return ; }
            // InternalBeeLangTestLanguage.g:7077:1: ( ( 'when' ) )
            // InternalBeeLangTestLanguage.g:7078:1: ( 'when' )
            {
            // InternalBeeLangTestLanguage.g:7078:1: ( 'when' )
            // InternalBeeLangTestLanguage.g:7079:1: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getWhenKeyword_7_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getWhenKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 427, rule__Function__Group_7__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__0__Impl"


    // $ANTLR start "rule__Function__Group_7__1"
    // InternalBeeLangTestLanguage.g:7092:1: rule__Function__Group_7__1 : rule__Function__Group_7__1__Impl ;
    public final void rule__Function__Group_7__1() throws RecognitionException {
        int rule__Function__Group_7__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 428) ) { return ; }
            // InternalBeeLangTestLanguage.g:7096:1: ( rule__Function__Group_7__1__Impl )
            // InternalBeeLangTestLanguage.g:7097:2: rule__Function__Group_7__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 428, rule__Function__Group_7__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__1"


    // $ANTLR start "rule__Function__Group_7__1__Impl"
    // InternalBeeLangTestLanguage.g:7103:1: rule__Function__Group_7__1__Impl : ( ( rule__Function__GuardAssignment_7_1 ) ) ;
    public final void rule__Function__Group_7__1__Impl() throws RecognitionException {
        int rule__Function__Group_7__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 429) ) { return ; }
            // InternalBeeLangTestLanguage.g:7107:1: ( ( ( rule__Function__GuardAssignment_7_1 ) ) )
            // InternalBeeLangTestLanguage.g:7108:1: ( ( rule__Function__GuardAssignment_7_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7108:1: ( ( rule__Function__GuardAssignment_7_1 ) )
            // InternalBeeLangTestLanguage.g:7109:1: ( rule__Function__GuardAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGuardAssignment_7_1()); 
            }
            // InternalBeeLangTestLanguage.g:7110:1: ( rule__Function__GuardAssignment_7_1 )
            // InternalBeeLangTestLanguage.g:7110:2: rule__Function__GuardAssignment_7_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__GuardAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGuardAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 429, rule__Function__Group_7__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__1__Impl"


    // $ANTLR start "rule__Function__Group_8_0__0"
    // InternalBeeLangTestLanguage.g:7124:1: rule__Function__Group_8_0__0 : rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1 ;
    public final void rule__Function__Group_8_0__0() throws RecognitionException {
        int rule__Function__Group_8_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 430) ) { return ; }
            // InternalBeeLangTestLanguage.g:7128:1: ( rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1 )
            // InternalBeeLangTestLanguage.g:7129:2: rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__Function__Group_8_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 430, rule__Function__Group_8_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__0"


    // $ANTLR start "rule__Function__Group_8_0__0__Impl"
    // InternalBeeLangTestLanguage.g:7136:1: rule__Function__Group_8_0__0__Impl : ( ':' ) ;
    public final void rule__Function__Group_8_0__0__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 431) ) { return ; }
            // InternalBeeLangTestLanguage.g:7140:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:7141:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:7141:1: ( ':' )
            // InternalBeeLangTestLanguage.g:7142:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 431, rule__Function__Group_8_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__0__Impl"


    // $ANTLR start "rule__Function__Group_8_0__1"
    // InternalBeeLangTestLanguage.g:7155:1: rule__Function__Group_8_0__1 : rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2 ;
    public final void rule__Function__Group_8_0__1() throws RecognitionException {
        int rule__Function__Group_8_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 432) ) { return ; }
            // InternalBeeLangTestLanguage.g:7159:1: ( rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2 )
            // InternalBeeLangTestLanguage.g:7160:2: rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Function__Group_8_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 432, rule__Function__Group_8_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__1"


    // $ANTLR start "rule__Function__Group_8_0__1__Impl"
    // InternalBeeLangTestLanguage.g:7167:1: rule__Function__Group_8_0__1__Impl : ( ( rule__Function__FuncExprAssignment_8_0_1 ) ) ;
    public final void rule__Function__Group_8_0__1__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 433) ) { return ; }
            // InternalBeeLangTestLanguage.g:7171:1: ( ( ( rule__Function__FuncExprAssignment_8_0_1 ) ) )
            // InternalBeeLangTestLanguage.g:7172:1: ( ( rule__Function__FuncExprAssignment_8_0_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7172:1: ( ( rule__Function__FuncExprAssignment_8_0_1 ) )
            // InternalBeeLangTestLanguage.g:7173:1: ( rule__Function__FuncExprAssignment_8_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:7174:1: ( rule__Function__FuncExprAssignment_8_0_1 )
            // InternalBeeLangTestLanguage.g:7174:2: rule__Function__FuncExprAssignment_8_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__FuncExprAssignment_8_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 433, rule__Function__Group_8_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__1__Impl"


    // $ANTLR start "rule__Function__Group_8_0__2"
    // InternalBeeLangTestLanguage.g:7184:1: rule__Function__Group_8_0__2 : rule__Function__Group_8_0__2__Impl ;
    public final void rule__Function__Group_8_0__2() throws RecognitionException {
        int rule__Function__Group_8_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 434) ) { return ; }
            // InternalBeeLangTestLanguage.g:7188:1: ( rule__Function__Group_8_0__2__Impl )
            // InternalBeeLangTestLanguage.g:7189:2: rule__Function__Group_8_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 434, rule__Function__Group_8_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__2"


    // $ANTLR start "rule__Function__Group_8_0__2__Impl"
    // InternalBeeLangTestLanguage.g:7195:1: rule__Function__Group_8_0__2__Impl : ( ';' ) ;
    public final void rule__Function__Group_8_0__2__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 435) ) { return ; }
            // InternalBeeLangTestLanguage.g:7199:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:7200:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:7200:1: ( ';' )
            // InternalBeeLangTestLanguage.g:7201:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 435, rule__Function__Group_8_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__2__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__0"
    // InternalBeeLangTestLanguage.g:7220:1: rule__GuardExpression__Group_0__0 : rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1 ;
    public final void rule__GuardExpression__Group_0__0() throws RecognitionException {
        int rule__GuardExpression__Group_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 436) ) { return ; }
            // InternalBeeLangTestLanguage.g:7224:1: ( rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1 )
            // InternalBeeLangTestLanguage.g:7225:2: rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__GuardExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 436, rule__GuardExpression__Group_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__0"


    // $ANTLR start "rule__GuardExpression__Group_0__0__Impl"
    // InternalBeeLangTestLanguage.g:7232:1: rule__GuardExpression__Group_0__0__Impl : ( ':' ) ;
    public final void rule__GuardExpression__Group_0__0__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 437) ) { return ; }
            // InternalBeeLangTestLanguage.g:7236:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:7237:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:7237:1: ( ':' )
            // InternalBeeLangTestLanguage.g:7238:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 437, rule__GuardExpression__Group_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__0__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__1"
    // InternalBeeLangTestLanguage.g:7251:1: rule__GuardExpression__Group_0__1 : rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2 ;
    public final void rule__GuardExpression__Group_0__1() throws RecognitionException {
        int rule__GuardExpression__Group_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 438) ) { return ; }
            // InternalBeeLangTestLanguage.g:7255:1: ( rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2 )
            // InternalBeeLangTestLanguage.g:7256:2: rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__GuardExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 438, rule__GuardExpression__Group_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__1"


    // $ANTLR start "rule__GuardExpression__Group_0__1__Impl"
    // InternalBeeLangTestLanguage.g:7263:1: rule__GuardExpression__Group_0__1__Impl : ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) ) ;
    public final void rule__GuardExpression__Group_0__1__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 439) ) { return ; }
            // InternalBeeLangTestLanguage.g:7267:1: ( ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) ) )
            // InternalBeeLangTestLanguage.g:7268:1: ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7268:1: ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) )
            // InternalBeeLangTestLanguage.g:7269:1: ( rule__GuardExpression__GuardExprAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:7270:1: ( rule__GuardExpression__GuardExprAssignment_0_1 )
            // InternalBeeLangTestLanguage.g:7270:2: rule__GuardExpression__GuardExprAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__GuardExprAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 439, rule__GuardExpression__Group_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__1__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__2"
    // InternalBeeLangTestLanguage.g:7280:1: rule__GuardExpression__Group_0__2 : rule__GuardExpression__Group_0__2__Impl ;
    public final void rule__GuardExpression__Group_0__2() throws RecognitionException {
        int rule__GuardExpression__Group_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 440) ) { return ; }
            // InternalBeeLangTestLanguage.g:7284:1: ( rule__GuardExpression__Group_0__2__Impl )
            // InternalBeeLangTestLanguage.g:7285:2: rule__GuardExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 440, rule__GuardExpression__Group_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__2"


    // $ANTLR start "rule__GuardExpression__Group_0__2__Impl"
    // InternalBeeLangTestLanguage.g:7291:1: rule__GuardExpression__Group_0__2__Impl : ( ';' ) ;
    public final void rule__GuardExpression__Group_0__2__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 441) ) { return ; }
            // InternalBeeLangTestLanguage.g:7295:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:7296:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:7296:1: ( ';' )
            // InternalBeeLangTestLanguage.g:7297:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 441, rule__GuardExpression__Group_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__2__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__0"
    // InternalBeeLangTestLanguage.g:7316:1: rule__AssignmentExpression__Group__0 : rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 ;
    public final void rule__AssignmentExpression__Group__0() throws RecognitionException {
        int rule__AssignmentExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 442) ) { return ; }
            // InternalBeeLangTestLanguage.g:7320:1: ( rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:7321:2: rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__AssignmentExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 442, rule__AssignmentExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0"


    // $ANTLR start "rule__AssignmentExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7328:1: rule__AssignmentExpression__Group__0__Impl : ( ruleCachedExpression ) ;
    public final void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 443) ) { return ; }
            // InternalBeeLangTestLanguage.g:7332:1: ( ( ruleCachedExpression ) )
            // InternalBeeLangTestLanguage.g:7333:1: ( ruleCachedExpression )
            {
            // InternalBeeLangTestLanguage.g:7333:1: ( ruleCachedExpression )
            // InternalBeeLangTestLanguage.g:7334:1: ruleCachedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCachedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 443, rule__AssignmentExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__1"
    // InternalBeeLangTestLanguage.g:7345:1: rule__AssignmentExpression__Group__1 : rule__AssignmentExpression__Group__1__Impl ;
    public final void rule__AssignmentExpression__Group__1() throws RecognitionException {
        int rule__AssignmentExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 444) ) { return ; }
            // InternalBeeLangTestLanguage.g:7349:1: ( rule__AssignmentExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:7350:2: rule__AssignmentExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 444, rule__AssignmentExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1"


    // $ANTLR start "rule__AssignmentExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:7356:1: rule__AssignmentExpression__Group__1__Impl : ( ( rule__AssignmentExpression__Group_1__0 )? ) ;
    public final void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 445) ) { return ; }
            // InternalBeeLangTestLanguage.g:7360:1: ( ( ( rule__AssignmentExpression__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:7361:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:7361:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:7362:1: ( rule__AssignmentExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:7363:1: ( rule__AssignmentExpression__Group_1__0 )?
            int alt55=2;
            switch ( input.LA(1) ) {
                case 14:
                    {
                    int LA55_1 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 15:
                    {
                    int LA55_2 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 16:
                    {
                    int LA55_3 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 17:
                    {
                    int LA55_4 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 18:
                    {
                    int LA55_5 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 19:
                    {
                    int LA55_6 = input.LA(2);

                    if ( (synpred84_InternalBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
            }

            switch (alt55) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:7363:2: rule__AssignmentExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AssignmentExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 445, rule__AssignmentExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:7377:1: rule__AssignmentExpression__Group_1__0 : rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 ;
    public final void rule__AssignmentExpression__Group_1__0() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 446) ) { return ; }
            // InternalBeeLangTestLanguage.g:7381:1: ( rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:7382:2: rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__AssignmentExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 446, rule__AssignmentExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:7389:1: rule__AssignmentExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AssignmentExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 447) ) { return ; }
            // InternalBeeLangTestLanguage.g:7393:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:7394:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:7394:1: ( () )
            // InternalBeeLangTestLanguage.g:7395:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:7396:1: ()
            // InternalBeeLangTestLanguage.g:7398:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 447, rule__AssignmentExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:7408:1: rule__AssignmentExpression__Group_1__1 : rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2 ;
    public final void rule__AssignmentExpression__Group_1__1() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 448) ) { return ; }
            // InternalBeeLangTestLanguage.g:7412:1: ( rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:7413:2: rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AssignmentExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 448, rule__AssignmentExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:7420:1: rule__AssignmentExpression__Group_1__1__Impl : ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__AssignmentExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 449) ) { return ; }
            // InternalBeeLangTestLanguage.g:7424:1: ( ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:7425:1: ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7425:1: ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:7426:1: ( rule__AssignmentExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:7427:1: ( rule__AssignmentExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:7427:2: rule__AssignmentExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 449, rule__AssignmentExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:7437:1: rule__AssignmentExpression__Group_1__2 : rule__AssignmentExpression__Group_1__2__Impl ;
    public final void rule__AssignmentExpression__Group_1__2() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 450) ) { return ; }
            // InternalBeeLangTestLanguage.g:7441:1: ( rule__AssignmentExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:7442:2: rule__AssignmentExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 450, rule__AssignmentExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__2"


    // $ANTLR start "rule__AssignmentExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:7448:1: rule__AssignmentExpression__Group_1__2__Impl : ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AssignmentExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 451) ) { return ; }
            // InternalBeeLangTestLanguage.g:7452:1: ( ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:7453:1: ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:7453:1: ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:7454:1: ( rule__AssignmentExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:7455:1: ( rule__AssignmentExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:7455:2: rule__AssignmentExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 451, rule__AssignmentExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalBeeLangTestLanguage.g:7471:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {
        int rule__VarDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 452) ) { return ; }
            // InternalBeeLangTestLanguage.g:7475:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalBeeLangTestLanguage.g:7476:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 452, rule__VarDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7483:1: rule__VarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 453) ) { return ; }
            // InternalBeeLangTestLanguage.g:7487:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:7488:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:7488:1: ( () )
            // InternalBeeLangTestLanguage.g:7489:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefValueAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:7490:1: ()
            // InternalBeeLangTestLanguage.g:7492:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefValueAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 453, rule__VarDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalBeeLangTestLanguage.g:7502:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {
        int rule__VarDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 454) ) { return ; }
            // InternalBeeLangTestLanguage.g:7506:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalBeeLangTestLanguage.g:7507:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 454, rule__VarDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:7514:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__FinalAssignment_1 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 455) ) { return ; }
            // InternalBeeLangTestLanguage.g:7518:1: ( ( ( rule__VarDeclaration__FinalAssignment_1 )? ) )
            // InternalBeeLangTestLanguage.g:7519:1: ( ( rule__VarDeclaration__FinalAssignment_1 )? )
            {
            // InternalBeeLangTestLanguage.g:7519:1: ( ( rule__VarDeclaration__FinalAssignment_1 )? )
            // InternalBeeLangTestLanguage.g:7520:1: ( rule__VarDeclaration__FinalAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:7521:1: ( rule__VarDeclaration__FinalAssignment_1 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==74) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:7521:2: rule__VarDeclaration__FinalAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__FinalAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 455, rule__VarDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalBeeLangTestLanguage.g:7531:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {
        int rule__VarDeclaration__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 456) ) { return ; }
            // InternalBeeLangTestLanguage.g:7535:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalBeeLangTestLanguage.g:7536:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 456, rule__VarDeclaration__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:7543:1: rule__VarDeclaration__Group__2__Impl : ( ( rule__VarDeclaration__Group_2__0 ) ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 457) ) { return ; }
            // InternalBeeLangTestLanguage.g:7547:1: ( ( ( rule__VarDeclaration__Group_2__0 ) ) )
            // InternalBeeLangTestLanguage.g:7548:1: ( ( rule__VarDeclaration__Group_2__0 ) )
            {
            // InternalBeeLangTestLanguage.g:7548:1: ( ( rule__VarDeclaration__Group_2__0 ) )
            // InternalBeeLangTestLanguage.g:7549:1: ( rule__VarDeclaration__Group_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:7550:1: ( rule__VarDeclaration__Group_2__0 )
            // InternalBeeLangTestLanguage.g:7550:2: rule__VarDeclaration__Group_2__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 457, rule__VarDeclaration__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalBeeLangTestLanguage.g:7560:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {
        int rule__VarDeclaration__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 458) ) { return ; }
            // InternalBeeLangTestLanguage.g:7564:1: ( rule__VarDeclaration__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:7565:2: rule__VarDeclaration__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 458, rule__VarDeclaration__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:7571:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 459) ) { return ; }
            // InternalBeeLangTestLanguage.g:7575:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalBeeLangTestLanguage.g:7576:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalBeeLangTestLanguage.g:7576:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalBeeLangTestLanguage.g:7577:1: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:7578:1: ( rule__VarDeclaration__Group_3__0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==14) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:7578:2: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 459, rule__VarDeclaration__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__0"
    // InternalBeeLangTestLanguage.g:7596:1: rule__VarDeclaration__Group_2__0 : rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 ;
    public final void rule__VarDeclaration__Group_2__0() throws RecognitionException {
        int rule__VarDeclaration__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 460) ) { return ; }
            // InternalBeeLangTestLanguage.g:7600:1: ( rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 )
            // InternalBeeLangTestLanguage.g:7601:2: rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__VarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 460, rule__VarDeclaration__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:7608:1: rule__VarDeclaration__Group_2__0__Impl : ( ( rule__VarDeclaration__Alternatives_2_0 ) ) ;
    public final void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 461) ) { return ; }
            // InternalBeeLangTestLanguage.g:7612:1: ( ( ( rule__VarDeclaration__Alternatives_2_0 ) ) )
            // InternalBeeLangTestLanguage.g:7613:1: ( ( rule__VarDeclaration__Alternatives_2_0 ) )
            {
            // InternalBeeLangTestLanguage.g:7613:1: ( ( rule__VarDeclaration__Alternatives_2_0 ) )
            // InternalBeeLangTestLanguage.g:7614:1: ( rule__VarDeclaration__Alternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:7615:1: ( rule__VarDeclaration__Alternatives_2_0 )
            // InternalBeeLangTestLanguage.g:7615:2: rule__VarDeclaration__Alternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Alternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 461, rule__VarDeclaration__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__1"
    // InternalBeeLangTestLanguage.g:7625:1: rule__VarDeclaration__Group_2__1 : rule__VarDeclaration__Group_2__1__Impl ;
    public final void rule__VarDeclaration__Group_2__1() throws RecognitionException {
        int rule__VarDeclaration__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 462) ) { return ; }
            // InternalBeeLangTestLanguage.g:7629:1: ( rule__VarDeclaration__Group_2__1__Impl )
            // InternalBeeLangTestLanguage.g:7630:2: rule__VarDeclaration__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 462, rule__VarDeclaration__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:7636:1: rule__VarDeclaration__Group_2__1__Impl : ( ( rule__VarDeclaration__NameAssignment_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 463) ) { return ; }
            // InternalBeeLangTestLanguage.g:7640:1: ( ( ( rule__VarDeclaration__NameAssignment_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:7641:1: ( ( rule__VarDeclaration__NameAssignment_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7641:1: ( ( rule__VarDeclaration__NameAssignment_2_1 ) )
            // InternalBeeLangTestLanguage.g:7642:1: ( rule__VarDeclaration__NameAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:7643:1: ( rule__VarDeclaration__NameAssignment_2_1 )
            // InternalBeeLangTestLanguage.g:7643:2: rule__VarDeclaration__NameAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__NameAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 463, rule__VarDeclaration__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalBeeLangTestLanguage.g:7657:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {
        int rule__VarDeclaration__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 464) ) { return ; }
            // InternalBeeLangTestLanguage.g:7661:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalBeeLangTestLanguage.g:7662:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 464, rule__VarDeclaration__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:7669:1: rule__VarDeclaration__Group_3__0__Impl : ( '=' ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 465) ) { return ; }
            // InternalBeeLangTestLanguage.g:7673:1: ( ( '=' ) )
            // InternalBeeLangTestLanguage.g:7674:1: ( '=' )
            {
            // InternalBeeLangTestLanguage.g:7674:1: ( '=' )
            // InternalBeeLangTestLanguage.g:7675:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); 
            }
            match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 465, rule__VarDeclaration__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalBeeLangTestLanguage.g:7688:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {
        int rule__VarDeclaration__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 466) ) { return ; }
            // InternalBeeLangTestLanguage.g:7692:1: ( rule__VarDeclaration__Group_3__1__Impl )
            // InternalBeeLangTestLanguage.g:7693:2: rule__VarDeclaration__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 466, rule__VarDeclaration__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:7699:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 467) ) { return ; }
            // InternalBeeLangTestLanguage.g:7703:1: ( ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) ) )
            // InternalBeeLangTestLanguage.g:7704:1: ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) )
            {
            // InternalBeeLangTestLanguage.g:7704:1: ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) )
            // InternalBeeLangTestLanguage.g:7705:1: ( rule__VarDeclaration__ValueExprAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:7706:1: ( rule__VarDeclaration__ValueExprAssignment_3_1 )
            // InternalBeeLangTestLanguage.g:7706:2: rule__VarDeclaration__ValueExprAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__ValueExprAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 467, rule__VarDeclaration__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__0"
    // InternalBeeLangTestLanguage.g:7720:1: rule__ValDeclaration__Group__0 : rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1 ;
    public final void rule__ValDeclaration__Group__0() throws RecognitionException {
        int rule__ValDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 468) ) { return ; }
            // InternalBeeLangTestLanguage.g:7724:1: ( rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1 )
            // InternalBeeLangTestLanguage.g:7725:2: rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ValDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 468, rule__ValDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__0"


    // $ANTLR start "rule__ValDeclaration__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7732:1: rule__ValDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__ValDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 469) ) { return ; }
            // InternalBeeLangTestLanguage.g:7736:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:7737:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:7737:1: ( () )
            // InternalBeeLangTestLanguage.g:7738:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getDefValueAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:7739:1: ()
            // InternalBeeLangTestLanguage.g:7741:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getDefValueAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 469, rule__ValDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__0__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__1"
    // InternalBeeLangTestLanguage.g:7751:1: rule__ValDeclaration__Group__1 : rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2 ;
    public final void rule__ValDeclaration__Group__1() throws RecognitionException {
        int rule__ValDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 470) ) { return ; }
            // InternalBeeLangTestLanguage.g:7755:1: ( rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2 )
            // InternalBeeLangTestLanguage.g:7756:2: rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ValDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 470, rule__ValDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__1"


    // $ANTLR start "rule__ValDeclaration__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:7763:1: rule__ValDeclaration__Group__1__Impl : ( ( rule__ValDeclaration__FinalAssignment_1 )? ) ;
    public final void rule__ValDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 471) ) { return ; }
            // InternalBeeLangTestLanguage.g:7767:1: ( ( ( rule__ValDeclaration__FinalAssignment_1 )? ) )
            // InternalBeeLangTestLanguage.g:7768:1: ( ( rule__ValDeclaration__FinalAssignment_1 )? )
            {
            // InternalBeeLangTestLanguage.g:7768:1: ( ( rule__ValDeclaration__FinalAssignment_1 )? )
            // InternalBeeLangTestLanguage.g:7769:1: ( rule__ValDeclaration__FinalAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:7770:1: ( rule__ValDeclaration__FinalAssignment_1 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==74) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:7770:2: rule__ValDeclaration__FinalAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValDeclaration__FinalAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 471, rule__ValDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__1__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__2"
    // InternalBeeLangTestLanguage.g:7780:1: rule__ValDeclaration__Group__2 : rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3 ;
    public final void rule__ValDeclaration__Group__2() throws RecognitionException {
        int rule__ValDeclaration__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 472) ) { return ; }
            // InternalBeeLangTestLanguage.g:7784:1: ( rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3 )
            // InternalBeeLangTestLanguage.g:7785:2: rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ValDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 472, rule__ValDeclaration__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__2"


    // $ANTLR start "rule__ValDeclaration__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:7792:1: rule__ValDeclaration__Group__2__Impl : ( ( rule__ValDeclaration__ImmutableAssignment_2 ) ) ;
    public final void rule__ValDeclaration__Group__2__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 473) ) { return ; }
            // InternalBeeLangTestLanguage.g:7796:1: ( ( ( rule__ValDeclaration__ImmutableAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:7797:1: ( ( rule__ValDeclaration__ImmutableAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:7797:1: ( ( rule__ValDeclaration__ImmutableAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:7798:1: ( rule__ValDeclaration__ImmutableAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:7799:1: ( rule__ValDeclaration__ImmutableAssignment_2 )
            // InternalBeeLangTestLanguage.g:7799:2: rule__ValDeclaration__ImmutableAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__ImmutableAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 473, rule__ValDeclaration__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__2__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__3"
    // InternalBeeLangTestLanguage.g:7809:1: rule__ValDeclaration__Group__3 : rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4 ;
    public final void rule__ValDeclaration__Group__3() throws RecognitionException {
        int rule__ValDeclaration__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 474) ) { return ; }
            // InternalBeeLangTestLanguage.g:7813:1: ( rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4 )
            // InternalBeeLangTestLanguage.g:7814:2: rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ValDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 474, rule__ValDeclaration__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__3"


    // $ANTLR start "rule__ValDeclaration__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:7821:1: rule__ValDeclaration__Group__3__Impl : ( ( rule__ValDeclaration__TypeAssignment_3 )? ) ;
    public final void rule__ValDeclaration__Group__3__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 475) ) { return ; }
            // InternalBeeLangTestLanguage.g:7825:1: ( ( ( rule__ValDeclaration__TypeAssignment_3 )? ) )
            // InternalBeeLangTestLanguage.g:7826:1: ( ( rule__ValDeclaration__TypeAssignment_3 )? )
            {
            // InternalBeeLangTestLanguage.g:7826:1: ( ( rule__ValDeclaration__TypeAssignment_3 )? )
            // InternalBeeLangTestLanguage.g:7827:1: ( rule__ValDeclaration__TypeAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); 
            }
            // InternalBeeLangTestLanguage.g:7828:1: ( rule__ValDeclaration__TypeAssignment_3 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==60) ) {
                alt59=1;
            }
            else if ( (LA59_0==RULE_ID) ) {
                int LA59_2 = input.LA(2);

                if ( (LA59_2==RULE_ID||LA59_2==28) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:7828:2: rule__ValDeclaration__TypeAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValDeclaration__TypeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 475, rule__ValDeclaration__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__3__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__4"
    // InternalBeeLangTestLanguage.g:7838:1: rule__ValDeclaration__Group__4 : rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5 ;
    public final void rule__ValDeclaration__Group__4() throws RecognitionException {
        int rule__ValDeclaration__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 476) ) { return ; }
            // InternalBeeLangTestLanguage.g:7842:1: ( rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5 )
            // InternalBeeLangTestLanguage.g:7843:2: rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__ValDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 476, rule__ValDeclaration__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__4"


    // $ANTLR start "rule__ValDeclaration__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:7850:1: rule__ValDeclaration__Group__4__Impl : ( ( rule__ValDeclaration__NameAssignment_4 ) ) ;
    public final void rule__ValDeclaration__Group__4__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 477) ) { return ; }
            // InternalBeeLangTestLanguage.g:7854:1: ( ( ( rule__ValDeclaration__NameAssignment_4 ) ) )
            // InternalBeeLangTestLanguage.g:7855:1: ( ( rule__ValDeclaration__NameAssignment_4 ) )
            {
            // InternalBeeLangTestLanguage.g:7855:1: ( ( rule__ValDeclaration__NameAssignment_4 ) )
            // InternalBeeLangTestLanguage.g:7856:1: ( rule__ValDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:7857:1: ( rule__ValDeclaration__NameAssignment_4 )
            // InternalBeeLangTestLanguage.g:7857:2: rule__ValDeclaration__NameAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 477, rule__ValDeclaration__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__4__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__5"
    // InternalBeeLangTestLanguage.g:7867:1: rule__ValDeclaration__Group__5 : rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6 ;
    public final void rule__ValDeclaration__Group__5() throws RecognitionException {
        int rule__ValDeclaration__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 478) ) { return ; }
            // InternalBeeLangTestLanguage.g:7871:1: ( rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6 )
            // InternalBeeLangTestLanguage.g:7872:2: rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ValDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 478, rule__ValDeclaration__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__5"


    // $ANTLR start "rule__ValDeclaration__Group__5__Impl"
    // InternalBeeLangTestLanguage.g:7879:1: rule__ValDeclaration__Group__5__Impl : ( '=' ) ;
    public final void rule__ValDeclaration__Group__5__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 479) ) { return ; }
            // InternalBeeLangTestLanguage.g:7883:1: ( ( '=' ) )
            // InternalBeeLangTestLanguage.g:7884:1: ( '=' )
            {
            // InternalBeeLangTestLanguage.g:7884:1: ( '=' )
            // InternalBeeLangTestLanguage.g:7885:1: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 479, rule__ValDeclaration__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__5__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__6"
    // InternalBeeLangTestLanguage.g:7898:1: rule__ValDeclaration__Group__6 : rule__ValDeclaration__Group__6__Impl ;
    public final void rule__ValDeclaration__Group__6() throws RecognitionException {
        int rule__ValDeclaration__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 480) ) { return ; }
            // InternalBeeLangTestLanguage.g:7902:1: ( rule__ValDeclaration__Group__6__Impl )
            // InternalBeeLangTestLanguage.g:7903:2: rule__ValDeclaration__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 480, rule__ValDeclaration__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__6"


    // $ANTLR start "rule__ValDeclaration__Group__6__Impl"
    // InternalBeeLangTestLanguage.g:7909:1: rule__ValDeclaration__Group__6__Impl : ( ( rule__ValDeclaration__ValueExprAssignment_6 ) ) ;
    public final void rule__ValDeclaration__Group__6__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 481) ) { return ; }
            // InternalBeeLangTestLanguage.g:7913:1: ( ( ( rule__ValDeclaration__ValueExprAssignment_6 ) ) )
            // InternalBeeLangTestLanguage.g:7914:1: ( ( rule__ValDeclaration__ValueExprAssignment_6 ) )
            {
            // InternalBeeLangTestLanguage.g:7914:1: ( ( rule__ValDeclaration__ValueExprAssignment_6 ) )
            // InternalBeeLangTestLanguage.g:7915:1: ( rule__ValDeclaration__ValueExprAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); 
            }
            // InternalBeeLangTestLanguage.g:7916:1: ( rule__ValDeclaration__ValueExprAssignment_6 )
            // InternalBeeLangTestLanguage.g:7916:2: rule__ValDeclaration__ValueExprAssignment_6
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__ValueExprAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 481, rule__ValDeclaration__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__6__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group__0"
    // InternalBeeLangTestLanguage.g:7940:1: rule__SimpleTypeRef__Group__0 : rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1 ;
    public final void rule__SimpleTypeRef__Group__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 482) ) { return ; }
            // InternalBeeLangTestLanguage.g:7944:1: ( rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1 )
            // InternalBeeLangTestLanguage.g:7945:2: rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__SimpleTypeRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 482, rule__SimpleTypeRef__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__0"


    // $ANTLR start "rule__SimpleTypeRef__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:7952:1: rule__SimpleTypeRef__Group__0__Impl : ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) ) ;
    public final void rule__SimpleTypeRef__Group__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 483) ) { return ; }
            // InternalBeeLangTestLanguage.g:7956:1: ( ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) ) )
            // InternalBeeLangTestLanguage.g:7957:1: ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) )
            {
            // InternalBeeLangTestLanguage.g:7957:1: ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) )
            // InternalBeeLangTestLanguage.g:7958:1: ( rule__SimpleTypeRef__RawTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_0()); 
            }
            // InternalBeeLangTestLanguage.g:7959:1: ( rule__SimpleTypeRef__RawTypeAssignment_0 )
            // InternalBeeLangTestLanguage.g:7959:2: rule__SimpleTypeRef__RawTypeAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__RawTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 483, rule__SimpleTypeRef__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group__1"
    // InternalBeeLangTestLanguage.g:7969:1: rule__SimpleTypeRef__Group__1 : rule__SimpleTypeRef__Group__1__Impl ;
    public final void rule__SimpleTypeRef__Group__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 484) ) { return ; }
            // InternalBeeLangTestLanguage.g:7973:1: ( rule__SimpleTypeRef__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:7974:2: rule__SimpleTypeRef__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 484, rule__SimpleTypeRef__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__1"


    // $ANTLR start "rule__SimpleTypeRef__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:7980:1: rule__SimpleTypeRef__Group__1__Impl : ( ( rule__SimpleTypeRef__Group_1__0 )? ) ;
    public final void rule__SimpleTypeRef__Group__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 485) ) { return ; }
            // InternalBeeLangTestLanguage.g:7984:1: ( ( ( rule__SimpleTypeRef__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:7985:1: ( ( rule__SimpleTypeRef__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:7985:1: ( ( rule__SimpleTypeRef__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:7986:1: ( rule__SimpleTypeRef__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:7987:1: ( rule__SimpleTypeRef__Group_1__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==28) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:7987:2: rule__SimpleTypeRef__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SimpleTypeRef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 485, rule__SimpleTypeRef__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__1__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__0"
    // InternalBeeLangTestLanguage.g:8001:1: rule__SimpleTypeRef__Group_1__0 : rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1 ;
    public final void rule__SimpleTypeRef__Group_1__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 486) ) { return ; }
            // InternalBeeLangTestLanguage.g:8005:1: ( rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1 )
            // InternalBeeLangTestLanguage.g:8006:2: rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__SimpleTypeRef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 486, rule__SimpleTypeRef__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__0"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8013:1: rule__SimpleTypeRef__Group_1__0__Impl : ( '<' ) ;
    public final void rule__SimpleTypeRef__Group_1__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 487) ) { return ; }
            // InternalBeeLangTestLanguage.g:8017:1: ( ( '<' ) )
            // InternalBeeLangTestLanguage.g:8018:1: ( '<' )
            {
            // InternalBeeLangTestLanguage.g:8018:1: ( '<' )
            // InternalBeeLangTestLanguage.g:8019:1: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); 
            }
            match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 487, rule__SimpleTypeRef__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__1"
    // InternalBeeLangTestLanguage.g:8032:1: rule__SimpleTypeRef__Group_1__1 : rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2 ;
    public final void rule__SimpleTypeRef__Group_1__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 488) ) { return ; }
            // InternalBeeLangTestLanguage.g:8036:1: ( rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2 )
            // InternalBeeLangTestLanguage.g:8037:2: rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SimpleTypeRef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 488, rule__SimpleTypeRef__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__1"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8044:1: rule__SimpleTypeRef__Group_1__1__Impl : ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) ) ;
    public final void rule__SimpleTypeRef__Group_1__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 489) ) { return ; }
            // InternalBeeLangTestLanguage.g:8048:1: ( ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:8049:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8049:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:8050:1: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:8051:1: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:8051:2: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 489, rule__SimpleTypeRef__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__2"
    // InternalBeeLangTestLanguage.g:8061:1: rule__SimpleTypeRef__Group_1__2 : rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3 ;
    public final void rule__SimpleTypeRef__Group_1__2() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 490) ) { return ; }
            // InternalBeeLangTestLanguage.g:8065:1: ( rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3 )
            // InternalBeeLangTestLanguage.g:8066:2: rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SimpleTypeRef__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 490, rule__SimpleTypeRef__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__2"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:8073:1: rule__SimpleTypeRef__Group_1__2__Impl : ( ( rule__SimpleTypeRef__Group_1_2__0 )* ) ;
    public final void rule__SimpleTypeRef__Group_1__2__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 491) ) { return ; }
            // InternalBeeLangTestLanguage.g:8077:1: ( ( ( rule__SimpleTypeRef__Group_1_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:8078:1: ( ( rule__SimpleTypeRef__Group_1_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:8078:1: ( ( rule__SimpleTypeRef__Group_1_2__0 )* )
            // InternalBeeLangTestLanguage.g:8079:1: ( rule__SimpleTypeRef__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:8080:1: ( rule__SimpleTypeRef__Group_1_2__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==48) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:8080:2: rule__SimpleTypeRef__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__SimpleTypeRef__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 491, rule__SimpleTypeRef__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__3"
    // InternalBeeLangTestLanguage.g:8090:1: rule__SimpleTypeRef__Group_1__3 : rule__SimpleTypeRef__Group_1__3__Impl ;
    public final void rule__SimpleTypeRef__Group_1__3() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 492) ) { return ; }
            // InternalBeeLangTestLanguage.g:8094:1: ( rule__SimpleTypeRef__Group_1__3__Impl )
            // InternalBeeLangTestLanguage.g:8095:2: rule__SimpleTypeRef__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 492, rule__SimpleTypeRef__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__3"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__3__Impl"
    // InternalBeeLangTestLanguage.g:8101:1: rule__SimpleTypeRef__Group_1__3__Impl : ( '>' ) ;
    public final void rule__SimpleTypeRef__Group_1__3__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 493) ) { return ; }
            // InternalBeeLangTestLanguage.g:8105:1: ( ( '>' ) )
            // InternalBeeLangTestLanguage.g:8106:1: ( '>' )
            {
            // InternalBeeLangTestLanguage.g:8106:1: ( '>' )
            // InternalBeeLangTestLanguage.g:8107:1: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); 
            }
            match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 493, rule__SimpleTypeRef__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__0"
    // InternalBeeLangTestLanguage.g:8128:1: rule__SimpleTypeRef__Group_1_2__0 : rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1 ;
    public final void rule__SimpleTypeRef__Group_1_2__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 494) ) { return ; }
            // InternalBeeLangTestLanguage.g:8132:1: ( rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1 )
            // InternalBeeLangTestLanguage.g:8133:2: rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__SimpleTypeRef__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 494, rule__SimpleTypeRef__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__0"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:8140:1: rule__SimpleTypeRef__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleTypeRef__Group_1_2__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 495) ) { return ; }
            // InternalBeeLangTestLanguage.g:8144:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:8145:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:8145:1: ( ',' )
            // InternalBeeLangTestLanguage.g:8146:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 495, rule__SimpleTypeRef__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__1"
    // InternalBeeLangTestLanguage.g:8159:1: rule__SimpleTypeRef__Group_1_2__1 : rule__SimpleTypeRef__Group_1_2__1__Impl ;
    public final void rule__SimpleTypeRef__Group_1_2__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 496) ) { return ; }
            // InternalBeeLangTestLanguage.g:8163:1: ( rule__SimpleTypeRef__Group_1_2__1__Impl )
            // InternalBeeLangTestLanguage.g:8164:2: rule__SimpleTypeRef__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 496, rule__SimpleTypeRef__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__1"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:8170:1: rule__SimpleTypeRef__Group_1_2__1__Impl : ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleTypeRef__Group_1_2__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 497) ) { return ; }
            // InternalBeeLangTestLanguage.g:8174:1: ( ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:8175:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8175:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) )
            // InternalBeeLangTestLanguage.g:8176:1: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:8177:1: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 )
            // InternalBeeLangTestLanguage.g:8177:2: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 497, rule__SimpleTypeRef__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__0"
    // InternalBeeLangTestLanguage.g:8191:1: rule__ClosureTypeRef__Group__0 : rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1 ;
    public final void rule__ClosureTypeRef__Group__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 498) ) { return ; }
            // InternalBeeLangTestLanguage.g:8195:1: ( rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1 )
            // InternalBeeLangTestLanguage.g:8196:2: rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ClosureTypeRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 498, rule__ClosureTypeRef__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__0"


    // $ANTLR start "rule__ClosureTypeRef__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8203:1: rule__ClosureTypeRef__Group__0__Impl : ( '(' ) ;
    public final void rule__ClosureTypeRef__Group__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 499) ) { return ; }
            // InternalBeeLangTestLanguage.g:8207:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:8208:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:8208:1: ( '(' )
            // InternalBeeLangTestLanguage.g:8209:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 499, rule__ClosureTypeRef__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__1"
    // InternalBeeLangTestLanguage.g:8222:1: rule__ClosureTypeRef__Group__1 : rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2 ;
    public final void rule__ClosureTypeRef__Group__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 500) ) { return ; }
            // InternalBeeLangTestLanguage.g:8226:1: ( rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2 )
            // InternalBeeLangTestLanguage.g:8227:2: rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ClosureTypeRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 500, rule__ClosureTypeRef__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__1"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser7 extends InternalBeeLangTestLanguageParser6 {

        InternalBeeLangTestLanguageParser7(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser7(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ClosureTypeRef__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8234:1: rule__ClosureTypeRef__Group__1__Impl : ( ( rule__ClosureTypeRef__Alternatives_1 )? ) ;
    public final void rule__ClosureTypeRef__Group__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 501) ) { return ; }
            // InternalBeeLangTestLanguage.g:8238:1: ( ( ( rule__ClosureTypeRef__Alternatives_1 )? ) )
            // InternalBeeLangTestLanguage.g:8239:1: ( ( rule__ClosureTypeRef__Alternatives_1 )? )
            {
            // InternalBeeLangTestLanguage.g:8239:1: ( ( rule__ClosureTypeRef__Alternatives_1 )? )
            // InternalBeeLangTestLanguage.g:8240:1: ( rule__ClosureTypeRef__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:8241:1: ( rule__ClosureTypeRef__Alternatives_1 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID||LA62_0==75) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:8241:2: rule__ClosureTypeRef__Alternatives_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 501, rule__ClosureTypeRef__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__2"
    // InternalBeeLangTestLanguage.g:8251:1: rule__ClosureTypeRef__Group__2 : rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3 ;
    public final void rule__ClosureTypeRef__Group__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 502) ) { return ; }
            // InternalBeeLangTestLanguage.g:8255:1: ( rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3 )
            // InternalBeeLangTestLanguage.g:8256:2: rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__ClosureTypeRef__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 502, rule__ClosureTypeRef__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__2"


    // $ANTLR start "rule__ClosureTypeRef__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:8263:1: rule__ClosureTypeRef__Group__2__Impl : ( ')' ) ;
    public final void rule__ClosureTypeRef__Group__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 503) ) { return ; }
            // InternalBeeLangTestLanguage.g:8267:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:8268:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:8268:1: ( ')' )
            // InternalBeeLangTestLanguage.g:8269:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 503, rule__ClosureTypeRef__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__3"
    // InternalBeeLangTestLanguage.g:8282:1: rule__ClosureTypeRef__Group__3 : rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4 ;
    public final void rule__ClosureTypeRef__Group__3() throws RecognitionException {
        int rule__ClosureTypeRef__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 504) ) { return ; }
            // InternalBeeLangTestLanguage.g:8286:1: ( rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4 )
            // InternalBeeLangTestLanguage.g:8287:2: rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 504, rule__ClosureTypeRef__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__3"


    // $ANTLR start "rule__ClosureTypeRef__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:8294:1: rule__ClosureTypeRef__Group__3__Impl : ( '=>' ) ;
    public final void rule__ClosureTypeRef__Group__3__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 505) ) { return ; }
            // InternalBeeLangTestLanguage.g:8298:1: ( ( '=>' ) )
            // InternalBeeLangTestLanguage.g:8299:1: ( '=>' )
            {
            // InternalBeeLangTestLanguage.g:8299:1: ( '=>' )
            // InternalBeeLangTestLanguage.g:8300:1: '=>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3()); 
            }
            match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 505, rule__ClosureTypeRef__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__3__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__4"
    // InternalBeeLangTestLanguage.g:8313:1: rule__ClosureTypeRef__Group__4 : rule__ClosureTypeRef__Group__4__Impl ;
    public final void rule__ClosureTypeRef__Group__4() throws RecognitionException {
        int rule__ClosureTypeRef__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 506) ) { return ; }
            // InternalBeeLangTestLanguage.g:8317:1: ( rule__ClosureTypeRef__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:8318:2: rule__ClosureTypeRef__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 506, rule__ClosureTypeRef__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__4"


    // $ANTLR start "rule__ClosureTypeRef__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:8324:1: rule__ClosureTypeRef__Group__4__Impl : ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) ) ;
    public final void rule__ClosureTypeRef__Group__4__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 507) ) { return ; }
            // InternalBeeLangTestLanguage.g:8328:1: ( ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) ) )
            // InternalBeeLangTestLanguage.g:8329:1: ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) )
            {
            // InternalBeeLangTestLanguage.g:8329:1: ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) )
            // InternalBeeLangTestLanguage.g:8330:1: ( rule__ClosureTypeRef__ReturnTypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:8331:1: ( rule__ClosureTypeRef__ReturnTypeAssignment_4 )
            // InternalBeeLangTestLanguage.g:8331:2: rule__ClosureTypeRef__ReturnTypeAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ReturnTypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 507, rule__ClosureTypeRef__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__4__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__0"
    // InternalBeeLangTestLanguage.g:8351:1: rule__ClosureTypeRef__Group_1_0__0 : rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1 ;
    public final void rule__ClosureTypeRef__Group_1_0__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 508) ) { return ; }
            // InternalBeeLangTestLanguage.g:8355:1: ( rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1 )
            // InternalBeeLangTestLanguage.g:8356:2: rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureTypeRef__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 508, rule__ClosureTypeRef__Group_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:8363:1: rule__ClosureTypeRef__Group_1_0__0__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 509) ) { return ; }
            // InternalBeeLangTestLanguage.g:8367:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) ) )
            // InternalBeeLangTestLanguage.g:8368:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) )
            {
            // InternalBeeLangTestLanguage.g:8368:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) )
            // InternalBeeLangTestLanguage.g:8369:1: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:8370:1: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 )
            // InternalBeeLangTestLanguage.g:8370:2: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 509, rule__ClosureTypeRef__Group_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__1"
    // InternalBeeLangTestLanguage.g:8380:1: rule__ClosureTypeRef__Group_1_0__1 : rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2 ;
    public final void rule__ClosureTypeRef__Group_1_0__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 510) ) { return ; }
            // InternalBeeLangTestLanguage.g:8384:1: ( rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2 )
            // InternalBeeLangTestLanguage.g:8385:2: rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureTypeRef__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 510, rule__ClosureTypeRef__Group_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:8392:1: rule__ClosureTypeRef__Group_1_0__1__Impl : ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* ) ;
    public final void rule__ClosureTypeRef__Group_1_0__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 511) ) { return ; }
            // InternalBeeLangTestLanguage.g:8396:1: ( ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:8397:1: ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:8397:1: ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* )
            // InternalBeeLangTestLanguage.g:8398:1: ( rule__ClosureTypeRef__Group_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:8399:1: ( rule__ClosureTypeRef__Group_1_0_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==48) ) {
                    int LA63_1 = input.LA(2);

                    if ( (LA63_1==RULE_ID) ) {
                        alt63=1;
                    }


                }


                switch (alt63) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:8399:2: rule__ClosureTypeRef__Group_1_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ClosureTypeRef__Group_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 511, rule__ClosureTypeRef__Group_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__2"
    // InternalBeeLangTestLanguage.g:8409:1: rule__ClosureTypeRef__Group_1_0__2 : rule__ClosureTypeRef__Group_1_0__2__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 512) ) { return ; }
            // InternalBeeLangTestLanguage.g:8413:1: ( rule__ClosureTypeRef__Group_1_0__2__Impl )
            // InternalBeeLangTestLanguage.g:8414:2: rule__ClosureTypeRef__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 512, rule__ClosureTypeRef__Group_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__2"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:8420:1: rule__ClosureTypeRef__Group_1_0__2__Impl : ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? ) ;
    public final void rule__ClosureTypeRef__Group_1_0__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 513) ) { return ; }
            // InternalBeeLangTestLanguage.g:8424:1: ( ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:8425:1: ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:8425:1: ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? )
            // InternalBeeLangTestLanguage.g:8426:1: ( rule__ClosureTypeRef__Group_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:8427:1: ( rule__ClosureTypeRef__Group_1_0_2__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==48) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:8427:2: rule__ClosureTypeRef__Group_1_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 513, rule__ClosureTypeRef__Group_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__0"
    // InternalBeeLangTestLanguage.g:8443:1: rule__ClosureTypeRef__Group_1_0_1__0 : rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1 ;
    public final void rule__ClosureTypeRef__Group_1_0_1__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 514) ) { return ; }
            // InternalBeeLangTestLanguage.g:8447:1: ( rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1 )
            // InternalBeeLangTestLanguage.g:8448:2: rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 514, rule__ClosureTypeRef__Group_1_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8455:1: rule__ClosureTypeRef__Group_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__ClosureTypeRef__Group_1_0_1__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 515) ) { return ; }
            // InternalBeeLangTestLanguage.g:8459:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:8460:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:8460:1: ( ',' )
            // InternalBeeLangTestLanguage.g:8461:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 515, rule__ClosureTypeRef__Group_1_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__1"
    // InternalBeeLangTestLanguage.g:8474:1: rule__ClosureTypeRef__Group_1_0_1__1 : rule__ClosureTypeRef__Group_1_0_1__1__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0_1__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 516) ) { return ; }
            // InternalBeeLangTestLanguage.g:8478:1: ( rule__ClosureTypeRef__Group_1_0_1__1__Impl )
            // InternalBeeLangTestLanguage.g:8479:2: rule__ClosureTypeRef__Group_1_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 516, rule__ClosureTypeRef__Group_1_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8485:1: rule__ClosureTypeRef__Group_1_0_1__1__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_1__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 517) ) { return ; }
            // InternalBeeLangTestLanguage.g:8489:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:8490:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8490:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) )
            // InternalBeeLangTestLanguage.g:8491:1: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:8492:1: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 )
            // InternalBeeLangTestLanguage.g:8492:2: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 517, rule__ClosureTypeRef__Group_1_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__0"
    // InternalBeeLangTestLanguage.g:8506:1: rule__ClosureTypeRef__Group_1_0_2__0 : rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1 ;
    public final void rule__ClosureTypeRef__Group_1_0_2__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 518) ) { return ; }
            // InternalBeeLangTestLanguage.g:8510:1: ( rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1 )
            // InternalBeeLangTestLanguage.g:8511:2: rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__ClosureTypeRef__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 518, rule__ClosureTypeRef__Group_1_0_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__0__Impl"
    // InternalBeeLangTestLanguage.g:8518:1: rule__ClosureTypeRef__Group_1_0_2__0__Impl : ( ',' ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 519) ) { return ; }
            // InternalBeeLangTestLanguage.g:8522:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:8523:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:8523:1: ( ',' )
            // InternalBeeLangTestLanguage.g:8524:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 519, rule__ClosureTypeRef__Group_1_0_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__1"
    // InternalBeeLangTestLanguage.g:8537:1: rule__ClosureTypeRef__Group_1_0_2__1 : rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2 ;
    public final void rule__ClosureTypeRef__Group_1_0_2__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 520) ) { return ; }
            // InternalBeeLangTestLanguage.g:8541:1: ( rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2 )
            // InternalBeeLangTestLanguage.g:8542:2: rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 520, rule__ClosureTypeRef__Group_1_0_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__1__Impl"
    // InternalBeeLangTestLanguage.g:8549:1: rule__ClosureTypeRef__Group_1_0_2__1__Impl : ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 521) ) { return ; }
            // InternalBeeLangTestLanguage.g:8553:1: ( ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:8554:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8554:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) )
            // InternalBeeLangTestLanguage.g:8555:1: ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_0_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:8556:1: ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 )
            // InternalBeeLangTestLanguage.g:8556:2: rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 521, rule__ClosureTypeRef__Group_1_0_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__2"
    // InternalBeeLangTestLanguage.g:8566:1: rule__ClosureTypeRef__Group_1_0_2__2 : rule__ClosureTypeRef__Group_1_0_2__2__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0_2__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 522) ) { return ; }
            // InternalBeeLangTestLanguage.g:8570:1: ( rule__ClosureTypeRef__Group_1_0_2__2__Impl )
            // InternalBeeLangTestLanguage.g:8571:2: rule__ClosureTypeRef__Group_1_0_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 522, rule__ClosureTypeRef__Group_1_0_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__2"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__2__Impl"
    // InternalBeeLangTestLanguage.g:8577:1: rule__ClosureTypeRef__Group_1_0_2__2__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 523) ) { return ; }
            // InternalBeeLangTestLanguage.g:8581:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:8582:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8582:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) )
            // InternalBeeLangTestLanguage.g:8583:1: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:8584:1: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 )
            // InternalBeeLangTestLanguage.g:8584:2: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 523, rule__ClosureTypeRef__Group_1_0_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__0"
    // InternalBeeLangTestLanguage.g:8600:1: rule__ClosureTypeRef__Group_1_1__0 : rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1 ;
    public final void rule__ClosureTypeRef__Group_1_1__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 524) ) { return ; }
            // InternalBeeLangTestLanguage.g:8604:1: ( rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1 )
            // InternalBeeLangTestLanguage.g:8605:2: rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 524, rule__ClosureTypeRef__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8612:1: rule__ClosureTypeRef__Group_1_1__0__Impl : ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_1__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 525) ) { return ; }
            // InternalBeeLangTestLanguage.g:8616:1: ( ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:8617:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:8617:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:8618:1: ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:8619:1: ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 )
            // InternalBeeLangTestLanguage.g:8619:2: rule__ClosureTypeRef__VarArgsAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__VarArgsAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 525, rule__ClosureTypeRef__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__1"
    // InternalBeeLangTestLanguage.g:8629:1: rule__ClosureTypeRef__Group_1_1__1 : rule__ClosureTypeRef__Group_1_1__1__Impl ;
    public final void rule__ClosureTypeRef__Group_1_1__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 526) ) { return ; }
            // InternalBeeLangTestLanguage.g:8633:1: ( rule__ClosureTypeRef__Group_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:8634:2: rule__ClosureTypeRef__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 526, rule__ClosureTypeRef__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8640:1: rule__ClosureTypeRef__Group_1_1__1__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_1__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 527) ) { return ; }
            // InternalBeeLangTestLanguage.g:8644:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:8645:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:8645:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) )
            // InternalBeeLangTestLanguage.g:8646:1: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:8647:1: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 )
            // InternalBeeLangTestLanguage.g:8647:2: rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 527, rule__ClosureTypeRef__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__1__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__0"
    // InternalBeeLangTestLanguage.g:8661:1: rule__CachedExpression__Group_0__0 : rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1 ;
    public final void rule__CachedExpression__Group_0__0() throws RecognitionException {
        int rule__CachedExpression__Group_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 528) ) { return ; }
            // InternalBeeLangTestLanguage.g:8665:1: ( rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1 )
            // InternalBeeLangTestLanguage.g:8666:2: rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__CachedExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 528, rule__CachedExpression__Group_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__0"


    // $ANTLR start "rule__CachedExpression__Group_0__0__Impl"
    // InternalBeeLangTestLanguage.g:8673:1: rule__CachedExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__CachedExpression__Group_0__0__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 529) ) { return ; }
            // InternalBeeLangTestLanguage.g:8677:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8678:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8678:1: ( () )
            // InternalBeeLangTestLanguage.g:8679:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:8680:1: ()
            // InternalBeeLangTestLanguage.g:8682:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 529, rule__CachedExpression__Group_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__0__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__1"
    // InternalBeeLangTestLanguage.g:8692:1: rule__CachedExpression__Group_0__1 : rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2 ;
    public final void rule__CachedExpression__Group_0__1() throws RecognitionException {
        int rule__CachedExpression__Group_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 530) ) { return ; }
            // InternalBeeLangTestLanguage.g:8696:1: ( rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2 )
            // InternalBeeLangTestLanguage.g:8697:2: rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__CachedExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 530, rule__CachedExpression__Group_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__1"


    // $ANTLR start "rule__CachedExpression__Group_0__1__Impl"
    // InternalBeeLangTestLanguage.g:8704:1: rule__CachedExpression__Group_0__1__Impl : ( 'cached' ) ;
    public final void rule__CachedExpression__Group_0__1__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 531) ) { return ; }
            // InternalBeeLangTestLanguage.g:8708:1: ( ( 'cached' ) )
            // InternalBeeLangTestLanguage.g:8709:1: ( 'cached' )
            {
            // InternalBeeLangTestLanguage.g:8709:1: ( 'cached' )
            // InternalBeeLangTestLanguage.g:8710:1: 'cached'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); 
            }
            match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 531, rule__CachedExpression__Group_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__1__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__2"
    // InternalBeeLangTestLanguage.g:8723:1: rule__CachedExpression__Group_0__2 : rule__CachedExpression__Group_0__2__Impl ;
    public final void rule__CachedExpression__Group_0__2() throws RecognitionException {
        int rule__CachedExpression__Group_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 532) ) { return ; }
            // InternalBeeLangTestLanguage.g:8727:1: ( rule__CachedExpression__Group_0__2__Impl )
            // InternalBeeLangTestLanguage.g:8728:2: rule__CachedExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 532, rule__CachedExpression__Group_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__2"


    // $ANTLR start "rule__CachedExpression__Group_0__2__Impl"
    // InternalBeeLangTestLanguage.g:8734:1: rule__CachedExpression__Group_0__2__Impl : ( ( rule__CachedExpression__ExprAssignment_0_2 ) ) ;
    public final void rule__CachedExpression__Group_0__2__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 533) ) { return ; }
            // InternalBeeLangTestLanguage.g:8738:1: ( ( ( rule__CachedExpression__ExprAssignment_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:8739:1: ( ( rule__CachedExpression__ExprAssignment_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8739:1: ( ( rule__CachedExpression__ExprAssignment_0_2 ) )
            // InternalBeeLangTestLanguage.g:8740:1: ( rule__CachedExpression__ExprAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:8741:1: ( rule__CachedExpression__ExprAssignment_0_2 )
            // InternalBeeLangTestLanguage.g:8741:2: rule__CachedExpression__ExprAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__ExprAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 533, rule__CachedExpression__Group_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__2__Impl"


    // $ANTLR start "rule__OrExpression__Group__0"
    // InternalBeeLangTestLanguage.g:8757:1: rule__OrExpression__Group__0 : rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1 ;
    public final void rule__OrExpression__Group__0() throws RecognitionException {
        int rule__OrExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 534) ) { return ; }
            // InternalBeeLangTestLanguage.g:8761:1: ( rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:8762:2: rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__OrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 534, rule__OrExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__0"


    // $ANTLR start "rule__OrExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8769:1: rule__OrExpression__Group__0__Impl : ( ruleAndExpression ) ;
    public final void rule__OrExpression__Group__0__Impl() throws RecognitionException {
        int rule__OrExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 535) ) { return ; }
            // InternalBeeLangTestLanguage.g:8773:1: ( ( ruleAndExpression ) )
            // InternalBeeLangTestLanguage.g:8774:1: ( ruleAndExpression )
            {
            // InternalBeeLangTestLanguage.g:8774:1: ( ruleAndExpression )
            // InternalBeeLangTestLanguage.g:8775:1: ruleAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 535, rule__OrExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__0__Impl"


    // $ANTLR start "rule__OrExpression__Group__1"
    // InternalBeeLangTestLanguage.g:8786:1: rule__OrExpression__Group__1 : rule__OrExpression__Group__1__Impl ;
    public final void rule__OrExpression__Group__1() throws RecognitionException {
        int rule__OrExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 536) ) { return ; }
            // InternalBeeLangTestLanguage.g:8790:1: ( rule__OrExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:8791:2: rule__OrExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 536, rule__OrExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__1"


    // $ANTLR start "rule__OrExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8797:1: rule__OrExpression__Group__1__Impl : ( ( rule__OrExpression__Group_1__0 )* ) ;
    public final void rule__OrExpression__Group__1__Impl() throws RecognitionException {
        int rule__OrExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 537) ) { return ; }
            // InternalBeeLangTestLanguage.g:8801:1: ( ( ( rule__OrExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:8802:1: ( ( rule__OrExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:8802:1: ( ( rule__OrExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:8803:1: ( rule__OrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:8804:1: ( rule__OrExpression__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==64) ) {
                    int LA65_2 = input.LA(2);

                    if ( (synpred94_InternalBeeLangTestLanguage()) ) {
                        alt65=1;
                    }


                }


                switch (alt65) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:8804:2: rule__OrExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__OrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 537, rule__OrExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__1__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:8818:1: rule__OrExpression__Group_1__0 : rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1 ;
    public final void rule__OrExpression__Group_1__0() throws RecognitionException {
        int rule__OrExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 538) ) { return ; }
            // InternalBeeLangTestLanguage.g:8822:1: ( rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:8823:2: rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__OrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 538, rule__OrExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__0"


    // $ANTLR start "rule__OrExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8830:1: rule__OrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 539) ) { return ; }
            // InternalBeeLangTestLanguage.g:8834:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8835:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8835:1: ( () )
            // InternalBeeLangTestLanguage.g:8836:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:8837:1: ()
            // InternalBeeLangTestLanguage.g:8839:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 539, rule__OrExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:8849:1: rule__OrExpression__Group_1__1 : rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2 ;
    public final void rule__OrExpression__Group_1__1() throws RecognitionException {
        int rule__OrExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 540) ) { return ; }
            // InternalBeeLangTestLanguage.g:8853:1: ( rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:8854:2: rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__OrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 540, rule__OrExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__1"


    // $ANTLR start "rule__OrExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:8861:1: rule__OrExpression__Group_1__1__Impl : ( '||' ) ;
    public final void rule__OrExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 541) ) { return ; }
            // InternalBeeLangTestLanguage.g:8865:1: ( ( '||' ) )
            // InternalBeeLangTestLanguage.g:8866:1: ( '||' )
            {
            // InternalBeeLangTestLanguage.g:8866:1: ( '||' )
            // InternalBeeLangTestLanguage.g:8867:1: '||'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); 
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 541, rule__OrExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:8880:1: rule__OrExpression__Group_1__2 : rule__OrExpression__Group_1__2__Impl ;
    public final void rule__OrExpression__Group_1__2() throws RecognitionException {
        int rule__OrExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 542) ) { return ; }
            // InternalBeeLangTestLanguage.g:8884:1: ( rule__OrExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:8885:2: rule__OrExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 542, rule__OrExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__2"


    // $ANTLR start "rule__OrExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:8891:1: rule__OrExpression__Group_1__2__Impl : ( ( rule__OrExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__OrExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 543) ) { return ; }
            // InternalBeeLangTestLanguage.g:8895:1: ( ( ( rule__OrExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:8896:1: ( ( rule__OrExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:8896:1: ( ( rule__OrExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:8897:1: ( rule__OrExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:8898:1: ( rule__OrExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:8898:2: rule__OrExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 543, rule__OrExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpression__Group__0"
    // InternalBeeLangTestLanguage.g:8914:1: rule__AndExpression__Group__0 : rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1 ;
    public final void rule__AndExpression__Group__0() throws RecognitionException {
        int rule__AndExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 544) ) { return ; }
            // InternalBeeLangTestLanguage.g:8918:1: ( rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:8919:2: rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__AndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 544, rule__AndExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__0"


    // $ANTLR start "rule__AndExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:8926:1: rule__AndExpression__Group__0__Impl : ( ruleRelationalExpression ) ;
    public final void rule__AndExpression__Group__0__Impl() throws RecognitionException {
        int rule__AndExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 545) ) { return ; }
            // InternalBeeLangTestLanguage.g:8930:1: ( ( ruleRelationalExpression ) )
            // InternalBeeLangTestLanguage.g:8931:1: ( ruleRelationalExpression )
            {
            // InternalBeeLangTestLanguage.g:8931:1: ( ruleRelationalExpression )
            // InternalBeeLangTestLanguage.g:8932:1: ruleRelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 545, rule__AndExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__0__Impl"


    // $ANTLR start "rule__AndExpression__Group__1"
    // InternalBeeLangTestLanguage.g:8943:1: rule__AndExpression__Group__1 : rule__AndExpression__Group__1__Impl ;
    public final void rule__AndExpression__Group__1() throws RecognitionException {
        int rule__AndExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 546) ) { return ; }
            // InternalBeeLangTestLanguage.g:8947:1: ( rule__AndExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:8948:2: rule__AndExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 546, rule__AndExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__1"


    // $ANTLR start "rule__AndExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:8954:1: rule__AndExpression__Group__1__Impl : ( ( rule__AndExpression__Group_1__0 )* ) ;
    public final void rule__AndExpression__Group__1__Impl() throws RecognitionException {
        int rule__AndExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 547) ) { return ; }
            // InternalBeeLangTestLanguage.g:8958:1: ( ( ( rule__AndExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:8959:1: ( ( rule__AndExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:8959:1: ( ( rule__AndExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:8960:1: ( rule__AndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:8961:1: ( rule__AndExpression__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==65) ) {
                    int LA66_2 = input.LA(2);

                    if ( (synpred95_InternalBeeLangTestLanguage()) ) {
                        alt66=1;
                    }


                }


                switch (alt66) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:8961:2: rule__AndExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    rule__AndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 547, rule__AndExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__1__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:8975:1: rule__AndExpression__Group_1__0 : rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1 ;
    public final void rule__AndExpression__Group_1__0() throws RecognitionException {
        int rule__AndExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 548) ) { return ; }
            // InternalBeeLangTestLanguage.g:8979:1: ( rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:8980:2: rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__AndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 548, rule__AndExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__0"


    // $ANTLR start "rule__AndExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:8987:1: rule__AndExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 549) ) { return ; }
            // InternalBeeLangTestLanguage.g:8991:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:8992:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:8992:1: ( () )
            // InternalBeeLangTestLanguage.g:8993:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:8994:1: ()
            // InternalBeeLangTestLanguage.g:8996:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 549, rule__AndExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:9006:1: rule__AndExpression__Group_1__1 : rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2 ;
    public final void rule__AndExpression__Group_1__1() throws RecognitionException {
        int rule__AndExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 550) ) { return ; }
            // InternalBeeLangTestLanguage.g:9010:1: ( rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:9011:2: rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 550, rule__AndExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__1"


    // $ANTLR start "rule__AndExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9018:1: rule__AndExpression__Group_1__1__Impl : ( '&&' ) ;
    public final void rule__AndExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 551) ) { return ; }
            // InternalBeeLangTestLanguage.g:9022:1: ( ( '&&' ) )
            // InternalBeeLangTestLanguage.g:9023:1: ( '&&' )
            {
            // InternalBeeLangTestLanguage.g:9023:1: ( '&&' )
            // InternalBeeLangTestLanguage.g:9024:1: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); 
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 551, rule__AndExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:9037:1: rule__AndExpression__Group_1__2 : rule__AndExpression__Group_1__2__Impl ;
    public final void rule__AndExpression__Group_1__2() throws RecognitionException {
        int rule__AndExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 552) ) { return ; }
            // InternalBeeLangTestLanguage.g:9041:1: ( rule__AndExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:9042:2: rule__AndExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 552, rule__AndExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__2"


    // $ANTLR start "rule__AndExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:9048:1: rule__AndExpression__Group_1__2__Impl : ( ( rule__AndExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AndExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 553) ) { return ; }
            // InternalBeeLangTestLanguage.g:9052:1: ( ( ( rule__AndExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:9053:1: ( ( rule__AndExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9053:1: ( ( rule__AndExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:9054:1: ( rule__AndExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:9055:1: ( rule__AndExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:9055:2: rule__AndExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 553, rule__AndExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__2__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9071:1: rule__RelationalExpression__Group__0 : rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 ;
    public final void rule__RelationalExpression__Group__0() throws RecognitionException {
        int rule__RelationalExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 554) ) { return ; }
            // InternalBeeLangTestLanguage.g:9075:1: ( rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9076:2: rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__RelationalExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 554, rule__RelationalExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0"


    // $ANTLR start "rule__RelationalExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9083:1: rule__RelationalExpression__Group__0__Impl : ( ruleAdditiveExpression ) ;
    public final void rule__RelationalExpression__Group__0__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 555) ) { return ; }
            // InternalBeeLangTestLanguage.g:9087:1: ( ( ruleAdditiveExpression ) )
            // InternalBeeLangTestLanguage.g:9088:1: ( ruleAdditiveExpression )
            {
            // InternalBeeLangTestLanguage.g:9088:1: ( ruleAdditiveExpression )
            // InternalBeeLangTestLanguage.g:9089:1: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 555, rule__RelationalExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9100:1: rule__RelationalExpression__Group__1 : rule__RelationalExpression__Group__1__Impl ;
    public final void rule__RelationalExpression__Group__1() throws RecognitionException {
        int rule__RelationalExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 556) ) { return ; }
            // InternalBeeLangTestLanguage.g:9104:1: ( rule__RelationalExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:9105:2: rule__RelationalExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 556, rule__RelationalExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1"


    // $ANTLR start "rule__RelationalExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9111:1: rule__RelationalExpression__Group__1__Impl : ( ( rule__RelationalExpression__Group_1__0 )* ) ;
    public final void rule__RelationalExpression__Group__1__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 557) ) { return ; }
            // InternalBeeLangTestLanguage.g:9115:1: ( ( ( rule__RelationalExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:9116:1: ( ( rule__RelationalExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:9116:1: ( ( rule__RelationalExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:9117:1: ( rule__RelationalExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:9118:1: ( rule__RelationalExpression__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                alt67 = dfa67.predict(input);
                switch (alt67) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:9118:2: rule__RelationalExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    rule__RelationalExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 557, rule__RelationalExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:9132:1: rule__RelationalExpression__Group_1__0 : rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 ;
    public final void rule__RelationalExpression__Group_1__0() throws RecognitionException {
        int rule__RelationalExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 558) ) { return ; }
            // InternalBeeLangTestLanguage.g:9136:1: ( rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:9137:2: rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__RelationalExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 558, rule__RelationalExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0"


    // $ANTLR start "rule__RelationalExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9144:1: rule__RelationalExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__RelationalExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 559) ) { return ; }
            // InternalBeeLangTestLanguage.g:9148:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9149:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9149:1: ( () )
            // InternalBeeLangTestLanguage.g:9150:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:9151:1: ()
            // InternalBeeLangTestLanguage.g:9153:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 559, rule__RelationalExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:9163:1: rule__RelationalExpression__Group_1__1 : rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2 ;
    public final void rule__RelationalExpression__Group_1__1() throws RecognitionException {
        int rule__RelationalExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 560) ) { return ; }
            // InternalBeeLangTestLanguage.g:9167:1: ( rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:9168:2: rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__RelationalExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 560, rule__RelationalExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1"


    // $ANTLR start "rule__RelationalExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9175:1: rule__RelationalExpression__Group_1__1__Impl : ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__RelationalExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 561) ) { return ; }
            // InternalBeeLangTestLanguage.g:9179:1: ( ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:9180:1: ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9180:1: ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:9181:1: ( rule__RelationalExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:9182:1: ( rule__RelationalExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:9182:2: rule__RelationalExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 561, rule__RelationalExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:9192:1: rule__RelationalExpression__Group_1__2 : rule__RelationalExpression__Group_1__2__Impl ;
    public final void rule__RelationalExpression__Group_1__2() throws RecognitionException {
        int rule__RelationalExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 562) ) { return ; }
            // InternalBeeLangTestLanguage.g:9196:1: ( rule__RelationalExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:9197:2: rule__RelationalExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 562, rule__RelationalExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__2"


    // $ANTLR start "rule__RelationalExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:9203:1: rule__RelationalExpression__Group_1__2__Impl : ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__RelationalExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 563) ) { return ; }
            // InternalBeeLangTestLanguage.g:9207:1: ( ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:9208:1: ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9208:1: ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:9209:1: ( rule__RelationalExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:9210:1: ( rule__RelationalExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:9210:2: rule__RelationalExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 563, rule__RelationalExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9226:1: rule__AdditiveExpression__Group__0 : rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 ;
    public final void rule__AdditiveExpression__Group__0() throws RecognitionException {
        int rule__AdditiveExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 564) ) { return ; }
            // InternalBeeLangTestLanguage.g:9230:1: ( rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9231:2: rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__AdditiveExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 564, rule__AdditiveExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0"


    // $ANTLR start "rule__AdditiveExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9238:1: rule__AdditiveExpression__Group__0__Impl : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 565) ) { return ; }
            // InternalBeeLangTestLanguage.g:9242:1: ( ( ruleMultiplicativeExpression ) )
            // InternalBeeLangTestLanguage.g:9243:1: ( ruleMultiplicativeExpression )
            {
            // InternalBeeLangTestLanguage.g:9243:1: ( ruleMultiplicativeExpression )
            // InternalBeeLangTestLanguage.g:9244:1: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 565, rule__AdditiveExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9255:1: rule__AdditiveExpression__Group__1 : rule__AdditiveExpression__Group__1__Impl ;
    public final void rule__AdditiveExpression__Group__1() throws RecognitionException {
        int rule__AdditiveExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 566) ) { return ; }
            // InternalBeeLangTestLanguage.g:9259:1: ( rule__AdditiveExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:9260:2: rule__AdditiveExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 566, rule__AdditiveExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1"


    // $ANTLR start "rule__AdditiveExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9266:1: rule__AdditiveExpression__Group__1__Impl : ( ( rule__AdditiveExpression__Group_1__0 )* ) ;
    public final void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 567) ) { return ; }
            // InternalBeeLangTestLanguage.g:9270:1: ( ( ( rule__AdditiveExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:9271:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:9271:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:9272:1: ( rule__AdditiveExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:9273:1: ( rule__AdditiveExpression__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==30) ) {
                    int LA68_2 = input.LA(2);

                    if ( (synpred97_InternalBeeLangTestLanguage()) ) {
                        alt68=1;
                    }


                }
                else if ( (LA68_0==31) ) {
                    int LA68_3 = input.LA(2);

                    if ( (synpred97_InternalBeeLangTestLanguage()) ) {
                        alt68=1;
                    }


                }


                switch (alt68) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:9273:2: rule__AdditiveExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    rule__AdditiveExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 567, rule__AdditiveExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:9287:1: rule__AdditiveExpression__Group_1__0 : rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 ;
    public final void rule__AdditiveExpression__Group_1__0() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 568) ) { return ; }
            // InternalBeeLangTestLanguage.g:9291:1: ( rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:9292:2: rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__AdditiveExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 568, rule__AdditiveExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9299:1: rule__AdditiveExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 569) ) { return ; }
            // InternalBeeLangTestLanguage.g:9303:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9304:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9304:1: ( () )
            // InternalBeeLangTestLanguage.g:9305:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:9306:1: ()
            // InternalBeeLangTestLanguage.g:9308:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 569, rule__AdditiveExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:9318:1: rule__AdditiveExpression__Group_1__1 : rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 ;
    public final void rule__AdditiveExpression__Group_1__1() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 570) ) { return ; }
            // InternalBeeLangTestLanguage.g:9322:1: ( rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:9323:2: rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AdditiveExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 570, rule__AdditiveExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9330:1: rule__AdditiveExpression__Group_1__1__Impl : ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 571) ) { return ; }
            // InternalBeeLangTestLanguage.g:9334:1: ( ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:9335:1: ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9335:1: ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:9336:1: ( rule__AdditiveExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:9337:1: ( rule__AdditiveExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:9337:2: rule__AdditiveExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 571, rule__AdditiveExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:9347:1: rule__AdditiveExpression__Group_1__2 : rule__AdditiveExpression__Group_1__2__Impl ;
    public final void rule__AdditiveExpression__Group_1__2() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 572) ) { return ; }
            // InternalBeeLangTestLanguage.g:9351:1: ( rule__AdditiveExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:9352:2: rule__AdditiveExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 572, rule__AdditiveExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:9358:1: rule__AdditiveExpression__Group_1__2__Impl : ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AdditiveExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 573) ) { return ; }
            // InternalBeeLangTestLanguage.g:9362:1: ( ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:9363:1: ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9363:1: ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:9364:1: ( rule__AdditiveExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:9365:1: ( rule__AdditiveExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:9365:2: rule__AdditiveExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 573, rule__AdditiveExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9381:1: rule__MultiplicativeExpression__Group__0 : rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 ;
    public final void rule__MultiplicativeExpression__Group__0() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 574) ) { return ; }
            // InternalBeeLangTestLanguage.g:9385:1: ( rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9386:2: rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__MultiplicativeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 574, rule__MultiplicativeExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9393:1: rule__MultiplicativeExpression__Group__0__Impl : ( ruleSetExpression ) ;
    public final void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 575) ) { return ; }
            // InternalBeeLangTestLanguage.g:9397:1: ( ( ruleSetExpression ) )
            // InternalBeeLangTestLanguage.g:9398:1: ( ruleSetExpression )
            {
            // InternalBeeLangTestLanguage.g:9398:1: ( ruleSetExpression )
            // InternalBeeLangTestLanguage.g:9399:1: ruleSetExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 575, rule__MultiplicativeExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9410:1: rule__MultiplicativeExpression__Group__1 : rule__MultiplicativeExpression__Group__1__Impl ;
    public final void rule__MultiplicativeExpression__Group__1() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 576) ) { return ; }
            // InternalBeeLangTestLanguage.g:9414:1: ( rule__MultiplicativeExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:9415:2: rule__MultiplicativeExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 576, rule__MultiplicativeExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9421:1: rule__MultiplicativeExpression__Group__1__Impl : ( ( rule__MultiplicativeExpression__Group_1__0 )* ) ;
    public final void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 577) ) { return ; }
            // InternalBeeLangTestLanguage.g:9425:1: ( ( ( rule__MultiplicativeExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:9426:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:9426:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:9427:1: ( rule__MultiplicativeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:9428:1: ( rule__MultiplicativeExpression__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                switch ( input.LA(1) ) {
                case 32:
                    {
                    int LA69_2 = input.LA(2);

                    if ( (synpred98_InternalBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;
                case 33:
                    {
                    int LA69_3 = input.LA(2);

                    if ( (synpred98_InternalBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;
                case 34:
                    {
                    int LA69_4 = input.LA(2);

                    if ( (synpred98_InternalBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;

                }

                switch (alt69) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:9428:2: rule__MultiplicativeExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    rule__MultiplicativeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 577, rule__MultiplicativeExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:9442:1: rule__MultiplicativeExpression__Group_1__0 : rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 ;
    public final void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 578) ) { return ; }
            // InternalBeeLangTestLanguage.g:9446:1: ( rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:9447:2: rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__MultiplicativeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 578, rule__MultiplicativeExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9454:1: rule__MultiplicativeExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 579) ) { return ; }
            // InternalBeeLangTestLanguage.g:9458:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9459:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9459:1: ( () )
            // InternalBeeLangTestLanguage.g:9460:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:9461:1: ()
            // InternalBeeLangTestLanguage.g:9463:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 579, rule__MultiplicativeExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:9473:1: rule__MultiplicativeExpression__Group_1__1 : rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 ;
    public final void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 580) ) { return ; }
            // InternalBeeLangTestLanguage.g:9477:1: ( rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:9478:2: rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__MultiplicativeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 580, rule__MultiplicativeExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9485:1: rule__MultiplicativeExpression__Group_1__1__Impl : ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 581) ) { return ; }
            // InternalBeeLangTestLanguage.g:9489:1: ( ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:9490:1: ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9490:1: ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:9491:1: ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:9492:1: ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:9492:2: rule__MultiplicativeExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 581, rule__MultiplicativeExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:9502:1: rule__MultiplicativeExpression__Group_1__2 : rule__MultiplicativeExpression__Group_1__2__Impl ;
    public final void rule__MultiplicativeExpression__Group_1__2() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 582) ) { return ; }
            // InternalBeeLangTestLanguage.g:9506:1: ( rule__MultiplicativeExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:9507:2: rule__MultiplicativeExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 582, rule__MultiplicativeExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:9513:1: rule__MultiplicativeExpression__Group_1__2__Impl : ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 583) ) { return ; }
            // InternalBeeLangTestLanguage.g:9517:1: ( ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:9518:1: ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9518:1: ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:9519:1: ( rule__MultiplicativeExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:9520:1: ( rule__MultiplicativeExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:9520:2: rule__MultiplicativeExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 583, rule__MultiplicativeExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2__Impl"


    // $ANTLR start "rule__SetExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9536:1: rule__SetExpression__Group__0 : rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1 ;
    public final void rule__SetExpression__Group__0() throws RecognitionException {
        int rule__SetExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 584) ) { return ; }
            // InternalBeeLangTestLanguage.g:9540:1: ( rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9541:2: rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SetExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 584, rule__SetExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__0"


    // $ANTLR start "rule__SetExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9548:1: rule__SetExpression__Group__0__Impl : ( ruleUnaryOrInfixExpression ) ;
    public final void rule__SetExpression__Group__0__Impl() throws RecognitionException {
        int rule__SetExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 585) ) { return ; }
            // InternalBeeLangTestLanguage.g:9552:1: ( ( ruleUnaryOrInfixExpression ) )
            // InternalBeeLangTestLanguage.g:9553:1: ( ruleUnaryOrInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:9553:1: ( ruleUnaryOrInfixExpression )
            // InternalBeeLangTestLanguage.g:9554:1: ruleUnaryOrInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 585, rule__SetExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__0__Impl"


    // $ANTLR start "rule__SetExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9565:1: rule__SetExpression__Group__1 : rule__SetExpression__Group__1__Impl ;
    public final void rule__SetExpression__Group__1() throws RecognitionException {
        int rule__SetExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 586) ) { return ; }
            // InternalBeeLangTestLanguage.g:9569:1: ( rule__SetExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:9570:2: rule__SetExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 586, rule__SetExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__1"


    // $ANTLR start "rule__SetExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9576:1: rule__SetExpression__Group__1__Impl : ( ( rule__SetExpression__Group_1__0 )* ) ;
    public final void rule__SetExpression__Group__1__Impl() throws RecognitionException {
        int rule__SetExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 587) ) { return ; }
            // InternalBeeLangTestLanguage.g:9580:1: ( ( ( rule__SetExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:9581:1: ( ( rule__SetExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:9581:1: ( ( rule__SetExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:9582:1: ( rule__SetExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:9583:1: ( rule__SetExpression__Group_1__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==77) ) {
                    int LA70_2 = input.LA(2);

                    if ( (synpred99_InternalBeeLangTestLanguage()) ) {
                        alt70=1;
                    }


                }


                switch (alt70) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:9583:2: rule__SetExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    rule__SetExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 587, rule__SetExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__1__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:9597:1: rule__SetExpression__Group_1__0 : rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1 ;
    public final void rule__SetExpression__Group_1__0() throws RecognitionException {
        int rule__SetExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 588) ) { return ; }
            // InternalBeeLangTestLanguage.g:9601:1: ( rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:9602:2: rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SetExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 588, rule__SetExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__0"


    // $ANTLR start "rule__SetExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9609:1: rule__SetExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__SetExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 589) ) { return ; }
            // InternalBeeLangTestLanguage.g:9613:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9614:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9614:1: ( () )
            // InternalBeeLangTestLanguage.g:9615:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:9616:1: ()
            // InternalBeeLangTestLanguage.g:9618:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 589, rule__SetExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:9628:1: rule__SetExpression__Group_1__1 : rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2 ;
    public final void rule__SetExpression__Group_1__1() throws RecognitionException {
        int rule__SetExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 590) ) { return ; }
            // InternalBeeLangTestLanguage.g:9632:1: ( rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:9633:2: rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__SetExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 590, rule__SetExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__1"


    // $ANTLR start "rule__SetExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9640:1: rule__SetExpression__Group_1__1__Impl : ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__SetExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 591) ) { return ; }
            // InternalBeeLangTestLanguage.g:9644:1: ( ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:9645:1: ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9645:1: ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:9646:1: ( rule__SetExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:9647:1: ( rule__SetExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:9647:2: rule__SetExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 591, rule__SetExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:9657:1: rule__SetExpression__Group_1__2 : rule__SetExpression__Group_1__2__Impl ;
    public final void rule__SetExpression__Group_1__2() throws RecognitionException {
        int rule__SetExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 592) ) { return ; }
            // InternalBeeLangTestLanguage.g:9661:1: ( rule__SetExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:9662:2: rule__SetExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 592, rule__SetExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__2"


    // $ANTLR start "rule__SetExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:9668:1: rule__SetExpression__Group_1__2__Impl : ( ( rule__SetExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__SetExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 593) ) { return ; }
            // InternalBeeLangTestLanguage.g:9672:1: ( ( ( rule__SetExpression__RightExprAssignment_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:9673:1: ( ( rule__SetExpression__RightExprAssignment_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9673:1: ( ( rule__SetExpression__RightExprAssignment_1_2 ) )
            // InternalBeeLangTestLanguage.g:9674:1: ( rule__SetExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:9675:1: ( rule__SetExpression__RightExprAssignment_1_2 )
            // InternalBeeLangTestLanguage.g:9675:2: rule__SetExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 593, rule__SetExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__2__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9691:1: rule__UnaryExpression__Group__0 : rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 ;
    public final void rule__UnaryExpression__Group__0() throws RecognitionException {
        int rule__UnaryExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 594) ) { return ; }
            // InternalBeeLangTestLanguage.g:9695:1: ( rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9696:2: rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__UnaryExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 594, rule__UnaryExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0"


    // $ANTLR start "rule__UnaryExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9703:1: rule__UnaryExpression__Group__0__Impl : ( () ) ;
    public final void rule__UnaryExpression__Group__0__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 595) ) { return ; }
            // InternalBeeLangTestLanguage.g:9707:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9708:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9708:1: ( () )
            // InternalBeeLangTestLanguage.g:9709:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:9710:1: ()
            // InternalBeeLangTestLanguage.g:9712:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 595, rule__UnaryExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9722:1: rule__UnaryExpression__Group__1 : rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 ;
    public final void rule__UnaryExpression__Group__1() throws RecognitionException {
        int rule__UnaryExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 596) ) { return ; }
            // InternalBeeLangTestLanguage.g:9726:1: ( rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:9727:2: rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__UnaryExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 596, rule__UnaryExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1"


    // $ANTLR start "rule__UnaryExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9734:1: rule__UnaryExpression__Group__1__Impl : ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) ) ;
    public final void rule__UnaryExpression__Group__1__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 597) ) { return ; }
            // InternalBeeLangTestLanguage.g:9738:1: ( ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:9739:1: ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9739:1: ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:9740:1: ( rule__UnaryExpression__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:9741:1: ( rule__UnaryExpression__FunctionNameAssignment_1 )
            // InternalBeeLangTestLanguage.g:9741:2: rule__UnaryExpression__FunctionNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 597, rule__UnaryExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__2"
    // InternalBeeLangTestLanguage.g:9751:1: rule__UnaryExpression__Group__2 : rule__UnaryExpression__Group__2__Impl ;
    public final void rule__UnaryExpression__Group__2() throws RecognitionException {
        int rule__UnaryExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 598) ) { return ; }
            // InternalBeeLangTestLanguage.g:9755:1: ( rule__UnaryExpression__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:9756:2: rule__UnaryExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 598, rule__UnaryExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2"


    // $ANTLR start "rule__UnaryExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:9762:1: rule__UnaryExpression__Group__2__Impl : ( ( rule__UnaryExpression__ExprAssignment_2 ) ) ;
    public final void rule__UnaryExpression__Group__2__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 599) ) { return ; }
            // InternalBeeLangTestLanguage.g:9766:1: ( ( ( rule__UnaryExpression__ExprAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:9767:1: ( ( rule__UnaryExpression__ExprAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9767:1: ( ( rule__UnaryExpression__ExprAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:9768:1: ( rule__UnaryExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:9769:1: ( rule__UnaryExpression__ExprAssignment_2 )
            // InternalBeeLangTestLanguage.g:9769:2: rule__UnaryExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 599, rule__UnaryExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2__Impl"


    // $ANTLR start "rule__PreopExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9785:1: rule__PreopExpression__Group__0 : rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1 ;
    public final void rule__PreopExpression__Group__0() throws RecognitionException {
        int rule__PreopExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 600) ) { return ; }
            // InternalBeeLangTestLanguage.g:9789:1: ( rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9790:2: rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__PreopExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 600, rule__PreopExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__0"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser8 extends InternalBeeLangTestLanguageParser7 {

        InternalBeeLangTestLanguageParser8(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser8(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__PreopExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9797:1: rule__PreopExpression__Group__0__Impl : ( () ) ;
    public final void rule__PreopExpression__Group__0__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 601) ) { return ; }
            // InternalBeeLangTestLanguage.g:9801:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9802:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9802:1: ( () )
            // InternalBeeLangTestLanguage.g:9803:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:9804:1: ()
            // InternalBeeLangTestLanguage.g:9806:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 601, rule__PreopExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__0__Impl"


    // $ANTLR start "rule__PreopExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9816:1: rule__PreopExpression__Group__1 : rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2 ;
    public final void rule__PreopExpression__Group__1() throws RecognitionException {
        int rule__PreopExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 602) ) { return ; }
            // InternalBeeLangTestLanguage.g:9820:1: ( rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:9821:2: rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__PreopExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 602, rule__PreopExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__1"


    // $ANTLR start "rule__PreopExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9828:1: rule__PreopExpression__Group__1__Impl : ( ( rule__PreopExpression__FunctionNameAssignment_1 ) ) ;
    public final void rule__PreopExpression__Group__1__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 603) ) { return ; }
            // InternalBeeLangTestLanguage.g:9832:1: ( ( ( rule__PreopExpression__FunctionNameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:9833:1: ( ( rule__PreopExpression__FunctionNameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9833:1: ( ( rule__PreopExpression__FunctionNameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:9834:1: ( rule__PreopExpression__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:9835:1: ( rule__PreopExpression__FunctionNameAssignment_1 )
            // InternalBeeLangTestLanguage.g:9835:2: rule__PreopExpression__FunctionNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 603, rule__PreopExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__1__Impl"


    // $ANTLR start "rule__PreopExpression__Group__2"
    // InternalBeeLangTestLanguage.g:9845:1: rule__PreopExpression__Group__2 : rule__PreopExpression__Group__2__Impl ;
    public final void rule__PreopExpression__Group__2() throws RecognitionException {
        int rule__PreopExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 604) ) { return ; }
            // InternalBeeLangTestLanguage.g:9849:1: ( rule__PreopExpression__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:9850:2: rule__PreopExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 604, rule__PreopExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__2"


    // $ANTLR start "rule__PreopExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:9856:1: rule__PreopExpression__Group__2__Impl : ( ( rule__PreopExpression__ExprAssignment_2 ) ) ;
    public final void rule__PreopExpression__Group__2__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 605) ) { return ; }
            // InternalBeeLangTestLanguage.g:9860:1: ( ( ( rule__PreopExpression__ExprAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:9861:1: ( ( rule__PreopExpression__ExprAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:9861:1: ( ( rule__PreopExpression__ExprAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:9862:1: ( rule__PreopExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:9863:1: ( rule__PreopExpression__ExprAssignment_2 )
            // InternalBeeLangTestLanguage.g:9863:2: rule__PreopExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 605, rule__PreopExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__2__Impl"


    // $ANTLR start "rule__PostopExpression__Group__0"
    // InternalBeeLangTestLanguage.g:9879:1: rule__PostopExpression__Group__0 : rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1 ;
    public final void rule__PostopExpression__Group__0() throws RecognitionException {
        int rule__PostopExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 606) ) { return ; }
            // InternalBeeLangTestLanguage.g:9883:1: ( rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:9884:2: rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__PostopExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 606, rule__PostopExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__0"


    // $ANTLR start "rule__PostopExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:9891:1: rule__PostopExpression__Group__0__Impl : ( ruleInfixExpression ) ;
    public final void rule__PostopExpression__Group__0__Impl() throws RecognitionException {
        int rule__PostopExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 607) ) { return ; }
            // InternalBeeLangTestLanguage.g:9895:1: ( ( ruleInfixExpression ) )
            // InternalBeeLangTestLanguage.g:9896:1: ( ruleInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:9896:1: ( ruleInfixExpression )
            // InternalBeeLangTestLanguage.g:9897:1: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 607, rule__PostopExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__0__Impl"


    // $ANTLR start "rule__PostopExpression__Group__1"
    // InternalBeeLangTestLanguage.g:9908:1: rule__PostopExpression__Group__1 : rule__PostopExpression__Group__1__Impl ;
    public final void rule__PostopExpression__Group__1() throws RecognitionException {
        int rule__PostopExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 608) ) { return ; }
            // InternalBeeLangTestLanguage.g:9912:1: ( rule__PostopExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:9913:2: rule__PostopExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 608, rule__PostopExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__1"


    // $ANTLR start "rule__PostopExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:9919:1: rule__PostopExpression__Group__1__Impl : ( ( rule__PostopExpression__Group_1__0 )? ) ;
    public final void rule__PostopExpression__Group__1__Impl() throws RecognitionException {
        int rule__PostopExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 609) ) { return ; }
            // InternalBeeLangTestLanguage.g:9923:1: ( ( ( rule__PostopExpression__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:9924:1: ( ( rule__PostopExpression__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:9924:1: ( ( rule__PostopExpression__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:9925:1: ( rule__PostopExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:9926:1: ( rule__PostopExpression__Group_1__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==37) ) {
                int LA71_1 = input.LA(2);

                if ( (synpred100_InternalBeeLangTestLanguage()) ) {
                    alt71=1;
                }
            }
            else if ( (LA71_0==36) ) {
                int LA71_2 = input.LA(2);

                if ( (synpred100_InternalBeeLangTestLanguage()) ) {
                    alt71=1;
                }
            }
            switch (alt71) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:9926:2: rule__PostopExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__PostopExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 609, rule__PostopExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__1__Impl"


    // $ANTLR start "rule__PostopExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:9940:1: rule__PostopExpression__Group_1__0 : rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1 ;
    public final void rule__PostopExpression__Group_1__0() throws RecognitionException {
        int rule__PostopExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 610) ) { return ; }
            // InternalBeeLangTestLanguage.g:9944:1: ( rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:9945:2: rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__PostopExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 610, rule__PostopExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__0"


    // $ANTLR start "rule__PostopExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:9952:1: rule__PostopExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__PostopExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__PostopExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 611) ) { return ; }
            // InternalBeeLangTestLanguage.g:9956:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:9957:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:9957:1: ( () )
            // InternalBeeLangTestLanguage.g:9958:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:9959:1: ()
            // InternalBeeLangTestLanguage.g:9961:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 611, rule__PostopExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__0__Impl"


    // $ANTLR start "rule__PostopExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:9971:1: rule__PostopExpression__Group_1__1 : rule__PostopExpression__Group_1__1__Impl ;
    public final void rule__PostopExpression__Group_1__1() throws RecognitionException {
        int rule__PostopExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 612) ) { return ; }
            // InternalBeeLangTestLanguage.g:9975:1: ( rule__PostopExpression__Group_1__1__Impl )
            // InternalBeeLangTestLanguage.g:9976:2: rule__PostopExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 612, rule__PostopExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__1"


    // $ANTLR start "rule__PostopExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:9982:1: rule__PostopExpression__Group_1__1__Impl : ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__PostopExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__PostopExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 613) ) { return ; }
            // InternalBeeLangTestLanguage.g:9986:1: ( ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:9987:1: ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:9987:1: ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:9988:1: ( rule__PostopExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:9989:1: ( rule__PostopExpression__FunctionNameAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:9989:2: rule__PostopExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 613, rule__PostopExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group__0"
    // InternalBeeLangTestLanguage.g:10003:1: rule__InfixExpression__Group__0 : rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1 ;
    public final void rule__InfixExpression__Group__0() throws RecognitionException {
        int rule__InfixExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 614) ) { return ; }
            // InternalBeeLangTestLanguage.g:10007:1: ( rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:10008:2: rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__InfixExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 614, rule__InfixExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__0"


    // $ANTLR start "rule__InfixExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10015:1: rule__InfixExpression__Group__0__Impl : ( ruleCallExpression ) ;
    public final void rule__InfixExpression__Group__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 615) ) { return ; }
            // InternalBeeLangTestLanguage.g:10019:1: ( ( ruleCallExpression ) )
            // InternalBeeLangTestLanguage.g:10020:1: ( ruleCallExpression )
            {
            // InternalBeeLangTestLanguage.g:10020:1: ( ruleCallExpression )
            // InternalBeeLangTestLanguage.g:10021:1: ruleCallExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 615, rule__InfixExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group__1"
    // InternalBeeLangTestLanguage.g:10032:1: rule__InfixExpression__Group__1 : rule__InfixExpression__Group__1__Impl ;
    public final void rule__InfixExpression__Group__1() throws RecognitionException {
        int rule__InfixExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 616) ) { return ; }
            // InternalBeeLangTestLanguage.g:10036:1: ( rule__InfixExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:10037:2: rule__InfixExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 616, rule__InfixExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__1"


    // $ANTLR start "rule__InfixExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10043:1: rule__InfixExpression__Group__1__Impl : ( ( rule__InfixExpression__Alternatives_1 )* ) ;
    public final void rule__InfixExpression__Group__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 617) ) { return ; }
            // InternalBeeLangTestLanguage.g:10047:1: ( ( ( rule__InfixExpression__Alternatives_1 )* ) )
            // InternalBeeLangTestLanguage.g:10048:1: ( ( rule__InfixExpression__Alternatives_1 )* )
            {
            // InternalBeeLangTestLanguage.g:10048:1: ( ( rule__InfixExpression__Alternatives_1 )* )
            // InternalBeeLangTestLanguage.g:10049:1: ( rule__InfixExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:10050:1: ( rule__InfixExpression__Alternatives_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==66) ) {
                    int LA72_2 = input.LA(2);

                    if ( (synpred101_InternalBeeLangTestLanguage()) ) {
                        alt72=1;
                    }


                }
                else if ( (LA72_0==67) ) {
                    int LA72_3 = input.LA(2);

                    if ( (synpred101_InternalBeeLangTestLanguage()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:10050:2: rule__InfixExpression__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    rule__InfixExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 617, rule__InfixExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__0"
    // InternalBeeLangTestLanguage.g:10064:1: rule__InfixExpression__Group_1_0__0 : rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1 ;
    public final void rule__InfixExpression__Group_1_0__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 618) ) { return ; }
            // InternalBeeLangTestLanguage.g:10068:1: ( rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1 )
            // InternalBeeLangTestLanguage.g:10069:2: rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__InfixExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 618, rule__InfixExpression__Group_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__0"


    // $ANTLR start "rule__InfixExpression__Group_1_0__0__Impl"
    // InternalBeeLangTestLanguage.g:10076:1: rule__InfixExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_0__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 619) ) { return ; }
            // InternalBeeLangTestLanguage.g:10080:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10081:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10081:1: ( () )
            // InternalBeeLangTestLanguage.g:10082:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:10083:1: ()
            // InternalBeeLangTestLanguage.g:10085:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 619, rule__InfixExpression__Group_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__1"
    // InternalBeeLangTestLanguage.g:10095:1: rule__InfixExpression__Group_1_0__1 : rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2 ;
    public final void rule__InfixExpression__Group_1_0__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 620) ) { return ; }
            // InternalBeeLangTestLanguage.g:10099:1: ( rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2 )
            // InternalBeeLangTestLanguage.g:10100:2: rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InfixExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 620, rule__InfixExpression__Group_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__1"


    // $ANTLR start "rule__InfixExpression__Group_1_0__1__Impl"
    // InternalBeeLangTestLanguage.g:10107:1: rule__InfixExpression__Group_1_0__1__Impl : ( '.' ) ;
    public final void rule__InfixExpression__Group_1_0__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 621) ) { return ; }
            // InternalBeeLangTestLanguage.g:10111:1: ( ( '.' ) )
            // InternalBeeLangTestLanguage.g:10112:1: ( '.' )
            {
            // InternalBeeLangTestLanguage.g:10112:1: ( '.' )
            // InternalBeeLangTestLanguage.g:10113:1: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 621, rule__InfixExpression__Group_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__2"
    // InternalBeeLangTestLanguage.g:10126:1: rule__InfixExpression__Group_1_0__2 : rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3 ;
    public final void rule__InfixExpression__Group_1_0__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 622) ) { return ; }
            // InternalBeeLangTestLanguage.g:10130:1: ( rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3 )
            // InternalBeeLangTestLanguage.g:10131:2: rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__InfixExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 622, rule__InfixExpression__Group_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__2"


    // $ANTLR start "rule__InfixExpression__Group_1_0__2__Impl"
    // InternalBeeLangTestLanguage.g:10138:1: rule__InfixExpression__Group_1_0__2__Impl : ( ( rule__InfixExpression__NameAssignment_1_0_2 ) ) ;
    public final void rule__InfixExpression__Group_1_0__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 623) ) { return ; }
            // InternalBeeLangTestLanguage.g:10142:1: ( ( ( rule__InfixExpression__NameAssignment_1_0_2 ) ) )
            // InternalBeeLangTestLanguage.g:10143:1: ( ( rule__InfixExpression__NameAssignment_1_0_2 ) )
            {
            // InternalBeeLangTestLanguage.g:10143:1: ( ( rule__InfixExpression__NameAssignment_1_0_2 ) )
            // InternalBeeLangTestLanguage.g:10144:1: ( rule__InfixExpression__NameAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); 
            }
            // InternalBeeLangTestLanguage.g:10145:1: ( rule__InfixExpression__NameAssignment_1_0_2 )
            // InternalBeeLangTestLanguage.g:10145:2: rule__InfixExpression__NameAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__NameAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 623, rule__InfixExpression__Group_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__3"
    // InternalBeeLangTestLanguage.g:10155:1: rule__InfixExpression__Group_1_0__3 : rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4 ;
    public final void rule__InfixExpression__Group_1_0__3() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 624) ) { return ; }
            // InternalBeeLangTestLanguage.g:10159:1: ( rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4 )
            // InternalBeeLangTestLanguage.g:10160:2: rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__InfixExpression__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 624, rule__InfixExpression__Group_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__3"


    // $ANTLR start "rule__InfixExpression__Group_1_0__3__Impl"
    // InternalBeeLangTestLanguage.g:10167:1: rule__InfixExpression__Group_1_0__3__Impl : ( '(' ) ;
    public final void rule__InfixExpression__Group_1_0__3__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 625) ) { return ; }
            // InternalBeeLangTestLanguage.g:10171:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:10172:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:10172:1: ( '(' )
            // InternalBeeLangTestLanguage.g:10173:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 625, rule__InfixExpression__Group_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__3__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__4"
    // InternalBeeLangTestLanguage.g:10186:1: rule__InfixExpression__Group_1_0__4 : rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5 ;
    public final void rule__InfixExpression__Group_1_0__4() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 626) ) { return ; }
            // InternalBeeLangTestLanguage.g:10190:1: ( rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5 )
            // InternalBeeLangTestLanguage.g:10191:2: rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__InfixExpression__Group_1_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 626, rule__InfixExpression__Group_1_0__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__4"


    // $ANTLR start "rule__InfixExpression__Group_1_0__4__Impl"
    // InternalBeeLangTestLanguage.g:10198:1: rule__InfixExpression__Group_1_0__4__Impl : ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? ) ;
    public final void rule__InfixExpression__Group_1_0__4__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 627) ) { return ; }
            // InternalBeeLangTestLanguage.g:10202:1: ( ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? ) )
            // InternalBeeLangTestLanguage.g:10203:1: ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? )
            {
            // InternalBeeLangTestLanguage.g:10203:1: ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? )
            // InternalBeeLangTestLanguage.g:10204:1: ( rule__InfixExpression__ParameterListAssignment_1_0_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); 
            }
            // InternalBeeLangTestLanguage.g:10205:1: ( rule__InfixExpression__ParameterListAssignment_1_0_4 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_STRING||LA73_0==RULE_ID||LA73_0==13||LA73_0==28||LA73_0==31||(LA73_0>=35 && LA73_0<=44)||LA73_0==60||LA73_0==63||LA73_0==69||(LA73_0>=71 && LA73_0<=72)||LA73_0==75) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10205:2: rule__InfixExpression__ParameterListAssignment_1_0_4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__ParameterListAssignment_1_0_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 627, rule__InfixExpression__Group_1_0__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__4__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__5"
    // InternalBeeLangTestLanguage.g:10215:1: rule__InfixExpression__Group_1_0__5 : rule__InfixExpression__Group_1_0__5__Impl ;
    public final void rule__InfixExpression__Group_1_0__5() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 628) ) { return ; }
            // InternalBeeLangTestLanguage.g:10219:1: ( rule__InfixExpression__Group_1_0__5__Impl )
            // InternalBeeLangTestLanguage.g:10220:2: rule__InfixExpression__Group_1_0__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 628, rule__InfixExpression__Group_1_0__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__5"


    // $ANTLR start "rule__InfixExpression__Group_1_0__5__Impl"
    // InternalBeeLangTestLanguage.g:10226:1: rule__InfixExpression__Group_1_0__5__Impl : ( ')' ) ;
    public final void rule__InfixExpression__Group_1_0__5__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 629) ) { return ; }
            // InternalBeeLangTestLanguage.g:10230:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:10231:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:10231:1: ( ')' )
            // InternalBeeLangTestLanguage.g:10232:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 629, rule__InfixExpression__Group_1_0__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__5__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__0"
    // InternalBeeLangTestLanguage.g:10257:1: rule__InfixExpression__Group_1_1__0 : rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1 ;
    public final void rule__InfixExpression__Group_1_1__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 630) ) { return ; }
            // InternalBeeLangTestLanguage.g:10261:1: ( rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1 )
            // InternalBeeLangTestLanguage.g:10262:2: rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__InfixExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 630, rule__InfixExpression__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__0"


    // $ANTLR start "rule__InfixExpression__Group_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:10269:1: rule__InfixExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_1__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 631) ) { return ; }
            // InternalBeeLangTestLanguage.g:10273:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10274:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10274:1: ( () )
            // InternalBeeLangTestLanguage.g:10275:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:10276:1: ()
            // InternalBeeLangTestLanguage.g:10278:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 631, rule__InfixExpression__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__1"
    // InternalBeeLangTestLanguage.g:10288:1: rule__InfixExpression__Group_1_1__1 : rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2 ;
    public final void rule__InfixExpression__Group_1_1__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 632) ) { return ; }
            // InternalBeeLangTestLanguage.g:10292:1: ( rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2 )
            // InternalBeeLangTestLanguage.g:10293:2: rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__InfixExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 632, rule__InfixExpression__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__1"


    // $ANTLR start "rule__InfixExpression__Group_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:10300:1: rule__InfixExpression__Group_1_1__1__Impl : ( '[' ) ;
    public final void rule__InfixExpression__Group_1_1__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 633) ) { return ; }
            // InternalBeeLangTestLanguage.g:10304:1: ( ( '[' ) )
            // InternalBeeLangTestLanguage.g:10305:1: ( '[' )
            {
            // InternalBeeLangTestLanguage.g:10305:1: ( '[' )
            // InternalBeeLangTestLanguage.g:10306:1: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 633, rule__InfixExpression__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__2"
    // InternalBeeLangTestLanguage.g:10319:1: rule__InfixExpression__Group_1_1__2 : rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3 ;
    public final void rule__InfixExpression__Group_1_1__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 634) ) { return ; }
            // InternalBeeLangTestLanguage.g:10323:1: ( rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3 )
            // InternalBeeLangTestLanguage.g:10324:2: rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__InfixExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 634, rule__InfixExpression__Group_1_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__2"


    // $ANTLR start "rule__InfixExpression__Group_1_1__2__Impl"
    // InternalBeeLangTestLanguage.g:10331:1: rule__InfixExpression__Group_1_1__2__Impl : ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) ) ;
    public final void rule__InfixExpression__Group_1_1__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 635) ) { return ; }
            // InternalBeeLangTestLanguage.g:10335:1: ( ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) ) )
            // InternalBeeLangTestLanguage.g:10336:1: ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) )
            {
            // InternalBeeLangTestLanguage.g:10336:1: ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) )
            // InternalBeeLangTestLanguage.g:10337:1: ( rule__InfixExpression__IndexExprAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:10338:1: ( rule__InfixExpression__IndexExprAssignment_1_1_2 )
            // InternalBeeLangTestLanguage.g:10338:2: rule__InfixExpression__IndexExprAssignment_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__IndexExprAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 635, rule__InfixExpression__Group_1_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__3"
    // InternalBeeLangTestLanguage.g:10348:1: rule__InfixExpression__Group_1_1__3 : rule__InfixExpression__Group_1_1__3__Impl ;
    public final void rule__InfixExpression__Group_1_1__3() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 636) ) { return ; }
            // InternalBeeLangTestLanguage.g:10352:1: ( rule__InfixExpression__Group_1_1__3__Impl )
            // InternalBeeLangTestLanguage.g:10353:2: rule__InfixExpression__Group_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 636, rule__InfixExpression__Group_1_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__3"


    // $ANTLR start "rule__InfixExpression__Group_1_1__3__Impl"
    // InternalBeeLangTestLanguage.g:10359:1: rule__InfixExpression__Group_1_1__3__Impl : ( ']' ) ;
    public final void rule__InfixExpression__Group_1_1__3__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 637) ) { return ; }
            // InternalBeeLangTestLanguage.g:10363:1: ( ( ']' ) )
            // InternalBeeLangTestLanguage.g:10364:1: ( ']' )
            {
            // InternalBeeLangTestLanguage.g:10364:1: ( ']' )
            // InternalBeeLangTestLanguage.g:10365:1: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); 
            }
            match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 637, rule__InfixExpression__Group_1_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__0"
    // InternalBeeLangTestLanguage.g:10386:1: rule__InfixExpression__Group_1_2__0 : rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1 ;
    public final void rule__InfixExpression__Group_1_2__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 638) ) { return ; }
            // InternalBeeLangTestLanguage.g:10390:1: ( rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1 )
            // InternalBeeLangTestLanguage.g:10391:2: rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__InfixExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 638, rule__InfixExpression__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__0"


    // $ANTLR start "rule__InfixExpression__Group_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:10398:1: rule__InfixExpression__Group_1_2__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_2__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 639) ) { return ; }
            // InternalBeeLangTestLanguage.g:10402:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10403:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10403:1: ( () )
            // InternalBeeLangTestLanguage.g:10404:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:10405:1: ()
            // InternalBeeLangTestLanguage.g:10407:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 639, rule__InfixExpression__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__1"
    // InternalBeeLangTestLanguage.g:10417:1: rule__InfixExpression__Group_1_2__1 : rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2 ;
    public final void rule__InfixExpression__Group_1_2__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 640) ) { return ; }
            // InternalBeeLangTestLanguage.g:10421:1: ( rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2 )
            // InternalBeeLangTestLanguage.g:10422:2: rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InfixExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 640, rule__InfixExpression__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__1"


    // $ANTLR start "rule__InfixExpression__Group_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:10429:1: rule__InfixExpression__Group_1_2__1__Impl : ( '.' ) ;
    public final void rule__InfixExpression__Group_1_2__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 641) ) { return ; }
            // InternalBeeLangTestLanguage.g:10433:1: ( ( '.' ) )
            // InternalBeeLangTestLanguage.g:10434:1: ( '.' )
            {
            // InternalBeeLangTestLanguage.g:10434:1: ( '.' )
            // InternalBeeLangTestLanguage.g:10435:1: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 641, rule__InfixExpression__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__2"
    // InternalBeeLangTestLanguage.g:10448:1: rule__InfixExpression__Group_1_2__2 : rule__InfixExpression__Group_1_2__2__Impl ;
    public final void rule__InfixExpression__Group_1_2__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 642) ) { return ; }
            // InternalBeeLangTestLanguage.g:10452:1: ( rule__InfixExpression__Group_1_2__2__Impl )
            // InternalBeeLangTestLanguage.g:10453:2: rule__InfixExpression__Group_1_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 642, rule__InfixExpression__Group_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__2"


    // $ANTLR start "rule__InfixExpression__Group_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:10459:1: rule__InfixExpression__Group_1_2__2__Impl : ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) ) ;
    public final void rule__InfixExpression__Group_1_2__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 643) ) { return ; }
            // InternalBeeLangTestLanguage.g:10463:1: ( ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:10464:1: ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:10464:1: ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:10465:1: ( rule__InfixExpression__FeatureNameAssignment_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:10466:1: ( rule__InfixExpression__FeatureNameAssignment_1_2_2 )
            // InternalBeeLangTestLanguage.g:10466:2: rule__InfixExpression__FeatureNameAssignment_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__FeatureNameAssignment_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 643, rule__InfixExpression__Group_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__CallExpression__Group__0"
    // InternalBeeLangTestLanguage.g:10482:1: rule__CallExpression__Group__0 : rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1 ;
    public final void rule__CallExpression__Group__0() throws RecognitionException {
        int rule__CallExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 644) ) { return ; }
            // InternalBeeLangTestLanguage.g:10486:1: ( rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:10487:2: rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__CallExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 644, rule__CallExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__0"


    // $ANTLR start "rule__CallExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10494:1: rule__CallExpression__Group__0__Impl : ( rulePrimaryExpression ) ;
    public final void rule__CallExpression__Group__0__Impl() throws RecognitionException {
        int rule__CallExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 645) ) { return ; }
            // InternalBeeLangTestLanguage.g:10498:1: ( ( rulePrimaryExpression ) )
            // InternalBeeLangTestLanguage.g:10499:1: ( rulePrimaryExpression )
            {
            // InternalBeeLangTestLanguage.g:10499:1: ( rulePrimaryExpression )
            // InternalBeeLangTestLanguage.g:10500:1: rulePrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 645, rule__CallExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__0__Impl"


    // $ANTLR start "rule__CallExpression__Group__1"
    // InternalBeeLangTestLanguage.g:10511:1: rule__CallExpression__Group__1 : rule__CallExpression__Group__1__Impl ;
    public final void rule__CallExpression__Group__1() throws RecognitionException {
        int rule__CallExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 646) ) { return ; }
            // InternalBeeLangTestLanguage.g:10515:1: ( rule__CallExpression__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:10516:2: rule__CallExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 646, rule__CallExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__1"


    // $ANTLR start "rule__CallExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10522:1: rule__CallExpression__Group__1__Impl : ( ( rule__CallExpression__Group_1__0 )* ) ;
    public final void rule__CallExpression__Group__1__Impl() throws RecognitionException {
        int rule__CallExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 647) ) { return ; }
            // InternalBeeLangTestLanguage.g:10526:1: ( ( ( rule__CallExpression__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:10527:1: ( ( rule__CallExpression__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:10527:1: ( ( rule__CallExpression__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:10528:1: ( rule__CallExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:10529:1: ( rule__CallExpression__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==60) ) {
                    int LA74_2 = input.LA(2);

                    if ( (synpred103_InternalBeeLangTestLanguage()) ) {
                        alt74=1;
                    }


                }


                switch (alt74) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:10529:2: rule__CallExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    rule__CallExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 647, rule__CallExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__1__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:10543:1: rule__CallExpression__Group_1__0 : rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1 ;
    public final void rule__CallExpression__Group_1__0() throws RecognitionException {
        int rule__CallExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 648) ) { return ; }
            // InternalBeeLangTestLanguage.g:10547:1: ( rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:10548:2: rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__CallExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 648, rule__CallExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__0"


    // $ANTLR start "rule__CallExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:10555:1: rule__CallExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__CallExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 649) ) { return ; }
            // InternalBeeLangTestLanguage.g:10559:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:10560:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:10560:1: ( () )
            // InternalBeeLangTestLanguage.g:10561:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:10562:1: ()
            // InternalBeeLangTestLanguage.g:10564:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 649, rule__CallExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__0__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:10574:1: rule__CallExpression__Group_1__1 : rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2 ;
    public final void rule__CallExpression__Group_1__1() throws RecognitionException {
        int rule__CallExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 650) ) { return ; }
            // InternalBeeLangTestLanguage.g:10578:1: ( rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:10579:2: rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__CallExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 650, rule__CallExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__1"


    // $ANTLR start "rule__CallExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:10586:1: rule__CallExpression__Group_1__1__Impl : ( '(' ) ;
    public final void rule__CallExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 651) ) { return ; }
            // InternalBeeLangTestLanguage.g:10590:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:10591:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:10591:1: ( '(' )
            // InternalBeeLangTestLanguage.g:10592:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 651, rule__CallExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__1__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:10605:1: rule__CallExpression__Group_1__2 : rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3 ;
    public final void rule__CallExpression__Group_1__2() throws RecognitionException {
        int rule__CallExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 652) ) { return ; }
            // InternalBeeLangTestLanguage.g:10609:1: ( rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3 )
            // InternalBeeLangTestLanguage.g:10610:2: rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__CallExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 652, rule__CallExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__2"


    // $ANTLR start "rule__CallExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:10617:1: rule__CallExpression__Group_1__2__Impl : ( ( rule__CallExpression__ParameterListAssignment_1_2 )? ) ;
    public final void rule__CallExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 653) ) { return ; }
            // InternalBeeLangTestLanguage.g:10621:1: ( ( ( rule__CallExpression__ParameterListAssignment_1_2 )? ) )
            // InternalBeeLangTestLanguage.g:10622:1: ( ( rule__CallExpression__ParameterListAssignment_1_2 )? )
            {
            // InternalBeeLangTestLanguage.g:10622:1: ( ( rule__CallExpression__ParameterListAssignment_1_2 )? )
            // InternalBeeLangTestLanguage.g:10623:1: ( rule__CallExpression__ParameterListAssignment_1_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:10624:1: ( rule__CallExpression__ParameterListAssignment_1_2 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_STRING||LA75_0==RULE_ID||LA75_0==13||LA75_0==28||LA75_0==31||(LA75_0>=35 && LA75_0<=44)||LA75_0==60||LA75_0==63||LA75_0==69||(LA75_0>=71 && LA75_0<=72)||LA75_0==75) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10624:2: rule__CallExpression__ParameterListAssignment_1_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CallExpression__ParameterListAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 653, rule__CallExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__2__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__3"
    // InternalBeeLangTestLanguage.g:10634:1: rule__CallExpression__Group_1__3 : rule__CallExpression__Group_1__3__Impl ;
    public final void rule__CallExpression__Group_1__3() throws RecognitionException {
        int rule__CallExpression__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 654) ) { return ; }
            // InternalBeeLangTestLanguage.g:10638:1: ( rule__CallExpression__Group_1__3__Impl )
            // InternalBeeLangTestLanguage.g:10639:2: rule__CallExpression__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 654, rule__CallExpression__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__3"


    // $ANTLR start "rule__CallExpression__Group_1__3__Impl"
    // InternalBeeLangTestLanguage.g:10645:1: rule__CallExpression__Group_1__3__Impl : ( ')' ) ;
    public final void rule__CallExpression__Group_1__3__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 655) ) { return ; }
            // InternalBeeLangTestLanguage.g:10649:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:10650:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:10650:1: ( ')' )
            // InternalBeeLangTestLanguage.g:10651:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 655, rule__CallExpression__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__3__Impl"


    // $ANTLR start "rule__WithExpression__Group__0"
    // InternalBeeLangTestLanguage.g:10672:1: rule__WithExpression__Group__0 : rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1 ;
    public final void rule__WithExpression__Group__0() throws RecognitionException {
        int rule__WithExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 656) ) { return ; }
            // InternalBeeLangTestLanguage.g:10676:1: ( rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:10677:2: rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__WithExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 656, rule__WithExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__0"


    // $ANTLR start "rule__WithExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:10684:1: rule__WithExpression__Group__0__Impl : ( 'with' ) ;
    public final void rule__WithExpression__Group__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 657) ) { return ; }
            // InternalBeeLangTestLanguage.g:10688:1: ( ( 'with' ) )
            // InternalBeeLangTestLanguage.g:10689:1: ( 'with' )
            {
            // InternalBeeLangTestLanguage.g:10689:1: ( 'with' )
            // InternalBeeLangTestLanguage.g:10690:1: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getWithKeyword_0()); 
            }
            match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 657, rule__WithExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__0__Impl"


    // $ANTLR start "rule__WithExpression__Group__1"
    // InternalBeeLangTestLanguage.g:10703:1: rule__WithExpression__Group__1 : rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2 ;
    public final void rule__WithExpression__Group__1() throws RecognitionException {
        int rule__WithExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 658) ) { return ; }
            // InternalBeeLangTestLanguage.g:10707:1: ( rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:10708:2: rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__WithExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 658, rule__WithExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__1"


    // $ANTLR start "rule__WithExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:10715:1: rule__WithExpression__Group__1__Impl : ( ( rule__WithExpression__Group_1__0 )? ) ;
    public final void rule__WithExpression__Group__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 659) ) { return ; }
            // InternalBeeLangTestLanguage.g:10719:1: ( ( ( rule__WithExpression__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:10720:1: ( ( rule__WithExpression__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:10720:1: ( ( rule__WithExpression__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:10721:1: ( rule__WithExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:10722:1: ( rule__WithExpression__Group_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_ID) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:10722:2: rule__WithExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 659, rule__WithExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__1__Impl"


    // $ANTLR start "rule__WithExpression__Group__2"
    // InternalBeeLangTestLanguage.g:10732:1: rule__WithExpression__Group__2 : rule__WithExpression__Group__2__Impl ;
    public final void rule__WithExpression__Group__2() throws RecognitionException {
        int rule__WithExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 660) ) { return ; }
            // InternalBeeLangTestLanguage.g:10736:1: ( rule__WithExpression__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:10737:2: rule__WithExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 660, rule__WithExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__2"


    // $ANTLR start "rule__WithExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:10743:1: rule__WithExpression__Group__2__Impl : ( ( rule__WithExpression__Alternatives_2 ) ) ;
    public final void rule__WithExpression__Group__2__Impl() throws RecognitionException {
        int rule__WithExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 661) ) { return ; }
            // InternalBeeLangTestLanguage.g:10747:1: ( ( ( rule__WithExpression__Alternatives_2 ) ) )
            // InternalBeeLangTestLanguage.g:10748:1: ( ( rule__WithExpression__Alternatives_2 ) )
            {
            // InternalBeeLangTestLanguage.g:10748:1: ( ( rule__WithExpression__Alternatives_2 ) )
            // InternalBeeLangTestLanguage.g:10749:1: ( rule__WithExpression__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getAlternatives_2()); 
            }
            // InternalBeeLangTestLanguage.g:10750:1: ( rule__WithExpression__Alternatives_2 )
            // InternalBeeLangTestLanguage.g:10750:2: rule__WithExpression__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 661, rule__WithExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__2__Impl"


    // $ANTLR start "rule__WithExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:10766:1: rule__WithExpression__Group_1__0 : rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1 ;
    public final void rule__WithExpression__Group_1__0() throws RecognitionException {
        int rule__WithExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 662) ) { return ; }
            // InternalBeeLangTestLanguage.g:10770:1: ( rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:10771:2: rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__WithExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 662, rule__WithExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__0"


    // $ANTLR start "rule__WithExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:10778:1: rule__WithExpression__Group_1__0__Impl : ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) ) ;
    public final void rule__WithExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 663) ) { return ; }
            // InternalBeeLangTestLanguage.g:10782:1: ( ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:10783:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:10783:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) )
            // InternalBeeLangTestLanguage.g:10784:1: ( rule__WithExpression__ReferencedAdviceAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:10785:1: ( rule__WithExpression__ReferencedAdviceAssignment_1_0 )
            // InternalBeeLangTestLanguage.g:10785:2: rule__WithExpression__ReferencedAdviceAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__ReferencedAdviceAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 663, rule__WithExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:10795:1: rule__WithExpression__Group_1__1 : rule__WithExpression__Group_1__1__Impl ;
    public final void rule__WithExpression__Group_1__1() throws RecognitionException {
        int rule__WithExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 664) ) { return ; }
            // InternalBeeLangTestLanguage.g:10799:1: ( rule__WithExpression__Group_1__1__Impl )
            // InternalBeeLangTestLanguage.g:10800:2: rule__WithExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 664, rule__WithExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__1"


    // $ANTLR start "rule__WithExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:10806:1: rule__WithExpression__Group_1__1__Impl : ( ( rule__WithExpression__Group_1_1__0 )* ) ;
    public final void rule__WithExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 665) ) { return ; }
            // InternalBeeLangTestLanguage.g:10810:1: ( ( ( rule__WithExpression__Group_1_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:10811:1: ( ( rule__WithExpression__Group_1_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:10811:1: ( ( rule__WithExpression__Group_1_1__0 )* )
            // InternalBeeLangTestLanguage.g:10812:1: ( rule__WithExpression__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:10813:1: ( rule__WithExpression__Group_1_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==48) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:10813:2: rule__WithExpression__Group_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__WithExpression__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 665, rule__WithExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_1_1__0"
    // InternalBeeLangTestLanguage.g:10827:1: rule__WithExpression__Group_1_1__0 : rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1 ;
    public final void rule__WithExpression__Group_1_1__0() throws RecognitionException {
        int rule__WithExpression__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 666) ) { return ; }
            // InternalBeeLangTestLanguage.g:10831:1: ( rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1 )
            // InternalBeeLangTestLanguage.g:10832:2: rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__WithExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 666, rule__WithExpression__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__0"


    // $ANTLR start "rule__WithExpression__Group_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:10839:1: rule__WithExpression__Group_1_1__0__Impl : ( ',' ) ;
    public final void rule__WithExpression__Group_1_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 667) ) { return ; }
            // InternalBeeLangTestLanguage.g:10843:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:10844:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:10844:1: ( ',' )
            // InternalBeeLangTestLanguage.g:10845:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 667, rule__WithExpression__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_1_1__1"
    // InternalBeeLangTestLanguage.g:10858:1: rule__WithExpression__Group_1_1__1 : rule__WithExpression__Group_1_1__1__Impl ;
    public final void rule__WithExpression__Group_1_1__1() throws RecognitionException {
        int rule__WithExpression__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 668) ) { return ; }
            // InternalBeeLangTestLanguage.g:10862:1: ( rule__WithExpression__Group_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:10863:2: rule__WithExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 668, rule__WithExpression__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__1"


    // $ANTLR start "rule__WithExpression__Group_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:10869:1: rule__WithExpression__Group_1_1__1__Impl : ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) ) ;
    public final void rule__WithExpression__Group_1_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 669) ) { return ; }
            // InternalBeeLangTestLanguage.g:10873:1: ( ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:10874:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:10874:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) )
            // InternalBeeLangTestLanguage.g:10875:1: ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:10876:1: ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 )
            // InternalBeeLangTestLanguage.g:10876:2: rule__WithExpression__ReferencedAdviceAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__ReferencedAdviceAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 669, rule__WithExpression__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_0__0"
    // InternalBeeLangTestLanguage.g:10890:1: rule__WithExpression__Group_2_0__0 : rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1 ;
    public final void rule__WithExpression__Group_2_0__0() throws RecognitionException {
        int rule__WithExpression__Group_2_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 670) ) { return ; }
            // InternalBeeLangTestLanguage.g:10894:1: ( rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1 )
            // InternalBeeLangTestLanguage.g:10895:2: rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__WithExpression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 670, rule__WithExpression__Group_2_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__0"


    // $ANTLR start "rule__WithExpression__Group_2_0__0__Impl"
    // InternalBeeLangTestLanguage.g:10902:1: rule__WithExpression__Group_2_0__0__Impl : ( ':' ) ;
    public final void rule__WithExpression__Group_2_0__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 671) ) { return ; }
            // InternalBeeLangTestLanguage.g:10906:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:10907:1: ( ':' )
            {
            // InternalBeeLangTestLanguage.g:10907:1: ( ':' )
            // InternalBeeLangTestLanguage.g:10908:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 671, rule__WithExpression__Group_2_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_0__1"
    // InternalBeeLangTestLanguage.g:10921:1: rule__WithExpression__Group_2_0__1 : rule__WithExpression__Group_2_0__1__Impl ;
    public final void rule__WithExpression__Group_2_0__1() throws RecognitionException {
        int rule__WithExpression__Group_2_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 672) ) { return ; }
            // InternalBeeLangTestLanguage.g:10925:1: ( rule__WithExpression__Group_2_0__1__Impl )
            // InternalBeeLangTestLanguage.g:10926:2: rule__WithExpression__Group_2_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 672, rule__WithExpression__Group_2_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__1"


    // $ANTLR start "rule__WithExpression__Group_2_0__1__Impl"
    // InternalBeeLangTestLanguage.g:10932:1: rule__WithExpression__Group_2_0__1__Impl : ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) ) ;
    public final void rule__WithExpression__Group_2_0__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 673) ) { return ; }
            // InternalBeeLangTestLanguage.g:10936:1: ( ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) ) )
            // InternalBeeLangTestLanguage.g:10937:1: ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) )
            {
            // InternalBeeLangTestLanguage.g:10937:1: ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) )
            // InternalBeeLangTestLanguage.g:10938:1: ( rule__WithExpression__FuncExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:10939:1: ( rule__WithExpression__FuncExprAssignment_2_0_1 )
            // InternalBeeLangTestLanguage.g:10939:2: rule__WithExpression__FuncExprAssignment_2_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__FuncExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 673, rule__WithExpression__Group_2_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__0"
    // InternalBeeLangTestLanguage.g:10953:1: rule__WithExpression__Group_2_1__0 : rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1 ;
    public final void rule__WithExpression__Group_2_1__0() throws RecognitionException {
        int rule__WithExpression__Group_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 674) ) { return ; }
            // InternalBeeLangTestLanguage.g:10957:1: ( rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1 )
            // InternalBeeLangTestLanguage.g:10958:2: rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__WithExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 674, rule__WithExpression__Group_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__0"


    // $ANTLR start "rule__WithExpression__Group_2_1__0__Impl"
    // InternalBeeLangTestLanguage.g:10965:1: rule__WithExpression__Group_2_1__0__Impl : ( '{' ) ;
    public final void rule__WithExpression__Group_2_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 675) ) { return ; }
            // InternalBeeLangTestLanguage.g:10969:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:10970:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:10970:1: ( '{' )
            // InternalBeeLangTestLanguage.g:10971:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 675, rule__WithExpression__Group_2_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__1"
    // InternalBeeLangTestLanguage.g:10984:1: rule__WithExpression__Group_2_1__1 : rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2 ;
    public final void rule__WithExpression__Group_2_1__1() throws RecognitionException {
        int rule__WithExpression__Group_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 676) ) { return ; }
            // InternalBeeLangTestLanguage.g:10988:1: ( rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2 )
            // InternalBeeLangTestLanguage.g:10989:2: rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__WithExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 676, rule__WithExpression__Group_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__1"


    // $ANTLR start "rule__WithExpression__Group_2_1__1__Impl"
    // InternalBeeLangTestLanguage.g:10996:1: rule__WithExpression__Group_2_1__1__Impl : ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) ) ;
    public final void rule__WithExpression__Group_2_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 677) ) { return ; }
            // InternalBeeLangTestLanguage.g:11000:1: ( ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:11001:1: ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:11001:1: ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) )
            // InternalBeeLangTestLanguage.g:11002:1: ( rule__WithExpression__FuncExprAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:11003:1: ( rule__WithExpression__FuncExprAssignment_2_1_1 )
            // InternalBeeLangTestLanguage.g:11003:2: rule__WithExpression__FuncExprAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__FuncExprAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 677, rule__WithExpression__Group_2_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__2"
    // InternalBeeLangTestLanguage.g:11013:1: rule__WithExpression__Group_2_1__2 : rule__WithExpression__Group_2_1__2__Impl ;
    public final void rule__WithExpression__Group_2_1__2() throws RecognitionException {
        int rule__WithExpression__Group_2_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 678) ) { return ; }
            // InternalBeeLangTestLanguage.g:11017:1: ( rule__WithExpression__Group_2_1__2__Impl )
            // InternalBeeLangTestLanguage.g:11018:2: rule__WithExpression__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 678, rule__WithExpression__Group_2_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__2"


    // $ANTLR start "rule__WithExpression__Group_2_1__2__Impl"
    // InternalBeeLangTestLanguage.g:11024:1: rule__WithExpression__Group_2_1__2__Impl : ( '}' ) ;
    public final void rule__WithExpression__Group_2_1__2__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 679) ) { return ; }
            // InternalBeeLangTestLanguage.g:11028:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:11029:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:11029:1: ( '}' )
            // InternalBeeLangTestLanguage.g:11030:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 679, rule__WithExpression__Group_2_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__2__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__0"
    // InternalBeeLangTestLanguage.g:11049:1: rule__WithContextExpression__Group__0 : rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1 ;
    public final void rule__WithContextExpression__Group__0() throws RecognitionException {
        int rule__WithContextExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 680) ) { return ; }
            // InternalBeeLangTestLanguage.g:11053:1: ( rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:11054:2: rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__WithContextExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 680, rule__WithContextExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__0"


    // $ANTLR start "rule__WithContextExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11061:1: rule__WithContextExpression__Group__0__Impl : ( 'with' ) ;
    public final void rule__WithContextExpression__Group__0__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 681) ) { return ; }
            // InternalBeeLangTestLanguage.g:11065:1: ( ( 'with' ) )
            // InternalBeeLangTestLanguage.g:11066:1: ( 'with' )
            {
            // InternalBeeLangTestLanguage.g:11066:1: ( 'with' )
            // InternalBeeLangTestLanguage.g:11067:1: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0()); 
            }
            match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 681, rule__WithContextExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__0__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__1"
    // InternalBeeLangTestLanguage.g:11080:1: rule__WithContextExpression__Group__1 : rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2 ;
    public final void rule__WithContextExpression__Group__1() throws RecognitionException {
        int rule__WithContextExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 682) ) { return ; }
            // InternalBeeLangTestLanguage.g:11084:1: ( rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:11085:2: rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__WithContextExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 682, rule__WithContextExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__1"


    // $ANTLR start "rule__WithContextExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11092:1: rule__WithContextExpression__Group__1__Impl : ( 'context' ) ;
    public final void rule__WithContextExpression__Group__1__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 683) ) { return ; }
            // InternalBeeLangTestLanguage.g:11096:1: ( ( 'context' ) )
            // InternalBeeLangTestLanguage.g:11097:1: ( 'context' )
            {
            // InternalBeeLangTestLanguage.g:11097:1: ( 'context' )
            // InternalBeeLangTestLanguage.g:11098:1: 'context'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1()); 
            }
            match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 683, rule__WithContextExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__1__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__2"
    // InternalBeeLangTestLanguage.g:11111:1: rule__WithContextExpression__Group__2 : rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3 ;
    public final void rule__WithContextExpression__Group__2() throws RecognitionException {
        int rule__WithContextExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 684) ) { return ; }
            // InternalBeeLangTestLanguage.g:11115:1: ( rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:11116:2: rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__WithContextExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 684, rule__WithContextExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__2"


    // $ANTLR start "rule__WithContextExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:11123:1: rule__WithContextExpression__Group__2__Impl : ( ( rule__WithContextExpression__ExprAssignment_2 ) ) ;
    public final void rule__WithContextExpression__Group__2__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 685) ) { return ; }
            // InternalBeeLangTestLanguage.g:11127:1: ( ( ( rule__WithContextExpression__ExprAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:11128:1: ( ( rule__WithContextExpression__ExprAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:11128:1: ( ( rule__WithContextExpression__ExprAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:11129:1: ( rule__WithContextExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getExprAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:11130:1: ( rule__WithContextExpression__ExprAssignment_2 )
            // InternalBeeLangTestLanguage.g:11130:2: rule__WithContextExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 685, rule__WithContextExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__2__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__3"
    // InternalBeeLangTestLanguage.g:11140:1: rule__WithContextExpression__Group__3 : rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4 ;
    public final void rule__WithContextExpression__Group__3() throws RecognitionException {
        int rule__WithContextExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 686) ) { return ; }
            // InternalBeeLangTestLanguage.g:11144:1: ( rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4 )
            // InternalBeeLangTestLanguage.g:11145:2: rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__WithContextExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 686, rule__WithContextExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__3"


    // $ANTLR start "rule__WithContextExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:11152:1: rule__WithContextExpression__Group__3__Impl : ( ( rule__WithContextExpression__Group_3__0 )? ) ;
    public final void rule__WithContextExpression__Group__3__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 687) ) { return ; }
            // InternalBeeLangTestLanguage.g:11156:1: ( ( ( rule__WithContextExpression__Group_3__0 )? ) )
            // InternalBeeLangTestLanguage.g:11157:1: ( ( rule__WithContextExpression__Group_3__0 )? )
            {
            // InternalBeeLangTestLanguage.g:11157:1: ( ( rule__WithContextExpression__Group_3__0 )? )
            // InternalBeeLangTestLanguage.g:11158:1: ( rule__WithContextExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:11159:1: ( rule__WithContextExpression__Group_3__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==56) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11159:2: rule__WithContextExpression__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithContextExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 687, rule__WithContextExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__3__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__4"
    // InternalBeeLangTestLanguage.g:11169:1: rule__WithContextExpression__Group__4 : rule__WithContextExpression__Group__4__Impl ;
    public final void rule__WithContextExpression__Group__4() throws RecognitionException {
        int rule__WithContextExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 688) ) { return ; }
            // InternalBeeLangTestLanguage.g:11173:1: ( rule__WithContextExpression__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:11174:2: rule__WithContextExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 688, rule__WithContextExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__4"


    // $ANTLR start "rule__WithContextExpression__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:11180:1: rule__WithContextExpression__Group__4__Impl : ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) ;
    public final void rule__WithContextExpression__Group__4__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 689) ) { return ; }
            // InternalBeeLangTestLanguage.g:11184:1: ( ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) )
            // InternalBeeLangTestLanguage.g:11185:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )
            {
            // InternalBeeLangTestLanguage.g:11185:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )
            // InternalBeeLangTestLanguage.g:11186:1: ( rule__WithContextExpression__ContextBlockAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:11187:1: ( rule__WithContextExpression__ContextBlockAssignment_4 )
            // InternalBeeLangTestLanguage.g:11187:2: rule__WithContextExpression__ContextBlockAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__ContextBlockAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 689, rule__WithContextExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__4__Impl"


    // $ANTLR start "rule__WithContextExpression__Group_3__0"
    // InternalBeeLangTestLanguage.g:11207:1: rule__WithContextExpression__Group_3__0 : rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 ;
    public final void rule__WithContextExpression__Group_3__0() throws RecognitionException {
        int rule__WithContextExpression__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 690) ) { return ; }
            // InternalBeeLangTestLanguage.g:11211:1: ( rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 )
            // InternalBeeLangTestLanguage.g:11212:2: rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__WithContextExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 690, rule__WithContextExpression__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__0"


    // $ANTLR start "rule__WithContextExpression__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:11219:1: rule__WithContextExpression__Group_3__0__Impl : ( 'as' ) ;
    public final void rule__WithContextExpression__Group_3__0__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 691) ) { return ; }
            // InternalBeeLangTestLanguage.g:11223:1: ( ( 'as' ) )
            // InternalBeeLangTestLanguage.g:11224:1: ( 'as' )
            {
            // InternalBeeLangTestLanguage.g:11224:1: ( 'as' )
            // InternalBeeLangTestLanguage.g:11225:1: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 691, rule__WithContextExpression__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__0__Impl"


    // $ANTLR start "rule__WithContextExpression__Group_3__1"
    // InternalBeeLangTestLanguage.g:11238:1: rule__WithContextExpression__Group_3__1 : rule__WithContextExpression__Group_3__1__Impl ;
    public final void rule__WithContextExpression__Group_3__1() throws RecognitionException {
        int rule__WithContextExpression__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 692) ) { return ; }
            // InternalBeeLangTestLanguage.g:11242:1: ( rule__WithContextExpression__Group_3__1__Impl )
            // InternalBeeLangTestLanguage.g:11243:2: rule__WithContextExpression__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 692, rule__WithContextExpression__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__1"


    // $ANTLR start "rule__WithContextExpression__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:11249:1: rule__WithContextExpression__Group_3__1__Impl : ( ( rule__WithContextExpression__AliasAssignment_3_1 ) ) ;
    public final void rule__WithContextExpression__Group_3__1__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 693) ) { return ; }
            // InternalBeeLangTestLanguage.g:11253:1: ( ( ( rule__WithContextExpression__AliasAssignment_3_1 ) ) )
            // InternalBeeLangTestLanguage.g:11254:1: ( ( rule__WithContextExpression__AliasAssignment_3_1 ) )
            {
            // InternalBeeLangTestLanguage.g:11254:1: ( ( rule__WithContextExpression__AliasAssignment_3_1 ) )
            // InternalBeeLangTestLanguage.g:11255:1: ( rule__WithContextExpression__AliasAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAliasAssignment_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:11256:1: ( rule__WithContextExpression__AliasAssignment_3_1 )
            // InternalBeeLangTestLanguage.g:11256:2: rule__WithContextExpression__AliasAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__AliasAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAliasAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 693, rule__WithContextExpression__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__1__Impl"


    // $ANTLR start "rule__BlockExpression__Group__0"
    // InternalBeeLangTestLanguage.g:11270:1: rule__BlockExpression__Group__0 : rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1 ;
    public final void rule__BlockExpression__Group__0() throws RecognitionException {
        int rule__BlockExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 694) ) { return ; }
            // InternalBeeLangTestLanguage.g:11274:1: ( rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:11275:2: rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__BlockExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 694, rule__BlockExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__0"


    // $ANTLR start "rule__BlockExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11282:1: rule__BlockExpression__Group__0__Impl : ( () ) ;
    public final void rule__BlockExpression__Group__0__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 695) ) { return ; }
            // InternalBeeLangTestLanguage.g:11286:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:11287:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:11287:1: ( () )
            // InternalBeeLangTestLanguage.g:11288:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:11289:1: ()
            // InternalBeeLangTestLanguage.g:11291:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 695, rule__BlockExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__0__Impl"


    // $ANTLR start "rule__BlockExpression__Group__1"
    // InternalBeeLangTestLanguage.g:11301:1: rule__BlockExpression__Group__1 : rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2 ;
    public final void rule__BlockExpression__Group__1() throws RecognitionException {
        int rule__BlockExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 696) ) { return ; }
            // InternalBeeLangTestLanguage.g:11305:1: ( rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:11306:2: rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__BlockExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 696, rule__BlockExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__1"


    // $ANTLR start "rule__BlockExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11313:1: rule__BlockExpression__Group__1__Impl : ( '{' ) ;
    public final void rule__BlockExpression__Group__1__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 697) ) { return ; }
            // InternalBeeLangTestLanguage.g:11317:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:11318:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:11318:1: ( '{' )
            // InternalBeeLangTestLanguage.g:11319:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 697, rule__BlockExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__1__Impl"


    // $ANTLR start "rule__BlockExpression__Group__2"
    // InternalBeeLangTestLanguage.g:11332:1: rule__BlockExpression__Group__2 : rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3 ;
    public final void rule__BlockExpression__Group__2() throws RecognitionException {
        int rule__BlockExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 698) ) { return ; }
            // InternalBeeLangTestLanguage.g:11336:1: ( rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:11337:2: rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__BlockExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 698, rule__BlockExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__2"


    // $ANTLR start "rule__BlockExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:11344:1: rule__BlockExpression__Group__2__Impl : ( ( rule__BlockExpression__Group_2__0 )* ) ;
    public final void rule__BlockExpression__Group__2__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 699) ) { return ; }
            // InternalBeeLangTestLanguage.g:11348:1: ( ( ( rule__BlockExpression__Group_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:11349:1: ( ( rule__BlockExpression__Group_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:11349:1: ( ( rule__BlockExpression__Group_2__0 )* )
            // InternalBeeLangTestLanguage.g:11350:1: ( rule__BlockExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:11351:1: ( rule__BlockExpression__Group_2__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_STRING||LA79_0==RULE_ID||LA79_0==13||LA79_0==29||LA79_0==31||(LA79_0>=35 && LA79_0<=44)||LA79_0==60||LA79_0==63||LA79_0==69||LA79_0==71||LA79_0==74||LA79_0==76) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:11351:2: rule__BlockExpression__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__BlockExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 699, rule__BlockExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__2__Impl"


    // $ANTLR start "rule__BlockExpression__Group__3"
    // InternalBeeLangTestLanguage.g:11361:1: rule__BlockExpression__Group__3 : rule__BlockExpression__Group__3__Impl ;
    public final void rule__BlockExpression__Group__3() throws RecognitionException {
        int rule__BlockExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 700) ) { return ; }
            // InternalBeeLangTestLanguage.g:11365:1: ( rule__BlockExpression__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:11366:2: rule__BlockExpression__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 700, rule__BlockExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__3"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser9 extends InternalBeeLangTestLanguageParser8 {

        InternalBeeLangTestLanguageParser9(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser9(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__BlockExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:11372:1: rule__BlockExpression__Group__3__Impl : ( '}' ) ;
    public final void rule__BlockExpression__Group__3__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 701) ) { return ; }
            // InternalBeeLangTestLanguage.g:11376:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:11377:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:11377:1: ( '}' )
            // InternalBeeLangTestLanguage.g:11378:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 701, rule__BlockExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__3__Impl"


    // $ANTLR start "rule__BlockExpression__Group_2__0"
    // InternalBeeLangTestLanguage.g:11399:1: rule__BlockExpression__Group_2__0 : rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1 ;
    public final void rule__BlockExpression__Group_2__0() throws RecognitionException {
        int rule__BlockExpression__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 702) ) { return ; }
            // InternalBeeLangTestLanguage.g:11403:1: ( rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1 )
            // InternalBeeLangTestLanguage.g:11404:2: rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__BlockExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 702, rule__BlockExpression__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__0"


    // $ANTLR start "rule__BlockExpression__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:11411:1: rule__BlockExpression__Group_2__0__Impl : ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) ) ;
    public final void rule__BlockExpression__Group_2__0__Impl() throws RecognitionException {
        int rule__BlockExpression__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 703) ) { return ; }
            // InternalBeeLangTestLanguage.g:11415:1: ( ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) ) )
            // InternalBeeLangTestLanguage.g:11416:1: ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) )
            {
            // InternalBeeLangTestLanguage.g:11416:1: ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) )
            // InternalBeeLangTestLanguage.g:11417:1: ( rule__BlockExpression__ExpressionsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:11418:1: ( rule__BlockExpression__ExpressionsAssignment_2_0 )
            // InternalBeeLangTestLanguage.g:11418:2: rule__BlockExpression__ExpressionsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__ExpressionsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 703, rule__BlockExpression__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__0__Impl"


    // $ANTLR start "rule__BlockExpression__Group_2__1"
    // InternalBeeLangTestLanguage.g:11428:1: rule__BlockExpression__Group_2__1 : rule__BlockExpression__Group_2__1__Impl ;
    public final void rule__BlockExpression__Group_2__1() throws RecognitionException {
        int rule__BlockExpression__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 704) ) { return ; }
            // InternalBeeLangTestLanguage.g:11432:1: ( rule__BlockExpression__Group_2__1__Impl )
            // InternalBeeLangTestLanguage.g:11433:2: rule__BlockExpression__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 704, rule__BlockExpression__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__1"


    // $ANTLR start "rule__BlockExpression__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:11439:1: rule__BlockExpression__Group_2__1__Impl : ( ';' ) ;
    public final void rule__BlockExpression__Group_2__1__Impl() throws RecognitionException {
        int rule__BlockExpression__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 705) ) { return ; }
            // InternalBeeLangTestLanguage.g:11443:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:11444:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:11444:1: ( ';' )
            // InternalBeeLangTestLanguage.g:11445:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 705, rule__BlockExpression__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__1__Impl"


    // $ANTLR start "rule__Value__Group__0"
    // InternalBeeLangTestLanguage.g:11462:1: rule__Value__Group__0 : rule__Value__Group__0__Impl rule__Value__Group__1 ;
    public final void rule__Value__Group__0() throws RecognitionException {
        int rule__Value__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 706) ) { return ; }
            // InternalBeeLangTestLanguage.g:11466:1: ( rule__Value__Group__0__Impl rule__Value__Group__1 )
            // InternalBeeLangTestLanguage.g:11467:2: rule__Value__Group__0__Impl rule__Value__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Value__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 706, rule__Value__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__0"


    // $ANTLR start "rule__Value__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11474:1: rule__Value__Group__0__Impl : ( () ) ;
    public final void rule__Value__Group__0__Impl() throws RecognitionException {
        int rule__Value__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 707) ) { return ; }
            // InternalBeeLangTestLanguage.g:11478:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:11479:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:11479:1: ( () )
            // InternalBeeLangTestLanguage.g:11480:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getVariableExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:11481:1: ()
            // InternalBeeLangTestLanguage.g:11483:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getVariableExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 707, rule__Value__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__0__Impl"


    // $ANTLR start "rule__Value__Group__1"
    // InternalBeeLangTestLanguage.g:11493:1: rule__Value__Group__1 : rule__Value__Group__1__Impl ;
    public final void rule__Value__Group__1() throws RecognitionException {
        int rule__Value__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 708) ) { return ; }
            // InternalBeeLangTestLanguage.g:11497:1: ( rule__Value__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:11498:2: rule__Value__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 708, rule__Value__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__1"


    // $ANTLR start "rule__Value__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11504:1: rule__Value__Group__1__Impl : ( ( rule__Value__NameAssignment_1 ) ) ;
    public final void rule__Value__Group__1__Impl() throws RecognitionException {
        int rule__Value__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 709) ) { return ; }
            // InternalBeeLangTestLanguage.g:11508:1: ( ( ( rule__Value__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:11509:1: ( ( rule__Value__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:11509:1: ( ( rule__Value__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:11510:1: ( rule__Value__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:11511:1: ( rule__Value__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:11511:2: rule__Value__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 709, rule__Value__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__1__Impl"


    // $ANTLR start "rule__KeywordVariables__Group__0"
    // InternalBeeLangTestLanguage.g:11525:1: rule__KeywordVariables__Group__0 : rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1 ;
    public final void rule__KeywordVariables__Group__0() throws RecognitionException {
        int rule__KeywordVariables__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 710) ) { return ; }
            // InternalBeeLangTestLanguage.g:11529:1: ( rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1 )
            // InternalBeeLangTestLanguage.g:11530:2: rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__KeywordVariables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 710, rule__KeywordVariables__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__0"


    // $ANTLR start "rule__KeywordVariables__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11537:1: rule__KeywordVariables__Group__0__Impl : ( () ) ;
    public final void rule__KeywordVariables__Group__0__Impl() throws RecognitionException {
        int rule__KeywordVariables__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 711) ) { return ; }
            // InternalBeeLangTestLanguage.g:11541:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:11542:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:11542:1: ( () )
            // InternalBeeLangTestLanguage.g:11543:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:11544:1: ()
            // InternalBeeLangTestLanguage.g:11546:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 711, rule__KeywordVariables__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__0__Impl"


    // $ANTLR start "rule__KeywordVariables__Group__1"
    // InternalBeeLangTestLanguage.g:11556:1: rule__KeywordVariables__Group__1 : rule__KeywordVariables__Group__1__Impl ;
    public final void rule__KeywordVariables__Group__1() throws RecognitionException {
        int rule__KeywordVariables__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 712) ) { return ; }
            // InternalBeeLangTestLanguage.g:11560:1: ( rule__KeywordVariables__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:11561:2: rule__KeywordVariables__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 712, rule__KeywordVariables__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__1"


    // $ANTLR start "rule__KeywordVariables__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11567:1: rule__KeywordVariables__Group__1__Impl : ( ( rule__KeywordVariables__NameAssignment_1 ) ) ;
    public final void rule__KeywordVariables__Group__1__Impl() throws RecognitionException {
        int rule__KeywordVariables__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 713) ) { return ; }
            // InternalBeeLangTestLanguage.g:11571:1: ( ( ( rule__KeywordVariables__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:11572:1: ( ( rule__KeywordVariables__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:11572:1: ( ( rule__KeywordVariables__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:11573:1: ( rule__KeywordVariables__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:11574:1: ( rule__KeywordVariables__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:11574:2: rule__KeywordVariables__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 713, rule__KeywordVariables__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__1__Impl"


    // $ANTLR start "rule__OperationCall__Group__0"
    // InternalBeeLangTestLanguage.g:11588:1: rule__OperationCall__Group__0 : rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1 ;
    public final void rule__OperationCall__Group__0() throws RecognitionException {
        int rule__OperationCall__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 714) ) { return ; }
            // InternalBeeLangTestLanguage.g:11592:1: ( rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1 )
            // InternalBeeLangTestLanguage.g:11593:2: rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__OperationCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 714, rule__OperationCall__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__0"


    // $ANTLR start "rule__OperationCall__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11600:1: rule__OperationCall__Group__0__Impl : ( () ) ;
    public final void rule__OperationCall__Group__0__Impl() throws RecognitionException {
        int rule__OperationCall__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 715) ) { return ; }
            // InternalBeeLangTestLanguage.g:11604:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:11605:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:11605:1: ( () )
            // InternalBeeLangTestLanguage.g:11606:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:11607:1: ()
            // InternalBeeLangTestLanguage.g:11609:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 715, rule__OperationCall__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__0__Impl"


    // $ANTLR start "rule__OperationCall__Group__1"
    // InternalBeeLangTestLanguage.g:11619:1: rule__OperationCall__Group__1 : rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2 ;
    public final void rule__OperationCall__Group__1() throws RecognitionException {
        int rule__OperationCall__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 716) ) { return ; }
            // InternalBeeLangTestLanguage.g:11623:1: ( rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2 )
            // InternalBeeLangTestLanguage.g:11624:2: rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__OperationCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 716, rule__OperationCall__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__1"


    // $ANTLR start "rule__OperationCall__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11631:1: rule__OperationCall__Group__1__Impl : ( ( rule__OperationCall__NameAssignment_1 ) ) ;
    public final void rule__OperationCall__Group__1__Impl() throws RecognitionException {
        int rule__OperationCall__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 717) ) { return ; }
            // InternalBeeLangTestLanguage.g:11635:1: ( ( ( rule__OperationCall__NameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:11636:1: ( ( rule__OperationCall__NameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:11636:1: ( ( rule__OperationCall__NameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:11637:1: ( rule__OperationCall__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:11638:1: ( rule__OperationCall__NameAssignment_1 )
            // InternalBeeLangTestLanguage.g:11638:2: rule__OperationCall__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 717, rule__OperationCall__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__1__Impl"


    // $ANTLR start "rule__OperationCall__Group__2"
    // InternalBeeLangTestLanguage.g:11648:1: rule__OperationCall__Group__2 : rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3 ;
    public final void rule__OperationCall__Group__2() throws RecognitionException {
        int rule__OperationCall__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 718) ) { return ; }
            // InternalBeeLangTestLanguage.g:11652:1: ( rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3 )
            // InternalBeeLangTestLanguage.g:11653:2: rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__OperationCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 718, rule__OperationCall__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__2"


    // $ANTLR start "rule__OperationCall__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:11660:1: rule__OperationCall__Group__2__Impl : ( '(' ) ;
    public final void rule__OperationCall__Group__2__Impl() throws RecognitionException {
        int rule__OperationCall__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 719) ) { return ; }
            // InternalBeeLangTestLanguage.g:11664:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:11665:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:11665:1: ( '(' )
            // InternalBeeLangTestLanguage.g:11666:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 719, rule__OperationCall__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__2__Impl"


    // $ANTLR start "rule__OperationCall__Group__3"
    // InternalBeeLangTestLanguage.g:11679:1: rule__OperationCall__Group__3 : rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4 ;
    public final void rule__OperationCall__Group__3() throws RecognitionException {
        int rule__OperationCall__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 720) ) { return ; }
            // InternalBeeLangTestLanguage.g:11683:1: ( rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4 )
            // InternalBeeLangTestLanguage.g:11684:2: rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__OperationCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 720, rule__OperationCall__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__3"


    // $ANTLR start "rule__OperationCall__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:11691:1: rule__OperationCall__Group__3__Impl : ( ( rule__OperationCall__ParameterListAssignment_3 )? ) ;
    public final void rule__OperationCall__Group__3__Impl() throws RecognitionException {
        int rule__OperationCall__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 721) ) { return ; }
            // InternalBeeLangTestLanguage.g:11695:1: ( ( ( rule__OperationCall__ParameterListAssignment_3 )? ) )
            // InternalBeeLangTestLanguage.g:11696:1: ( ( rule__OperationCall__ParameterListAssignment_3 )? )
            {
            // InternalBeeLangTestLanguage.g:11696:1: ( ( rule__OperationCall__ParameterListAssignment_3 )? )
            // InternalBeeLangTestLanguage.g:11697:1: ( rule__OperationCall__ParameterListAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); 
            }
            // InternalBeeLangTestLanguage.g:11698:1: ( rule__OperationCall__ParameterListAssignment_3 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_STRING||LA80_0==RULE_ID||LA80_0==13||LA80_0==28||LA80_0==31||(LA80_0>=35 && LA80_0<=44)||LA80_0==60||LA80_0==63||LA80_0==69||(LA80_0>=71 && LA80_0<=72)||LA80_0==75) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11698:2: rule__OperationCall__ParameterListAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__OperationCall__ParameterListAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 721, rule__OperationCall__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__3__Impl"


    // $ANTLR start "rule__OperationCall__Group__4"
    // InternalBeeLangTestLanguage.g:11708:1: rule__OperationCall__Group__4 : rule__OperationCall__Group__4__Impl ;
    public final void rule__OperationCall__Group__4() throws RecognitionException {
        int rule__OperationCall__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 722) ) { return ; }
            // InternalBeeLangTestLanguage.g:11712:1: ( rule__OperationCall__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:11713:2: rule__OperationCall__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 722, rule__OperationCall__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__4"


    // $ANTLR start "rule__OperationCall__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:11719:1: rule__OperationCall__Group__4__Impl : ( ')' ) ;
    public final void rule__OperationCall__Group__4__Impl() throws RecognitionException {
        int rule__OperationCall__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 723) ) { return ; }
            // InternalBeeLangTestLanguage.g:11723:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:11724:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:11724:1: ( ')' )
            // InternalBeeLangTestLanguage.g:11725:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 723, rule__OperationCall__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__4__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__0"
    // InternalBeeLangTestLanguage.g:11748:1: rule__ConstructorCallExpression__Group__0 : rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1 ;
    public final void rule__ConstructorCallExpression__Group__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 724) ) { return ; }
            // InternalBeeLangTestLanguage.g:11752:1: ( rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:11753:2: rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__ConstructorCallExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 724, rule__ConstructorCallExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:11760:1: rule__ConstructorCallExpression__Group__0__Impl : ( () ) ;
    public final void rule__ConstructorCallExpression__Group__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 725) ) { return ; }
            // InternalBeeLangTestLanguage.g:11764:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:11765:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:11765:1: ( () )
            // InternalBeeLangTestLanguage.g:11766:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:11767:1: ()
            // InternalBeeLangTestLanguage.g:11769:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 725, rule__ConstructorCallExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__1"
    // InternalBeeLangTestLanguage.g:11779:1: rule__ConstructorCallExpression__Group__1 : rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2 ;
    public final void rule__ConstructorCallExpression__Group__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 726) ) { return ; }
            // InternalBeeLangTestLanguage.g:11783:1: ( rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:11784:2: rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ConstructorCallExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 726, rule__ConstructorCallExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:11791:1: rule__ConstructorCallExpression__Group__1__Impl : ( 'new' ) ;
    public final void rule__ConstructorCallExpression__Group__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 727) ) { return ; }
            // InternalBeeLangTestLanguage.g:11795:1: ( ( 'new' ) )
            // InternalBeeLangTestLanguage.g:11796:1: ( 'new' )
            {
            // InternalBeeLangTestLanguage.g:11796:1: ( 'new' )
            // InternalBeeLangTestLanguage.g:11797:1: 'new'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); 
            }
            match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 727, rule__ConstructorCallExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__1__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__2"
    // InternalBeeLangTestLanguage.g:11810:1: rule__ConstructorCallExpression__Group__2 : rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3 ;
    public final void rule__ConstructorCallExpression__Group__2() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 728) ) { return ; }
            // InternalBeeLangTestLanguage.g:11814:1: ( rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:11815:2: rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 728, rule__ConstructorCallExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__2"


    // $ANTLR start "rule__ConstructorCallExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:11822:1: rule__ConstructorCallExpression__Group__2__Impl : ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) ) ;
    public final void rule__ConstructorCallExpression__Group__2__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 729) ) { return ; }
            // InternalBeeLangTestLanguage.g:11826:1: ( ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:11827:1: ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:11827:1: ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:11828:1: ( rule__ConstructorCallExpression__TypeExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:11829:1: ( rule__ConstructorCallExpression__TypeExprAssignment_2 )
            // InternalBeeLangTestLanguage.g:11829:2: rule__ConstructorCallExpression__TypeExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__TypeExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 729, rule__ConstructorCallExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__2__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__3"
    // InternalBeeLangTestLanguage.g:11839:1: rule__ConstructorCallExpression__Group__3 : rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4 ;
    public final void rule__ConstructorCallExpression__Group__3() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 730) ) { return ; }
            // InternalBeeLangTestLanguage.g:11843:1: ( rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4 )
            // InternalBeeLangTestLanguage.g:11844:2: rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 730, rule__ConstructorCallExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__3"


    // $ANTLR start "rule__ConstructorCallExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:11851:1: rule__ConstructorCallExpression__Group__3__Impl : ( ( rule__ConstructorCallExpression__Group_3__0 )? ) ;
    public final void rule__ConstructorCallExpression__Group__3__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 731) ) { return ; }
            // InternalBeeLangTestLanguage.g:11855:1: ( ( ( rule__ConstructorCallExpression__Group_3__0 )? ) )
            // InternalBeeLangTestLanguage.g:11856:1: ( ( rule__ConstructorCallExpression__Group_3__0 )? )
            {
            // InternalBeeLangTestLanguage.g:11856:1: ( ( rule__ConstructorCallExpression__Group_3__0 )? )
            // InternalBeeLangTestLanguage.g:11857:1: ( rule__ConstructorCallExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); 
            }
            // InternalBeeLangTestLanguage.g:11858:1: ( rule__ConstructorCallExpression__Group_3__0 )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11858:2: rule__ConstructorCallExpression__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 731, rule__ConstructorCallExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__3__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__4"
    // InternalBeeLangTestLanguage.g:11868:1: rule__ConstructorCallExpression__Group__4 : rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5 ;
    public final void rule__ConstructorCallExpression__Group__4() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 732) ) { return ; }
            // InternalBeeLangTestLanguage.g:11872:1: ( rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5 )
            // InternalBeeLangTestLanguage.g:11873:2: rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 732, rule__ConstructorCallExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__4"


    // $ANTLR start "rule__ConstructorCallExpression__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:11880:1: rule__ConstructorCallExpression__Group__4__Impl : ( ( rule__ConstructorCallExpression__Group_4__0 )? ) ;
    public final void rule__ConstructorCallExpression__Group__4__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 733) ) { return ; }
            // InternalBeeLangTestLanguage.g:11884:1: ( ( ( rule__ConstructorCallExpression__Group_4__0 )? ) )
            // InternalBeeLangTestLanguage.g:11885:1: ( ( rule__ConstructorCallExpression__Group_4__0 )? )
            {
            // InternalBeeLangTestLanguage.g:11885:1: ( ( rule__ConstructorCallExpression__Group_4__0 )? )
            // InternalBeeLangTestLanguage.g:11886:1: ( rule__ConstructorCallExpression__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); 
            }
            // InternalBeeLangTestLanguage.g:11887:1: ( rule__ConstructorCallExpression__Group_4__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==56) ) {
                int LA82_1 = input.LA(2);

                if ( (LA82_1==RULE_ID) ) {
                    int LA82_3 = input.LA(3);

                    if ( (synpred111_InternalBeeLangTestLanguage()) ) {
                        alt82=1;
                    }
                }
            }
            switch (alt82) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11887:2: rule__ConstructorCallExpression__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 733, rule__ConstructorCallExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__4__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__5"
    // InternalBeeLangTestLanguage.g:11897:1: rule__ConstructorCallExpression__Group__5 : rule__ConstructorCallExpression__Group__5__Impl ;
    public final void rule__ConstructorCallExpression__Group__5() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 734) ) { return ; }
            // InternalBeeLangTestLanguage.g:11901:1: ( rule__ConstructorCallExpression__Group__5__Impl )
            // InternalBeeLangTestLanguage.g:11902:2: rule__ConstructorCallExpression__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 734, rule__ConstructorCallExpression__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__5"


    // $ANTLR start "rule__ConstructorCallExpression__Group__5__Impl"
    // InternalBeeLangTestLanguage.g:11908:1: rule__ConstructorCallExpression__Group__5__Impl : ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? ) ;
    public final void rule__ConstructorCallExpression__Group__5__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 735) ) { return ; }
            // InternalBeeLangTestLanguage.g:11912:1: ( ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? ) )
            // InternalBeeLangTestLanguage.g:11913:1: ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? )
            {
            // InternalBeeLangTestLanguage.g:11913:1: ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? )
            // InternalBeeLangTestLanguage.g:11914:1: ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); 
            }
            // InternalBeeLangTestLanguage.g:11915:1: ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==44) ) {
                int LA83_1 = input.LA(2);

                if ( (LA83_1==RULE_ID) ) {
                    int LA83_3 = input.LA(3);

                    if ( (LA83_3==49) ) {
                        alt83=1;
                    }
                }
            }
            switch (alt83) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11915:2: rule__ConstructorCallExpression__ContextBlockAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__ContextBlockAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 735, rule__ConstructorCallExpression__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__5__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__0"
    // InternalBeeLangTestLanguage.g:11937:1: rule__ConstructorCallExpression__Group_3__0 : rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1 ;
    public final void rule__ConstructorCallExpression__Group_3__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 736) ) { return ; }
            // InternalBeeLangTestLanguage.g:11941:1: ( rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1 )
            // InternalBeeLangTestLanguage.g:11942:2: rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ConstructorCallExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 736, rule__ConstructorCallExpression__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__0__Impl"
    // InternalBeeLangTestLanguage.g:11949:1: rule__ConstructorCallExpression__Group_3__0__Impl : ( '(' ) ;
    public final void rule__ConstructorCallExpression__Group_3__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 737) ) { return ; }
            // InternalBeeLangTestLanguage.g:11953:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:11954:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:11954:1: ( '(' )
            // InternalBeeLangTestLanguage.g:11955:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 737, rule__ConstructorCallExpression__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__1"
    // InternalBeeLangTestLanguage.g:11968:1: rule__ConstructorCallExpression__Group_3__1 : rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2 ;
    public final void rule__ConstructorCallExpression__Group_3__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 738) ) { return ; }
            // InternalBeeLangTestLanguage.g:11972:1: ( rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2 )
            // InternalBeeLangTestLanguage.g:11973:2: rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ConstructorCallExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 738, rule__ConstructorCallExpression__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__1__Impl"
    // InternalBeeLangTestLanguage.g:11980:1: rule__ConstructorCallExpression__Group_3__1__Impl : ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? ) ;
    public final void rule__ConstructorCallExpression__Group_3__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 739) ) { return ; }
            // InternalBeeLangTestLanguage.g:11984:1: ( ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? ) )
            // InternalBeeLangTestLanguage.g:11985:1: ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? )
            {
            // InternalBeeLangTestLanguage.g:11985:1: ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? )
            // InternalBeeLangTestLanguage.g:11986:1: ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); 
            }
            // InternalBeeLangTestLanguage.g:11987:1: ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_STRING||LA84_0==RULE_ID||LA84_0==13||LA84_0==28||LA84_0==31||(LA84_0>=35 && LA84_0<=44)||LA84_0==60||LA84_0==63||LA84_0==69||(LA84_0>=71 && LA84_0<=72)||LA84_0==75) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:11987:2: rule__ConstructorCallExpression__ParameterListAssignment_3_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__ParameterListAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 739, rule__ConstructorCallExpression__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__1__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__2"
    // InternalBeeLangTestLanguage.g:11997:1: rule__ConstructorCallExpression__Group_3__2 : rule__ConstructorCallExpression__Group_3__2__Impl ;
    public final void rule__ConstructorCallExpression__Group_3__2() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 740) ) { return ; }
            // InternalBeeLangTestLanguage.g:12001:1: ( rule__ConstructorCallExpression__Group_3__2__Impl )
            // InternalBeeLangTestLanguage.g:12002:2: rule__ConstructorCallExpression__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 740, rule__ConstructorCallExpression__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__2"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__2__Impl"
    // InternalBeeLangTestLanguage.g:12008:1: rule__ConstructorCallExpression__Group_3__2__Impl : ( ')' ) ;
    public final void rule__ConstructorCallExpression__Group_3__2__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 741) ) { return ; }
            // InternalBeeLangTestLanguage.g:12012:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:12013:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:12013:1: ( ')' )
            // InternalBeeLangTestLanguage.g:12014:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 741, rule__ConstructorCallExpression__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__2__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__0"
    // InternalBeeLangTestLanguage.g:12033:1: rule__ConstructorCallExpression__Group_4__0 : rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1 ;
    public final void rule__ConstructorCallExpression__Group_4__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 742) ) { return ; }
            // InternalBeeLangTestLanguage.g:12037:1: ( rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1 )
            // InternalBeeLangTestLanguage.g:12038:2: rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ConstructorCallExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 742, rule__ConstructorCallExpression__Group_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__0__Impl"
    // InternalBeeLangTestLanguage.g:12045:1: rule__ConstructorCallExpression__Group_4__0__Impl : ( 'as' ) ;
    public final void rule__ConstructorCallExpression__Group_4__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 743) ) { return ; }
            // InternalBeeLangTestLanguage.g:12049:1: ( ( 'as' ) )
            // InternalBeeLangTestLanguage.g:12050:1: ( 'as' )
            {
            // InternalBeeLangTestLanguage.g:12050:1: ( 'as' )
            // InternalBeeLangTestLanguage.g:12051:1: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 743, rule__ConstructorCallExpression__Group_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__1"
    // InternalBeeLangTestLanguage.g:12064:1: rule__ConstructorCallExpression__Group_4__1 : rule__ConstructorCallExpression__Group_4__1__Impl ;
    public final void rule__ConstructorCallExpression__Group_4__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 744) ) { return ; }
            // InternalBeeLangTestLanguage.g:12068:1: ( rule__ConstructorCallExpression__Group_4__1__Impl )
            // InternalBeeLangTestLanguage.g:12069:2: rule__ConstructorCallExpression__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 744, rule__ConstructorCallExpression__Group_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__1__Impl"
    // InternalBeeLangTestLanguage.g:12075:1: rule__ConstructorCallExpression__Group_4__1__Impl : ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) ) ;
    public final void rule__ConstructorCallExpression__Group_4__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 745) ) { return ; }
            // InternalBeeLangTestLanguage.g:12079:1: ( ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) ) )
            // InternalBeeLangTestLanguage.g:12080:1: ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) )
            {
            // InternalBeeLangTestLanguage.g:12080:1: ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) )
            // InternalBeeLangTestLanguage.g:12081:1: ( rule__ConstructorCallExpression__AliasAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); 
            }
            // InternalBeeLangTestLanguage.g:12082:1: ( rule__ConstructorCallExpression__AliasAssignment_4_1 )
            // InternalBeeLangTestLanguage.g:12082:2: rule__ConstructorCallExpression__AliasAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__AliasAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 745, rule__ConstructorCallExpression__Group_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__1__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__0"
    // InternalBeeLangTestLanguage.g:12096:1: rule__InitializationBlockExpression__Group__0 : rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1 ;
    public final void rule__InitializationBlockExpression__Group__0() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 746) ) { return ; }
            // InternalBeeLangTestLanguage.g:12100:1: ( rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:12101:2: rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__InitializationBlockExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 746, rule__InitializationBlockExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__0"


    // $ANTLR start "rule__InitializationBlockExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:12108:1: rule__InitializationBlockExpression__Group__0__Impl : ( () ) ;
    public final void rule__InitializationBlockExpression__Group__0__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 747) ) { return ; }
            // InternalBeeLangTestLanguage.g:12112:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:12113:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:12113:1: ( () )
            // InternalBeeLangTestLanguage.g:12114:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:12115:1: ()
            // InternalBeeLangTestLanguage.g:12117:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 747, rule__InitializationBlockExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__0__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__1"
    // InternalBeeLangTestLanguage.g:12127:1: rule__InitializationBlockExpression__Group__1 : rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2 ;
    public final void rule__InitializationBlockExpression__Group__1() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 748) ) { return ; }
            // InternalBeeLangTestLanguage.g:12131:1: ( rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:12132:2: rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InitializationBlockExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 748, rule__InitializationBlockExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__1"


    // $ANTLR start "rule__InitializationBlockExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:12139:1: rule__InitializationBlockExpression__Group__1__Impl : ( '{' ) ;
    public final void rule__InitializationBlockExpression__Group__1__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 749) ) { return ; }
            // InternalBeeLangTestLanguage.g:12143:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:12144:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:12144:1: ( '{' )
            // InternalBeeLangTestLanguage.g:12145:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 749, rule__InitializationBlockExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__1__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__2"
    // InternalBeeLangTestLanguage.g:12158:1: rule__InitializationBlockExpression__Group__2 : rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3 ;
    public final void rule__InitializationBlockExpression__Group__2() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 750) ) { return ; }
            // InternalBeeLangTestLanguage.g:12162:1: ( rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:12163:2: rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__InitializationBlockExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 750, rule__InitializationBlockExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__2"


    // $ANTLR start "rule__InitializationBlockExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:12170:1: rule__InitializationBlockExpression__Group__2__Impl : ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) ) ;
    public final void rule__InitializationBlockExpression__Group__2__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 751) ) { return ; }
            // InternalBeeLangTestLanguage.g:12174:1: ( ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:12175:1: ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:12175:1: ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:12176:1: ( rule__InitializationBlockExpression__ExpressionsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:12177:1: ( rule__InitializationBlockExpression__ExpressionsAssignment_2 )
            // InternalBeeLangTestLanguage.g:12177:2: rule__InitializationBlockExpression__ExpressionsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__ExpressionsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 751, rule__InitializationBlockExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__2__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__3"
    // InternalBeeLangTestLanguage.g:12187:1: rule__InitializationBlockExpression__Group__3 : rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4 ;
    public final void rule__InitializationBlockExpression__Group__3() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 752) ) { return ; }
            // InternalBeeLangTestLanguage.g:12191:1: ( rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4 )
            // InternalBeeLangTestLanguage.g:12192:2: rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__InitializationBlockExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 752, rule__InitializationBlockExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__3"


    // $ANTLR start "rule__InitializationBlockExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:12199:1: rule__InitializationBlockExpression__Group__3__Impl : ( ';' ) ;
    public final void rule__InitializationBlockExpression__Group__3__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 753) ) { return ; }
            // InternalBeeLangTestLanguage.g:12203:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:12204:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:12204:1: ( ';' )
            // InternalBeeLangTestLanguage.g:12205:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 753, rule__InitializationBlockExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__3__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__4"
    // InternalBeeLangTestLanguage.g:12218:1: rule__InitializationBlockExpression__Group__4 : rule__InitializationBlockExpression__Group__4__Impl ;
    public final void rule__InitializationBlockExpression__Group__4() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 754) ) { return ; }
            // InternalBeeLangTestLanguage.g:12222:1: ( rule__InitializationBlockExpression__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:12223:2: rule__InitializationBlockExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 754, rule__InitializationBlockExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__4"


    // $ANTLR start "rule__InitializationBlockExpression__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:12229:1: rule__InitializationBlockExpression__Group__4__Impl : ( '}' ) ;
    public final void rule__InitializationBlockExpression__Group__4__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 755) ) { return ; }
            // InternalBeeLangTestLanguage.g:12233:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:12234:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:12234:1: ( '}' )
            // InternalBeeLangTestLanguage.g:12235:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 755, rule__InitializationBlockExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__4__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__0"
    // InternalBeeLangTestLanguage.g:12258:1: rule__InitializationExpression__Group__0 : rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1 ;
    public final void rule__InitializationExpression__Group__0() throws RecognitionException {
        int rule__InitializationExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 756) ) { return ; }
            // InternalBeeLangTestLanguage.g:12262:1: ( rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:12263:2: rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InitializationExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 756, rule__InitializationExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__0"


    // $ANTLR start "rule__InitializationExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:12270:1: rule__InitializationExpression__Group__0__Impl : ( () ) ;
    public final void rule__InitializationExpression__Group__0__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 757) ) { return ; }
            // InternalBeeLangTestLanguage.g:12274:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:12275:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:12275:1: ( () )
            // InternalBeeLangTestLanguage.g:12276:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:12277:1: ()
            // InternalBeeLangTestLanguage.g:12279:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 757, rule__InitializationExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__0__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__1"
    // InternalBeeLangTestLanguage.g:12289:1: rule__InitializationExpression__Group__1 : rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2 ;
    public final void rule__InitializationExpression__Group__1() throws RecognitionException {
        int rule__InitializationExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 758) ) { return ; }
            // InternalBeeLangTestLanguage.g:12293:1: ( rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:12294:2: rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__InitializationExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 758, rule__InitializationExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__1"


    // $ANTLR start "rule__InitializationExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:12301:1: rule__InitializationExpression__Group__1__Impl : ( ( rule__InitializationExpression__LeftExprAssignment_1 ) ) ;
    public final void rule__InitializationExpression__Group__1__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 759) ) { return ; }
            // InternalBeeLangTestLanguage.g:12305:1: ( ( ( rule__InitializationExpression__LeftExprAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:12306:1: ( ( rule__InitializationExpression__LeftExprAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:12306:1: ( ( rule__InitializationExpression__LeftExprAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:12307:1: ( rule__InitializationExpression__LeftExprAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getLeftExprAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:12308:1: ( rule__InitializationExpression__LeftExprAssignment_1 )
            // InternalBeeLangTestLanguage.g:12308:2: rule__InitializationExpression__LeftExprAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__LeftExprAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getLeftExprAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 759, rule__InitializationExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__1__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__2"
    // InternalBeeLangTestLanguage.g:12318:1: rule__InitializationExpression__Group__2 : rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3 ;
    public final void rule__InitializationExpression__Group__2() throws RecognitionException {
        int rule__InitializationExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 760) ) { return ; }
            // InternalBeeLangTestLanguage.g:12322:1: ( rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:12323:2: rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__InitializationExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 760, rule__InitializationExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__2"


    // $ANTLR start "rule__InitializationExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:12330:1: rule__InitializationExpression__Group__2__Impl : ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) ) ;
    public final void rule__InitializationExpression__Group__2__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 761) ) { return ; }
            // InternalBeeLangTestLanguage.g:12334:1: ( ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) ) )
            // InternalBeeLangTestLanguage.g:12335:1: ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) )
            {
            // InternalBeeLangTestLanguage.g:12335:1: ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) )
            // InternalBeeLangTestLanguage.g:12336:1: ( rule__InitializationExpression__FunctionNameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameAssignment_2()); 
            }
            // InternalBeeLangTestLanguage.g:12337:1: ( rule__InitializationExpression__FunctionNameAssignment_2 )
            // InternalBeeLangTestLanguage.g:12337:2: rule__InitializationExpression__FunctionNameAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__FunctionNameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 761, rule__InitializationExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__2__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__3"
    // InternalBeeLangTestLanguage.g:12347:1: rule__InitializationExpression__Group__3 : rule__InitializationExpression__Group__3__Impl ;
    public final void rule__InitializationExpression__Group__3() throws RecognitionException {
        int rule__InitializationExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 762) ) { return ; }
            // InternalBeeLangTestLanguage.g:12351:1: ( rule__InitializationExpression__Group__3__Impl )
            // InternalBeeLangTestLanguage.g:12352:2: rule__InitializationExpression__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 762, rule__InitializationExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__3"


    // $ANTLR start "rule__InitializationExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:12358:1: rule__InitializationExpression__Group__3__Impl : ( ( rule__InitializationExpression__RightExprAssignment_3 ) ) ;
    public final void rule__InitializationExpression__Group__3__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 763) ) { return ; }
            // InternalBeeLangTestLanguage.g:12362:1: ( ( ( rule__InitializationExpression__RightExprAssignment_3 ) ) )
            // InternalBeeLangTestLanguage.g:12363:1: ( ( rule__InitializationExpression__RightExprAssignment_3 ) )
            {
            // InternalBeeLangTestLanguage.g:12363:1: ( ( rule__InitializationExpression__RightExprAssignment_3 ) )
            // InternalBeeLangTestLanguage.g:12364:1: ( rule__InitializationExpression__RightExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); 
            }
            // InternalBeeLangTestLanguage.g:12365:1: ( rule__InitializationExpression__RightExprAssignment_3 )
            // InternalBeeLangTestLanguage.g:12365:2: rule__InitializationExpression__RightExprAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__RightExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 763, rule__InitializationExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__3__Impl"


    // $ANTLR start "rule__FeatureOfThis__Group__0"
    // InternalBeeLangTestLanguage.g:12383:1: rule__FeatureOfThis__Group__0 : rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 ;
    public final void rule__FeatureOfThis__Group__0() throws RecognitionException {
        int rule__FeatureOfThis__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 764) ) { return ; }
            // InternalBeeLangTestLanguage.g:12387:1: ( rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 )
            // InternalBeeLangTestLanguage.g:12388:2: rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__FeatureOfThis__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 764, rule__FeatureOfThis__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__0"


    // $ANTLR start "rule__FeatureOfThis__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:12395:1: rule__FeatureOfThis__Group__0__Impl : ( () ) ;
    public final void rule__FeatureOfThis__Group__0__Impl() throws RecognitionException {
        int rule__FeatureOfThis__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 765) ) { return ; }
            // InternalBeeLangTestLanguage.g:12399:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:12400:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:12400:1: ( () )
            // InternalBeeLangTestLanguage.g:12401:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:12402:1: ()
            // InternalBeeLangTestLanguage.g:12404:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 765, rule__FeatureOfThis__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__0__Impl"


    // $ANTLR start "rule__FeatureOfThis__Group__1"
    // InternalBeeLangTestLanguage.g:12414:1: rule__FeatureOfThis__Group__1 : rule__FeatureOfThis__Group__1__Impl ;
    public final void rule__FeatureOfThis__Group__1() throws RecognitionException {
        int rule__FeatureOfThis__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 766) ) { return ; }
            // InternalBeeLangTestLanguage.g:12418:1: ( rule__FeatureOfThis__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:12419:2: rule__FeatureOfThis__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 766, rule__FeatureOfThis__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__1"


    // $ANTLR start "rule__FeatureOfThis__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:12425:1: rule__FeatureOfThis__Group__1__Impl : ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) ;
    public final void rule__FeatureOfThis__Group__1__Impl() throws RecognitionException {
        int rule__FeatureOfThis__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 767) ) { return ; }
            // InternalBeeLangTestLanguage.g:12429:1: ( ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) )
            // InternalBeeLangTestLanguage.g:12430:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )
            {
            // InternalBeeLangTestLanguage.g:12430:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )
            // InternalBeeLangTestLanguage.g:12431:1: ( rule__FeatureOfThis__FeatureNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); 
            }
            // InternalBeeLangTestLanguage.g:12432:1: ( rule__FeatureOfThis__FeatureNameAssignment_1 )
            // InternalBeeLangTestLanguage.g:12432:2: rule__FeatureOfThis__FeatureNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__FeatureNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 767, rule__FeatureOfThis__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__1__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__0"
    // InternalBeeLangTestLanguage.g:12446:1: rule__LiteralFunction__Group__0 : rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1 ;
    public final void rule__LiteralFunction__Group__0() throws RecognitionException {
        int rule__LiteralFunction__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 768) ) { return ; }
            // InternalBeeLangTestLanguage.g:12450:1: ( rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1 )
            // InternalBeeLangTestLanguage.g:12451:2: rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__LiteralFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 768, rule__LiteralFunction__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__0"


    // $ANTLR start "rule__LiteralFunction__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:12458:1: rule__LiteralFunction__Group__0__Impl : ( '{' ) ;
    public final void rule__LiteralFunction__Group__0__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 769) ) { return ; }
            // InternalBeeLangTestLanguage.g:12462:1: ( ( '{' ) )
            // InternalBeeLangTestLanguage.g:12463:1: ( '{' )
            {
            // InternalBeeLangTestLanguage.g:12463:1: ( '{' )
            // InternalBeeLangTestLanguage.g:12464:1: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 769, rule__LiteralFunction__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__0__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__1"
    // InternalBeeLangTestLanguage.g:12477:1: rule__LiteralFunction__Group__1 : rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2 ;
    public final void rule__LiteralFunction__Group__1() throws RecognitionException {
        int rule__LiteralFunction__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 770) ) { return ; }
            // InternalBeeLangTestLanguage.g:12481:1: ( rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2 )
            // InternalBeeLangTestLanguage.g:12482:2: rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__LiteralFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 770, rule__LiteralFunction__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__1"


    // $ANTLR start "rule__LiteralFunction__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:12489:1: rule__LiteralFunction__Group__1__Impl : ( ruleClosureExpression ) ;
    public final void rule__LiteralFunction__Group__1__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 771) ) { return ; }
            // InternalBeeLangTestLanguage.g:12493:1: ( ( ruleClosureExpression ) )
            // InternalBeeLangTestLanguage.g:12494:1: ( ruleClosureExpression )
            {
            // InternalBeeLangTestLanguage.g:12494:1: ( ruleClosureExpression )
            // InternalBeeLangTestLanguage.g:12495:1: ruleClosureExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 771, rule__LiteralFunction__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__1__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__2"
    // InternalBeeLangTestLanguage.g:12506:1: rule__LiteralFunction__Group__2 : rule__LiteralFunction__Group__2__Impl ;
    public final void rule__LiteralFunction__Group__2() throws RecognitionException {
        int rule__LiteralFunction__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 772) ) { return ; }
            // InternalBeeLangTestLanguage.g:12510:1: ( rule__LiteralFunction__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:12511:2: rule__LiteralFunction__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 772, rule__LiteralFunction__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__2"


    // $ANTLR start "rule__LiteralFunction__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:12517:1: rule__LiteralFunction__Group__2__Impl : ( '}' ) ;
    public final void rule__LiteralFunction__Group__2__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 773) ) { return ; }
            // InternalBeeLangTestLanguage.g:12521:1: ( ( '}' ) )
            // InternalBeeLangTestLanguage.g:12522:1: ( '}' )
            {
            // InternalBeeLangTestLanguage.g:12522:1: ( '}' )
            // InternalBeeLangTestLanguage.g:12523:1: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 773, rule__LiteralFunction__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__0"
    // InternalBeeLangTestLanguage.g:12542:1: rule__ClosureExpression__Group__0 : rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1 ;
    public final void rule__ClosureExpression__Group__0() throws RecognitionException {
        int rule__ClosureExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 774) ) { return ; }
            // InternalBeeLangTestLanguage.g:12546:1: ( rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:12547:2: rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 774, rule__ClosureExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__0"


    // $ANTLR start "rule__ClosureExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:12554:1: rule__ClosureExpression__Group__0__Impl : ( () ) ;
    public final void rule__ClosureExpression__Group__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 775) ) { return ; }
            // InternalBeeLangTestLanguage.g:12558:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:12559:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:12559:1: ( () )
            // InternalBeeLangTestLanguage.g:12560:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFunctionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:12561:1: ()
            // InternalBeeLangTestLanguage.g:12563:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFunctionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 775, rule__ClosureExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__1"
    // InternalBeeLangTestLanguage.g:12573:1: rule__ClosureExpression__Group__1 : rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2 ;
    public final void rule__ClosureExpression__Group__1() throws RecognitionException {
        int rule__ClosureExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 776) ) { return ; }
            // InternalBeeLangTestLanguage.g:12577:1: ( rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:12578:2: rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 776, rule__ClosureExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__1"


    // $ANTLR start "rule__ClosureExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:12585:1: rule__ClosureExpression__Group__1__Impl : ( ( rule__ClosureExpression__Group_1__0 )? ) ;
    public final void rule__ClosureExpression__Group__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 777) ) { return ; }
            // InternalBeeLangTestLanguage.g:12589:1: ( ( ( rule__ClosureExpression__Group_1__0 )? ) )
            // InternalBeeLangTestLanguage.g:12590:1: ( ( rule__ClosureExpression__Group_1__0 )? )
            {
            // InternalBeeLangTestLanguage.g:12590:1: ( ( rule__ClosureExpression__Group_1__0 )? )
            // InternalBeeLangTestLanguage.g:12591:1: ( rule__ClosureExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:12592:1: ( rule__ClosureExpression__Group_1__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==28) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:12592:2: rule__ClosureExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 777, rule__ClosureExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__2"
    // InternalBeeLangTestLanguage.g:12602:1: rule__ClosureExpression__Group__2 : rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3 ;
    public final void rule__ClosureExpression__Group__2() throws RecognitionException {
        int rule__ClosureExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 778) ) { return ; }
            // InternalBeeLangTestLanguage.g:12606:1: ( rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3 )
            // InternalBeeLangTestLanguage.g:12607:2: rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 778, rule__ClosureExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__2"


    // $ANTLR start "rule__ClosureExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:12614:1: rule__ClosureExpression__Group__2__Impl : ( ( rule__ClosureExpression__Alternatives_2 )? ) ;
    public final void rule__ClosureExpression__Group__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 779) ) { return ; }
            // InternalBeeLangTestLanguage.g:12618:1: ( ( ( rule__ClosureExpression__Alternatives_2 )? ) )
            // InternalBeeLangTestLanguage.g:12619:1: ( ( rule__ClosureExpression__Alternatives_2 )? )
            {
            // InternalBeeLangTestLanguage.g:12619:1: ( ( rule__ClosureExpression__Alternatives_2 )? )
            // InternalBeeLangTestLanguage.g:12620:1: ( rule__ClosureExpression__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getAlternatives_2()); 
            }
            // InternalBeeLangTestLanguage.g:12621:1: ( rule__ClosureExpression__Alternatives_2 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:12621:2: rule__ClosureExpression__Alternatives_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 779, rule__ClosureExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__3"
    // InternalBeeLangTestLanguage.g:12631:1: rule__ClosureExpression__Group__3 : rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4 ;
    public final void rule__ClosureExpression__Group__3() throws RecognitionException {
        int rule__ClosureExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 780) ) { return ; }
            // InternalBeeLangTestLanguage.g:12635:1: ( rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4 )
            // InternalBeeLangTestLanguage.g:12636:2: rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__ClosureExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 780, rule__ClosureExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__3"


    // $ANTLR start "rule__ClosureExpression__Group__3__Impl"
    // InternalBeeLangTestLanguage.g:12643:1: rule__ClosureExpression__Group__3__Impl : ( '|' ) ;
    public final void rule__ClosureExpression__Group__3__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 781) ) { return ; }
            // InternalBeeLangTestLanguage.g:12647:1: ( ( '|' ) )
            // InternalBeeLangTestLanguage.g:12648:1: ( '|' )
            {
            // InternalBeeLangTestLanguage.g:12648:1: ( '|' )
            // InternalBeeLangTestLanguage.g:12649:1: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); 
            }
            match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 781, rule__ClosureExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__3__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__4"
    // InternalBeeLangTestLanguage.g:12662:1: rule__ClosureExpression__Group__4 : rule__ClosureExpression__Group__4__Impl ;
    public final void rule__ClosureExpression__Group__4() throws RecognitionException {
        int rule__ClosureExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 782) ) { return ; }
            // InternalBeeLangTestLanguage.g:12666:1: ( rule__ClosureExpression__Group__4__Impl )
            // InternalBeeLangTestLanguage.g:12667:2: rule__ClosureExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 782, rule__ClosureExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__4"


    // $ANTLR start "rule__ClosureExpression__Group__4__Impl"
    // InternalBeeLangTestLanguage.g:12673:1: rule__ClosureExpression__Group__4__Impl : ( ( rule__ClosureExpression__FuncExprAssignment_4 ) ) ;
    public final void rule__ClosureExpression__Group__4__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 783) ) { return ; }
            // InternalBeeLangTestLanguage.g:12677:1: ( ( ( rule__ClosureExpression__FuncExprAssignment_4 ) ) )
            // InternalBeeLangTestLanguage.g:12678:1: ( ( rule__ClosureExpression__FuncExprAssignment_4 ) )
            {
            // InternalBeeLangTestLanguage.g:12678:1: ( ( rule__ClosureExpression__FuncExprAssignment_4 ) )
            // InternalBeeLangTestLanguage.g:12679:1: ( rule__ClosureExpression__FuncExprAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); 
            }
            // InternalBeeLangTestLanguage.g:12680:1: ( rule__ClosureExpression__FuncExprAssignment_4 )
            // InternalBeeLangTestLanguage.g:12680:2: rule__ClosureExpression__FuncExprAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__FuncExprAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 783, rule__ClosureExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__4__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__0"
    // InternalBeeLangTestLanguage.g:12700:1: rule__ClosureExpression__Group_1__0 : rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1 ;
    public final void rule__ClosureExpression__Group_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 784) ) { return ; }
            // InternalBeeLangTestLanguage.g:12704:1: ( rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1 )
            // InternalBeeLangTestLanguage.g:12705:2: rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ClosureExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 784, rule__ClosureExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:12712:1: rule__ClosureExpression__Group_1__0__Impl : ( '<' ) ;
    public final void rule__ClosureExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 785) ) { return ; }
            // InternalBeeLangTestLanguage.g:12716:1: ( ( '<' ) )
            // InternalBeeLangTestLanguage.g:12717:1: ( '<' )
            {
            // InternalBeeLangTestLanguage.g:12717:1: ( '<' )
            // InternalBeeLangTestLanguage.g:12718:1: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); 
            }
            match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 785, rule__ClosureExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__1"
    // InternalBeeLangTestLanguage.g:12731:1: rule__ClosureExpression__Group_1__1 : rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2 ;
    public final void rule__ClosureExpression__Group_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 786) ) { return ; }
            // InternalBeeLangTestLanguage.g:12735:1: ( rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2 )
            // InternalBeeLangTestLanguage.g:12736:2: rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__ClosureExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 786, rule__ClosureExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:12743:1: rule__ClosureExpression__Group_1__1__Impl : ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 787) ) { return ; }
            // InternalBeeLangTestLanguage.g:12747:1: ( ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:12748:1: ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:12748:1: ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) )
            // InternalBeeLangTestLanguage.g:12749:1: ( rule__ClosureExpression__ReturnTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:12750:1: ( rule__ClosureExpression__ReturnTypeAssignment_1_1 )
            // InternalBeeLangTestLanguage.g:12750:2: rule__ClosureExpression__ReturnTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ReturnTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 787, rule__ClosureExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__2"
    // InternalBeeLangTestLanguage.g:12760:1: rule__ClosureExpression__Group_1__2 : rule__ClosureExpression__Group_1__2__Impl ;
    public final void rule__ClosureExpression__Group_1__2() throws RecognitionException {
        int rule__ClosureExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 788) ) { return ; }
            // InternalBeeLangTestLanguage.g:12764:1: ( rule__ClosureExpression__Group_1__2__Impl )
            // InternalBeeLangTestLanguage.g:12765:2: rule__ClosureExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 788, rule__ClosureExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__2"


    // $ANTLR start "rule__ClosureExpression__Group_1__2__Impl"
    // InternalBeeLangTestLanguage.g:12771:1: rule__ClosureExpression__Group_1__2__Impl : ( '>' ) ;
    public final void rule__ClosureExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 789) ) { return ; }
            // InternalBeeLangTestLanguage.g:12775:1: ( ( '>' ) )
            // InternalBeeLangTestLanguage.g:12776:1: ( '>' )
            {
            // InternalBeeLangTestLanguage.g:12776:1: ( '>' )
            // InternalBeeLangTestLanguage.g:12777:1: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); 
            }
            match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 789, rule__ClosureExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__0"
    // InternalBeeLangTestLanguage.g:12796:1: rule__ClosureExpression__Group_2_0__0 : rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1 ;
    public final void rule__ClosureExpression__Group_2_0__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 790) ) { return ; }
            // InternalBeeLangTestLanguage.g:12800:1: ( rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1 )
            // InternalBeeLangTestLanguage.g:12801:2: rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 790, rule__ClosureExpression__Group_2_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__0__Impl"
    // InternalBeeLangTestLanguage.g:12808:1: rule__ClosureExpression__Group_2_0__0__Impl : ( ( '|' )? ) ;
    public final void rule__ClosureExpression__Group_2_0__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 791) ) { return ; }
            // InternalBeeLangTestLanguage.g:12812:1: ( ( ( '|' )? ) )
            // InternalBeeLangTestLanguage.g:12813:1: ( ( '|' )? )
            {
            // InternalBeeLangTestLanguage.g:12813:1: ( ( '|' )? )
            // InternalBeeLangTestLanguage.g:12814:1: ( '|' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:12815:1: ( '|' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==72) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:12816:2: '|'
                    {
                    match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 791, rule__ClosureExpression__Group_2_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__1"
    // InternalBeeLangTestLanguage.g:12827:1: rule__ClosureExpression__Group_2_0__1 : rule__ClosureExpression__Group_2_0__1__Impl ;
    public final void rule__ClosureExpression__Group_2_0__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 792) ) { return ; }
            // InternalBeeLangTestLanguage.g:12831:1: ( rule__ClosureExpression__Group_2_0__1__Impl )
            // InternalBeeLangTestLanguage.g:12832:2: rule__ClosureExpression__Group_2_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 792, rule__ClosureExpression__Group_2_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__1__Impl"
    // InternalBeeLangTestLanguage.g:12838:1: rule__ClosureExpression__Group_2_0__1__Impl : ( ( rule__ClosureExpression__Group_2_0_1__0 ) ) ;
    public final void rule__ClosureExpression__Group_2_0__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 793) ) { return ; }
            // InternalBeeLangTestLanguage.g:12842:1: ( ( ( rule__ClosureExpression__Group_2_0_1__0 ) ) )
            // InternalBeeLangTestLanguage.g:12843:1: ( ( rule__ClosureExpression__Group_2_0_1__0 ) )
            {
            // InternalBeeLangTestLanguage.g:12843:1: ( ( rule__ClosureExpression__Group_2_0_1__0 ) )
            // InternalBeeLangTestLanguage.g:12844:1: ( rule__ClosureExpression__Group_2_0_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1()); 
            }
            // InternalBeeLangTestLanguage.g:12845:1: ( rule__ClosureExpression__Group_2_0_1__0 )
            // InternalBeeLangTestLanguage.g:12845:2: rule__ClosureExpression__Group_2_0_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 793, rule__ClosureExpression__Group_2_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__0"
    // InternalBeeLangTestLanguage.g:12859:1: rule__ClosureExpression__Group_2_0_1__0 : rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1 ;
    public final void rule__ClosureExpression__Group_2_0_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 794) ) { return ; }
            // InternalBeeLangTestLanguage.g:12863:1: ( rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1 )
            // InternalBeeLangTestLanguage.g:12864:2: rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureExpression__Group_2_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 794, rule__ClosureExpression__Group_2_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__0__Impl"
    // InternalBeeLangTestLanguage.g:12871:1: rule__ClosureExpression__Group_2_0_1__0__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 795) ) { return ; }
            // InternalBeeLangTestLanguage.g:12875:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:12876:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:12876:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) )
            // InternalBeeLangTestLanguage.g:12877:1: ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:12878:1: ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 )
            // InternalBeeLangTestLanguage.g:12878:2: rule__ClosureExpression__ParametersAssignment_2_0_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 795, rule__ClosureExpression__Group_2_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__1"
    // InternalBeeLangTestLanguage.g:12888:1: rule__ClosureExpression__Group_2_0_1__1 : rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2 ;
    public final void rule__ClosureExpression__Group_2_0_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 796) ) { return ; }
            // InternalBeeLangTestLanguage.g:12892:1: ( rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2 )
            // InternalBeeLangTestLanguage.g:12893:2: rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureExpression__Group_2_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 796, rule__ClosureExpression__Group_2_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__1__Impl"
    // InternalBeeLangTestLanguage.g:12900:1: rule__ClosureExpression__Group_2_0_1__1__Impl : ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* ) ;
    public final void rule__ClosureExpression__Group_2_0_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 797) ) { return ; }
            // InternalBeeLangTestLanguage.g:12904:1: ( ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:12905:1: ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:12905:1: ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* )
            // InternalBeeLangTestLanguage.g:12906:1: ( rule__ClosureExpression__Group_2_0_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:12907:1: ( rule__ClosureExpression__Group_2_0_1_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==48) ) {
                    int LA88_1 = input.LA(2);

                    if ( (LA88_1==RULE_ID||LA88_1==60) ) {
                        alt88=1;
                    }


                }


                switch (alt88) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:12907:2: rule__ClosureExpression__Group_2_0_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ClosureExpression__Group_2_0_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 797, rule__ClosureExpression__Group_2_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__2"
    // InternalBeeLangTestLanguage.g:12917:1: rule__ClosureExpression__Group_2_0_1__2 : rule__ClosureExpression__Group_2_0_1__2__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1__2() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 798) ) { return ; }
            // InternalBeeLangTestLanguage.g:12921:1: ( rule__ClosureExpression__Group_2_0_1__2__Impl )
            // InternalBeeLangTestLanguage.g:12922:2: rule__ClosureExpression__Group_2_0_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 798, rule__ClosureExpression__Group_2_0_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__2"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__2__Impl"
    // InternalBeeLangTestLanguage.g:12928:1: rule__ClosureExpression__Group_2_0_1__2__Impl : ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? ) ;
    public final void rule__ClosureExpression__Group_2_0_1__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 799) ) { return ; }
            // InternalBeeLangTestLanguage.g:12932:1: ( ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? ) )
            // InternalBeeLangTestLanguage.g:12933:1: ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? )
            {
            // InternalBeeLangTestLanguage.g:12933:1: ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? )
            // InternalBeeLangTestLanguage.g:12934:1: ( rule__ClosureExpression__Group_2_0_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_2()); 
            }
            // InternalBeeLangTestLanguage.g:12935:1: ( rule__ClosureExpression__Group_2_0_1_2__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==48) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:12935:2: rule__ClosureExpression__Group_2_0_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_0_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 799, rule__ClosureExpression__Group_2_0_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__0"
    // InternalBeeLangTestLanguage.g:12951:1: rule__ClosureExpression__Group_2_0_1_1__0 : rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1 ;
    public final void rule__ClosureExpression__Group_2_0_1_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 800) ) { return ; }
            // InternalBeeLangTestLanguage.g:12955:1: ( rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1 )
            // InternalBeeLangTestLanguage.g:12956:2: rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 800, rule__ClosureExpression__Group_2_0_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__0"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser10 extends InternalBeeLangTestLanguageParser9 {

        InternalBeeLangTestLanguageParser10(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser10(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__0__Impl"
    // InternalBeeLangTestLanguage.g:12963:1: rule__ClosureExpression__Group_2_0_1_1__0__Impl : ( ',' ) ;
    public final void rule__ClosureExpression__Group_2_0_1_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 801) ) { return ; }
            // InternalBeeLangTestLanguage.g:12967:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:12968:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:12968:1: ( ',' )
            // InternalBeeLangTestLanguage.g:12969:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 801, rule__ClosureExpression__Group_2_0_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__1"
    // InternalBeeLangTestLanguage.g:12982:1: rule__ClosureExpression__Group_2_0_1_1__1 : rule__ClosureExpression__Group_2_0_1_1__1__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 802) ) { return ; }
            // InternalBeeLangTestLanguage.g:12986:1: ( rule__ClosureExpression__Group_2_0_1_1__1__Impl )
            // InternalBeeLangTestLanguage.g:12987:2: rule__ClosureExpression__Group_2_0_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 802, rule__ClosureExpression__Group_2_0_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__1__Impl"
    // InternalBeeLangTestLanguage.g:12993:1: rule__ClosureExpression__Group_2_0_1_1__1__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 803) ) { return ; }
            // InternalBeeLangTestLanguage.g:12997:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:12998:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:12998:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) )
            // InternalBeeLangTestLanguage.g:12999:1: ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:13000:1: ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 )
            // InternalBeeLangTestLanguage.g:13000:2: rule__ClosureExpression__ParametersAssignment_2_0_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 803, rule__ClosureExpression__Group_2_0_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__0"
    // InternalBeeLangTestLanguage.g:13014:1: rule__ClosureExpression__Group_2_0_1_2__0 : rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1 ;
    public final void rule__ClosureExpression__Group_2_0_1_2__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 804) ) { return ; }
            // InternalBeeLangTestLanguage.g:13018:1: ( rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1 )
            // InternalBeeLangTestLanguage.g:13019:2: rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__ClosureExpression__Group_2_0_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 804, rule__ClosureExpression__Group_2_0_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__0__Impl"
    // InternalBeeLangTestLanguage.g:13026:1: rule__ClosureExpression__Group_2_0_1_2__0__Impl : ( ',' ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 805) ) { return ; }
            // InternalBeeLangTestLanguage.g:13030:1: ( ( ',' ) )
            // InternalBeeLangTestLanguage.g:13031:1: ( ',' )
            {
            // InternalBeeLangTestLanguage.g:13031:1: ( ',' )
            // InternalBeeLangTestLanguage.g:13032:1: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 805, rule__ClosureExpression__Group_2_0_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__1"
    // InternalBeeLangTestLanguage.g:13045:1: rule__ClosureExpression__Group_2_0_1_2__1 : rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2 ;
    public final void rule__ClosureExpression__Group_2_0_1_2__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 806) ) { return ; }
            // InternalBeeLangTestLanguage.g:13049:1: ( rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2 )
            // InternalBeeLangTestLanguage.g:13050:2: rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 806, rule__ClosureExpression__Group_2_0_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__1__Impl"
    // InternalBeeLangTestLanguage.g:13057:1: rule__ClosureExpression__Group_2_0_1_2__1__Impl : ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 807) ) { return ; }
            // InternalBeeLangTestLanguage.g:13061:1: ( ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) ) )
            // InternalBeeLangTestLanguage.g:13062:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) )
            {
            // InternalBeeLangTestLanguage.g:13062:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) )
            // InternalBeeLangTestLanguage.g:13063:1: ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_1_2_1()); 
            }
            // InternalBeeLangTestLanguage.g:13064:1: ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 )
            // InternalBeeLangTestLanguage.g:13064:2: rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 807, rule__ClosureExpression__Group_2_0_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__2"
    // InternalBeeLangTestLanguage.g:13074:1: rule__ClosureExpression__Group_2_0_1_2__2 : rule__ClosureExpression__Group_2_0_1_2__2__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1_2__2() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 808) ) { return ; }
            // InternalBeeLangTestLanguage.g:13078:1: ( rule__ClosureExpression__Group_2_0_1_2__2__Impl )
            // InternalBeeLangTestLanguage.g:13079:2: rule__ClosureExpression__Group_2_0_1_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 808, rule__ClosureExpression__Group_2_0_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__2"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__2__Impl"
    // InternalBeeLangTestLanguage.g:13085:1: rule__ClosureExpression__Group_2_0_1_2__2__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 809) ) { return ; }
            // InternalBeeLangTestLanguage.g:13089:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) ) )
            // InternalBeeLangTestLanguage.g:13090:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) )
            {
            // InternalBeeLangTestLanguage.g:13090:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) )
            // InternalBeeLangTestLanguage.g:13091:1: ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:13092:1: ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 )
            // InternalBeeLangTestLanguage.g:13092:2: rule__ClosureExpression__ParametersAssignment_2_0_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 809, rule__ClosureExpression__Group_2_0_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__0"
    // InternalBeeLangTestLanguage.g:13108:1: rule__ClosureExpression__Group_2_1__0 : rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1 ;
    public final void rule__ClosureExpression__Group_2_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 810) ) { return ; }
            // InternalBeeLangTestLanguage.g:13112:1: ( rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1 )
            // InternalBeeLangTestLanguage.g:13113:2: rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 810, rule__ClosureExpression__Group_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__0__Impl"
    // InternalBeeLangTestLanguage.g:13120:1: rule__ClosureExpression__Group_2_1__0__Impl : ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) ) ;
    public final void rule__ClosureExpression__Group_2_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 811) ) { return ; }
            // InternalBeeLangTestLanguage.g:13124:1: ( ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:13125:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:13125:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) )
            // InternalBeeLangTestLanguage.g:13126:1: ( rule__ClosureExpression__VarArgsAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13127:1: ( rule__ClosureExpression__VarArgsAssignment_2_1_0 )
            // InternalBeeLangTestLanguage.g:13127:2: rule__ClosureExpression__VarArgsAssignment_2_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__VarArgsAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 811, rule__ClosureExpression__Group_2_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__1"
    // InternalBeeLangTestLanguage.g:13137:1: rule__ClosureExpression__Group_2_1__1 : rule__ClosureExpression__Group_2_1__1__Impl ;
    public final void rule__ClosureExpression__Group_2_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 812) ) { return ; }
            // InternalBeeLangTestLanguage.g:13141:1: ( rule__ClosureExpression__Group_2_1__1__Impl )
            // InternalBeeLangTestLanguage.g:13142:2: rule__ClosureExpression__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 812, rule__ClosureExpression__Group_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__1__Impl"
    // InternalBeeLangTestLanguage.g:13148:1: rule__ClosureExpression__Group_2_1__1__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 813) ) { return ; }
            // InternalBeeLangTestLanguage.g:13152:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) ) )
            // InternalBeeLangTestLanguage.g:13153:1: ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) )
            {
            // InternalBeeLangTestLanguage.g:13153:1: ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) )
            // InternalBeeLangTestLanguage.g:13154:1: ( rule__ClosureExpression__ParametersAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); 
            }
            // InternalBeeLangTestLanguage.g:13155:1: ( rule__ClosureExpression__ParametersAssignment_2_1_1 )
            // InternalBeeLangTestLanguage.g:13155:2: rule__ClosureExpression__ParametersAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 813, rule__ClosureExpression__Group_2_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__0"
    // InternalBeeLangTestLanguage.g:13169:1: rule__BlockExpressionWithoutBrackets__Group__0 : rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1 ;
    public final void rule__BlockExpressionWithoutBrackets__Group__0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 814) ) { return ; }
            // InternalBeeLangTestLanguage.g:13173:1: ( rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1 )
            // InternalBeeLangTestLanguage.g:13174:2: rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__BlockExpressionWithoutBrackets__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 814, rule__BlockExpressionWithoutBrackets__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__0"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:13181:1: rule__BlockExpressionWithoutBrackets__Group__0__Impl : ( () ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group__0__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 815) ) { return ; }
            // InternalBeeLangTestLanguage.g:13185:1: ( ( () ) )
            // InternalBeeLangTestLanguage.g:13186:1: ( () )
            {
            // InternalBeeLangTestLanguage.g:13186:1: ( () )
            // InternalBeeLangTestLanguage.g:13187:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0()); 
            }
            // InternalBeeLangTestLanguage.g:13188:1: ()
            // InternalBeeLangTestLanguage.g:13190:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 815, rule__BlockExpressionWithoutBrackets__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__0__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__1"
    // InternalBeeLangTestLanguage.g:13200:1: rule__BlockExpressionWithoutBrackets__Group__1 : rule__BlockExpressionWithoutBrackets__Group__1__Impl ;
    public final void rule__BlockExpressionWithoutBrackets__Group__1() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 816) ) { return ; }
            // InternalBeeLangTestLanguage.g:13204:1: ( rule__BlockExpressionWithoutBrackets__Group__1__Impl )
            // InternalBeeLangTestLanguage.g:13205:2: rule__BlockExpressionWithoutBrackets__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 816, rule__BlockExpressionWithoutBrackets__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__1"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:13211:1: rule__BlockExpressionWithoutBrackets__Group__1__Impl : ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group__1__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 817) ) { return ; }
            // InternalBeeLangTestLanguage.g:13215:1: ( ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) ) )
            // InternalBeeLangTestLanguage.g:13216:1: ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) )
            {
            // InternalBeeLangTestLanguage.g:13216:1: ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) )
            // InternalBeeLangTestLanguage.g:13217:1: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* )
            {
            // InternalBeeLangTestLanguage.g:13217:1: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) )
            // InternalBeeLangTestLanguage.g:13218:1: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:13219:1: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )
            // InternalBeeLangTestLanguage.g:13219:2: rule__BlockExpressionWithoutBrackets__Group_1__0
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__BlockExpressionWithoutBrackets__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }

            }

            // InternalBeeLangTestLanguage.g:13222:1: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* )
            // InternalBeeLangTestLanguage.g:13223:1: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }
            // InternalBeeLangTestLanguage.g:13224:1: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==RULE_STRING||LA90_0==RULE_ID||LA90_0==13||LA90_0==29||LA90_0==31||(LA90_0>=35 && LA90_0<=44)||LA90_0==60||LA90_0==63||LA90_0==69||LA90_0==71||LA90_0==74||LA90_0==76) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:13224:2: rule__BlockExpressionWithoutBrackets__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__BlockExpressionWithoutBrackets__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 817, rule__BlockExpressionWithoutBrackets__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__1__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__0"
    // InternalBeeLangTestLanguage.g:13239:1: rule__BlockExpressionWithoutBrackets__Group_1__0 : rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1 ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 818) ) { return ; }
            // InternalBeeLangTestLanguage.g:13243:1: ( rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1 )
            // InternalBeeLangTestLanguage.g:13244:2: rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__BlockExpressionWithoutBrackets__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 818, rule__BlockExpressionWithoutBrackets__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__0"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__0__Impl"
    // InternalBeeLangTestLanguage.g:13251:1: rule__BlockExpressionWithoutBrackets__Group_1__0__Impl : ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__0__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 819) ) { return ; }
            // InternalBeeLangTestLanguage.g:13255:1: ( ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:13256:1: ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:13256:1: ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) )
            // InternalBeeLangTestLanguage.g:13257:1: ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:13258:1: ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 )
            // InternalBeeLangTestLanguage.g:13258:2: rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 819, rule__BlockExpressionWithoutBrackets__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__0__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__1"
    // InternalBeeLangTestLanguage.g:13268:1: rule__BlockExpressionWithoutBrackets__Group_1__1 : rule__BlockExpressionWithoutBrackets__Group_1__1__Impl ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__1() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 820) ) { return ; }
            // InternalBeeLangTestLanguage.g:13272:1: ( rule__BlockExpressionWithoutBrackets__Group_1__1__Impl )
            // InternalBeeLangTestLanguage.g:13273:2: rule__BlockExpressionWithoutBrackets__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 820, rule__BlockExpressionWithoutBrackets__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__1"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__1__Impl"
    // InternalBeeLangTestLanguage.g:13279:1: rule__BlockExpressionWithoutBrackets__Group_1__1__Impl : ( ';' ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__1__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 821) ) { return ; }
            // InternalBeeLangTestLanguage.g:13283:1: ( ( ';' ) )
            // InternalBeeLangTestLanguage.g:13284:1: ( ';' )
            {
            // InternalBeeLangTestLanguage.g:13284:1: ( ';' )
            // InternalBeeLangTestLanguage.g:13285:1: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 821, rule__BlockExpressionWithoutBrackets__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__1__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__0"
    // InternalBeeLangTestLanguage.g:13302:1: rule__ParanthesizedExpression__Group__0 : rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1 ;
    public final void rule__ParanthesizedExpression__Group__0() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 822) ) { return ; }
            // InternalBeeLangTestLanguage.g:13306:1: ( rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1 )
            // InternalBeeLangTestLanguage.g:13307:2: rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ParanthesizedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 822, rule__ParanthesizedExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__0"


    // $ANTLR start "rule__ParanthesizedExpression__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:13314:1: rule__ParanthesizedExpression__Group__0__Impl : ( '(' ) ;
    public final void rule__ParanthesizedExpression__Group__0__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 823) ) { return ; }
            // InternalBeeLangTestLanguage.g:13318:1: ( ( '(' ) )
            // InternalBeeLangTestLanguage.g:13319:1: ( '(' )
            {
            // InternalBeeLangTestLanguage.g:13319:1: ( '(' )
            // InternalBeeLangTestLanguage.g:13320:1: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 823, rule__ParanthesizedExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__0__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__1"
    // InternalBeeLangTestLanguage.g:13333:1: rule__ParanthesizedExpression__Group__1 : rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2 ;
    public final void rule__ParanthesizedExpression__Group__1() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 824) ) { return ; }
            // InternalBeeLangTestLanguage.g:13337:1: ( rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2 )
            // InternalBeeLangTestLanguage.g:13338:2: rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__ParanthesizedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 824, rule__ParanthesizedExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__1"


    // $ANTLR start "rule__ParanthesizedExpression__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:13345:1: rule__ParanthesizedExpression__Group__1__Impl : ( ruleExpression ) ;
    public final void rule__ParanthesizedExpression__Group__1__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 825) ) { return ; }
            // InternalBeeLangTestLanguage.g:13349:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:13350:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:13350:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:13351:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 825, rule__ParanthesizedExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__1__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__2"
    // InternalBeeLangTestLanguage.g:13362:1: rule__ParanthesizedExpression__Group__2 : rule__ParanthesizedExpression__Group__2__Impl ;
    public final void rule__ParanthesizedExpression__Group__2() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 826) ) { return ; }
            // InternalBeeLangTestLanguage.g:13366:1: ( rule__ParanthesizedExpression__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:13367:2: rule__ParanthesizedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 826, rule__ParanthesizedExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__2"


    // $ANTLR start "rule__ParanthesizedExpression__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:13373:1: rule__ParanthesizedExpression__Group__2__Impl : ( ')' ) ;
    public final void rule__ParanthesizedExpression__Group__2__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 827) ) { return ; }
            // InternalBeeLangTestLanguage.g:13377:1: ( ( ')' ) )
            // InternalBeeLangTestLanguage.g:13378:1: ( ')' )
            {
            // InternalBeeLangTestLanguage.g:13378:1: ( ')' )
            // InternalBeeLangTestLanguage.g:13379:1: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 827, rule__ParanthesizedExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__2__Impl"


    // $ANTLR start "rule__QID__Group__0"
    // InternalBeeLangTestLanguage.g:13398:1: rule__QID__Group__0 : rule__QID__Group__0__Impl rule__QID__Group__1 ;
    public final void rule__QID__Group__0() throws RecognitionException {
        int rule__QID__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 828) ) { return ; }
            // InternalBeeLangTestLanguage.g:13402:1: ( rule__QID__Group__0__Impl rule__QID__Group__1 )
            // InternalBeeLangTestLanguage.g:13403:2: rule__QID__Group__0__Impl rule__QID__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__QID__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 828, rule__QID__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__0"


    // $ANTLR start "rule__QID__Group__0__Impl"
    // InternalBeeLangTestLanguage.g:13410:1: rule__QID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QID__Group__0__Impl() throws RecognitionException {
        int rule__QID__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 829) ) { return ; }
            // InternalBeeLangTestLanguage.g:13414:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13415:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13415:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13416:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 829, rule__QID__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__0__Impl"


    // $ANTLR start "rule__QID__Group__1"
    // InternalBeeLangTestLanguage.g:13427:1: rule__QID__Group__1 : rule__QID__Group__1__Impl rule__QID__Group__2 ;
    public final void rule__QID__Group__1() throws RecognitionException {
        int rule__QID__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 830) ) { return ; }
            // InternalBeeLangTestLanguage.g:13431:1: ( rule__QID__Group__1__Impl rule__QID__Group__2 )
            // InternalBeeLangTestLanguage.g:13432:2: rule__QID__Group__1__Impl rule__QID__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__QID__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 830, rule__QID__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__1"


    // $ANTLR start "rule__QID__Group__1__Impl"
    // InternalBeeLangTestLanguage.g:13439:1: rule__QID__Group__1__Impl : ( ( rule__QID__Alternatives_1 )* ) ;
    public final void rule__QID__Group__1__Impl() throws RecognitionException {
        int rule__QID__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 831) ) { return ; }
            // InternalBeeLangTestLanguage.g:13443:1: ( ( ( rule__QID__Alternatives_1 )* ) )
            // InternalBeeLangTestLanguage.g:13444:1: ( ( rule__QID__Alternatives_1 )* )
            {
            // InternalBeeLangTestLanguage.g:13444:1: ( ( rule__QID__Alternatives_1 )* )
            // InternalBeeLangTestLanguage.g:13445:1: ( rule__QID__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getAlternatives_1()); 
            }
            // InternalBeeLangTestLanguage.g:13446:1: ( rule__QID__Alternatives_1 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( ((LA91_0>=RULE_INT && LA91_0<=RULE_ID)) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:13446:2: rule__QID__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    rule__QID__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 831, rule__QID__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__1__Impl"


    // $ANTLR start "rule__QID__Group__2"
    // InternalBeeLangTestLanguage.g:13456:1: rule__QID__Group__2 : rule__QID__Group__2__Impl ;
    public final void rule__QID__Group__2() throws RecognitionException {
        int rule__QID__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 832) ) { return ; }
            // InternalBeeLangTestLanguage.g:13460:1: ( rule__QID__Group__2__Impl )
            // InternalBeeLangTestLanguage.g:13461:2: rule__QID__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 832, rule__QID__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__2"


    // $ANTLR start "rule__QID__Group__2__Impl"
    // InternalBeeLangTestLanguage.g:13467:1: rule__QID__Group__2__Impl : ( ( rule__QID__Group_2__0 )* ) ;
    public final void rule__QID__Group__2__Impl() throws RecognitionException {
        int rule__QID__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 833) ) { return ; }
            // InternalBeeLangTestLanguage.g:13471:1: ( ( ( rule__QID__Group_2__0 )* ) )
            // InternalBeeLangTestLanguage.g:13472:1: ( ( rule__QID__Group_2__0 )* )
            {
            // InternalBeeLangTestLanguage.g:13472:1: ( ( rule__QID__Group_2__0 )* )
            // InternalBeeLangTestLanguage.g:13473:1: ( rule__QID__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getGroup_2()); 
            }
            // InternalBeeLangTestLanguage.g:13474:1: ( rule__QID__Group_2__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==66) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:13474:2: rule__QID__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_78);
            	    rule__QID__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 833, rule__QID__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__2__Impl"


    // $ANTLR start "rule__QID__Group_2__0"
    // InternalBeeLangTestLanguage.g:13490:1: rule__QID__Group_2__0 : rule__QID__Group_2__0__Impl rule__QID__Group_2__1 ;
    public final void rule__QID__Group_2__0() throws RecognitionException {
        int rule__QID__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 834) ) { return ; }
            // InternalBeeLangTestLanguage.g:13494:1: ( rule__QID__Group_2__0__Impl rule__QID__Group_2__1 )
            // InternalBeeLangTestLanguage.g:13495:2: rule__QID__Group_2__0__Impl rule__QID__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__QID__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 834, rule__QID__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__0"


    // $ANTLR start "rule__QID__Group_2__0__Impl"
    // InternalBeeLangTestLanguage.g:13502:1: rule__QID__Group_2__0__Impl : ( '.' ) ;
    public final void rule__QID__Group_2__0__Impl() throws RecognitionException {
        int rule__QID__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 835) ) { return ; }
            // InternalBeeLangTestLanguage.g:13506:1: ( ( '.' ) )
            // InternalBeeLangTestLanguage.g:13507:1: ( '.' )
            {
            // InternalBeeLangTestLanguage.g:13507:1: ( '.' )
            // InternalBeeLangTestLanguage.g:13508:1: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 835, rule__QID__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__0__Impl"


    // $ANTLR start "rule__QID__Group_2__1"
    // InternalBeeLangTestLanguage.g:13521:1: rule__QID__Group_2__1 : rule__QID__Group_2__1__Impl rule__QID__Group_2__2 ;
    public final void rule__QID__Group_2__1() throws RecognitionException {
        int rule__QID__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 836) ) { return ; }
            // InternalBeeLangTestLanguage.g:13525:1: ( rule__QID__Group_2__1__Impl rule__QID__Group_2__2 )
            // InternalBeeLangTestLanguage.g:13526:2: rule__QID__Group_2__1__Impl rule__QID__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__QID__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 836, rule__QID__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__1"


    // $ANTLR start "rule__QID__Group_2__1__Impl"
    // InternalBeeLangTestLanguage.g:13533:1: rule__QID__Group_2__1__Impl : ( RULE_ID ) ;
    public final void rule__QID__Group_2__1__Impl() throws RecognitionException {
        int rule__QID__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 837) ) { return ; }
            // InternalBeeLangTestLanguage.g:13537:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:13538:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:13538:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:13539:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 837, rule__QID__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__1__Impl"


    // $ANTLR start "rule__QID__Group_2__2"
    // InternalBeeLangTestLanguage.g:13550:1: rule__QID__Group_2__2 : rule__QID__Group_2__2__Impl ;
    public final void rule__QID__Group_2__2() throws RecognitionException {
        int rule__QID__Group_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 838) ) { return ; }
            // InternalBeeLangTestLanguage.g:13554:1: ( rule__QID__Group_2__2__Impl )
            // InternalBeeLangTestLanguage.g:13555:2: rule__QID__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 838, rule__QID__Group_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__2"


    // $ANTLR start "rule__QID__Group_2__2__Impl"
    // InternalBeeLangTestLanguage.g:13561:1: rule__QID__Group_2__2__Impl : ( ( rule__QID__Alternatives_2_2 )* ) ;
    public final void rule__QID__Group_2__2__Impl() throws RecognitionException {
        int rule__QID__Group_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 839) ) { return ; }
            // InternalBeeLangTestLanguage.g:13565:1: ( ( ( rule__QID__Alternatives_2_2 )* ) )
            // InternalBeeLangTestLanguage.g:13566:1: ( ( rule__QID__Alternatives_2_2 )* )
            {
            // InternalBeeLangTestLanguage.g:13566:1: ( ( rule__QID__Alternatives_2_2 )* )
            // InternalBeeLangTestLanguage.g:13567:1: ( rule__QID__Alternatives_2_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getAlternatives_2_2()); 
            }
            // InternalBeeLangTestLanguage.g:13568:1: ( rule__QID__Alternatives_2_2 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( ((LA93_0>=RULE_INT && LA93_0<=RULE_ID)) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalBeeLangTestLanguage.g:13568:2: rule__QID__Alternatives_2_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    rule__QID__Alternatives_2_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getAlternatives_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 839, rule__QID__Group_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__2__Impl"


    // $ANTLR start "rule__Unit__UnorderedGroup_7"
    // InternalBeeLangTestLanguage.g:13585:1: rule__Unit__UnorderedGroup_7 : ( rule__Unit__UnorderedGroup_7__0 )? ;
    public final void rule__Unit__UnorderedGroup_7() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7_StartIndex = input.index();

            	int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 840) ) { return ; }
            // InternalBeeLangTestLanguage.g:13590:1: ( ( rule__Unit__UnorderedGroup_7__0 )? )
            // InternalBeeLangTestLanguage.g:13591:2: ( rule__Unit__UnorderedGroup_7__0 )?
            {
            // InternalBeeLangTestLanguage.g:13591:2: ( rule__Unit__UnorderedGroup_7__0 )?
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 840, rule__Unit__UnorderedGroup_7_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__Impl"
    // InternalBeeLangTestLanguage.g:13601:1: rule__Unit__UnorderedGroup_7__Impl : ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) ) ;
    public final void rule__Unit__UnorderedGroup_7__Impl() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 841) ) { return ; }
            // InternalBeeLangTestLanguage.g:13606:1: ( ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) ) )
            // InternalBeeLangTestLanguage.g:13607:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) )
            {
            // InternalBeeLangTestLanguage.g:13607:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) )
            int alt99=6;
            int LA99_0 = input.LA(1);

            if ( LA99_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                alt99=1;
            }
            else if ( LA99_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                alt99=2;
            }
            else if ( LA99_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                alt99=3;
            }
            else if ( (LA99_0==52) ) {
                int LA99_4 = input.LA(2);

                if ( LA99_4 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                    alt99=4;
                }
                else if ( LA99_4 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                    alt99=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 4, input);

                    throw nvae;
                }
            }
            else if ( ( LA99_0 >= RULE_ID && LA99_0 <= RULE_DOCUMENTATION || LA99_0 == 59 || LA99_0 == 74 ) && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                alt99=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:13609:4: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13609:4: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:13610:5: {...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
                    }
                    // InternalBeeLangTestLanguage.g:13610:101: ( ( ( rule__Unit__Group_7_0__0 ) ) )
                    // InternalBeeLangTestLanguage.g:13611:6: ( ( rule__Unit__Group_7_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13617:6: ( ( rule__Unit__Group_7_0__0 ) )
                    // InternalBeeLangTestLanguage.g:13619:7: ( rule__Unit__Group_7_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:13620:7: ( rule__Unit__Group_7_0__0 )
                    // InternalBeeLangTestLanguage.g:13620:8: rule__Unit__Group_7_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_7_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:13626:4: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13626:4: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:13627:5: {...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
                    }
                    // InternalBeeLangTestLanguage.g:13627:101: ( ( ( rule__Unit__Group_7_1__0 ) ) )
                    // InternalBeeLangTestLanguage.g:13628:6: ( ( rule__Unit__Group_7_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13634:6: ( ( rule__Unit__Group_7_1__0 ) )
                    // InternalBeeLangTestLanguage.g:13636:7: ( rule__Unit__Group_7_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:13637:7: ( rule__Unit__Group_7_1__0 )
                    // InternalBeeLangTestLanguage.g:13637:8: rule__Unit__Group_7_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_7_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:13643:4: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13643:4: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
                    // InternalBeeLangTestLanguage.g:13644:5: {...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
                    }
                    // InternalBeeLangTestLanguage.g:13644:101: ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
                    // InternalBeeLangTestLanguage.g:13645:6: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13651:6: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
                    // InternalBeeLangTestLanguage.g:13652:6: ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
                    {
                    // InternalBeeLangTestLanguage.g:13652:6: ( ( rule__Unit__Group_7_2__0 ) )
                    // InternalBeeLangTestLanguage.g:13653:7: ( rule__Unit__Group_7_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:13654:7: ( rule__Unit__Group_7_2__0 )
                    // InternalBeeLangTestLanguage.g:13654:8: rule__Unit__Group_7_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_80);
                    rule__Unit__Group_7_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }

                    }

                    // InternalBeeLangTestLanguage.g:13657:6: ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
                    // InternalBeeLangTestLanguage.g:13658:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:13659:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
                    loop95:
                    do {
                        int alt95=2;
                        alt95 = dfa95.predict(input);
                        switch (alt95) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:13659:8: ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    rule__Unit__Group_7_2__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:13665:4: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13665:4: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
                    // InternalBeeLangTestLanguage.g:13666:5: {...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
                    }
                    // InternalBeeLangTestLanguage.g:13666:101: ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
                    // InternalBeeLangTestLanguage.g:13667:6: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13673:6: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
                    // InternalBeeLangTestLanguage.g:13674:6: ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
                    {
                    // InternalBeeLangTestLanguage.g:13674:6: ( ( rule__Unit__Group_7_3__0 ) )
                    // InternalBeeLangTestLanguage.g:13675:7: ( rule__Unit__Group_7_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }
                    // InternalBeeLangTestLanguage.g:13676:7: ( rule__Unit__Group_7_3__0 )
                    // InternalBeeLangTestLanguage.g:13676:8: rule__Unit__Group_7_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_81);
                    rule__Unit__Group_7_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }

                    }

                    // InternalBeeLangTestLanguage.g:13679:6: ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
                    // InternalBeeLangTestLanguage.g:13680:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }
                    // InternalBeeLangTestLanguage.g:13681:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
                    loop96:
                    do {
                        int alt96=2;
                        alt96 = dfa96.predict(input);
                        switch (alt96) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:13681:8: ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    rule__Unit__Group_7_3__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:13687:4: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13687:4: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
                    // InternalBeeLangTestLanguage.g:13688:5: {...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
                    }
                    // InternalBeeLangTestLanguage.g:13688:101: ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
                    // InternalBeeLangTestLanguage.g:13689:6: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13695:6: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
                    // InternalBeeLangTestLanguage.g:13696:6: ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
                    {
                    // InternalBeeLangTestLanguage.g:13696:6: ( ( rule__Unit__Group_7_4__0 ) )
                    // InternalBeeLangTestLanguage.g:13697:7: ( rule__Unit__Group_7_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }
                    // InternalBeeLangTestLanguage.g:13698:7: ( rule__Unit__Group_7_4__0 )
                    // InternalBeeLangTestLanguage.g:13698:8: rule__Unit__Group_7_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_81);
                    rule__Unit__Group_7_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }

                    }

                    // InternalBeeLangTestLanguage.g:13701:6: ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
                    // InternalBeeLangTestLanguage.g:13702:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }
                    // InternalBeeLangTestLanguage.g:13703:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
                    loop97:
                    do {
                        int alt97=2;
                        alt97 = dfa97.predict(input);
                        switch (alt97) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:13703:8: ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    rule__Unit__Group_7_4__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalBeeLangTestLanguage.g:13709:4: ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13709:4: ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) )
                    // InternalBeeLangTestLanguage.g:13710:5: {...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5)");
                    }
                    // InternalBeeLangTestLanguage.g:13710:101: ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) )
                    // InternalBeeLangTestLanguage.g:13711:6: ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13717:6: ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) )
                    // InternalBeeLangTestLanguage.g:13718:6: ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* )
                    {
                    // InternalBeeLangTestLanguage.g:13718:6: ( ( rule__Unit__FunctionsAssignment_7_5 ) )
                    // InternalBeeLangTestLanguage.g:13719:7: ( rule__Unit__FunctionsAssignment_7_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }
                    // InternalBeeLangTestLanguage.g:13720:7: ( rule__Unit__FunctionsAssignment_7_5 )
                    // InternalBeeLangTestLanguage.g:13720:8: rule__Unit__FunctionsAssignment_7_5
                    {
                    pushFollow(FollowSets000.FOLLOW_82);
                    rule__Unit__FunctionsAssignment_7_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }

                    }

                    // InternalBeeLangTestLanguage.g:13723:6: ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* )
                    // InternalBeeLangTestLanguage.g:13724:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }
                    // InternalBeeLangTestLanguage.g:13725:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*
                    loop98:
                    do {
                        int alt98=2;
                        alt98 = dfa98.predict(input);
                        switch (alt98) {
                    	case 1 :
                    	    // InternalBeeLangTestLanguage.g:13725:8: ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_82);
                    	    rule__Unit__FunctionsAssignment_7_5();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 841, rule__Unit__UnorderedGroup_7__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__Impl"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__0"
    // InternalBeeLangTestLanguage.g:13740:1: rule__Unit__UnorderedGroup_7__0 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )? ;
    public final void rule__Unit__UnorderedGroup_7__0() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 842) ) { return ; }
            // InternalBeeLangTestLanguage.g:13744:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )? )
            // InternalBeeLangTestLanguage.g:13745:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:13746:2: ( rule__Unit__UnorderedGroup_7__1 )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 842, rule__Unit__UnorderedGroup_7__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__0"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__1"
    // InternalBeeLangTestLanguage.g:13753:1: rule__Unit__UnorderedGroup_7__1 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )? ;
    public final void rule__Unit__UnorderedGroup_7__1() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 843) ) { return ; }
            // InternalBeeLangTestLanguage.g:13757:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )? )
            // InternalBeeLangTestLanguage.g:13758:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:13759:2: ( rule__Unit__UnorderedGroup_7__2 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 843, rule__Unit__UnorderedGroup_7__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__1"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__2"
    // InternalBeeLangTestLanguage.g:13766:1: rule__Unit__UnorderedGroup_7__2 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )? ;
    public final void rule__Unit__UnorderedGroup_7__2() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 844) ) { return ; }
            // InternalBeeLangTestLanguage.g:13770:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )? )
            // InternalBeeLangTestLanguage.g:13771:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:13772:2: ( rule__Unit__UnorderedGroup_7__3 )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 844, rule__Unit__UnorderedGroup_7__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__2"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__3"
    // InternalBeeLangTestLanguage.g:13779:1: rule__Unit__UnorderedGroup_7__3 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )? ;
    public final void rule__Unit__UnorderedGroup_7__3() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 845) ) { return ; }
            // InternalBeeLangTestLanguage.g:13783:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )? )
            // InternalBeeLangTestLanguage.g:13784:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:13785:2: ( rule__Unit__UnorderedGroup_7__4 )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 845, rule__Unit__UnorderedGroup_7__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__3"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__4"
    // InternalBeeLangTestLanguage.g:13792:1: rule__Unit__UnorderedGroup_7__4 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )? ;
    public final void rule__Unit__UnorderedGroup_7__4() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 846) ) { return ; }
            // InternalBeeLangTestLanguage.g:13796:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )? )
            // InternalBeeLangTestLanguage.g:13797:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:13798:2: ( rule__Unit__UnorderedGroup_7__5 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 846, rule__Unit__UnorderedGroup_7__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__4"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__5"
    // InternalBeeLangTestLanguage.g:13805:1: rule__Unit__UnorderedGroup_7__5 : rule__Unit__UnorderedGroup_7__Impl ;
    public final void rule__Unit__UnorderedGroup_7__5() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 847) ) { return ; }
            // InternalBeeLangTestLanguage.g:13809:1: ( rule__Unit__UnorderedGroup_7__Impl )
            // InternalBeeLangTestLanguage.g:13810:2: rule__Unit__UnorderedGroup_7__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 847, rule__Unit__UnorderedGroup_7__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__5"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1"
    // InternalBeeLangTestLanguage.g:13829:1: rule__ProvidedCapability__UnorderedGroup_2_1 : rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1_StartIndex = input.index();

            	int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 848) ) { return ; }
            // InternalBeeLangTestLanguage.g:13834:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?)
            // InternalBeeLangTestLanguage.g:13835:2: rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1__0();

            state._fsp--;
            if (state.failed) return ;
            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()) ) {
                if (state.backtracking>0) {state.failed=true; return ;}
                throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 848, rule__ProvidedCapability__UnorderedGroup_2_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__Impl"
    // InternalBeeLangTestLanguage.g:13846:1: rule__ProvidedCapability__UnorderedGroup_2_1__Impl : ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) ) ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 849) ) { return ; }
            // InternalBeeLangTestLanguage.g:13851:1: ( ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) ) )
            // InternalBeeLangTestLanguage.g:13852:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) )
            {
            // InternalBeeLangTestLanguage.g:13852:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) )
            int alt105=3;
            int LA105_0 = input.LA(1);

            if ( LA105_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt105=1;
            }
            else if ( LA105_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt105=2;
            }
            else if ( LA105_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt105=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:13854:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13854:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:13855:5: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
                    }
                    // InternalBeeLangTestLanguage.g:13855:117: ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
                    // InternalBeeLangTestLanguage.g:13856:6: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13862:6: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:13864:7: ( rule__ProvidedCapability__Group_2_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:13865:7: ( rule__ProvidedCapability__Group_2_1_0__0 )
                    // InternalBeeLangTestLanguage.g:13865:8: rule__ProvidedCapability__Group_2_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:13871:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13871:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:13872:5: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
                    }
                    // InternalBeeLangTestLanguage.g:13872:117: ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
                    // InternalBeeLangTestLanguage.g:13873:6: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13879:6: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:13881:7: ( rule__ProvidedCapability__Group_2_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:13882:7: ( rule__ProvidedCapability__Group_2_1_1__0 )
                    // InternalBeeLangTestLanguage.g:13882:8: rule__ProvidedCapability__Group_2_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:13888:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13888:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:13889:5: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)");
                    }
                    // InternalBeeLangTestLanguage.g:13889:117: ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) )
                    // InternalBeeLangTestLanguage.g:13890:6: ( ( rule__ProvidedCapability__Group_2_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13896:6: ( ( rule__ProvidedCapability__Group_2_1_2__0 ) )
                    // InternalBeeLangTestLanguage.g:13898:7: ( rule__ProvidedCapability__Group_2_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:13899:7: ( rule__ProvidedCapability__Group_2_1_2__0 )
                    // InternalBeeLangTestLanguage.g:13899:8: rule__ProvidedCapability__Group_2_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 849, rule__ProvidedCapability__UnorderedGroup_2_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__Impl"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__0"
    // InternalBeeLangTestLanguage.g:13914:1: rule__ProvidedCapability__UnorderedGroup_2_1__0 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )? ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__0() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 850) ) { return ; }
            // InternalBeeLangTestLanguage.g:13918:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )? )
            // InternalBeeLangTestLanguage.g:13919:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:13920:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( LA106_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt106=1;
            }
            else if ( LA106_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt106=1;
            }
            else if ( LA106_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__ProvidedCapability__UnorderedGroup_2_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__UnorderedGroup_2_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 850, rule__ProvidedCapability__UnorderedGroup_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__0"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__1"
    // InternalBeeLangTestLanguage.g:13927:1: rule__ProvidedCapability__UnorderedGroup_2_1__1 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )? ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__1() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 851) ) { return ; }
            // InternalBeeLangTestLanguage.g:13931:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )? )
            // InternalBeeLangTestLanguage.g:13932:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:13933:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( LA107_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt107=1;
            }
            else if ( LA107_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt107=1;
            }
            else if ( LA107_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__ProvidedCapability__UnorderedGroup_2_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__UnorderedGroup_2_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 851, rule__ProvidedCapability__UnorderedGroup_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__1"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__2"
    // InternalBeeLangTestLanguage.g:13940:1: rule__ProvidedCapability__UnorderedGroup_2_1__2 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__2() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 852) ) { return ; }
            // InternalBeeLangTestLanguage.g:13944:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl )
            // InternalBeeLangTestLanguage.g:13945:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 852, rule__ProvidedCapability__UnorderedGroup_2_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__2"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1"
    // InternalBeeLangTestLanguage.g:13958:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1 : ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1_StartIndex = input.index();

            	int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 853) ) { return ; }
            // InternalBeeLangTestLanguage.g:13963:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )? )
            // InternalBeeLangTestLanguage.g:13964:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )?
            {
            // InternalBeeLangTestLanguage.g:13964:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( LA108_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt108=1;
            }
            else if ( LA108_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt108=1;
            }
            else if ( LA108_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt108=1;
            }
            else if ( LA108_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt108=1;
            }
            else if ( LA108_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 853, rule__AliasedRequiredCapability__UnorderedGroup_3_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl"
    // InternalBeeLangTestLanguage.g:13974:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) ) ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 854) ) { return ; }
            // InternalBeeLangTestLanguage.g:13979:1: ( ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) ) )
            // InternalBeeLangTestLanguage.g:13980:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) )
            {
            // InternalBeeLangTestLanguage.g:13980:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) )
            int alt109=5;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt109=2;
            }
            else if ( LA109_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt109=3;
            }
            else if ( LA109_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt109=4;
            }
            else if ( LA109_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt109=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:13982:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13982:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:13983:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalBeeLangTestLanguage.g:13983:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
                    // InternalBeeLangTestLanguage.g:13984:6: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:13990:6: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:13992:7: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:13993:7: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
                    // InternalBeeLangTestLanguage.g:13993:8: rule__AliasedRequiredCapability__Group_3_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:13999:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:13999:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14000:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalBeeLangTestLanguage.g:14000:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14001:6: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14007:6: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:14009:7: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:14010:7: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
                    // InternalBeeLangTestLanguage.g:14010:8: rule__AliasedRequiredCapability__Group_3_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:14016:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:14016:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14017:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalBeeLangTestLanguage.g:14017:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14018:6: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14024:6: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
                    // InternalBeeLangTestLanguage.g:14026:7: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:14027:7: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
                    // InternalBeeLangTestLanguage.g:14027:8: rule__AliasedRequiredCapability__Group_3_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:14033:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:14033:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14034:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalBeeLangTestLanguage.g:14034:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14035:6: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14041:6: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
                    // InternalBeeLangTestLanguage.g:14043:7: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }
                    // InternalBeeLangTestLanguage.g:14044:7: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
                    // InternalBeeLangTestLanguage.g:14044:8: rule__AliasedRequiredCapability__Group_3_1_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:14050:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:14050:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14051:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalBeeLangTestLanguage.g:14051:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14052:6: ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14058:6: ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) )
                    // InternalBeeLangTestLanguage.g:14060:7: ( rule__AliasedRequiredCapability__Group_3_1_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }
                    // InternalBeeLangTestLanguage.g:14061:7: ( rule__AliasedRequiredCapability__Group_3_1_4__0 )
                    // InternalBeeLangTestLanguage.g:14061:8: rule__AliasedRequiredCapability__Group_3_1_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 854, rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__0"
    // InternalBeeLangTestLanguage.g:14076:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 855) ) { return ; }
            // InternalBeeLangTestLanguage.g:14080:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )? )
            // InternalBeeLangTestLanguage.g:14081:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:14082:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( LA110_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt110=1;
            }
            else if ( LA110_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt110=1;
            }
            else if ( LA110_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt110=1;
            }
            else if ( LA110_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt110=1;
            }
            else if ( LA110_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 855, rule__AliasedRequiredCapability__UnorderedGroup_3_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__1"
    // InternalBeeLangTestLanguage.g:14089:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 856) ) { return ; }
            // InternalBeeLangTestLanguage.g:14093:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )? )
            // InternalBeeLangTestLanguage.g:14094:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:14095:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt111=1;
            }
            else if ( LA111_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt111=1;
            }
            else if ( LA111_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt111=1;
            }
            else if ( LA111_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 856, rule__AliasedRequiredCapability__UnorderedGroup_3_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__2"
    // InternalBeeLangTestLanguage.g:14102:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 857) ) { return ; }
            // InternalBeeLangTestLanguage.g:14106:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )? )
            // InternalBeeLangTestLanguage.g:14107:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:14108:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( LA112_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt112=1;
            }
            else if ( LA112_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt112=1;
            }
            else if ( LA112_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt112=1;
            }
            else if ( LA112_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 857, rule__AliasedRequiredCapability__UnorderedGroup_3_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__3"
    // InternalBeeLangTestLanguage.g:14115:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 858) ) { return ; }
            // InternalBeeLangTestLanguage.g:14119:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )? )
            // InternalBeeLangTestLanguage.g:14120:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:14121:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( LA113_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt113=1;
            }
            else if ( LA113_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt113=1;
            }
            else if ( LA113_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt113=1;
            }
            else if ( LA113_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 858, rule__AliasedRequiredCapability__UnorderedGroup_3_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__4"
    // InternalBeeLangTestLanguage.g:14128:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 859) ) { return ; }
            // InternalBeeLangTestLanguage.g:14132:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl )
            // InternalBeeLangTestLanguage.g:14133:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 859, rule__AliasedRequiredCapability__UnorderedGroup_3_1__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1"
    // InternalBeeLangTestLanguage.g:14150:1: rule__RequiredCapability__UnorderedGroup_3_1 : ( rule__RequiredCapability__UnorderedGroup_3_1__0 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1_StartIndex = input.index();

            	int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 860) ) { return ; }
            // InternalBeeLangTestLanguage.g:14155:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1__0 )? )
            // InternalBeeLangTestLanguage.g:14156:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )?
            {
            // InternalBeeLangTestLanguage.g:14156:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( LA114_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt114=1;
            }
            else if ( LA114_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt114=1;
            }
            else if ( LA114_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt114=1;
            }
            else if ( LA114_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt114=1;
            }
            else if ( LA114_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 860, rule__RequiredCapability__UnorderedGroup_3_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__Impl"
    // InternalBeeLangTestLanguage.g:14166:1: rule__RequiredCapability__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) ) ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 861) ) { return ; }
            // InternalBeeLangTestLanguage.g:14171:1: ( ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) ) )
            // InternalBeeLangTestLanguage.g:14172:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) )
            {
            // InternalBeeLangTestLanguage.g:14172:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) )
            int alt115=5;
            int LA115_0 = input.LA(1);

            if ( LA115_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt115=1;
            }
            else if ( LA115_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt115=2;
            }
            else if ( LA115_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt115=3;
            }
            else if ( LA115_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt115=4;
            }
            else if ( LA115_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt115=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:14174:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:14174:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14175:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalBeeLangTestLanguage.g:14175:117: ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14176:6: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14182:6: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
                    // InternalBeeLangTestLanguage.g:14184:7: ( rule__RequiredCapability__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }
                    // InternalBeeLangTestLanguage.g:14185:7: ( rule__RequiredCapability__Group_3_1_0__0 )
                    // InternalBeeLangTestLanguage.g:14185:8: rule__RequiredCapability__Group_3_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalBeeLangTestLanguage.g:14191:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:14191:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14192:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalBeeLangTestLanguage.g:14192:117: ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14193:6: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14199:6: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
                    // InternalBeeLangTestLanguage.g:14201:7: ( rule__RequiredCapability__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }
                    // InternalBeeLangTestLanguage.g:14202:7: ( rule__RequiredCapability__Group_3_1_1__0 )
                    // InternalBeeLangTestLanguage.g:14202:8: rule__RequiredCapability__Group_3_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalBeeLangTestLanguage.g:14208:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:14208:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14209:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalBeeLangTestLanguage.g:14209:117: ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14210:6: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14216:6: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
                    // InternalBeeLangTestLanguage.g:14218:7: ( rule__RequiredCapability__Group_3_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }
                    // InternalBeeLangTestLanguage.g:14219:7: ( rule__RequiredCapability__Group_3_1_2__0 )
                    // InternalBeeLangTestLanguage.g:14219:8: rule__RequiredCapability__Group_3_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalBeeLangTestLanguage.g:14225:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:14225:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14226:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalBeeLangTestLanguage.g:14226:117: ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14227:6: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14233:6: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
                    // InternalBeeLangTestLanguage.g:14235:7: ( rule__RequiredCapability__Group_3_1_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }
                    // InternalBeeLangTestLanguage.g:14236:7: ( rule__RequiredCapability__Group_3_1_3__0 )
                    // InternalBeeLangTestLanguage.g:14236:8: rule__RequiredCapability__Group_3_1_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalBeeLangTestLanguage.g:14242:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalBeeLangTestLanguage.g:14242:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) )
                    // InternalBeeLangTestLanguage.g:14243:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalBeeLangTestLanguage.g:14243:117: ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) )
                    // InternalBeeLangTestLanguage.g:14244:6: ( ( rule__RequiredCapability__Group_3_1_4__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
                    selected = true;
                    // InternalBeeLangTestLanguage.g:14250:6: ( ( rule__RequiredCapability__Group_3_1_4__0 ) )
                    // InternalBeeLangTestLanguage.g:14252:7: ( rule__RequiredCapability__Group_3_1_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }
                    // InternalBeeLangTestLanguage.g:14253:7: ( rule__RequiredCapability__Group_3_1_4__0 )
                    // InternalBeeLangTestLanguage.g:14253:8: rule__RequiredCapability__Group_3_1_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 861, rule__RequiredCapability__UnorderedGroup_3_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__0"
    // InternalBeeLangTestLanguage.g:14268:1: rule__RequiredCapability__UnorderedGroup_3_1__0 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 862) ) { return ; }
            // InternalBeeLangTestLanguage.g:14272:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )? )
            // InternalBeeLangTestLanguage.g:14273:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:14274:2: ( rule__RequiredCapability__UnorderedGroup_3_1__1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( LA116_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt116=1;
            }
            else if ( LA116_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt116=1;
            }
            else if ( LA116_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt116=1;
            }
            else if ( LA116_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt116=1;
            }
            else if ( LA116_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 862, rule__RequiredCapability__UnorderedGroup_3_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__1"
    // InternalBeeLangTestLanguage.g:14281:1: rule__RequiredCapability__UnorderedGroup_3_1__1 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 863) ) { return ; }
            // InternalBeeLangTestLanguage.g:14285:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )? )
            // InternalBeeLangTestLanguage.g:14286:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:14287:2: ( rule__RequiredCapability__UnorderedGroup_3_1__2 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( LA117_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt117=1;
            }
            else if ( LA117_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt117=1;
            }
            else if ( LA117_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt117=1;
            }
            else if ( LA117_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt117=1;
            }
            else if ( LA117_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 863, rule__RequiredCapability__UnorderedGroup_3_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__2"
    // InternalBeeLangTestLanguage.g:14294:1: rule__RequiredCapability__UnorderedGroup_3_1__2 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 864) ) { return ; }
            // InternalBeeLangTestLanguage.g:14298:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )? )
            // InternalBeeLangTestLanguage.g:14299:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:14300:2: ( rule__RequiredCapability__UnorderedGroup_3_1__3 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( LA118_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt118=1;
            }
            else if ( LA118_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt118=1;
            }
            else if ( LA118_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt118=1;
            }
            else if ( LA118_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt118=1;
            }
            else if ( LA118_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 864, rule__RequiredCapability__UnorderedGroup_3_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__3"
    // InternalBeeLangTestLanguage.g:14307:1: rule__RequiredCapability__UnorderedGroup_3_1__3 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 865) ) { return ; }
            // InternalBeeLangTestLanguage.g:14311:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )? )
            // InternalBeeLangTestLanguage.g:14312:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalBeeLangTestLanguage.g:14313:2: ( rule__RequiredCapability__UnorderedGroup_3_1__4 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( LA119_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt119=1;
            }
            else if ( LA119_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt119=1;
            }
            else if ( LA119_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt119=1;
            }
            else if ( LA119_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt119=1;
            }
            else if ( LA119_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 865, rule__RequiredCapability__UnorderedGroup_3_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__4"
    // InternalBeeLangTestLanguage.g:14320:1: rule__RequiredCapability__UnorderedGroup_3_1__4 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 866) ) { return ; }
            // InternalBeeLangTestLanguage.g:14324:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl )
            // InternalBeeLangTestLanguage.g:14325:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 866, rule__RequiredCapability__UnorderedGroup_3_1__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Model__UnitsAssignment_0"
    // InternalBeeLangTestLanguage.g:14342:1: rule__Model__UnitsAssignment_0 : ( ruleUnit ) ;
    public final void rule__Model__UnitsAssignment_0() throws RecognitionException {
        int rule__Model__UnitsAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 867) ) { return ; }
            // InternalBeeLangTestLanguage.g:14346:1: ( ( ruleUnit ) )
            // InternalBeeLangTestLanguage.g:14347:1: ( ruleUnit )
            {
            // InternalBeeLangTestLanguage.g:14347:1: ( ruleUnit )
            // InternalBeeLangTestLanguage.g:14348:1: ruleUnit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 867, rule__Model__UnitsAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__UnitsAssignment_0"


    // $ANTLR start "rule__Model__FunctionsAssignment_1"
    // InternalBeeLangTestLanguage.g:14357:1: rule__Model__FunctionsAssignment_1 : ( ruleFunction ) ;
    public final void rule__Model__FunctionsAssignment_1() throws RecognitionException {
        int rule__Model__FunctionsAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 868) ) { return ; }
            // InternalBeeLangTestLanguage.g:14361:1: ( ( ruleFunction ) )
            // InternalBeeLangTestLanguage.g:14362:1: ( ruleFunction )
            {
            // InternalBeeLangTestLanguage.g:14362:1: ( ruleFunction )
            // InternalBeeLangTestLanguage.g:14363:1: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 868, rule__Model__FunctionsAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__FunctionsAssignment_1"


    // $ANTLR start "rule__Unit__DocumentationAssignment_1"
    // InternalBeeLangTestLanguage.g:14372:1: rule__Unit__DocumentationAssignment_1 : ( RULE_DOCUMENTATION ) ;
    public final void rule__Unit__DocumentationAssignment_1() throws RecognitionException {
        int rule__Unit__DocumentationAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 869) ) { return ; }
            // InternalBeeLangTestLanguage.g:14376:1: ( ( RULE_DOCUMENTATION ) )
            // InternalBeeLangTestLanguage.g:14377:1: ( RULE_DOCUMENTATION )
            {
            // InternalBeeLangTestLanguage.g:14377:1: ( RULE_DOCUMENTATION )
            // InternalBeeLangTestLanguage.g:14378:1: RULE_DOCUMENTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 869, rule__Unit__DocumentationAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__DocumentationAssignment_1"


    // $ANTLR start "rule__Unit__NameAssignment_3"
    // InternalBeeLangTestLanguage.g:14387:1: rule__Unit__NameAssignment_3 : ( RULE_ID ) ;
    public final void rule__Unit__NameAssignment_3() throws RecognitionException {
        int rule__Unit__NameAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 870) ) { return ; }
            // InternalBeeLangTestLanguage.g:14391:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14392:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14392:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14393:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 870, rule__Unit__NameAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__NameAssignment_3"


    // $ANTLR start "rule__Unit__VersionAssignment_4_1"
    // InternalBeeLangTestLanguage.g:14402:1: rule__Unit__VersionAssignment_4_1 : ( RULE_ID ) ;
    public final void rule__Unit__VersionAssignment_4_1() throws RecognitionException {
        int rule__Unit__VersionAssignment_4_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 871) ) { return ; }
            // InternalBeeLangTestLanguage.g:14406:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14407:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14407:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14408:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 871, rule__Unit__VersionAssignment_4_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__VersionAssignment_4_1"


    // $ANTLR start "rule__Unit__ImplementsAssignment_5_1"
    // InternalBeeLangTestLanguage.g:14417:1: rule__Unit__ImplementsAssignment_5_1 : ( ruleSimpleTypeRef ) ;
    public final void rule__Unit__ImplementsAssignment_5_1() throws RecognitionException {
        int rule__Unit__ImplementsAssignment_5_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 872) ) { return ; }
            // InternalBeeLangTestLanguage.g:14421:1: ( ( ruleSimpleTypeRef ) )
            // InternalBeeLangTestLanguage.g:14422:1: ( ruleSimpleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:14422:1: ( ruleSimpleTypeRef )
            // InternalBeeLangTestLanguage.g:14423:1: ruleSimpleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 872, rule__Unit__ImplementsAssignment_5_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ImplementsAssignment_5_1"


    // $ANTLR start "rule__Unit__ImplementsAssignment_5_2_1"
    // InternalBeeLangTestLanguage.g:14432:1: rule__Unit__ImplementsAssignment_5_2_1 : ( ruleSimpleTypeRef ) ;
    public final void rule__Unit__ImplementsAssignment_5_2_1() throws RecognitionException {
        int rule__Unit__ImplementsAssignment_5_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 873) ) { return ; }
            // InternalBeeLangTestLanguage.g:14436:1: ( ( ruleSimpleTypeRef ) )
            // InternalBeeLangTestLanguage.g:14437:1: ( ruleSimpleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:14437:1: ( ruleSimpleTypeRef )
            // InternalBeeLangTestLanguage.g:14438:1: ruleSimpleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 873, rule__Unit__ImplementsAssignment_5_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ImplementsAssignment_5_2_1"


    // $ANTLR start "rule__Unit__SourceLocationAssignment_7_0_2"
    // InternalBeeLangTestLanguage.g:14447:1: rule__Unit__SourceLocationAssignment_7_0_2 : ( rulePath ) ;
    public final void rule__Unit__SourceLocationAssignment_7_0_2() throws RecognitionException {
        int rule__Unit__SourceLocationAssignment_7_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 874) ) { return ; }
            // InternalBeeLangTestLanguage.g:14451:1: ( ( rulePath ) )
            // InternalBeeLangTestLanguage.g:14452:1: ( rulePath )
            {
            // InternalBeeLangTestLanguage.g:14452:1: ( rulePath )
            // InternalBeeLangTestLanguage.g:14453:1: rulePath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 874, rule__Unit__SourceLocationAssignment_7_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__SourceLocationAssignment_7_0_2"


    // $ANTLR start "rule__Unit__OutputLocationAssignment_7_1_2"
    // InternalBeeLangTestLanguage.g:14462:1: rule__Unit__OutputLocationAssignment_7_1_2 : ( rulePath ) ;
    public final void rule__Unit__OutputLocationAssignment_7_1_2() throws RecognitionException {
        int rule__Unit__OutputLocationAssignment_7_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 875) ) { return ; }
            // InternalBeeLangTestLanguage.g:14466:1: ( ( rulePath ) )
            // InternalBeeLangTestLanguage.g:14467:1: ( rulePath )
            {
            // InternalBeeLangTestLanguage.g:14467:1: ( rulePath )
            // InternalBeeLangTestLanguage.g:14468:1: rulePath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 875, rule__Unit__OutputLocationAssignment_7_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__OutputLocationAssignment_7_1_2"


    // $ANTLR start "rule__Unit__ProvidedCapabilitiesAssignment_7_2_2"
    // InternalBeeLangTestLanguage.g:14477:1: rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 : ( ruleProvidedCapability ) ;
    public final void rule__Unit__ProvidedCapabilitiesAssignment_7_2_2() throws RecognitionException {
        int rule__Unit__ProvidedCapabilitiesAssignment_7_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 876) ) { return ; }
            // InternalBeeLangTestLanguage.g:14481:1: ( ( ruleProvidedCapability ) )
            // InternalBeeLangTestLanguage.g:14482:1: ( ruleProvidedCapability )
            {
            // InternalBeeLangTestLanguage.g:14482:1: ( ruleProvidedCapability )
            // InternalBeeLangTestLanguage.g:14483:1: ruleProvidedCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleProvidedCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 876, rule__Unit__ProvidedCapabilitiesAssignment_7_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ProvidedCapabilitiesAssignment_7_2_2"


    // $ANTLR start "rule__Unit__RequiredCapabilitiesAssignment_7_3_2"
    // InternalBeeLangTestLanguage.g:14492:1: rule__Unit__RequiredCapabilitiesAssignment_7_3_2 : ( ruleAliasedRequiredCapability ) ;
    public final void rule__Unit__RequiredCapabilitiesAssignment_7_3_2() throws RecognitionException {
        int rule__Unit__RequiredCapabilitiesAssignment_7_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 877) ) { return ; }
            // InternalBeeLangTestLanguage.g:14496:1: ( ( ruleAliasedRequiredCapability ) )
            // InternalBeeLangTestLanguage.g:14497:1: ( ruleAliasedRequiredCapability )
            {
            // InternalBeeLangTestLanguage.g:14497:1: ( ruleAliasedRequiredCapability )
            // InternalBeeLangTestLanguage.g:14498:1: ruleAliasedRequiredCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAliasedRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 877, rule__Unit__RequiredCapabilitiesAssignment_7_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__RequiredCapabilitiesAssignment_7_3_2"


    // $ANTLR start "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3"
    // InternalBeeLangTestLanguage.g:14507:1: rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 : ( ruleRequiredCapability ) ;
    public final void rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3() throws RecognitionException {
        int rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 878) ) { return ; }
            // InternalBeeLangTestLanguage.g:14511:1: ( ( ruleRequiredCapability ) )
            // InternalBeeLangTestLanguage.g:14512:1: ( ruleRequiredCapability )
            {
            // InternalBeeLangTestLanguage.g:14512:1: ( ruleRequiredCapability )
            // InternalBeeLangTestLanguage.g:14513:1: ruleRequiredCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 878, rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3"


    // $ANTLR start "rule__Unit__FunctionsAssignment_7_5"
    // InternalBeeLangTestLanguage.g:14522:1: rule__Unit__FunctionsAssignment_7_5 : ( ruleFunction ) ;
    public final void rule__Unit__FunctionsAssignment_7_5() throws RecognitionException {
        int rule__Unit__FunctionsAssignment_7_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 879) ) { return ; }
            // InternalBeeLangTestLanguage.g:14526:1: ( ( ruleFunction ) )
            // InternalBeeLangTestLanguage.g:14527:1: ( ruleFunction )
            {
            // InternalBeeLangTestLanguage.g:14527:1: ( ruleFunction )
            // InternalBeeLangTestLanguage.g:14528:1: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 879, rule__Unit__FunctionsAssignment_7_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__FunctionsAssignment_7_5"


    // $ANTLR start "rule__ProvidedCapability__NameSpaceAssignment_1_0"
    // InternalBeeLangTestLanguage.g:14537:1: rule__ProvidedCapability__NameSpaceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__NameSpaceAssignment_1_0() throws RecognitionException {
        int rule__ProvidedCapability__NameSpaceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 880) ) { return ; }
            // InternalBeeLangTestLanguage.g:14541:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14542:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14542:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14543:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 880, rule__ProvidedCapability__NameSpaceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__NameSpaceAssignment_1_0"


    // $ANTLR start "rule__ProvidedCapability__CondExprAssignment_2_1_0_2"
    // InternalBeeLangTestLanguage.g:14552:1: rule__ProvidedCapability__CondExprAssignment_2_1_0_2 : ( ruleExpression ) ;
    public final void rule__ProvidedCapability__CondExprAssignment_2_1_0_2() throws RecognitionException {
        int rule__ProvidedCapability__CondExprAssignment_2_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 881) ) { return ; }
            // InternalBeeLangTestLanguage.g:14556:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:14557:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:14557:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:14558:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 881, rule__ProvidedCapability__CondExprAssignment_2_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__CondExprAssignment_2_1_0_2"


    // $ANTLR start "rule__ProvidedCapability__NameAssignment_2_1_1_2"
    // InternalBeeLangTestLanguage.g:14567:1: rule__ProvidedCapability__NameAssignment_2_1_1_2 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__NameAssignment_2_1_1_2() throws RecognitionException {
        int rule__ProvidedCapability__NameAssignment_2_1_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 882) ) { return ; }
            // InternalBeeLangTestLanguage.g:14571:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14572:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14572:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14573:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 882, rule__ProvidedCapability__NameAssignment_2_1_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__NameAssignment_2_1_1_2"


    // $ANTLR start "rule__ProvidedCapability__VersionAssignment_2_1_2_2"
    // InternalBeeLangTestLanguage.g:14582:1: rule__ProvidedCapability__VersionAssignment_2_1_2_2 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__VersionAssignment_2_1_2_2() throws RecognitionException {
        int rule__ProvidedCapability__VersionAssignment_2_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 883) ) { return ; }
            // InternalBeeLangTestLanguage.g:14586:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14587:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14587:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14588:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 883, rule__ProvidedCapability__VersionAssignment_2_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__VersionAssignment_2_1_2_2"


    // $ANTLR start "rule__AliasedRequiredCapability__NameSpaceAssignment_0_0"
    // InternalBeeLangTestLanguage.g:14597:1: rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__NameSpaceAssignment_0_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__NameSpaceAssignment_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 884) ) { return ; }
            // InternalBeeLangTestLanguage.g:14601:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14602:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14602:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14603:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 884, rule__AliasedRequiredCapability__NameSpaceAssignment_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__NameSpaceAssignment_0_0"


    // $ANTLR start "rule__AliasedRequiredCapability__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:14612:1: rule__AliasedRequiredCapability__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__NameAssignment_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 885) ) { return ; }
            // InternalBeeLangTestLanguage.g:14616:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14617:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14617:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14618:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 885, rule__AliasedRequiredCapability__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__NameAssignment_1"


    // $ANTLR start "rule__AliasedRequiredCapability__AliasAssignment_2_1"
    // InternalBeeLangTestLanguage.g:14627:1: rule__AliasedRequiredCapability__AliasAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__AliasAssignment_2_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__AliasAssignment_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 886) ) { return ; }
            // InternalBeeLangTestLanguage.g:14631:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14632:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14632:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14633:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 886, rule__AliasedRequiredCapability__AliasAssignment_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__AliasAssignment_2_1"


    // $ANTLR start "rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2"
    // InternalBeeLangTestLanguage.g:14642:1: rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 : ( ruleExpression ) ;
    public final void rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 887) ) { return ; }
            // InternalBeeLangTestLanguage.g:14646:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:14647:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:14647:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:14648:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 887, rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2"


    // $ANTLR start "rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0"
    // InternalBeeLangTestLanguage.g:14657:1: rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 : ( ( 'greedy' ) ) ;
    public final void rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 888) ) { return ; }
            // InternalBeeLangTestLanguage.g:14661:1: ( ( ( 'greedy' ) ) )
            // InternalBeeLangTestLanguage.g:14662:1: ( ( 'greedy' ) )
            {
            // InternalBeeLangTestLanguage.g:14662:1: ( ( 'greedy' ) )
            // InternalBeeLangTestLanguage.g:14663:1: ( 'greedy' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:14664:1: ( 'greedy' )
            // InternalBeeLangTestLanguage.g:14665:1: 'greedy'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 888, rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0"


    // $ANTLR start "rule__AliasedRequiredCapability__MinAssignment_3_1_2_2"
    // InternalBeeLangTestLanguage.g:14680:1: rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 : ( RULE_INT ) ;
    public final void rule__AliasedRequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__MinAssignment_3_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 889) ) { return ; }
            // InternalBeeLangTestLanguage.g:14684:1: ( ( RULE_INT ) )
            // InternalBeeLangTestLanguage.g:14685:1: ( RULE_INT )
            {
            // InternalBeeLangTestLanguage.g:14685:1: ( RULE_INT )
            // InternalBeeLangTestLanguage.g:14686:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 889, rule__AliasedRequiredCapability__MinAssignment_3_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__MinAssignment_3_1_2_2"


    // $ANTLR start "rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2"
    // InternalBeeLangTestLanguage.g:14695:1: rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 : ( RULE_INT ) ;
    public final void rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 890) ) { return ; }
            // InternalBeeLangTestLanguage.g:14699:1: ( ( RULE_INT ) )
            // InternalBeeLangTestLanguage.g:14700:1: ( RULE_INT )
            {
            // InternalBeeLangTestLanguage.g:14700:1: ( RULE_INT )
            // InternalBeeLangTestLanguage.g:14701:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 890, rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2"


    // $ANTLR start "rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2"
    // InternalBeeLangTestLanguage.g:14710:1: rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 891) ) { return ; }
            // InternalBeeLangTestLanguage.g:14714:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14715:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14715:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14716:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 891, rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2"


    // $ANTLR start "rule__RequiredCapability__NameSpaceAssignment_1_0"
    // InternalBeeLangTestLanguage.g:14725:1: rule__RequiredCapability__NameSpaceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__NameSpaceAssignment_1_0() throws RecognitionException {
        int rule__RequiredCapability__NameSpaceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 892) ) { return ; }
            // InternalBeeLangTestLanguage.g:14729:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14730:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14730:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14731:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 892, rule__RequiredCapability__NameSpaceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__NameSpaceAssignment_1_0"


    // $ANTLR start "rule__RequiredCapability__NameAssignment_2"
    // InternalBeeLangTestLanguage.g:14740:1: rule__RequiredCapability__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__NameAssignment_2() throws RecognitionException {
        int rule__RequiredCapability__NameAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 893) ) { return ; }
            // InternalBeeLangTestLanguage.g:14744:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14745:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14745:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14746:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 893, rule__RequiredCapability__NameAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__NameAssignment_2"


    // $ANTLR start "rule__RequiredCapability__CondExprAssignment_3_1_0_2"
    // InternalBeeLangTestLanguage.g:14755:1: rule__RequiredCapability__CondExprAssignment_3_1_0_2 : ( ruleExpression ) ;
    public final void rule__RequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException {
        int rule__RequiredCapability__CondExprAssignment_3_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 894) ) { return ; }
            // InternalBeeLangTestLanguage.g:14759:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:14760:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:14760:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:14761:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 894, rule__RequiredCapability__CondExprAssignment_3_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__CondExprAssignment_3_1_0_2"


    // $ANTLR start "rule__RequiredCapability__GreedyAssignment_3_1_1_0"
    // InternalBeeLangTestLanguage.g:14770:1: rule__RequiredCapability__GreedyAssignment_3_1_1_0 : ( ( 'greedy' ) ) ;
    public final void rule__RequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException {
        int rule__RequiredCapability__GreedyAssignment_3_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 895) ) { return ; }
            // InternalBeeLangTestLanguage.g:14774:1: ( ( ( 'greedy' ) ) )
            // InternalBeeLangTestLanguage.g:14775:1: ( ( 'greedy' ) )
            {
            // InternalBeeLangTestLanguage.g:14775:1: ( ( 'greedy' ) )
            // InternalBeeLangTestLanguage.g:14776:1: ( 'greedy' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:14777:1: ( 'greedy' )
            // InternalBeeLangTestLanguage.g:14778:1: 'greedy'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 895, rule__RequiredCapability__GreedyAssignment_3_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__GreedyAssignment_3_1_1_0"


    // $ANTLR start "rule__RequiredCapability__MinAssignment_3_1_2_2"
    // InternalBeeLangTestLanguage.g:14793:1: rule__RequiredCapability__MinAssignment_3_1_2_2 : ( RULE_INT ) ;
    public final void rule__RequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException {
        int rule__RequiredCapability__MinAssignment_3_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 896) ) { return ; }
            // InternalBeeLangTestLanguage.g:14797:1: ( ( RULE_INT ) )
            // InternalBeeLangTestLanguage.g:14798:1: ( RULE_INT )
            {
            // InternalBeeLangTestLanguage.g:14798:1: ( RULE_INT )
            // InternalBeeLangTestLanguage.g:14799:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 896, rule__RequiredCapability__MinAssignment_3_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__MinAssignment_3_1_2_2"


    // $ANTLR start "rule__RequiredCapability__MaxAssignment_3_1_3_2"
    // InternalBeeLangTestLanguage.g:14808:1: rule__RequiredCapability__MaxAssignment_3_1_3_2 : ( RULE_INT ) ;
    public final void rule__RequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException {
        int rule__RequiredCapability__MaxAssignment_3_1_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 897) ) { return ; }
            // InternalBeeLangTestLanguage.g:14812:1: ( ( RULE_INT ) )
            // InternalBeeLangTestLanguage.g:14813:1: ( RULE_INT )
            {
            // InternalBeeLangTestLanguage.g:14813:1: ( RULE_INT )
            // InternalBeeLangTestLanguage.g:14814:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 897, rule__RequiredCapability__MaxAssignment_3_1_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__MaxAssignment_3_1_3_2"


    // $ANTLR start "rule__RequiredCapability__VersionRangeAssignment_3_1_4_2"
    // InternalBeeLangTestLanguage.g:14823:1: rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException {
        int rule__RequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 898) ) { return ; }
            // InternalBeeLangTestLanguage.g:14827:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14828:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14828:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14829:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 898, rule__RequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__VersionRangeAssignment_3_1_4_2"


    // $ANTLR start "rule__ParameterList__ParametersAssignment_0"
    // InternalBeeLangTestLanguage.g:14838:1: rule__ParameterList__ParametersAssignment_0 : ( ruleFirstParameter ) ;
    public final void rule__ParameterList__ParametersAssignment_0() throws RecognitionException {
        int rule__ParameterList__ParametersAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 899) ) { return ; }
            // InternalBeeLangTestLanguage.g:14842:1: ( ( ruleFirstParameter ) )
            // InternalBeeLangTestLanguage.g:14843:1: ( ruleFirstParameter )
            {
            // InternalBeeLangTestLanguage.g:14843:1: ( ruleFirstParameter )
            // InternalBeeLangTestLanguage.g:14844:1: ruleFirstParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 899, rule__ParameterList__ParametersAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParametersAssignment_0"


    // $ANTLR start "rule__ParameterList__ParametersAssignment_1_1"
    // InternalBeeLangTestLanguage.g:14853:1: rule__ParameterList__ParametersAssignment_1_1 : ( ruleFirstParameter ) ;
    public final void rule__ParameterList__ParametersAssignment_1_1() throws RecognitionException {
        int rule__ParameterList__ParametersAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 900) ) { return ; }
            // InternalBeeLangTestLanguage.g:14857:1: ( ( ruleFirstParameter ) )
            // InternalBeeLangTestLanguage.g:14858:1: ( ruleFirstParameter )
            {
            // InternalBeeLangTestLanguage.g:14858:1: ( ruleFirstParameter )
            // InternalBeeLangTestLanguage.g:14859:1: ruleFirstParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 900, rule__ParameterList__ParametersAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParametersAssignment_1_1"

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser11 extends InternalBeeLangTestLanguageParser10 {

        InternalBeeLangTestLanguageParser11(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser11(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__Parameter__ExprAssignment"
    // InternalBeeLangTestLanguage.g:14868:1: rule__Parameter__ExprAssignment : ( ruleExpression ) ;
    public final void rule__Parameter__ExprAssignment() throws RecognitionException {
        int rule__Parameter__ExprAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 901) ) { return ; }
            // InternalBeeLangTestLanguage.g:14872:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:14873:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:14873:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:14874:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 901, rule__Parameter__ExprAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__ExprAssignment"


    // $ANTLR start "rule__ClosureParameter__ExprAssignment"
    // InternalBeeLangTestLanguage.g:14883:1: rule__ClosureParameter__ExprAssignment : ( ruleClosureExpression ) ;
    public final void rule__ClosureParameter__ExprAssignment() throws RecognitionException {
        int rule__ClosureParameter__ExprAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 902) ) { return ; }
            // InternalBeeLangTestLanguage.g:14887:1: ( ( ruleClosureExpression ) )
            // InternalBeeLangTestLanguage.g:14888:1: ( ruleClosureExpression )
            {
            // InternalBeeLangTestLanguage.g:14888:1: ( ruleClosureExpression )
            // InternalBeeLangTestLanguage.g:14889:1: ruleClosureExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 902, rule__ClosureParameter__ExprAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureParameter__ExprAssignment"


    // $ANTLR start "rule__ParameterDeclaration__TypeAssignment_0"
    // InternalBeeLangTestLanguage.g:14898:1: rule__ParameterDeclaration__TypeAssignment_0 : ( ruleTypeRef ) ;
    public final void rule__ParameterDeclaration__TypeAssignment_0() throws RecognitionException {
        int rule__ParameterDeclaration__TypeAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 903) ) { return ; }
            // InternalBeeLangTestLanguage.g:14902:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:14903:1: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:14903:1: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:14904:1: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 903, rule__ParameterDeclaration__TypeAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__TypeAssignment_0"


    // $ANTLR start "rule__ParameterDeclaration__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:14913:1: rule__ParameterDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ParameterDeclaration__NameAssignment_1() throws RecognitionException {
        int rule__ParameterDeclaration__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 904) ) { return ; }
            // InternalBeeLangTestLanguage.g:14917:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14918:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14918:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14919:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 904, rule__ParameterDeclaration__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__NameAssignment_1"


    // $ANTLR start "rule__Function__DocumentationAssignment_0"
    // InternalBeeLangTestLanguage.g:14928:1: rule__Function__DocumentationAssignment_0 : ( RULE_DOCUMENTATION ) ;
    public final void rule__Function__DocumentationAssignment_0() throws RecognitionException {
        int rule__Function__DocumentationAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 905) ) { return ; }
            // InternalBeeLangTestLanguage.g:14932:1: ( ( RULE_DOCUMENTATION ) )
            // InternalBeeLangTestLanguage.g:14933:1: ( RULE_DOCUMENTATION )
            {
            // InternalBeeLangTestLanguage.g:14933:1: ( RULE_DOCUMENTATION )
            // InternalBeeLangTestLanguage.g:14934:1: RULE_DOCUMENTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); 
            }
            match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 905, rule__Function__DocumentationAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__DocumentationAssignment_0"


    // $ANTLR start "rule__Function__VisibilityAssignment_1"
    // InternalBeeLangTestLanguage.g:14943:1: rule__Function__VisibilityAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function__VisibilityAssignment_1() throws RecognitionException {
        int rule__Function__VisibilityAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 906) ) { return ; }
            // InternalBeeLangTestLanguage.g:14947:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:14948:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:14948:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:14949:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 906, rule__Function__VisibilityAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VisibilityAssignment_1"


    // $ANTLR start "rule__Function__FinalAssignment_2"
    // InternalBeeLangTestLanguage.g:14958:1: rule__Function__FinalAssignment_2 : ( ( 'final' ) ) ;
    public final void rule__Function__FinalAssignment_2() throws RecognitionException {
        int rule__Function__FinalAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 907) ) { return ; }
            // InternalBeeLangTestLanguage.g:14962:1: ( ( ( 'final' ) ) )
            // InternalBeeLangTestLanguage.g:14963:1: ( ( 'final' ) )
            {
            // InternalBeeLangTestLanguage.g:14963:1: ( ( 'final' ) )
            // InternalBeeLangTestLanguage.g:14964:1: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:14965:1: ( 'final' )
            // InternalBeeLangTestLanguage.g:14966:1: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 907, rule__Function__FinalAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FinalAssignment_2"


    // $ANTLR start "rule__Function__ReturnTypeAssignment_4"
    // InternalBeeLangTestLanguage.g:14981:1: rule__Function__ReturnTypeAssignment_4 : ( ruleTypeRef ) ;
    public final void rule__Function__ReturnTypeAssignment_4() throws RecognitionException {
        int rule__Function__ReturnTypeAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 908) ) { return ; }
            // InternalBeeLangTestLanguage.g:14985:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:14986:1: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:14986:1: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:14987:1: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 908, rule__Function__ReturnTypeAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ReturnTypeAssignment_4"


    // $ANTLR start "rule__Function__NameAssignment_5"
    // InternalBeeLangTestLanguage.g:14996:1: rule__Function__NameAssignment_5 : ( RULE_ID ) ;
    public final void rule__Function__NameAssignment_5() throws RecognitionException {
        int rule__Function__NameAssignment_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 909) ) { return ; }
            // InternalBeeLangTestLanguage.g:15000:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15001:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15001:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15002:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 909, rule__Function__NameAssignment_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__NameAssignment_5"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_0"
    // InternalBeeLangTestLanguage.g:15011:1: rule__Function__ParametersAssignment_6_1_0_0 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_0() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 910) ) { return ; }
            // InternalBeeLangTestLanguage.g:15015:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:15016:1: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:15016:1: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:15017:1: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 910, rule__Function__ParametersAssignment_6_1_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_0"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_1_1"
    // InternalBeeLangTestLanguage.g:15026:1: rule__Function__ParametersAssignment_6_1_0_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_1_1() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 911) ) { return ; }
            // InternalBeeLangTestLanguage.g:15030:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:15031:1: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:15031:1: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:15032:1: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 911, rule__Function__ParametersAssignment_6_1_0_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_1_1"


    // $ANTLR start "rule__Function__VarArgsAssignment_6_1_0_2_1"
    // InternalBeeLangTestLanguage.g:15041:1: rule__Function__VarArgsAssignment_6_1_0_2_1 : ( ( '...' ) ) ;
    public final void rule__Function__VarArgsAssignment_6_1_0_2_1() throws RecognitionException {
        int rule__Function__VarArgsAssignment_6_1_0_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 912) ) { return ; }
            // InternalBeeLangTestLanguage.g:15045:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:15046:1: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:15046:1: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:15047:1: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15048:1: ( '...' )
            // InternalBeeLangTestLanguage.g:15049:1: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 912, rule__Function__VarArgsAssignment_6_1_0_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VarArgsAssignment_6_1_0_2_1"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_2_2"
    // InternalBeeLangTestLanguage.g:15064:1: rule__Function__ParametersAssignment_6_1_0_2_2 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_2_2() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 913) ) { return ; }
            // InternalBeeLangTestLanguage.g:15068:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:15069:1: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:15069:1: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:15070:1: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 913, rule__Function__ParametersAssignment_6_1_0_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_2_2"


    // $ANTLR start "rule__Function__VarArgsAssignment_6_1_1_0"
    // InternalBeeLangTestLanguage.g:15079:1: rule__Function__VarArgsAssignment_6_1_1_0 : ( ( '...' ) ) ;
    public final void rule__Function__VarArgsAssignment_6_1_1_0() throws RecognitionException {
        int rule__Function__VarArgsAssignment_6_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 914) ) { return ; }
            // InternalBeeLangTestLanguage.g:15083:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:15084:1: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:15084:1: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:15085:1: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:15086:1: ( '...' )
            // InternalBeeLangTestLanguage.g:15087:1: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 914, rule__Function__VarArgsAssignment_6_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VarArgsAssignment_6_1_1_0"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_1_1"
    // InternalBeeLangTestLanguage.g:15102:1: rule__Function__ParametersAssignment_6_1_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_1_1() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 915) ) { return ; }
            // InternalBeeLangTestLanguage.g:15106:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:15107:1: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:15107:1: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:15108:1: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 915, rule__Function__ParametersAssignment_6_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_1_1"


    // $ANTLR start "rule__Function__GuardAssignment_7_1"
    // InternalBeeLangTestLanguage.g:15117:1: rule__Function__GuardAssignment_7_1 : ( ruleGuardExpression ) ;
    public final void rule__Function__GuardAssignment_7_1() throws RecognitionException {
        int rule__Function__GuardAssignment_7_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 916) ) { return ; }
            // InternalBeeLangTestLanguage.g:15121:1: ( ( ruleGuardExpression ) )
            // InternalBeeLangTestLanguage.g:15122:1: ( ruleGuardExpression )
            {
            // InternalBeeLangTestLanguage.g:15122:1: ( ruleGuardExpression )
            // InternalBeeLangTestLanguage.g:15123:1: ruleGuardExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleGuardExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 916, rule__Function__GuardAssignment_7_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__GuardAssignment_7_1"


    // $ANTLR start "rule__Function__FuncExprAssignment_8_0_1"
    // InternalBeeLangTestLanguage.g:15132:1: rule__Function__FuncExprAssignment_8_0_1 : ( ruleExpression ) ;
    public final void rule__Function__FuncExprAssignment_8_0_1() throws RecognitionException {
        int rule__Function__FuncExprAssignment_8_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 917) ) { return ; }
            // InternalBeeLangTestLanguage.g:15136:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:15137:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:15137:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:15138:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 917, rule__Function__FuncExprAssignment_8_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FuncExprAssignment_8_0_1"


    // $ANTLR start "rule__Function__FuncExprAssignment_8_1"
    // InternalBeeLangTestLanguage.g:15147:1: rule__Function__FuncExprAssignment_8_1 : ( ruleBlockExpression ) ;
    public final void rule__Function__FuncExprAssignment_8_1() throws RecognitionException {
        int rule__Function__FuncExprAssignment_8_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 918) ) { return ; }
            // InternalBeeLangTestLanguage.g:15151:1: ( ( ruleBlockExpression ) )
            // InternalBeeLangTestLanguage.g:15152:1: ( ruleBlockExpression )
            {
            // InternalBeeLangTestLanguage.g:15152:1: ( ruleBlockExpression )
            // InternalBeeLangTestLanguage.g:15153:1: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 918, rule__Function__FuncExprAssignment_8_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FuncExprAssignment_8_1"


    // $ANTLR start "rule__GuardExpression__GuardExprAssignment_0_1"
    // InternalBeeLangTestLanguage.g:15162:1: rule__GuardExpression__GuardExprAssignment_0_1 : ( ruleExpression ) ;
    public final void rule__GuardExpression__GuardExprAssignment_0_1() throws RecognitionException {
        int rule__GuardExpression__GuardExprAssignment_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 919) ) { return ; }
            // InternalBeeLangTestLanguage.g:15166:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:15167:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:15167:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:15168:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 919, rule__GuardExpression__GuardExprAssignment_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__GuardExprAssignment_0_1"


    // $ANTLR start "rule__GuardExpression__GuardExprAssignment_1"
    // InternalBeeLangTestLanguage.g:15177:1: rule__GuardExpression__GuardExprAssignment_1 : ( ruleBlockExpression ) ;
    public final void rule__GuardExpression__GuardExprAssignment_1() throws RecognitionException {
        int rule__GuardExpression__GuardExprAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 920) ) { return ; }
            // InternalBeeLangTestLanguage.g:15181:1: ( ( ruleBlockExpression ) )
            // InternalBeeLangTestLanguage.g:15182:1: ( ruleBlockExpression )
            {
            // InternalBeeLangTestLanguage.g:15182:1: ( ruleBlockExpression )
            // InternalBeeLangTestLanguage.g:15183:1: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 920, rule__GuardExpression__GuardExprAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__GuardExprAssignment_1"


    // $ANTLR start "rule__AssignmentExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:15192:1: rule__AssignmentExpression__FunctionNameAssignment_1_1 : ( ruleAssignmentOperator ) ;
    public final void rule__AssignmentExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__AssignmentExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 921) ) { return ; }
            // InternalBeeLangTestLanguage.g:15196:1: ( ( ruleAssignmentOperator ) )
            // InternalBeeLangTestLanguage.g:15197:1: ( ruleAssignmentOperator )
            {
            // InternalBeeLangTestLanguage.g:15197:1: ( ruleAssignmentOperator )
            // InternalBeeLangTestLanguage.g:15198:1: ruleAssignmentOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 921, rule__AssignmentExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__AssignmentExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:15207:1: rule__AssignmentExpression__RightExprAssignment_1_2 : ( ruleAssignmentExpression ) ;
    public final void rule__AssignmentExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AssignmentExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 922) ) { return ; }
            // InternalBeeLangTestLanguage.g:15211:1: ( ( ruleAssignmentExpression ) )
            // InternalBeeLangTestLanguage.g:15212:1: ( ruleAssignmentExpression )
            {
            // InternalBeeLangTestLanguage.g:15212:1: ( ruleAssignmentExpression )
            // InternalBeeLangTestLanguage.g:15213:1: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 922, rule__AssignmentExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__VarDeclaration__FinalAssignment_1"
    // InternalBeeLangTestLanguage.g:15222:1: rule__VarDeclaration__FinalAssignment_1 : ( ( 'final' ) ) ;
    public final void rule__VarDeclaration__FinalAssignment_1() throws RecognitionException {
        int rule__VarDeclaration__FinalAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 923) ) { return ; }
            // InternalBeeLangTestLanguage.g:15226:1: ( ( ( 'final' ) ) )
            // InternalBeeLangTestLanguage.g:15227:1: ( ( 'final' ) )
            {
            // InternalBeeLangTestLanguage.g:15227:1: ( ( 'final' ) )
            // InternalBeeLangTestLanguage.g:15228:1: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15229:1: ( 'final' )
            // InternalBeeLangTestLanguage.g:15230:1: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 923, rule__VarDeclaration__FinalAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__FinalAssignment_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_2_0_1"
    // InternalBeeLangTestLanguage.g:15245:1: rule__VarDeclaration__TypeAssignment_2_0_1 : ( ruleTypeRef ) ;
    public final void rule__VarDeclaration__TypeAssignment_2_0_1() throws RecognitionException {
        int rule__VarDeclaration__TypeAssignment_2_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 924) ) { return ; }
            // InternalBeeLangTestLanguage.g:15249:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:15250:1: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:15250:1: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:15251:1: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 924, rule__VarDeclaration__TypeAssignment_2_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_2_0_1"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_2_1"
    // InternalBeeLangTestLanguage.g:15260:1: rule__VarDeclaration__NameAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_2_1() throws RecognitionException {
        int rule__VarDeclaration__NameAssignment_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 925) ) { return ; }
            // InternalBeeLangTestLanguage.g:15264:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15265:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15265:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15266:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 925, rule__VarDeclaration__NameAssignment_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_2_1"


    // $ANTLR start "rule__VarDeclaration__ValueExprAssignment_3_1"
    // InternalBeeLangTestLanguage.g:15275:1: rule__VarDeclaration__ValueExprAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__VarDeclaration__ValueExprAssignment_3_1() throws RecognitionException {
        int rule__VarDeclaration__ValueExprAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 926) ) { return ; }
            // InternalBeeLangTestLanguage.g:15279:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:15280:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:15280:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:15281:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 926, rule__VarDeclaration__ValueExprAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ValueExprAssignment_3_1"


    // $ANTLR start "rule__ValDeclaration__FinalAssignment_1"
    // InternalBeeLangTestLanguage.g:15290:1: rule__ValDeclaration__FinalAssignment_1 : ( ( 'final' ) ) ;
    public final void rule__ValDeclaration__FinalAssignment_1() throws RecognitionException {
        int rule__ValDeclaration__FinalAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 927) ) { return ; }
            // InternalBeeLangTestLanguage.g:15294:1: ( ( ( 'final' ) ) )
            // InternalBeeLangTestLanguage.g:15295:1: ( ( 'final' ) )
            {
            // InternalBeeLangTestLanguage.g:15295:1: ( ( 'final' ) )
            // InternalBeeLangTestLanguage.g:15296:1: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15297:1: ( 'final' )
            // InternalBeeLangTestLanguage.g:15298:1: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 927, rule__ValDeclaration__FinalAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__FinalAssignment_1"


    // $ANTLR start "rule__ValDeclaration__ImmutableAssignment_2"
    // InternalBeeLangTestLanguage.g:15313:1: rule__ValDeclaration__ImmutableAssignment_2 : ( ( 'val' ) ) ;
    public final void rule__ValDeclaration__ImmutableAssignment_2() throws RecognitionException {
        int rule__ValDeclaration__ImmutableAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 928) ) { return ; }
            // InternalBeeLangTestLanguage.g:15317:1: ( ( ( 'val' ) ) )
            // InternalBeeLangTestLanguage.g:15318:1: ( ( 'val' ) )
            {
            // InternalBeeLangTestLanguage.g:15318:1: ( ( 'val' ) )
            // InternalBeeLangTestLanguage.g:15319:1: ( 'val' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:15320:1: ( 'val' )
            // InternalBeeLangTestLanguage.g:15321:1: 'val'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }
            match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 928, rule__ValDeclaration__ImmutableAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__ImmutableAssignment_2"


    // $ANTLR start "rule__ValDeclaration__TypeAssignment_3"
    // InternalBeeLangTestLanguage.g:15336:1: rule__ValDeclaration__TypeAssignment_3 : ( ruleTypeRef ) ;
    public final void rule__ValDeclaration__TypeAssignment_3() throws RecognitionException {
        int rule__ValDeclaration__TypeAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 929) ) { return ; }
            // InternalBeeLangTestLanguage.g:15340:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:15341:1: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:15341:1: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:15342:1: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 929, rule__ValDeclaration__TypeAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__TypeAssignment_3"


    // $ANTLR start "rule__ValDeclaration__NameAssignment_4"
    // InternalBeeLangTestLanguage.g:15351:1: rule__ValDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__ValDeclaration__NameAssignment_4() throws RecognitionException {
        int rule__ValDeclaration__NameAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 930) ) { return ; }
            // InternalBeeLangTestLanguage.g:15355:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15356:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15356:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15357:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 930, rule__ValDeclaration__NameAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__NameAssignment_4"


    // $ANTLR start "rule__ValDeclaration__ValueExprAssignment_6"
    // InternalBeeLangTestLanguage.g:15366:1: rule__ValDeclaration__ValueExprAssignment_6 : ( ruleExpression ) ;
    public final void rule__ValDeclaration__ValueExprAssignment_6() throws RecognitionException {
        int rule__ValDeclaration__ValueExprAssignment_6_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 931) ) { return ; }
            // InternalBeeLangTestLanguage.g:15370:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:15371:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:15371:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:15372:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 931, rule__ValDeclaration__ValueExprAssignment_6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__ValueExprAssignment_6"


    // $ANTLR start "rule__SimpleTypeRef__RawTypeAssignment_0"
    // InternalBeeLangTestLanguage.g:15381:1: rule__SimpleTypeRef__RawTypeAssignment_0 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__RawTypeAssignment_0() throws RecognitionException {
        int rule__SimpleTypeRef__RawTypeAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 932) ) { return ; }
            // InternalBeeLangTestLanguage.g:15385:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15386:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15386:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15387:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 932, rule__SimpleTypeRef__RawTypeAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__RawTypeAssignment_0"


    // $ANTLR start "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1"
    // InternalBeeLangTestLanguage.g:15396:1: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1() throws RecognitionException {
        int rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 933) ) { return ; }
            // InternalBeeLangTestLanguage.g:15400:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15401:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15401:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15402:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 933, rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1"


    // $ANTLR start "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1"
    // InternalBeeLangTestLanguage.g:15411:1: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1() throws RecognitionException {
        int rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 934) ) { return ; }
            // InternalBeeLangTestLanguage.g:15415:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15416:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15416:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15417:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 934, rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0"
    // InternalBeeLangTestLanguage.g:15426:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 935) ) { return ; }
            // InternalBeeLangTestLanguage.g:15430:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15431:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15431:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15432:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 935, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1"
    // InternalBeeLangTestLanguage.g:15441:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 936) ) { return ; }
            // InternalBeeLangTestLanguage.g:15445:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15446:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15446:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15447:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 936, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1"


    // $ANTLR start "rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1"
    // InternalBeeLangTestLanguage.g:15456:1: rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 : ( ( '...' ) ) ;
    public final void rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1() throws RecognitionException {
        int rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 937) ) { return ; }
            // InternalBeeLangTestLanguage.g:15460:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:15461:1: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:15461:1: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:15462:1: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15463:1: ( '...' )
            // InternalBeeLangTestLanguage.g:15464:1: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 937, rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2"
    // InternalBeeLangTestLanguage.g:15479:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 938) ) { return ; }
            // InternalBeeLangTestLanguage.g:15483:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15484:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15484:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15485:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 938, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2"


    // $ANTLR start "rule__ClosureTypeRef__VarArgsAssignment_1_1_0"
    // InternalBeeLangTestLanguage.g:15494:1: rule__ClosureTypeRef__VarArgsAssignment_1_1_0 : ( ( '...' ) ) ;
    public final void rule__ClosureTypeRef__VarArgsAssignment_1_1_0() throws RecognitionException {
        int rule__ClosureTypeRef__VarArgsAssignment_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 939) ) { return ; }
            // InternalBeeLangTestLanguage.g:15498:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:15499:1: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:15499:1: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:15500:1: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:15501:1: ( '...' )
            // InternalBeeLangTestLanguage.g:15502:1: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 939, rule__ClosureTypeRef__VarArgsAssignment_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__VarArgsAssignment_1_1_0"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1"
    // InternalBeeLangTestLanguage.g:15517:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 940) ) { return ; }
            // InternalBeeLangTestLanguage.g:15521:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15522:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15522:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15523:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 940, rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1"


    // $ANTLR start "rule__ClosureTypeRef__ReturnTypeAssignment_4"
    // InternalBeeLangTestLanguage.g:15532:1: rule__ClosureTypeRef__ReturnTypeAssignment_4 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ReturnTypeAssignment_4() throws RecognitionException {
        int rule__ClosureTypeRef__ReturnTypeAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 941) ) { return ; }
            // InternalBeeLangTestLanguage.g:15536:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15537:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15537:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15538:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 941, rule__ClosureTypeRef__ReturnTypeAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ReturnTypeAssignment_4"


    // $ANTLR start "rule__CachedExpression__ExprAssignment_0_2"
    // InternalBeeLangTestLanguage.g:15547:1: rule__CachedExpression__ExprAssignment_0_2 : ( ruleOrExpression ) ;
    public final void rule__CachedExpression__ExprAssignment_0_2() throws RecognitionException {
        int rule__CachedExpression__ExprAssignment_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 942) ) { return ; }
            // InternalBeeLangTestLanguage.g:15551:1: ( ( ruleOrExpression ) )
            // InternalBeeLangTestLanguage.g:15552:1: ( ruleOrExpression )
            {
            // InternalBeeLangTestLanguage.g:15552:1: ( ruleOrExpression )
            // InternalBeeLangTestLanguage.g:15553:1: ruleOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 942, rule__CachedExpression__ExprAssignment_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__ExprAssignment_0_2"


    // $ANTLR start "rule__OrExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:15562:1: rule__OrExpression__RightExprAssignment_1_2 : ( ruleAndExpression ) ;
    public final void rule__OrExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__OrExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 943) ) { return ; }
            // InternalBeeLangTestLanguage.g:15566:1: ( ( ruleAndExpression ) )
            // InternalBeeLangTestLanguage.g:15567:1: ( ruleAndExpression )
            {
            // InternalBeeLangTestLanguage.g:15567:1: ( ruleAndExpression )
            // InternalBeeLangTestLanguage.g:15568:1: ruleAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 943, rule__OrExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__AndExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:15577:1: rule__AndExpression__RightExprAssignment_1_2 : ( ruleRelationalExpression ) ;
    public final void rule__AndExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AndExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 944) ) { return ; }
            // InternalBeeLangTestLanguage.g:15581:1: ( ( ruleRelationalExpression ) )
            // InternalBeeLangTestLanguage.g:15582:1: ( ruleRelationalExpression )
            {
            // InternalBeeLangTestLanguage.g:15582:1: ( ruleRelationalExpression )
            // InternalBeeLangTestLanguage.g:15583:1: ruleRelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 944, rule__AndExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__RelationalExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:15592:1: rule__RelationalExpression__FunctionNameAssignment_1_1 : ( ruleRelationalOperator ) ;
    public final void rule__RelationalExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__RelationalExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 945) ) { return ; }
            // InternalBeeLangTestLanguage.g:15596:1: ( ( ruleRelationalOperator ) )
            // InternalBeeLangTestLanguage.g:15597:1: ( ruleRelationalOperator )
            {
            // InternalBeeLangTestLanguage.g:15597:1: ( ruleRelationalOperator )
            // InternalBeeLangTestLanguage.g:15598:1: ruleRelationalOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 945, rule__RelationalExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__RelationalExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:15607:1: rule__RelationalExpression__RightExprAssignment_1_2 : ( ruleAdditiveExpression ) ;
    public final void rule__RelationalExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__RelationalExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 946) ) { return ; }
            // InternalBeeLangTestLanguage.g:15611:1: ( ( ruleAdditiveExpression ) )
            // InternalBeeLangTestLanguage.g:15612:1: ( ruleAdditiveExpression )
            {
            // InternalBeeLangTestLanguage.g:15612:1: ( ruleAdditiveExpression )
            // InternalBeeLangTestLanguage.g:15613:1: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 946, rule__RelationalExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__AdditiveExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:15622:1: rule__AdditiveExpression__FunctionNameAssignment_1_1 : ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__AdditiveExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__AdditiveExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 947) ) { return ; }
            // InternalBeeLangTestLanguage.g:15626:1: ( ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:15627:1: ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:15627:1: ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:15628:1: ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15629:1: ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 )
            // InternalBeeLangTestLanguage.g:15629:2: rule__AdditiveExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 947, rule__AdditiveExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__AdditiveExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:15638:1: rule__AdditiveExpression__RightExprAssignment_1_2 : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AdditiveExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 948) ) { return ; }
            // InternalBeeLangTestLanguage.g:15642:1: ( ( ruleMultiplicativeExpression ) )
            // InternalBeeLangTestLanguage.g:15643:1: ( ruleMultiplicativeExpression )
            {
            // InternalBeeLangTestLanguage.g:15643:1: ( ruleMultiplicativeExpression )
            // InternalBeeLangTestLanguage.g:15644:1: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 948, rule__AdditiveExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__MultiplicativeExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:15653:1: rule__MultiplicativeExpression__FunctionNameAssignment_1_1 : ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__MultiplicativeExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__MultiplicativeExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 949) ) { return ; }
            // InternalBeeLangTestLanguage.g:15657:1: ( ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:15658:1: ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:15658:1: ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:15659:1: ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15660:1: ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 )
            // InternalBeeLangTestLanguage.g:15660:2: rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 949, rule__MultiplicativeExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__MultiplicativeExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:15669:1: rule__MultiplicativeExpression__RightExprAssignment_1_2 : ( ruleSetExpression ) ;
    public final void rule__MultiplicativeExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__MultiplicativeExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 950) ) { return ; }
            // InternalBeeLangTestLanguage.g:15673:1: ( ( ruleSetExpression ) )
            // InternalBeeLangTestLanguage.g:15674:1: ( ruleSetExpression )
            {
            // InternalBeeLangTestLanguage.g:15674:1: ( ruleSetExpression )
            // InternalBeeLangTestLanguage.g:15675:1: ruleSetExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 950, rule__MultiplicativeExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__SetExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:15684:1: rule__SetExpression__FunctionNameAssignment_1_1 : ( ( '..' ) ) ;
    public final void rule__SetExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__SetExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 951) ) { return ; }
            // InternalBeeLangTestLanguage.g:15688:1: ( ( ( '..' ) ) )
            // InternalBeeLangTestLanguage.g:15689:1: ( ( '..' ) )
            {
            // InternalBeeLangTestLanguage.g:15689:1: ( ( '..' ) )
            // InternalBeeLangTestLanguage.g:15690:1: ( '..' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15691:1: ( '..' )
            // InternalBeeLangTestLanguage.g:15692:1: '..'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }
            match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 951, rule__SetExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__SetExpression__RightExprAssignment_1_2"
    // InternalBeeLangTestLanguage.g:15707:1: rule__SetExpression__RightExprAssignment_1_2 : ( ruleUnaryOrInfixExpression ) ;
    public final void rule__SetExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__SetExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 952) ) { return ; }
            // InternalBeeLangTestLanguage.g:15711:1: ( ( ruleUnaryOrInfixExpression ) )
            // InternalBeeLangTestLanguage.g:15712:1: ( ruleUnaryOrInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:15712:1: ( ruleUnaryOrInfixExpression )
            // InternalBeeLangTestLanguage.g:15713:1: ruleUnaryOrInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 952, rule__SetExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__UnaryExpression__FunctionNameAssignment_1"
    // InternalBeeLangTestLanguage.g:15722:1: rule__UnaryExpression__FunctionNameAssignment_1 : ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) ) ;
    public final void rule__UnaryExpression__FunctionNameAssignment_1() throws RecognitionException {
        int rule__UnaryExpression__FunctionNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 953) ) { return ; }
            // InternalBeeLangTestLanguage.g:15726:1: ( ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:15727:1: ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:15727:1: ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) )
            // InternalBeeLangTestLanguage.g:15728:1: ( rule__UnaryExpression__FunctionNameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15729:1: ( rule__UnaryExpression__FunctionNameAlternatives_1_0 )
            // InternalBeeLangTestLanguage.g:15729:2: rule__UnaryExpression__FunctionNameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__FunctionNameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 953, rule__UnaryExpression__FunctionNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__FunctionNameAssignment_1"


    // $ANTLR start "rule__UnaryExpression__ExprAssignment_2"
    // InternalBeeLangTestLanguage.g:15738:1: rule__UnaryExpression__ExprAssignment_2 : ( ruleInfixExpression ) ;
    public final void rule__UnaryExpression__ExprAssignment_2() throws RecognitionException {
        int rule__UnaryExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 954) ) { return ; }
            // InternalBeeLangTestLanguage.g:15742:1: ( ( ruleInfixExpression ) )
            // InternalBeeLangTestLanguage.g:15743:1: ( ruleInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:15743:1: ( ruleInfixExpression )
            // InternalBeeLangTestLanguage.g:15744:1: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 954, rule__UnaryExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__ExprAssignment_2"


    // $ANTLR start "rule__PreopExpression__FunctionNameAssignment_1"
    // InternalBeeLangTestLanguage.g:15753:1: rule__PreopExpression__FunctionNameAssignment_1 : ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) ) ;
    public final void rule__PreopExpression__FunctionNameAssignment_1() throws RecognitionException {
        int rule__PreopExpression__FunctionNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 955) ) { return ; }
            // InternalBeeLangTestLanguage.g:15757:1: ( ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:15758:1: ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:15758:1: ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) )
            // InternalBeeLangTestLanguage.g:15759:1: ( rule__PreopExpression__FunctionNameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15760:1: ( rule__PreopExpression__FunctionNameAlternatives_1_0 )
            // InternalBeeLangTestLanguage.g:15760:2: rule__PreopExpression__FunctionNameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__FunctionNameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 955, rule__PreopExpression__FunctionNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__FunctionNameAssignment_1"


    // $ANTLR start "rule__PreopExpression__ExprAssignment_2"
    // InternalBeeLangTestLanguage.g:15769:1: rule__PreopExpression__ExprAssignment_2 : ( ruleInfixExpression ) ;
    public final void rule__PreopExpression__ExprAssignment_2() throws RecognitionException {
        int rule__PreopExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 956) ) { return ; }
            // InternalBeeLangTestLanguage.g:15773:1: ( ( ruleInfixExpression ) )
            // InternalBeeLangTestLanguage.g:15774:1: ( ruleInfixExpression )
            {
            // InternalBeeLangTestLanguage.g:15774:1: ( ruleInfixExpression )
            // InternalBeeLangTestLanguage.g:15775:1: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 956, rule__PreopExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__ExprAssignment_2"


    // $ANTLR start "rule__PostopExpression__FunctionNameAssignment_1_1"
    // InternalBeeLangTestLanguage.g:15784:1: rule__PostopExpression__FunctionNameAssignment_1_1 : ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__PostopExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__PostopExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 957) ) { return ; }
            // InternalBeeLangTestLanguage.g:15788:1: ( ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:15789:1: ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:15789:1: ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalBeeLangTestLanguage.g:15790:1: ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:15791:1: ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 )
            // InternalBeeLangTestLanguage.g:15791:2: rule__PostopExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 957, rule__PostopExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__InfixExpression__NameAssignment_1_0_2"
    // InternalBeeLangTestLanguage.g:15800:1: rule__InfixExpression__NameAssignment_1_0_2 : ( RULE_ID ) ;
    public final void rule__InfixExpression__NameAssignment_1_0_2() throws RecognitionException {
        int rule__InfixExpression__NameAssignment_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 958) ) { return ; }
            // InternalBeeLangTestLanguage.g:15804:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15805:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15805:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15806:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 958, rule__InfixExpression__NameAssignment_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__NameAssignment_1_0_2"


    // $ANTLR start "rule__InfixExpression__ParameterListAssignment_1_0_4"
    // InternalBeeLangTestLanguage.g:15815:1: rule__InfixExpression__ParameterListAssignment_1_0_4 : ( ruleParameterList ) ;
    public final void rule__InfixExpression__ParameterListAssignment_1_0_4() throws RecognitionException {
        int rule__InfixExpression__ParameterListAssignment_1_0_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 959) ) { return ; }
            // InternalBeeLangTestLanguage.g:15819:1: ( ( ruleParameterList ) )
            // InternalBeeLangTestLanguage.g:15820:1: ( ruleParameterList )
            {
            // InternalBeeLangTestLanguage.g:15820:1: ( ruleParameterList )
            // InternalBeeLangTestLanguage.g:15821:1: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 959, rule__InfixExpression__ParameterListAssignment_1_0_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__ParameterListAssignment_1_0_4"


    // $ANTLR start "rule__InfixExpression__IndexExprAssignment_1_1_2"
    // InternalBeeLangTestLanguage.g:15830:1: rule__InfixExpression__IndexExprAssignment_1_1_2 : ( ruleExpression ) ;
    public final void rule__InfixExpression__IndexExprAssignment_1_1_2() throws RecognitionException {
        int rule__InfixExpression__IndexExprAssignment_1_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 960) ) { return ; }
            // InternalBeeLangTestLanguage.g:15834:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:15835:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:15835:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:15836:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 960, rule__InfixExpression__IndexExprAssignment_1_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__IndexExprAssignment_1_1_2"


    // $ANTLR start "rule__InfixExpression__FeatureNameAssignment_1_2_2"
    // InternalBeeLangTestLanguage.g:15845:1: rule__InfixExpression__FeatureNameAssignment_1_2_2 : ( RULE_ID ) ;
    public final void rule__InfixExpression__FeatureNameAssignment_1_2_2() throws RecognitionException {
        int rule__InfixExpression__FeatureNameAssignment_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 961) ) { return ; }
            // InternalBeeLangTestLanguage.g:15849:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15850:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15850:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15851:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 961, rule__InfixExpression__FeatureNameAssignment_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__FeatureNameAssignment_1_2_2"


    // $ANTLR start "rule__CallExpression__ParameterListAssignment_1_2"
    // InternalBeeLangTestLanguage.g:15860:1: rule__CallExpression__ParameterListAssignment_1_2 : ( ruleParameterList ) ;
    public final void rule__CallExpression__ParameterListAssignment_1_2() throws RecognitionException {
        int rule__CallExpression__ParameterListAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 962) ) { return ; }
            // InternalBeeLangTestLanguage.g:15864:1: ( ( ruleParameterList ) )
            // InternalBeeLangTestLanguage.g:15865:1: ( ruleParameterList )
            {
            // InternalBeeLangTestLanguage.g:15865:1: ( ruleParameterList )
            // InternalBeeLangTestLanguage.g:15866:1: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 962, rule__CallExpression__ParameterListAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__ParameterListAssignment_1_2"


    // $ANTLR start "rule__WithExpression__ReferencedAdviceAssignment_1_0"
    // InternalBeeLangTestLanguage.g:15875:1: rule__WithExpression__ReferencedAdviceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__WithExpression__ReferencedAdviceAssignment_1_0() throws RecognitionException {
        int rule__WithExpression__ReferencedAdviceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 963) ) { return ; }
            // InternalBeeLangTestLanguage.g:15879:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15880:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15880:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15881:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 963, rule__WithExpression__ReferencedAdviceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__ReferencedAdviceAssignment_1_0"


    // $ANTLR start "rule__WithExpression__ReferencedAdviceAssignment_1_1_1"
    // InternalBeeLangTestLanguage.g:15890:1: rule__WithExpression__ReferencedAdviceAssignment_1_1_1 : ( RULE_ID ) ;
    public final void rule__WithExpression__ReferencedAdviceAssignment_1_1_1() throws RecognitionException {
        int rule__WithExpression__ReferencedAdviceAssignment_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 964) ) { return ; }
            // InternalBeeLangTestLanguage.g:15894:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15895:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15895:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15896:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 964, rule__WithExpression__ReferencedAdviceAssignment_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__ReferencedAdviceAssignment_1_1_1"


    // $ANTLR start "rule__WithExpression__FuncExprAssignment_2_0_1"
    // InternalBeeLangTestLanguage.g:15905:1: rule__WithExpression__FuncExprAssignment_2_0_1 : ( ruleExpression ) ;
    public final void rule__WithExpression__FuncExprAssignment_2_0_1() throws RecognitionException {
        int rule__WithExpression__FuncExprAssignment_2_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 965) ) { return ; }
            // InternalBeeLangTestLanguage.g:15909:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:15910:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:15910:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:15911:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 965, rule__WithExpression__FuncExprAssignment_2_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__FuncExprAssignment_2_0_1"


    // $ANTLR start "rule__WithExpression__FuncExprAssignment_2_1_1"
    // InternalBeeLangTestLanguage.g:15920:1: rule__WithExpression__FuncExprAssignment_2_1_1 : ( ruleBlockExpressionWithoutBrackets ) ;
    public final void rule__WithExpression__FuncExprAssignment_2_1_1() throws RecognitionException {
        int rule__WithExpression__FuncExprAssignment_2_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 966) ) { return ; }
            // InternalBeeLangTestLanguage.g:15924:1: ( ( ruleBlockExpressionWithoutBrackets ) )
            // InternalBeeLangTestLanguage.g:15925:1: ( ruleBlockExpressionWithoutBrackets )
            {
            // InternalBeeLangTestLanguage.g:15925:1: ( ruleBlockExpressionWithoutBrackets )
            // InternalBeeLangTestLanguage.g:15926:1: ruleBlockExpressionWithoutBrackets
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpressionWithoutBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 966, rule__WithExpression__FuncExprAssignment_2_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__FuncExprAssignment_2_1_1"


    // $ANTLR start "rule__WithContextExpression__ExprAssignment_2"
    // InternalBeeLangTestLanguage.g:15935:1: rule__WithContextExpression__ExprAssignment_2 : ( ruleExpression ) ;
    public final void rule__WithContextExpression__ExprAssignment_2() throws RecognitionException {
        int rule__WithContextExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 967) ) { return ; }
            // InternalBeeLangTestLanguage.g:15939:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:15940:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:15940:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:15941:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 967, rule__WithContextExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__ExprAssignment_2"


    // $ANTLR start "rule__WithContextExpression__AliasAssignment_3_1"
    // InternalBeeLangTestLanguage.g:15950:1: rule__WithContextExpression__AliasAssignment_3_1 : ( RULE_ID ) ;
    public final void rule__WithContextExpression__AliasAssignment_3_1() throws RecognitionException {
        int rule__WithContextExpression__AliasAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 968) ) { return ; }
            // InternalBeeLangTestLanguage.g:15954:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:15955:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:15955:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:15956:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 968, rule__WithContextExpression__AliasAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__AliasAssignment_3_1"


    // $ANTLR start "rule__WithContextExpression__ContextBlockAssignment_4"
    // InternalBeeLangTestLanguage.g:15965:1: rule__WithContextExpression__ContextBlockAssignment_4 : ( ruleBlockExpression ) ;
    public final void rule__WithContextExpression__ContextBlockAssignment_4() throws RecognitionException {
        int rule__WithContextExpression__ContextBlockAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 969) ) { return ; }
            // InternalBeeLangTestLanguage.g:15969:1: ( ( ruleBlockExpression ) )
            // InternalBeeLangTestLanguage.g:15970:1: ( ruleBlockExpression )
            {
            // InternalBeeLangTestLanguage.g:15970:1: ( ruleBlockExpression )
            // InternalBeeLangTestLanguage.g:15971:1: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 969, rule__WithContextExpression__ContextBlockAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__ContextBlockAssignment_4"


    // $ANTLR start "rule__BlockExpression__ExpressionsAssignment_2_0"
    // InternalBeeLangTestLanguage.g:15980:1: rule__BlockExpression__ExpressionsAssignment_2_0 : ( ruleTopLevelExpression ) ;
    public final void rule__BlockExpression__ExpressionsAssignment_2_0() throws RecognitionException {
        int rule__BlockExpression__ExpressionsAssignment_2_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 970) ) { return ; }
            // InternalBeeLangTestLanguage.g:15984:1: ( ( ruleTopLevelExpression ) )
            // InternalBeeLangTestLanguage.g:15985:1: ( ruleTopLevelExpression )
            {
            // InternalBeeLangTestLanguage.g:15985:1: ( ruleTopLevelExpression )
            // InternalBeeLangTestLanguage.g:15986:1: ruleTopLevelExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 970, rule__BlockExpression__ExpressionsAssignment_2_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__ExpressionsAssignment_2_0"


    // $ANTLR start "rule__Value__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:15995:1: rule__Value__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Value__NameAssignment_1() throws RecognitionException {
        int rule__Value__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 971) ) { return ; }
            // InternalBeeLangTestLanguage.g:15999:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:16000:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:16000:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:16001:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 971, rule__Value__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__NameAssignment_1"


    // $ANTLR start "rule__KeywordVariables__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:16010:1: rule__KeywordVariables__NameAssignment_1 : ( ( rule__KeywordVariables__NameAlternatives_1_0 ) ) ;
    public final void rule__KeywordVariables__NameAssignment_1() throws RecognitionException {
        int rule__KeywordVariables__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 972) ) { return ; }
            // InternalBeeLangTestLanguage.g:16014:1: ( ( ( rule__KeywordVariables__NameAlternatives_1_0 ) ) )
            // InternalBeeLangTestLanguage.g:16015:1: ( ( rule__KeywordVariables__NameAlternatives_1_0 ) )
            {
            // InternalBeeLangTestLanguage.g:16015:1: ( ( rule__KeywordVariables__NameAlternatives_1_0 ) )
            // InternalBeeLangTestLanguage.g:16016:1: ( rule__KeywordVariables__NameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:16017:1: ( rule__KeywordVariables__NameAlternatives_1_0 )
            // InternalBeeLangTestLanguage.g:16017:2: rule__KeywordVariables__NameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__NameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 972, rule__KeywordVariables__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__NameAssignment_1"


    // $ANTLR start "rule__OperationCall__NameAssignment_1"
    // InternalBeeLangTestLanguage.g:16026:1: rule__OperationCall__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__OperationCall__NameAssignment_1() throws RecognitionException {
        int rule__OperationCall__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 973) ) { return ; }
            // InternalBeeLangTestLanguage.g:16030:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:16031:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:16031:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:16032:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 973, rule__OperationCall__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__NameAssignment_1"


    // $ANTLR start "rule__OperationCall__ParameterListAssignment_3"
    // InternalBeeLangTestLanguage.g:16041:1: rule__OperationCall__ParameterListAssignment_3 : ( ruleParameterList ) ;
    public final void rule__OperationCall__ParameterListAssignment_3() throws RecognitionException {
        int rule__OperationCall__ParameterListAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 974) ) { return ; }
            // InternalBeeLangTestLanguage.g:16045:1: ( ( ruleParameterList ) )
            // InternalBeeLangTestLanguage.g:16046:1: ( ruleParameterList )
            {
            // InternalBeeLangTestLanguage.g:16046:1: ( ruleParameterList )
            // InternalBeeLangTestLanguage.g:16047:1: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 974, rule__OperationCall__ParameterListAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__ParameterListAssignment_3"


    // $ANTLR start "rule__ConstructorCallExpression__TypeExprAssignment_2"
    // InternalBeeLangTestLanguage.g:16056:1: rule__ConstructorCallExpression__TypeExprAssignment_2 : ( RULE_ID ) ;
    public final void rule__ConstructorCallExpression__TypeExprAssignment_2() throws RecognitionException {
        int rule__ConstructorCallExpression__TypeExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 975) ) { return ; }
            // InternalBeeLangTestLanguage.g:16060:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:16061:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:16061:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:16062:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 975, rule__ConstructorCallExpression__TypeExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__TypeExprAssignment_2"


    // $ANTLR start "rule__ConstructorCallExpression__ParameterListAssignment_3_1"
    // InternalBeeLangTestLanguage.g:16071:1: rule__ConstructorCallExpression__ParameterListAssignment_3_1 : ( ruleParameterList ) ;
    public final void rule__ConstructorCallExpression__ParameterListAssignment_3_1() throws RecognitionException {
        int rule__ConstructorCallExpression__ParameterListAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 976) ) { return ; }
            // InternalBeeLangTestLanguage.g:16075:1: ( ( ruleParameterList ) )
            // InternalBeeLangTestLanguage.g:16076:1: ( ruleParameterList )
            {
            // InternalBeeLangTestLanguage.g:16076:1: ( ruleParameterList )
            // InternalBeeLangTestLanguage.g:16077:1: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 976, rule__ConstructorCallExpression__ParameterListAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__ParameterListAssignment_3_1"


    // $ANTLR start "rule__ConstructorCallExpression__AliasAssignment_4_1"
    // InternalBeeLangTestLanguage.g:16086:1: rule__ConstructorCallExpression__AliasAssignment_4_1 : ( RULE_ID ) ;
    public final void rule__ConstructorCallExpression__AliasAssignment_4_1() throws RecognitionException {
        int rule__ConstructorCallExpression__AliasAssignment_4_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 977) ) { return ; }
            // InternalBeeLangTestLanguage.g:16090:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:16091:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:16091:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:16092:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 977, rule__ConstructorCallExpression__AliasAssignment_4_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__AliasAssignment_4_1"


    // $ANTLR start "rule__ConstructorCallExpression__ContextBlockAssignment_5"
    // InternalBeeLangTestLanguage.g:16101:1: rule__ConstructorCallExpression__ContextBlockAssignment_5 : ( ruleInitializationBlockExpression ) ;
    public final void rule__ConstructorCallExpression__ContextBlockAssignment_5() throws RecognitionException {
        int rule__ConstructorCallExpression__ContextBlockAssignment_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 978) ) { return ; }
            // InternalBeeLangTestLanguage.g:16105:1: ( ( ruleInitializationBlockExpression ) )
            // InternalBeeLangTestLanguage.g:16106:1: ( ruleInitializationBlockExpression )
            {
            // InternalBeeLangTestLanguage.g:16106:1: ( ruleInitializationBlockExpression )
            // InternalBeeLangTestLanguage.g:16107:1: ruleInitializationBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInitializationBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 978, rule__ConstructorCallExpression__ContextBlockAssignment_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__ContextBlockAssignment_5"


    // $ANTLR start "rule__InitializationBlockExpression__ExpressionsAssignment_2"
    // InternalBeeLangTestLanguage.g:16116:1: rule__InitializationBlockExpression__ExpressionsAssignment_2 : ( ruleInitializationExpression ) ;
    public final void rule__InitializationBlockExpression__ExpressionsAssignment_2() throws RecognitionException {
        int rule__InitializationBlockExpression__ExpressionsAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 979) ) { return ; }
            // InternalBeeLangTestLanguage.g:16120:1: ( ( ruleInitializationExpression ) )
            // InternalBeeLangTestLanguage.g:16121:1: ( ruleInitializationExpression )
            {
            // InternalBeeLangTestLanguage.g:16121:1: ( ruleInitializationExpression )
            // InternalBeeLangTestLanguage.g:16122:1: ruleInitializationExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInitializationExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 979, rule__InitializationBlockExpression__ExpressionsAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__ExpressionsAssignment_2"


    // $ANTLR start "rule__InitializationExpression__LeftExprAssignment_1"
    // InternalBeeLangTestLanguage.g:16131:1: rule__InitializationExpression__LeftExprAssignment_1 : ( ruleFeatureOfThis ) ;
    public final void rule__InitializationExpression__LeftExprAssignment_1() throws RecognitionException {
        int rule__InitializationExpression__LeftExprAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 980) ) { return ; }
            // InternalBeeLangTestLanguage.g:16135:1: ( ( ruleFeatureOfThis ) )
            // InternalBeeLangTestLanguage.g:16136:1: ( ruleFeatureOfThis )
            {
            // InternalBeeLangTestLanguage.g:16136:1: ( ruleFeatureOfThis )
            // InternalBeeLangTestLanguage.g:16137:1: ruleFeatureOfThis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFeatureOfThis();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 980, rule__InitializationExpression__LeftExprAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__LeftExprAssignment_1"


    // $ANTLR start "rule__InitializationExpression__FunctionNameAssignment_2"
    // InternalBeeLangTestLanguage.g:16146:1: rule__InitializationExpression__FunctionNameAssignment_2 : ( ( ':' ) ) ;
    public final void rule__InitializationExpression__FunctionNameAssignment_2() throws RecognitionException {
        int rule__InitializationExpression__FunctionNameAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 981) ) { return ; }
            // InternalBeeLangTestLanguage.g:16150:1: ( ( ( ':' ) ) )
            // InternalBeeLangTestLanguage.g:16151:1: ( ( ':' ) )
            {
            // InternalBeeLangTestLanguage.g:16151:1: ( ( ':' ) )
            // InternalBeeLangTestLanguage.g:16152:1: ( ':' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }
            // InternalBeeLangTestLanguage.g:16153:1: ( ':' )
            // InternalBeeLangTestLanguage.g:16154:1: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 981, rule__InitializationExpression__FunctionNameAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__FunctionNameAssignment_2"


    // $ANTLR start "rule__InitializationExpression__RightExprAssignment_3"
    // InternalBeeLangTestLanguage.g:16169:1: rule__InitializationExpression__RightExprAssignment_3 : ( ruleExpression ) ;
    public final void rule__InitializationExpression__RightExprAssignment_3() throws RecognitionException {
        int rule__InitializationExpression__RightExprAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 982) ) { return ; }
            // InternalBeeLangTestLanguage.g:16173:1: ( ( ruleExpression ) )
            // InternalBeeLangTestLanguage.g:16174:1: ( ruleExpression )
            {
            // InternalBeeLangTestLanguage.g:16174:1: ( ruleExpression )
            // InternalBeeLangTestLanguage.g:16175:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 982, rule__InitializationExpression__RightExprAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__RightExprAssignment_3"


    // $ANTLR start "rule__FeatureOfThis__FeatureNameAssignment_1"
    // InternalBeeLangTestLanguage.g:16184:1: rule__FeatureOfThis__FeatureNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FeatureOfThis__FeatureNameAssignment_1() throws RecognitionException {
        int rule__FeatureOfThis__FeatureNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 983) ) { return ; }
            // InternalBeeLangTestLanguage.g:16188:1: ( ( RULE_ID ) )
            // InternalBeeLangTestLanguage.g:16189:1: ( RULE_ID )
            {
            // InternalBeeLangTestLanguage.g:16189:1: ( RULE_ID )
            // InternalBeeLangTestLanguage.g:16190:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 983, rule__FeatureOfThis__FeatureNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__FeatureNameAssignment_1"


    // $ANTLR start "rule__ClosureExpression__ReturnTypeAssignment_1_1"
    // InternalBeeLangTestLanguage.g:16199:1: rule__ClosureExpression__ReturnTypeAssignment_1_1 : ( ruleTypeRef ) ;
    public final void rule__ClosureExpression__ReturnTypeAssignment_1_1() throws RecognitionException {
        int rule__ClosureExpression__ReturnTypeAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 984) ) { return ; }
            // InternalBeeLangTestLanguage.g:16203:1: ( ( ruleTypeRef ) )
            // InternalBeeLangTestLanguage.g:16204:1: ( ruleTypeRef )
            {
            // InternalBeeLangTestLanguage.g:16204:1: ( ruleTypeRef )
            // InternalBeeLangTestLanguage.g:16205:1: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 984, rule__ClosureExpression__ReturnTypeAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ReturnTypeAssignment_1_1"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_0"
    // InternalBeeLangTestLanguage.g:16214:1: rule__ClosureExpression__ParametersAssignment_2_0_1_0 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_0() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 985) ) { return ; }
            // InternalBeeLangTestLanguage.g:16218:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:16219:1: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:16219:1: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:16220:1: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 985, rule__ClosureExpression__ParametersAssignment_2_0_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_0"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_1_1"
    // InternalBeeLangTestLanguage.g:16229:1: rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_1_1() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 986) ) { return ; }
            // InternalBeeLangTestLanguage.g:16233:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:16234:1: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:16234:1: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:16235:1: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 986, rule__ClosureExpression__ParametersAssignment_2_0_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_1_1"


    // $ANTLR start "rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1"
    // InternalBeeLangTestLanguage.g:16244:1: rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 : ( ( '...' ) ) ;
    public final void rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1() throws RecognitionException {
        int rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 987) ) { return ; }
            // InternalBeeLangTestLanguage.g:16248:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:16249:1: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:16249:1: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:16250:1: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }
            // InternalBeeLangTestLanguage.g:16251:1: ( '...' )
            // InternalBeeLangTestLanguage.g:16252:1: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 987, rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_2_2"
    // InternalBeeLangTestLanguage.g:16267:1: rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_2_2() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 988) ) { return ; }
            // InternalBeeLangTestLanguage.g:16271:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:16272:1: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:16272:1: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:16273:1: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 988, rule__ClosureExpression__ParametersAssignment_2_0_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_2_2"


    // $ANTLR start "rule__ClosureExpression__VarArgsAssignment_2_1_0"
    // InternalBeeLangTestLanguage.g:16282:1: rule__ClosureExpression__VarArgsAssignment_2_1_0 : ( ( '...' ) ) ;
    public final void rule__ClosureExpression__VarArgsAssignment_2_1_0() throws RecognitionException {
        int rule__ClosureExpression__VarArgsAssignment_2_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 989) ) { return ; }
            // InternalBeeLangTestLanguage.g:16286:1: ( ( ( '...' ) ) )
            // InternalBeeLangTestLanguage.g:16287:1: ( ( '...' ) )
            {
            // InternalBeeLangTestLanguage.g:16287:1: ( ( '...' ) )
            // InternalBeeLangTestLanguage.g:16288:1: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }
            // InternalBeeLangTestLanguage.g:16289:1: ( '...' )
            // InternalBeeLangTestLanguage.g:16290:1: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 989, rule__ClosureExpression__VarArgsAssignment_2_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__VarArgsAssignment_2_1_0"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_1_1"
    // InternalBeeLangTestLanguage.g:16305:1: rule__ClosureExpression__ParametersAssignment_2_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_1_1() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 990) ) { return ; }
            // InternalBeeLangTestLanguage.g:16309:1: ( ( ruleParameterDeclaration ) )
            // InternalBeeLangTestLanguage.g:16310:1: ( ruleParameterDeclaration )
            {
            // InternalBeeLangTestLanguage.g:16310:1: ( ruleParameterDeclaration )
            // InternalBeeLangTestLanguage.g:16311:1: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 990, rule__ClosureExpression__ParametersAssignment_2_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_1_1"


    // $ANTLR start "rule__ClosureExpression__FuncExprAssignment_4"
    // InternalBeeLangTestLanguage.g:16320:1: rule__ClosureExpression__FuncExprAssignment_4 : ( ruleOneOrManyExpressions ) ;
    public final void rule__ClosureExpression__FuncExprAssignment_4() throws RecognitionException {
        int rule__ClosureExpression__FuncExprAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 991) ) { return ; }
            // InternalBeeLangTestLanguage.g:16324:1: ( ( ruleOneOrManyExpressions ) )
            // InternalBeeLangTestLanguage.g:16325:1: ( ruleOneOrManyExpressions )
            {
            // InternalBeeLangTestLanguage.g:16325:1: ( ruleOneOrManyExpressions )
            // InternalBeeLangTestLanguage.g:16326:1: ruleOneOrManyExpressions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOneOrManyExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 991, rule__ClosureExpression__FuncExprAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__FuncExprAssignment_4"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0"
    // InternalBeeLangTestLanguage.g:16335:1: rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 : ( ruleTopLevelExpression ) ;
    public final void rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 992) ) { return ; }
            // InternalBeeLangTestLanguage.g:16339:1: ( ( ruleTopLevelExpression ) )
            // InternalBeeLangTestLanguage.g:16340:1: ( ruleTopLevelExpression )
            {
            // InternalBeeLangTestLanguage.g:16340:1: ( ruleTopLevelExpression )
            // InternalBeeLangTestLanguage.g:16341:1: ruleTopLevelExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 992, rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0"


    // $ANTLR start "rule__ValueLiteral__ValueAssignment"
    // InternalBeeLangTestLanguage.g:16350:1: rule__ValueLiteral__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__ValueLiteral__ValueAssignment() throws RecognitionException {
        int rule__ValueLiteral__ValueAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 993) ) { return ; }
            // InternalBeeLangTestLanguage.g:16354:1: ( ( RULE_STRING ) )
            // InternalBeeLangTestLanguage.g:16355:1: ( RULE_STRING )
            {
            // InternalBeeLangTestLanguage.g:16355:1: ( RULE_STRING )
            // InternalBeeLangTestLanguage.g:16356:1: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 993, rule__ValueLiteral__ValueAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValueLiteral__ValueAssignment"

    // $ANTLR start synpred2_InternalBeeLangTestLanguage
    public final void synpred2_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:1651:1: ( ( ( rule__Model__UnitsAssignment_0 )* ) )
        // InternalBeeLangTestLanguage.g:1651:1: ( ( rule__Model__UnitsAssignment_0 )* )
        {
        // InternalBeeLangTestLanguage.g:1651:1: ( ( rule__Model__UnitsAssignment_0 )* )
        // InternalBeeLangTestLanguage.g:1652:1: ( rule__Model__UnitsAssignment_0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
        }
        // InternalBeeLangTestLanguage.g:1653:1: ( rule__Model__UnitsAssignment_0 )*
        loop120:
        do {
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==RULE_DOCUMENTATION||LA120_0==13) ) {
                alt120=1;
            }


            switch (alt120) {
        	case 1 :
        	    // InternalBeeLangTestLanguage.g:1653:2: rule__Model__UnitsAssignment_0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_3);
        	    rule__Model__UnitsAssignment_0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop120;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred2_InternalBeeLangTestLanguage

    // $ANTLR start synpred8_InternalBeeLangTestLanguage
    public final void synpred8_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:1767:1: ( ( ruleClosureParameter ) )
        // InternalBeeLangTestLanguage.g:1767:1: ( ruleClosureParameter )
        {
        // InternalBeeLangTestLanguage.g:1767:1: ( ruleClosureParameter )
        // InternalBeeLangTestLanguage.g:1768:1: ruleClosureParameter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleClosureParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalBeeLangTestLanguage

    // $ANTLR start synpred25_InternalBeeLangTestLanguage
    public final void synpred25_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:1995:1: ( ( ruleVarDeclaration ) )
        // InternalBeeLangTestLanguage.g:1995:1: ( ruleVarDeclaration )
        {
        // InternalBeeLangTestLanguage.g:1995:1: ( ruleVarDeclaration )
        // InternalBeeLangTestLanguage.g:1996:1: ruleVarDeclaration
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleVarDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred25_InternalBeeLangTestLanguage

    // $ANTLR start synpred39_InternalBeeLangTestLanguage
    public final void synpred39_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2279:1: ( ( ( rule__InfixExpression__Group_1_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:2279:1: ( ( rule__InfixExpression__Group_1_0__0 ) )
        {
        // InternalBeeLangTestLanguage.g:2279:1: ( ( rule__InfixExpression__Group_1_0__0 ) )
        // InternalBeeLangTestLanguage.g:2280:1: ( rule__InfixExpression__Group_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
        }
        // InternalBeeLangTestLanguage.g:2281:1: ( rule__InfixExpression__Group_1_0__0 )
        // InternalBeeLangTestLanguage.g:2281:2: rule__InfixExpression__Group_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__InfixExpression__Group_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred39_InternalBeeLangTestLanguage

    // $ANTLR start synpred41_InternalBeeLangTestLanguage
    public final void synpred41_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2307:1: ( ( ruleFeatureCall ) )
        // InternalBeeLangTestLanguage.g:2307:1: ( ruleFeatureCall )
        {
        // InternalBeeLangTestLanguage.g:2307:1: ( ruleFeatureCall )
        // InternalBeeLangTestLanguage.g:2308:1: ruleFeatureCall
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFeatureCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred41_InternalBeeLangTestLanguage

    // $ANTLR start synpred43_InternalBeeLangTestLanguage
    public final void synpred43_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2319:6: ( ( ruleValue ) )
        // InternalBeeLangTestLanguage.g:2319:6: ( ruleValue )
        {
        // InternalBeeLangTestLanguage.g:2319:6: ( ruleValue )
        // InternalBeeLangTestLanguage.g:2320:1: ruleValue
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalBeeLangTestLanguage

    // $ANTLR start synpred44_InternalBeeLangTestLanguage
    public final void synpred44_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2325:6: ( ( ruleLiteral ) )
        // InternalBeeLangTestLanguage.g:2325:6: ( ruleLiteral )
        {
        // InternalBeeLangTestLanguage.g:2325:6: ( ruleLiteral )
        // InternalBeeLangTestLanguage.g:2326:1: ruleLiteral
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalBeeLangTestLanguage

}

@SuppressWarnings("all")
abstract class InternalBeeLangTestLanguageParser12 extends InternalBeeLangTestLanguageParser11 {

        InternalBeeLangTestLanguageParser12(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalBeeLangTestLanguageParser12(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start synpred47_InternalBeeLangTestLanguage
    public final void synpred47_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2343:6: ( ( ruleBlockExpression ) )
        // InternalBeeLangTestLanguage.g:2343:6: ( ruleBlockExpression )
        {
        // InternalBeeLangTestLanguage.g:2343:6: ( ruleBlockExpression )
        // InternalBeeLangTestLanguage.g:2344:1: ruleBlockExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBlockExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalBeeLangTestLanguage

    // $ANTLR start synpred48_InternalBeeLangTestLanguage
    public final void synpred48_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2349:6: ( ( ruleWithExpression ) )
        // InternalBeeLangTestLanguage.g:2349:6: ( ruleWithExpression )
        {
        // InternalBeeLangTestLanguage.g:2349:6: ( ruleWithExpression )
        // InternalBeeLangTestLanguage.g:2350:1: ruleWithExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleWithExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred48_InternalBeeLangTestLanguage

    // $ANTLR start synpred58_InternalBeeLangTestLanguage
    public final void synpred58_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:2503:1: ( ( ruleBlockExpressionWithoutBrackets ) )
        // InternalBeeLangTestLanguage.g:2503:1: ( ruleBlockExpressionWithoutBrackets )
        {
        // InternalBeeLangTestLanguage.g:2503:1: ( ruleBlockExpressionWithoutBrackets )
        // InternalBeeLangTestLanguage.g:2504:1: ruleBlockExpressionWithoutBrackets
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBlockExpressionWithoutBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred58_InternalBeeLangTestLanguage

    // $ANTLR start synpred84_InternalBeeLangTestLanguage
    public final void synpred84_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:7363:2: ( rule__AssignmentExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:7363:2: rule__AssignmentExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AssignmentExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_InternalBeeLangTestLanguage

    // $ANTLR start synpred94_InternalBeeLangTestLanguage
    public final void synpred94_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:8804:2: ( rule__OrExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:8804:2: rule__OrExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalBeeLangTestLanguage

    // $ANTLR start synpred95_InternalBeeLangTestLanguage
    public final void synpred95_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:8961:2: ( rule__AndExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:8961:2: rule__AndExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_InternalBeeLangTestLanguage

    // $ANTLR start synpred96_InternalBeeLangTestLanguage
    public final void synpred96_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:9118:2: ( rule__RelationalExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:9118:2: rule__RelationalExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RelationalExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalBeeLangTestLanguage

    // $ANTLR start synpred97_InternalBeeLangTestLanguage
    public final void synpred97_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:9273:2: ( rule__AdditiveExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:9273:2: rule__AdditiveExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AdditiveExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalBeeLangTestLanguage

    // $ANTLR start synpred98_InternalBeeLangTestLanguage
    public final void synpred98_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:9428:2: ( rule__MultiplicativeExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:9428:2: rule__MultiplicativeExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__MultiplicativeExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalBeeLangTestLanguage

    // $ANTLR start synpred99_InternalBeeLangTestLanguage
    public final void synpred99_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:9583:2: ( rule__SetExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:9583:2: rule__SetExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SetExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalBeeLangTestLanguage

    // $ANTLR start synpred100_InternalBeeLangTestLanguage
    public final void synpred100_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:9926:2: ( rule__PostopExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:9926:2: rule__PostopExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__PostopExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalBeeLangTestLanguage

    // $ANTLR start synpred101_InternalBeeLangTestLanguage
    public final void synpred101_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:10050:2: ( rule__InfixExpression__Alternatives_1 )
        // InternalBeeLangTestLanguage.g:10050:2: rule__InfixExpression__Alternatives_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__InfixExpression__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalBeeLangTestLanguage

    // $ANTLR start synpred103_InternalBeeLangTestLanguage
    public final void synpred103_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:10529:2: ( rule__CallExpression__Group_1__0 )
        // InternalBeeLangTestLanguage.g:10529:2: rule__CallExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__CallExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalBeeLangTestLanguage

    // $ANTLR start synpred110_InternalBeeLangTestLanguage
    public final void synpred110_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11858:2: ( rule__ConstructorCallExpression__Group_3__0 )
        // InternalBeeLangTestLanguage.g:11858:2: rule__ConstructorCallExpression__Group_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ConstructorCallExpression__Group_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalBeeLangTestLanguage

    // $ANTLR start synpred111_InternalBeeLangTestLanguage
    public final void synpred111_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:11887:2: ( rule__ConstructorCallExpression__Group_4__0 )
        // InternalBeeLangTestLanguage.g:11887:2: rule__ConstructorCallExpression__Group_4__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ConstructorCallExpression__Group_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred111_InternalBeeLangTestLanguage

    // $ANTLR start synpred115_InternalBeeLangTestLanguage
    public final void synpred115_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:12621:2: ( rule__ClosureExpression__Alternatives_2 )
        // InternalBeeLangTestLanguage.g:12621:2: rule__ClosureExpression__Alternatives_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ClosureExpression__Alternatives_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred115_InternalBeeLangTestLanguage

    // $ANTLR start synpred123_InternalBeeLangTestLanguage
    public final void synpred123_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13591:2: ( rule__Unit__UnorderedGroup_7__0 )
        // InternalBeeLangTestLanguage.g:13591:2: rule__Unit__UnorderedGroup_7__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalBeeLangTestLanguage

    // $ANTLR start synpred124_InternalBeeLangTestLanguage
    public final void synpred124_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13609:4: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13609:4: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13609:4: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:13610:5: {...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred124_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
        }
        // InternalBeeLangTestLanguage.g:13610:101: ( ( ( rule__Unit__Group_7_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:13611:6: ( ( rule__Unit__Group_7_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
        // InternalBeeLangTestLanguage.g:13617:6: ( ( rule__Unit__Group_7_0__0 ) )
        // InternalBeeLangTestLanguage.g:13619:7: ( rule__Unit__Group_7_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_0()); 
        }
        // InternalBeeLangTestLanguage.g:13620:7: ( rule__Unit__Group_7_0__0 )
        // InternalBeeLangTestLanguage.g:13620:8: rule__Unit__Group_7_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred124_InternalBeeLangTestLanguage

    // $ANTLR start synpred125_InternalBeeLangTestLanguage
    public final void synpred125_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13626:4: ( ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13626:4: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13626:4: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:13627:5: {...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred125_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
        }
        // InternalBeeLangTestLanguage.g:13627:101: ( ( ( rule__Unit__Group_7_1__0 ) ) )
        // InternalBeeLangTestLanguage.g:13628:6: ( ( rule__Unit__Group_7_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
        // InternalBeeLangTestLanguage.g:13634:6: ( ( rule__Unit__Group_7_1__0 ) )
        // InternalBeeLangTestLanguage.g:13636:7: ( rule__Unit__Group_7_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_1()); 
        }
        // InternalBeeLangTestLanguage.g:13637:7: ( rule__Unit__Group_7_1__0 )
        // InternalBeeLangTestLanguage.g:13637:8: rule__Unit__Group_7_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred125_InternalBeeLangTestLanguage

    // $ANTLR start synpred126_InternalBeeLangTestLanguage
    public final void synpred126_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13659:8: ( rule__Unit__Group_7_2__0 )
        // InternalBeeLangTestLanguage.g:13659:9: rule__Unit__Group_7_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalBeeLangTestLanguage

    // $ANTLR start synpred127_InternalBeeLangTestLanguage
    public final void synpred127_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13643:4: ( ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13643:4: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13643:4: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
        // InternalBeeLangTestLanguage.g:13644:5: {...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred127_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
        }
        // InternalBeeLangTestLanguage.g:13644:101: ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
        // InternalBeeLangTestLanguage.g:13645:6: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
        // InternalBeeLangTestLanguage.g:13651:6: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
        // InternalBeeLangTestLanguage.g:13652:6: ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
        {
        // InternalBeeLangTestLanguage.g:13652:6: ( ( rule__Unit__Group_7_2__0 ) )
        // InternalBeeLangTestLanguage.g:13653:7: ( rule__Unit__Group_7_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_2()); 
        }
        // InternalBeeLangTestLanguage.g:13654:7: ( rule__Unit__Group_7_2__0 )
        // InternalBeeLangTestLanguage.g:13654:8: rule__Unit__Group_7_2__0
        {
        pushFollow(FollowSets000.FOLLOW_80);
        rule__Unit__Group_7_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalBeeLangTestLanguage.g:13657:6: ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
        // InternalBeeLangTestLanguage.g:13658:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_2()); 
        }
        // InternalBeeLangTestLanguage.g:13659:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
        loop121:
        do {
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==51) && (synpred126_InternalBeeLangTestLanguage())) {
                alt121=1;
            }


            switch (alt121) {
        	case 1 :
        	    // InternalBeeLangTestLanguage.g:13659:8: ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_80);
        	    rule__Unit__Group_7_2__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop121;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred127_InternalBeeLangTestLanguage

    // $ANTLR start synpred128_InternalBeeLangTestLanguage
    public final void synpred128_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13681:8: ( rule__Unit__Group_7_3__0 )
        // InternalBeeLangTestLanguage.g:13681:9: rule__Unit__Group_7_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalBeeLangTestLanguage

    // $ANTLR start synpred129_InternalBeeLangTestLanguage
    public final void synpred129_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13665:4: ( ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13665:4: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13665:4: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
        // InternalBeeLangTestLanguage.g:13666:5: {...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred129_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
        }
        // InternalBeeLangTestLanguage.g:13666:101: ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
        // InternalBeeLangTestLanguage.g:13667:6: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
        // InternalBeeLangTestLanguage.g:13673:6: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
        // InternalBeeLangTestLanguage.g:13674:6: ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
        {
        // InternalBeeLangTestLanguage.g:13674:6: ( ( rule__Unit__Group_7_3__0 ) )
        // InternalBeeLangTestLanguage.g:13675:7: ( rule__Unit__Group_7_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_3()); 
        }
        // InternalBeeLangTestLanguage.g:13676:7: ( rule__Unit__Group_7_3__0 )
        // InternalBeeLangTestLanguage.g:13676:8: rule__Unit__Group_7_3__0
        {
        pushFollow(FollowSets000.FOLLOW_81);
        rule__Unit__Group_7_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalBeeLangTestLanguage.g:13679:6: ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
        // InternalBeeLangTestLanguage.g:13680:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_3()); 
        }
        // InternalBeeLangTestLanguage.g:13681:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
        loop122:
        do {
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==52) && (synpred128_InternalBeeLangTestLanguage())) {
                alt122=1;
            }


            switch (alt122) {
        	case 1 :
        	    // InternalBeeLangTestLanguage.g:13681:8: ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_81);
        	    rule__Unit__Group_7_3__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop122;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred129_InternalBeeLangTestLanguage

    // $ANTLR start synpred130_InternalBeeLangTestLanguage
    public final void synpred130_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13703:8: ( rule__Unit__Group_7_4__0 )
        // InternalBeeLangTestLanguage.g:13703:9: rule__Unit__Group_7_4__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred130_InternalBeeLangTestLanguage

    // $ANTLR start synpred131_InternalBeeLangTestLanguage
    public final void synpred131_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13687:4: ( ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13687:4: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13687:4: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
        // InternalBeeLangTestLanguage.g:13688:5: {...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred131_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
        }
        // InternalBeeLangTestLanguage.g:13688:101: ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
        // InternalBeeLangTestLanguage.g:13689:6: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
        // InternalBeeLangTestLanguage.g:13695:6: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
        // InternalBeeLangTestLanguage.g:13696:6: ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
        {
        // InternalBeeLangTestLanguage.g:13696:6: ( ( rule__Unit__Group_7_4__0 ) )
        // InternalBeeLangTestLanguage.g:13697:7: ( rule__Unit__Group_7_4__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_4()); 
        }
        // InternalBeeLangTestLanguage.g:13698:7: ( rule__Unit__Group_7_4__0 )
        // InternalBeeLangTestLanguage.g:13698:8: rule__Unit__Group_7_4__0
        {
        pushFollow(FollowSets000.FOLLOW_81);
        rule__Unit__Group_7_4__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalBeeLangTestLanguage.g:13701:6: ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
        // InternalBeeLangTestLanguage.g:13702:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_4()); 
        }
        // InternalBeeLangTestLanguage.g:13703:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
        loop123:
        do {
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==52) && (synpred130_InternalBeeLangTestLanguage())) {
                alt123=1;
            }


            switch (alt123) {
        	case 1 :
        	    // InternalBeeLangTestLanguage.g:13703:8: ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_81);
        	    rule__Unit__Group_7_4__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop123;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred131_InternalBeeLangTestLanguage

    // $ANTLR start synpred132_InternalBeeLangTestLanguage
    public final void synpred132_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13725:8: ( rule__Unit__FunctionsAssignment_7_5 )
        // InternalBeeLangTestLanguage.g:13725:9: rule__Unit__FunctionsAssignment_7_5
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__FunctionsAssignment_7_5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_InternalBeeLangTestLanguage

    // $ANTLR start synpred133_InternalBeeLangTestLanguage
    public final void synpred133_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13746:2: ( rule__Unit__UnorderedGroup_7__1 )
        // InternalBeeLangTestLanguage.g:13746:2: rule__Unit__UnorderedGroup_7__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalBeeLangTestLanguage

    // $ANTLR start synpred134_InternalBeeLangTestLanguage
    public final void synpred134_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13759:2: ( rule__Unit__UnorderedGroup_7__2 )
        // InternalBeeLangTestLanguage.g:13759:2: rule__Unit__UnorderedGroup_7__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_InternalBeeLangTestLanguage

    // $ANTLR start synpred135_InternalBeeLangTestLanguage
    public final void synpred135_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13772:2: ( rule__Unit__UnorderedGroup_7__3 )
        // InternalBeeLangTestLanguage.g:13772:2: rule__Unit__UnorderedGroup_7__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalBeeLangTestLanguage

    // $ANTLR start synpred136_InternalBeeLangTestLanguage
    public final void synpred136_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13785:2: ( rule__Unit__UnorderedGroup_7__4 )
        // InternalBeeLangTestLanguage.g:13785:2: rule__Unit__UnorderedGroup_7__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalBeeLangTestLanguage

    // $ANTLR start synpred137_InternalBeeLangTestLanguage
    public final void synpred137_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13798:2: ( rule__Unit__UnorderedGroup_7__5 )
        // InternalBeeLangTestLanguage.g:13798:2: rule__Unit__UnorderedGroup_7__5
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalBeeLangTestLanguage

    // $ANTLR start synpred138_InternalBeeLangTestLanguage
    public final void synpred138_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13854:4: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13854:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13854:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:13855:5: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred138_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
        }
        // InternalBeeLangTestLanguage.g:13855:117: ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:13856:6: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
        // InternalBeeLangTestLanguage.g:13862:6: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
        // InternalBeeLangTestLanguage.g:13864:7: ( rule__ProvidedCapability__Group_2_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
        }
        // InternalBeeLangTestLanguage.g:13865:7: ( rule__ProvidedCapability__Group_2_1_0__0 )
        // InternalBeeLangTestLanguage.g:13865:8: rule__ProvidedCapability__Group_2_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__Group_2_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred138_InternalBeeLangTestLanguage

    // $ANTLR start synpred139_InternalBeeLangTestLanguage
    public final void synpred139_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13871:4: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13871:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13871:4: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:13872:5: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred139_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
        }
        // InternalBeeLangTestLanguage.g:13872:117: ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
        // InternalBeeLangTestLanguage.g:13873:6: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
        // InternalBeeLangTestLanguage.g:13879:6: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
        // InternalBeeLangTestLanguage.g:13881:7: ( rule__ProvidedCapability__Group_2_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
        }
        // InternalBeeLangTestLanguage.g:13882:7: ( rule__ProvidedCapability__Group_2_1_1__0 )
        // InternalBeeLangTestLanguage.g:13882:8: rule__ProvidedCapability__Group_2_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__Group_2_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred139_InternalBeeLangTestLanguage

    // $ANTLR start synpred140_InternalBeeLangTestLanguage
    public final void synpred140_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13920:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )
        // InternalBeeLangTestLanguage.g:13920:2: rule__ProvidedCapability__UnorderedGroup_2_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__UnorderedGroup_2_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalBeeLangTestLanguage

    // $ANTLR start synpred141_InternalBeeLangTestLanguage
    public final void synpred141_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13933:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )
        // InternalBeeLangTestLanguage.g:13933:2: rule__ProvidedCapability__UnorderedGroup_2_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__UnorderedGroup_2_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalBeeLangTestLanguage

    // $ANTLR start synpred142_InternalBeeLangTestLanguage
    public final void synpred142_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13964:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )
        // InternalBeeLangTestLanguage.g:13964:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalBeeLangTestLanguage

    // $ANTLR start synpred143_InternalBeeLangTestLanguage
    public final void synpred143_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13982:4: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13982:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13982:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:13983:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred143_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // InternalBeeLangTestLanguage.g:13983:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:13984:6: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // InternalBeeLangTestLanguage.g:13990:6: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
        // InternalBeeLangTestLanguage.g:13992:7: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
        }
        // InternalBeeLangTestLanguage.g:13993:7: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
        // InternalBeeLangTestLanguage.g:13993:8: rule__AliasedRequiredCapability__Group_3_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred143_InternalBeeLangTestLanguage

    // $ANTLR start synpred144_InternalBeeLangTestLanguage
    public final void synpred144_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:13999:4: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:13999:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:13999:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:14000:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred144_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // InternalBeeLangTestLanguage.g:14000:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
        // InternalBeeLangTestLanguage.g:14001:6: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // InternalBeeLangTestLanguage.g:14007:6: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
        // InternalBeeLangTestLanguage.g:14009:7: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
        }
        // InternalBeeLangTestLanguage.g:14010:7: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
        // InternalBeeLangTestLanguage.g:14010:8: rule__AliasedRequiredCapability__Group_3_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred144_InternalBeeLangTestLanguage

    // $ANTLR start synpred145_InternalBeeLangTestLanguage
    public final void synpred145_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14016:4: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:14016:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:14016:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:14017:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred145_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // InternalBeeLangTestLanguage.g:14017:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
        // InternalBeeLangTestLanguage.g:14018:6: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // InternalBeeLangTestLanguage.g:14024:6: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
        // InternalBeeLangTestLanguage.g:14026:7: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
        }
        // InternalBeeLangTestLanguage.g:14027:7: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
        // InternalBeeLangTestLanguage.g:14027:8: rule__AliasedRequiredCapability__Group_3_1_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred145_InternalBeeLangTestLanguage

    // $ANTLR start synpred146_InternalBeeLangTestLanguage
    public final void synpred146_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14033:4: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:14033:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:14033:4: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:14034:5: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred146_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // InternalBeeLangTestLanguage.g:14034:124: ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
        // InternalBeeLangTestLanguage.g:14035:6: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // InternalBeeLangTestLanguage.g:14041:6: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
        // InternalBeeLangTestLanguage.g:14043:7: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
        }
        // InternalBeeLangTestLanguage.g:14044:7: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
        // InternalBeeLangTestLanguage.g:14044:8: rule__AliasedRequiredCapability__Group_3_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred146_InternalBeeLangTestLanguage

    // $ANTLR start synpred147_InternalBeeLangTestLanguage
    public final void synpred147_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14082:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )
        // InternalBeeLangTestLanguage.g:14082:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalBeeLangTestLanguage

    // $ANTLR start synpred148_InternalBeeLangTestLanguage
    public final void synpred148_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14095:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )
        // InternalBeeLangTestLanguage.g:14095:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_InternalBeeLangTestLanguage

    // $ANTLR start synpred149_InternalBeeLangTestLanguage
    public final void synpred149_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14108:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )
        // InternalBeeLangTestLanguage.g:14108:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalBeeLangTestLanguage

    // $ANTLR start synpred150_InternalBeeLangTestLanguage
    public final void synpred150_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14121:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )
        // InternalBeeLangTestLanguage.g:14121:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_InternalBeeLangTestLanguage

    // $ANTLR start synpred151_InternalBeeLangTestLanguage
    public final void synpred151_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14156:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )
        // InternalBeeLangTestLanguage.g:14156:2: rule__RequiredCapability__UnorderedGroup_3_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalBeeLangTestLanguage

    // $ANTLR start synpred152_InternalBeeLangTestLanguage
    public final void synpred152_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14174:4: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:14174:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:14174:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:14175:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred152_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // InternalBeeLangTestLanguage.g:14175:117: ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
        // InternalBeeLangTestLanguage.g:14176:6: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // InternalBeeLangTestLanguage.g:14182:6: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
        // InternalBeeLangTestLanguage.g:14184:7: ( rule__RequiredCapability__Group_3_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
        }
        // InternalBeeLangTestLanguage.g:14185:7: ( rule__RequiredCapability__Group_3_1_0__0 )
        // InternalBeeLangTestLanguage.g:14185:8: rule__RequiredCapability__Group_3_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred152_InternalBeeLangTestLanguage

    // $ANTLR start synpred153_InternalBeeLangTestLanguage
    public final void synpred153_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14191:4: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:14191:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:14191:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:14192:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred153_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // InternalBeeLangTestLanguage.g:14192:117: ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
        // InternalBeeLangTestLanguage.g:14193:6: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // InternalBeeLangTestLanguage.g:14199:6: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
        // InternalBeeLangTestLanguage.g:14201:7: ( rule__RequiredCapability__Group_3_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
        }
        // InternalBeeLangTestLanguage.g:14202:7: ( rule__RequiredCapability__Group_3_1_1__0 )
        // InternalBeeLangTestLanguage.g:14202:8: rule__RequiredCapability__Group_3_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred153_InternalBeeLangTestLanguage

    // $ANTLR start synpred154_InternalBeeLangTestLanguage
    public final void synpred154_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14208:4: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:14208:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:14208:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:14209:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred154_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // InternalBeeLangTestLanguage.g:14209:117: ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
        // InternalBeeLangTestLanguage.g:14210:6: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // InternalBeeLangTestLanguage.g:14216:6: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
        // InternalBeeLangTestLanguage.g:14218:7: ( rule__RequiredCapability__Group_3_1_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
        }
        // InternalBeeLangTestLanguage.g:14219:7: ( rule__RequiredCapability__Group_3_1_2__0 )
        // InternalBeeLangTestLanguage.g:14219:8: rule__RequiredCapability__Group_3_1_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred154_InternalBeeLangTestLanguage

    // $ANTLR start synpred155_InternalBeeLangTestLanguage
    public final void synpred155_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14225:4: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) )
        // InternalBeeLangTestLanguage.g:14225:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
        {
        // InternalBeeLangTestLanguage.g:14225:4: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
        // InternalBeeLangTestLanguage.g:14226:5: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred155_InternalBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // InternalBeeLangTestLanguage.g:14226:117: ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
        // InternalBeeLangTestLanguage.g:14227:6: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // InternalBeeLangTestLanguage.g:14233:6: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
        // InternalBeeLangTestLanguage.g:14235:7: ( rule__RequiredCapability__Group_3_1_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
        }
        // InternalBeeLangTestLanguage.g:14236:7: ( rule__RequiredCapability__Group_3_1_3__0 )
        // InternalBeeLangTestLanguage.g:14236:8: rule__RequiredCapability__Group_3_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred155_InternalBeeLangTestLanguage

    // $ANTLR start synpred156_InternalBeeLangTestLanguage
    public final void synpred156_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14274:2: ( rule__RequiredCapability__UnorderedGroup_3_1__1 )
        // InternalBeeLangTestLanguage.g:14274:2: rule__RequiredCapability__UnorderedGroup_3_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalBeeLangTestLanguage

    // $ANTLR start synpred157_InternalBeeLangTestLanguage
    public final void synpred157_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14287:2: ( rule__RequiredCapability__UnorderedGroup_3_1__2 )
        // InternalBeeLangTestLanguage.g:14287:2: rule__RequiredCapability__UnorderedGroup_3_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_InternalBeeLangTestLanguage

    // $ANTLR start synpred158_InternalBeeLangTestLanguage
    public final void synpred158_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14300:2: ( rule__RequiredCapability__UnorderedGroup_3_1__3 )
        // InternalBeeLangTestLanguage.g:14300:2: rule__RequiredCapability__UnorderedGroup_3_1__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred158_InternalBeeLangTestLanguage

    // $ANTLR start synpred159_InternalBeeLangTestLanguage
    public final void synpred159_InternalBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalBeeLangTestLanguage.g:14313:2: ( rule__RequiredCapability__UnorderedGroup_3_1__4 )
        // InternalBeeLangTestLanguage.g:14313:2: rule__RequiredCapability__UnorderedGroup_3_1__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred159_InternalBeeLangTestLanguage

}

@SuppressWarnings("all")
public class InternalBeeLangTestLanguageParser extends InternalBeeLangTestLanguageParser12 {



        public InternalBeeLangTestLanguageParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalBeeLangTestLanguageParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[1152+1];
             
             
        }
        


}
