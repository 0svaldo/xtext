/*
* generated by Xtext
*/
package org.eclipse.xtext.grammarinheritance.parser.packrat.consumers;

import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumerConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.AbstractRuleAwareTerminalConsumer;
import org.eclipse.xtext.parser.packrat.consumers.ConsumeResult;

import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

@SuppressWarnings("all")
public final class AbstractTestLanguageREALConsumer extends AbstractRuleAwareTerminalConsumer {

	private ITerminalConsumer intConsumer;

	public AbstractTestLanguageREALConsumer(ITerminalConsumerConfiguration configuration) {
		super(configuration);
	}
	
	@Override
	protected int doConsume() {
		return consumeGroup$1() ? ConsumeResult.SUCCESS : ConsumeResult.EMPTY_MATCH;
	}

	protected boolean consumeGroup$1() {
		final int marker = mark();
		if (!consumeRuleCall$2()) {
			rollbackTo(marker);
			return false;
		}
		if (!consumeKeyword$3()) {
			rollbackTo(marker);
			return false;
		}
		if (!consumeRuleCall$4()) {
			rollbackTo(marker);
			return false;
		}
		return true;
	}

	protected boolean consumeRuleCall$2() {
		return intConsumer.consume() == SUCCESS;
	}

	protected boolean consumeKeyword$3() {
		return readChar('.');
	}

	protected boolean consumeRuleCall$4() {
		return intConsumer.consume() == SUCCESS;
	}
	
	public void setIntConsumer(ITerminalConsumer intConsumer) {
		this.intConsumer = intConsumer;
	}
	
}
