/*
* generated by Xtext
*/
package org.eclipse.xtext.grammarinheritance.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.grammarinheritance.services.InheritanceTest2LanguageGrammarAccess;

import org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTestLanguageParserConfiguration; 
import org.eclipse.xtext.grammarinheritance.parser.packrat.consumers.InheritanceTest2LanguageModelConsumer;
import org.eclipse.xtext.grammarinheritance.parser.packrat.consumers.InheritanceTestLanguageElementConsumer;
import org.eclipse.xtext.grammarinheritance.parser.packrat.consumers.BaseInheritanceTestLanguageFQNConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class InheritanceTest2LanguageParserConfiguration extends AbstractParserConfiguration {

	private final InheritanceTestLanguageParserConfiguration inheritanceTestLanguageConfiguration; 
    private InheritanceTest2LanguageModelConsumer modelConsumer;

	private InheritanceTest2LanguageGrammarAccess grammarAccess;

	public InheritanceTest2LanguageParserConfiguration(IInternalParserConfiguration configuration, InheritanceTest2LanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.inheritanceTestLanguageConfiguration = new InheritanceTestLanguageParserConfiguration(configuration, null);
	}

	public InheritanceTest2LanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getInheritanceTestLanguageConfiguration().createNonTerminalConsumers();
		modelConsumer = new InheritanceTest2LanguageModelConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getInheritanceTestLanguageConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getElementConsumer().setRule(grammarAccess.getElementAccess());
		getFqnConsumer().setRule(grammarAccess.getFQNAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setElementConsumer(getElementConsumer());
		getModelConsumer().setFqnConsumer(getFqnConsumer());
		getModelConsumer().setIdConsumer(getIdConsumer());

		getElementConsumer().setIdConsumer(getIdConsumer());

		getFqnConsumer().setIdConsumer(getIdConsumer());

		getModelConsumer().setKeyword$10$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.keyword$7$Delimiter);
		getModelConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.keyword$4$Delimiter);
		getModelConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.keyword$7$Delimiter);
		getModelConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.ruleCall$6$Delimiter);
		getElementConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.keyword$4$Delimiter);
		getElementConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.ruleCall$6$Delimiter);
		getFqnConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.keyword$7$Delimiter);
		getFqnConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.ruleCall$6$Delimiter);
		getFqnConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.grammarinheritance.parser.packrat.InheritanceTest2LanguageDelimiters.ruleCall$6$Delimiter);
	}
	
	public InheritanceTestLanguageParserConfiguration getInheritanceTestLanguageConfiguration() {
		return inheritanceTestLanguageConfiguration;
	} 
	
    public InheritanceTest2LanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public InheritanceTestLanguageElementConsumer getElementConsumer() {
    	return getInheritanceTestLanguageConfiguration().getElementConsumer();
    }

    public BaseInheritanceTestLanguageFQNConsumer getFqnConsumer() {
    	return getInheritanceTestLanguageConfiguration().getFqnConsumer();
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getInheritanceTestLanguageConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getInheritanceTestLanguageConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getInheritanceTestLanguageConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getInheritanceTestLanguageConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getInheritanceTestLanguageConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getInheritanceTestLanguageConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getInheritanceTestLanguageConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getInheritanceTestLanguageConfiguration().getInitialHiddenTerminals();
	}
	
}
