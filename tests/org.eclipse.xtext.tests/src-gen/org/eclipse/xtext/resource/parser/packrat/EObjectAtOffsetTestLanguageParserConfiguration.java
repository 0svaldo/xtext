/*
* generated by Xtext
*/
package org.eclipse.xtext.resource.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.resource.services.EObjectAtOffsetTestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.resource.parser.packrat.consumers.EObjectAtOffsetTestLanguageModelConsumer;
import org.eclipse.xtext.resource.parser.packrat.consumers.EObjectAtOffsetTestLanguageAbstractBarConsumer;
import org.eclipse.xtext.resource.parser.packrat.consumers.EObjectAtOffsetTestLanguageBarConsumer;
import org.eclipse.xtext.resource.parser.packrat.consumers.EObjectAtOffsetTestLanguageFooConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class EObjectAtOffsetTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private EObjectAtOffsetTestLanguageModelConsumer modelConsumer;
    private EObjectAtOffsetTestLanguageAbstractBarConsumer abstractBarConsumer;
    private EObjectAtOffsetTestLanguageBarConsumer barConsumer;
    private EObjectAtOffsetTestLanguageFooConsumer fooConsumer;

	private EObjectAtOffsetTestLanguageGrammarAccess grammarAccess;

	public EObjectAtOffsetTestLanguageParserConfiguration(IInternalParserConfiguration configuration, EObjectAtOffsetTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public EObjectAtOffsetTestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		modelConsumer = new EObjectAtOffsetTestLanguageModelConsumer(
    		this, null
    	);
		abstractBarConsumer = new EObjectAtOffsetTestLanguageAbstractBarConsumer(
    		this, null
    	);
		barConsumer = new EObjectAtOffsetTestLanguageBarConsumer(
    		this, null
    	);
		fooConsumer = new EObjectAtOffsetTestLanguageFooConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getAbstractBarConsumer().setRule(grammarAccess.getAbstractBarAccess());
		getBarConsumer().setRule(grammarAccess.getBarAccess());
		getFooConsumer().setRule(grammarAccess.getFooAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setAbstractBarConsumer(getAbstractBarConsumer());
		getModelConsumer().setFooConsumer(getFooConsumer());

		getAbstractBarConsumer().setBarConsumer(getBarConsumer());
		getAbstractBarConsumer().setIdConsumer(getIdConsumer());

		getBarConsumer().setIdConsumer(getIdConsumer());

		getFooConsumer().setIdConsumer(getIdConsumer());

		getAbstractBarConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.keyword$15$Delimiter);
		getAbstractBarConsumer().setRuleCall$10$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.ruleCall$19$Delimiter);
		getBarConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.keyword$15$Delimiter);
		getBarConsumer().setKeyword$10$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.keyword$31$Delimiter);
		getBarConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.ruleCall$19$Delimiter);
		getBarConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.ruleCall$19$Delimiter);
		getBarConsumer().setRuleCall$14$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.ruleCall$19$Delimiter);
		getFooConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.keyword$15$Delimiter);
		getFooConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.resource.parser.packrat.EObjectAtOffsetTestLanguageDelimiters.ruleCall$19$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public EObjectAtOffsetTestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public EObjectAtOffsetTestLanguageAbstractBarConsumer getAbstractBarConsumer() {
    	return abstractBarConsumer;
    }

    public EObjectAtOffsetTestLanguageBarConsumer getBarConsumer() {
    	return barConsumer;
    }

    public EObjectAtOffsetTestLanguageFooConsumer getFooConsumer() {
    	return fooConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
