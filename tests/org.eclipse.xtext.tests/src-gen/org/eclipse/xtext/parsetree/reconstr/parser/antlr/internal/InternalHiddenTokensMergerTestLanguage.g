/*
* generated by Xtext
*/
grammar InternalHiddenTokensMergerTestLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.xtext.parsetree.reconstr.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.parsetree.reconstr.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.xtext.parsetree.reconstr.services.HiddenTokensMergerTestLanguageGrammarAccess;

}

@parser::members {

 	private HiddenTokensMergerTestLanguageGrammarAccess grammarAccess;
 	
    public InternalHiddenTokensMergerTestLanguageParser(TokenStream input, IAstFactory factory, HiddenTokensMergerTestLanguageGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected HiddenTokensMergerTestLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelRule(), currentNode); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getModelAccess().getDatatypeBug286557ParserRuleCall_0(), currentNode); 
    }
    this_DatatypeBug286557_0=ruleDatatypeBug286557
    { 
        $current = $this_DatatypeBug286557_0.current; 
        // currentNode = currentNode.getParent();
        afterParserOrEnumRuleCall();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelAccess().getEnumBugParserRuleCall_1(), currentNode); 
    }
    this_EnumBug_1=ruleEnumBug
    { 
        $current = $this_EnumBug_1.current; 
        // currentNode = currentNode.getParent();
        afterParserOrEnumRuleCall();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelAccess().getCommentableParserRuleCall_2(), currentNode); 
    }
    this_Commentable_2=ruleCommentable
    { 
        $current = $this_Commentable_2.current; 
        // currentNode = currentNode.getParent();
        afterParserOrEnumRuleCall();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelAccess().getValueListParserRuleCall_3(), currentNode); 
    }
    this_ValueList_3=ruleValueList
    { 
        $current = $this_ValueList_3.current; 
        // currentNode = currentNode.getParent();
        afterParserOrEnumRuleCall();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelAccess().getRefListParserRuleCall_4(), currentNode); 
    }
    this_RefList_4=ruleRefList
    { 
        $current = $this_RefList_4.current; 
        // currentNode = currentNode.getParent();
        afterParserOrEnumRuleCall();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelAccess().getSingleRefParserRuleCall_5(), currentNode); 
    }
    this_SingleRef_5=ruleSingleRef
    { 
        $current = $this_SingleRef_5.current; 
        // currentNode = currentNode.getParent();
        afterParserOrEnumRuleCall();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelAccess().getAppendToFileEndParserRuleCall_6(), currentNode); 
    }
    this_AppendToFileEnd_6=ruleAppendToFileEnd
    { 
        $current = $this_AppendToFileEnd_6.current; 
        // currentNode = currentNode.getParent();
        afterParserOrEnumRuleCall();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelAccess().getAction1ParserRuleCall_7(), currentNode); 
    }
    this_Action1_7=ruleAction1
    { 
        $current = $this_Action1_7.current; 
        // currentNode = currentNode.getParent();
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDatatypeBug286557
entryRuleDatatypeBug286557 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDatatypeBug286557Rule(), currentNode); }
	 iv_ruleDatatypeBug286557=ruleDatatypeBug286557 
	 { $current=$iv_ruleDatatypeBug286557.current; } 
	 EOF 
;

// Rule DatatypeBug286557
ruleDatatypeBug286557 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='#1' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getDatatypeBug286557Access().getNumberSignDigitOneKeyword_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDatatypeBug286557Access().getNameFQNParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatatypeBug286557Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"FQN", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='ref' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getDatatypeBug286557Access().getRefKeyword_2_0(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatatypeBug286557Rule());
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDatatypeBug286557Access().getRefDatatypeBug286557CrossReference_2_1_0(), currentNode); 
	    }
		ruleFQN		{ 
	        // currentNode = currentNode.getParent();
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4=';' 
    {
    	createLeafNode(otherlv_4, grammarAccess.getDatatypeBug286557Access().getSemicolonKeyword_3(), null);
    }
)
;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFQNRule(), currentNode); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0(), null); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1(), null); 
    }
)*)
    ;





// Entry rule entryRuleEnumBug
entryRuleEnumBug returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEnumBugRule(), currentNode); }
	 iv_ruleEnumBug=ruleEnumBug 
	 { $current=$iv_ruleEnumBug.current; } 
	 EOF 
;

// Rule EnumBug
ruleEnumBug returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='#2' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getEnumBugAccess().getNumberSignDigitTwoKeyword_0(), null);
    }
	otherlv_1='kw1' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getEnumBugAccess().getKw1Keyword_1(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEnumBugAccess().getReturnEnumBugEnumEnumRuleCall_2_0(), currentNode); 
	    }
		lv_return_2_0=ruleEnumBugEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumBugRule());
	        }
       		set(
       			$current, 
       			"return",
        		lv_return_2_0, 
        		"EnumBugEnum", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(lv_name_3_0, grammarAccess.getEnumBugAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumBugRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID", 
        		lastConsumedNode);
	    }

)
))
;





// Entry rule entryRuleCommentable
entryRuleCommentable returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCommentableRule(), currentNode); }
	 iv_ruleCommentable=ruleCommentable 
	 { $current=$iv_ruleCommentable.current; } 
	 EOF 
;

// Rule Commentable
ruleCommentable returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='#3' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getCommentableAccess().getNumberSignDigitThreeKeyword_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCommentableAccess().getItemCommentableItemParserRuleCall_1_0(), currentNode); 
	    }
		lv_item_1_0=ruleCommentableItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommentableRule());
	        }
       		add(
       			$current, 
       			"item",
        		lv_item_1_0, 
        		"CommentableItem", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleCommentableItem
entryRuleCommentableItem returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCommentableItemRule(), currentNode); }
	 iv_ruleCommentableItem=ruleCommentableItem 
	 { $current=$iv_ruleCommentableItem.current; } 
	 EOF 
;

// Rule CommentableItem
ruleCommentableItem returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='item' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getCommentableItemAccess().getItemKeyword_0(), null);
    }
(
(
		lv_id_1_0=RULE_ID
		{
			createLeafNode(lv_id_1_0, grammarAccess.getCommentableItemAccess().getIdIDTerminalRuleCall_1_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommentableItemRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ID", 
        		lastConsumedNode);
	    }

)
))
;





// Entry rule entryRuleValueList
entryRuleValueList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueListRule(), currentNode); }
	 iv_ruleValueList=ruleValueList 
	 { $current=$iv_ruleValueList.current; } 
	 EOF 
;

// Rule ValueList
ruleValueList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='#4' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getValueListAccess().getNumberSignDigitFourKeyword_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueListAccess().getIdsFQNParserRuleCall_1_0(), currentNode); 
	    }
		lv_ids_1_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueListRule());
	        }
       		add(
       			$current, 
       			"ids",
        		lv_ids_1_0, 
        		"FQN", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleRefList
entryRuleRefList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRefListRule(), currentNode); }
	 iv_ruleRefList=ruleRefList 
	 { $current=$iv_ruleRefList.current; } 
	 EOF 
;

// Rule RefList
ruleRefList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='#5' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getRefListAccess().getNumberSignDigitFiveKeyword_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRefListAccess().getObjsRefObjParserRuleCall_1_0(), currentNode); 
	    }
		lv_objs_1_0=ruleRefObj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefListRule());
	        }
       		add(
       			$current, 
       			"objs",
        		lv_objs_1_0, 
        		"RefObj", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='refs' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getRefListAccess().getRefsKeyword_2(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefListRule());
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRefListAccess().getRefsRefObjCrossReference_3_0(), currentNode); 
	    }
		ruleFQN		{ 
	        // currentNode = currentNode.getParent();
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleRefObj
entryRuleRefObj returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRefObjRule(), currentNode); }
	 iv_ruleRefObj=ruleRefObj 
	 { $current=$iv_ruleRefObj.current; } 
	 EOF 
;

// Rule RefObj
ruleRefObj returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRefObjAccess().getNameFQNParserRuleCall_0(), currentNode); 
	    }
		lv_name_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefObjRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"FQN", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSingleRef
entryRuleSingleRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSingleRefRule(), currentNode); }
	 iv_ruleSingleRef=ruleSingleRef 
	 { $current=$iv_ruleSingleRef.current; } 
	 EOF 
;

// Rule SingleRef
ruleSingleRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='#6' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getSingleRefAccess().getNumberSignDigitSixKeyword_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSingleRefAccess().getObjRefObjParserRuleCall_1_0(), currentNode); 
	    }
		lv_obj_1_0=ruleRefObj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleRefRule());
	        }
       		set(
       			$current, 
       			"obj",
        		lv_obj_1_0, 
        		"RefObj", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='ref' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getSingleRefAccess().getRefKeyword_2(), null);
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleRefRule());
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSingleRefAccess().getRefRefObjCrossReference_3_0(), currentNode); 
	    }
		ruleFQN		{ 
	        // currentNode = currentNode.getParent();
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAppendToFileEnd
entryRuleAppendToFileEnd returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAppendToFileEndRule(), currentNode); }
	 iv_ruleAppendToFileEnd=ruleAppendToFileEnd 
	 { $current=$iv_ruleAppendToFileEnd.current; } 
	 EOF 
;

// Rule AppendToFileEnd
ruleAppendToFileEnd returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='#7' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getAppendToFileEndAccess().getNumberSignDigitSevenKeyword_0(), null);
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAppendToFileEndAccess().getItemsAppendToFileEndItemParserRuleCall_1_0(), currentNode); 
	    }
		lv_items_1_0=ruleAppendToFileEndItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAppendToFileEndRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_1_0, 
        		"AppendToFileEndItem", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAppendToFileEndItem
entryRuleAppendToFileEndItem returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAppendToFileEndItemRule(), currentNode); }
	 iv_ruleAppendToFileEndItem=ruleAppendToFileEndItem 
	 { $current=$iv_ruleAppendToFileEndItem.current; } 
	 EOF 
;

// Rule AppendToFileEndItem
ruleAppendToFileEndItem returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='class' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getAppendToFileEndItemAccess().getClassKeyword_0(), null);
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(lv_name_1_0, grammarAccess.getAppendToFileEndItemAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAppendToFileEndItemRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID", 
        		lastConsumedNode);
	    }

)
)	otherlv_2='endclass' 
    {
    	createLeafNode(otherlv_2, grammarAccess.getAppendToFileEndItemAccess().getEndclassKeyword_2(), null);
    }
)
;





// Entry rule entryRuleAction1
entryRuleAction1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAction1Rule(), currentNode); }
	 iv_ruleAction1=ruleAction1 
	 { $current=$iv_ruleAction1.current; } 
	 EOF 
;

// Rule Action1
ruleAction1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	otherlv_0='#8' 
    {
    	createLeafNode(otherlv_0, grammarAccess.getAction1Access().getNumberSignDigitEightKeyword_0(), null);
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getAction1Access().getAction1Action_1(),
            $current);
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(lv_name_2_0, grammarAccess.getAction1Access().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAction1Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID", 
        		lastConsumedNode);
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAction1Access().getActions2Action1Sub1ParserRuleCall_3_0(), currentNode); 
	    }
		lv_actions2_3_0=ruleAction1Sub1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAction1Rule());
	        }
       		add(
       			$current, 
       			"actions2",
        		lv_actions2_3_0, 
        		"Action1Sub1", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAction1Access().getActions2Action1Sub2ParserRuleCall_4_0(), currentNode); 
	    }
		lv_actions2_4_0=ruleAction1Sub2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAction1Rule());
	        }
       		add(
       			$current, 
       			"actions2",
        		lv_actions2_4_0, 
        		"Action1Sub2", 
        		currentNode);
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAction1Sub1
entryRuleAction1Sub1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAction1Sub1Rule(), currentNode); }
	 iv_ruleAction1Sub1=ruleAction1Sub1 
	 { $current=$iv_ruleAction1Sub1.current; } 
	 EOF 
;

// Rule Action1Sub1
ruleAction1Sub1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAction1Sub1Access().getAction1SubAction_0(),
            $current);
    }
)	otherlv_1='sub1' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getAction1Sub1Access().getSub1Keyword_1(), null);
    }
)
;





// Entry rule entryRuleAction1Sub2
entryRuleAction1Sub2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAction1Sub2Rule(), currentNode); }
	 iv_ruleAction1Sub2=ruleAction1Sub2 
	 { $current=$iv_ruleAction1Sub2.current; } 
	 EOF 
;

// Rule Action1Sub2
ruleAction1Sub2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAction1Sub2Access().getAction1SubClassAction_0(),
            $current);
    }
)	otherlv_1='sub2' 
    {
    	createLeafNode(otherlv_1, grammarAccess.getAction1Sub2Access().getSub2Keyword_1(), null);
    }
)
;





// Rule EnumBugEnum
ruleEnumBugEnum returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	enumLiteral_0='array' 
	{
        $current = grammarAccess.getEnumBugEnumAccess().getArrayEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(enumLiteral_0, grammarAccess.getEnumBugEnumAccess().getArrayEnumLiteralDeclaration_0(), null); 
    }
)
    |(	enumLiteral_1='object' 
	{
        $current = grammarAccess.getEnumBugEnumAccess().getObjectEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(enumLiteral_1, grammarAccess.getEnumBugEnumAccess().getObjectEnumLiteralDeclaration_1(), null); 
    }
)
    |(	enumLiteral_2='resultSet' 
	{
        $current = grammarAccess.getEnumBugEnumAccess().getResultSetEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(enumLiteral_2, grammarAccess.getEnumBugEnumAccess().getResultSetEnumLiteralDeclaration_2(), null); 
    }
)
    |(	enumLiteral_3='iterator' 
	{
        $current = grammarAccess.getEnumBugEnumAccess().getIteratorEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(enumLiteral_3, grammarAccess.getEnumBugEnumAccess().getIteratorEnumLiteralDeclaration_3(), null); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


