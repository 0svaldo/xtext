/*
* generated by Xtext
*/
package org.eclipse.xtext.parsetree.reconstr.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.parsetree.reconstr.services.SimpleReconstrTestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageOpConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTermConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageAtomConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageParensConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTwoNumbersConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageManyStringsConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageRef2Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageSpareConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageBooleanConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTransient1Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageConsumed1Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageConsumed2Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageLoop1Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageLoop2Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageLoop3Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageLoop4Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageLoopBug285452Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageDuplicateBug284491Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageEmptyObjectBug284850Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageEmptyObjectItemsConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageEmptyObjectItemConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageMultiInheritanceBug280439Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageAbstractMulti1Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageAbstractMulti2Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageConcreteMultiConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageEObjectRefConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageEObjectElementConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeBug305577_1Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeBug305577_2Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeBug1AInhConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeBug1AConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeBug1BConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeBug2AInhConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeBug2AConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageTypeBug2BConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.SimpleReconstrTestLanguageBug305171Consumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class SimpleReconstrTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private SimpleReconstrTestLanguageOpConsumer opConsumer;
    private SimpleReconstrTestLanguageTermConsumer termConsumer;
    private SimpleReconstrTestLanguageAtomConsumer atomConsumer;
    private SimpleReconstrTestLanguageParensConsumer parensConsumer;
    private SimpleReconstrTestLanguageTwoNumbersConsumer twoNumbersConsumer;
    private SimpleReconstrTestLanguageManyStringsConsumer manyStringsConsumer;
    private SimpleReconstrTestLanguageTypeConsumer typeConsumer;
    private SimpleReconstrTestLanguageRef2Consumer ref2Consumer;
    private SimpleReconstrTestLanguageSpareConsumer spareConsumer;
    private SimpleReconstrTestLanguageBooleanConsumer booleanConsumer;
    private SimpleReconstrTestLanguageTransient1Consumer transient1Consumer;
    private SimpleReconstrTestLanguageConsumed1Consumer consumed1Consumer;
    private SimpleReconstrTestLanguageConsumed2Consumer consumed2Consumer;
    private SimpleReconstrTestLanguageLoop1Consumer loop1Consumer;
    private SimpleReconstrTestLanguageLoop2Consumer loop2Consumer;
    private SimpleReconstrTestLanguageLoop3Consumer loop3Consumer;
    private SimpleReconstrTestLanguageLoop4Consumer loop4Consumer;
    private SimpleReconstrTestLanguageLoopBug285452Consumer loopBug285452Consumer;
    private SimpleReconstrTestLanguageDuplicateBug284491Consumer duplicateBug284491Consumer;
    private SimpleReconstrTestLanguageEmptyObjectBug284850Consumer emptyObjectBug284850Consumer;
    private SimpleReconstrTestLanguageEmptyObjectItemsConsumer emptyObjectItemsConsumer;
    private SimpleReconstrTestLanguageEmptyObjectItemConsumer emptyObjectItemConsumer;
    private SimpleReconstrTestLanguageMultiInheritanceBug280439Consumer multiInheritanceBug280439Consumer;
    private SimpleReconstrTestLanguageAbstractMulti1Consumer abstractMulti1Consumer;
    private SimpleReconstrTestLanguageAbstractMulti2Consumer abstractMulti2Consumer;
    private SimpleReconstrTestLanguageConcreteMultiConsumer concreteMultiConsumer;
    private SimpleReconstrTestLanguageEObjectRefConsumer eObjectRefConsumer;
    private SimpleReconstrTestLanguageEObjectElementConsumer eObjectElementConsumer;
    private SimpleReconstrTestLanguageTypeBug305577_1Consumer typeBug3055771Consumer;
    private SimpleReconstrTestLanguageTypeBug305577_2Consumer typeBug3055772Consumer;
    private SimpleReconstrTestLanguageTypeBug1AInhConsumer typeBug1AInhConsumer;
    private SimpleReconstrTestLanguageTypeBug1AConsumer typeBug1AConsumer;
    private SimpleReconstrTestLanguageTypeBug1BConsumer typeBug1BConsumer;
    private SimpleReconstrTestLanguageTypeBug2AInhConsumer typeBug2AInhConsumer;
    private SimpleReconstrTestLanguageTypeBug2AConsumer typeBug2AConsumer;
    private SimpleReconstrTestLanguageTypeBug2BConsumer typeBug2BConsumer;
    private SimpleReconstrTestLanguageBug305171Consumer bug305171Consumer;

	private SimpleReconstrTestLanguageGrammarAccess grammarAccess;

	public SimpleReconstrTestLanguageParserConfiguration(IInternalParserConfiguration configuration, SimpleReconstrTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public SimpleReconstrTestLanguageOpConsumer getRootConsumer() {
		return opConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		opConsumer = new SimpleReconstrTestLanguageOpConsumer(
    		this, null
    	);
		termConsumer = new SimpleReconstrTestLanguageTermConsumer(
    		this, null
    	);
		atomConsumer = new SimpleReconstrTestLanguageAtomConsumer(
    		this, null
    	);
		parensConsumer = new SimpleReconstrTestLanguageParensConsumer(
    		this, null
    	);
		twoNumbersConsumer = new SimpleReconstrTestLanguageTwoNumbersConsumer(
    		this, null
    	);
		manyStringsConsumer = new SimpleReconstrTestLanguageManyStringsConsumer(
    		this, null
    	);
		typeConsumer = new SimpleReconstrTestLanguageTypeConsumer(
    		this, null
    	);
		ref2Consumer = new SimpleReconstrTestLanguageRef2Consumer(
    		this, null
    	);
		spareConsumer = new SimpleReconstrTestLanguageSpareConsumer(
    		this, null
    	);
		booleanConsumer = new SimpleReconstrTestLanguageBooleanConsumer(
    		this, null
    	);
		transient1Consumer = new SimpleReconstrTestLanguageTransient1Consumer(
    		this, null
    	);
		consumed1Consumer = new SimpleReconstrTestLanguageConsumed1Consumer(
    		this, null
    	);
		consumed2Consumer = new SimpleReconstrTestLanguageConsumed2Consumer(
    		this, null
    	);
		loop1Consumer = new SimpleReconstrTestLanguageLoop1Consumer(
    		this, null
    	);
		loop2Consumer = new SimpleReconstrTestLanguageLoop2Consumer(
    		this, null
    	);
		loop3Consumer = new SimpleReconstrTestLanguageLoop3Consumer(
    		this, null
    	);
		loop4Consumer = new SimpleReconstrTestLanguageLoop4Consumer(
    		this, null
    	);
		loopBug285452Consumer = new SimpleReconstrTestLanguageLoopBug285452Consumer(
    		this, null
    	);
		duplicateBug284491Consumer = new SimpleReconstrTestLanguageDuplicateBug284491Consumer(
    		this, null
    	);
		emptyObjectBug284850Consumer = new SimpleReconstrTestLanguageEmptyObjectBug284850Consumer(
    		this, null
    	);
		emptyObjectItemsConsumer = new SimpleReconstrTestLanguageEmptyObjectItemsConsumer(
    		this, null
    	);
		emptyObjectItemConsumer = new SimpleReconstrTestLanguageEmptyObjectItemConsumer(
    		this, null
    	);
		multiInheritanceBug280439Consumer = new SimpleReconstrTestLanguageMultiInheritanceBug280439Consumer(
    		this, null
    	);
		abstractMulti1Consumer = new SimpleReconstrTestLanguageAbstractMulti1Consumer(
    		this, null
    	);
		abstractMulti2Consumer = new SimpleReconstrTestLanguageAbstractMulti2Consumer(
    		this, null
    	);
		concreteMultiConsumer = new SimpleReconstrTestLanguageConcreteMultiConsumer(
    		this, null
    	);
		eObjectRefConsumer = new SimpleReconstrTestLanguageEObjectRefConsumer(
    		this, null
    	);
		eObjectElementConsumer = new SimpleReconstrTestLanguageEObjectElementConsumer(
    		this, null
    	);
		typeBug3055771Consumer = new SimpleReconstrTestLanguageTypeBug305577_1Consumer(
    		this, null
    	);
		typeBug3055772Consumer = new SimpleReconstrTestLanguageTypeBug305577_2Consumer(
    		this, null
    	);
		typeBug1AInhConsumer = new SimpleReconstrTestLanguageTypeBug1AInhConsumer(
    		this, null
    	);
		typeBug1AConsumer = new SimpleReconstrTestLanguageTypeBug1AConsumer(
    		this, null
    	);
		typeBug1BConsumer = new SimpleReconstrTestLanguageTypeBug1BConsumer(
    		this, null
    	);
		typeBug2AInhConsumer = new SimpleReconstrTestLanguageTypeBug2AInhConsumer(
    		this, null
    	);
		typeBug2AConsumer = new SimpleReconstrTestLanguageTypeBug2AConsumer(
    		this, null
    	);
		typeBug2BConsumer = new SimpleReconstrTestLanguageTypeBug2BConsumer(
    		this, null
    	);
		bug305171Consumer = new SimpleReconstrTestLanguageBug305171Consumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getOpConsumer().setRule(grammarAccess.getOpAccess());
		getTermConsumer().setRule(grammarAccess.getTermAccess());
		getAtomConsumer().setRule(grammarAccess.getAtomAccess());
		getParensConsumer().setRule(grammarAccess.getParensAccess());
		getTwoNumbersConsumer().setRule(grammarAccess.getTwoNumbersAccess());
		getManyStringsConsumer().setRule(grammarAccess.getManyStringsAccess());
		getTypeConsumer().setRule(grammarAccess.getTypeAccess());
		getRef2Consumer().setRule(grammarAccess.getRef2Access());
		getSpareConsumer().setRule(grammarAccess.getSpareAccess());
		getBooleanConsumer().setRule(grammarAccess.getBooleanAccess());
		getTransient1Consumer().setRule(grammarAccess.getTransient1Access());
		getConsumed1Consumer().setRule(grammarAccess.getConsumed1Access());
		getConsumed2Consumer().setRule(grammarAccess.getConsumed2Access());
		getLoop1Consumer().setRule(grammarAccess.getLoop1Access());
		getLoop2Consumer().setRule(grammarAccess.getLoop2Access());
		getLoop3Consumer().setRule(grammarAccess.getLoop3Access());
		getLoop4Consumer().setRule(grammarAccess.getLoop4Access());
		getLoopBug285452Consumer().setRule(grammarAccess.getLoopBug285452Access());
		getDuplicateBug284491Consumer().setRule(grammarAccess.getDuplicateBug284491Access());
		getEmptyObjectBug284850Consumer().setRule(grammarAccess.getEmptyObjectBug284850Access());
		getEmptyObjectItemsConsumer().setRule(grammarAccess.getEmptyObjectItemsAccess());
		getEmptyObjectItemConsumer().setRule(grammarAccess.getEmptyObjectItemAccess());
		getMultiInheritanceBug280439Consumer().setRule(grammarAccess.getMultiInheritanceBug280439Access());
		getAbstractMulti1Consumer().setRule(grammarAccess.getAbstractMulti1Access());
		getAbstractMulti2Consumer().setRule(grammarAccess.getAbstractMulti2Access());
		getConcreteMultiConsumer().setRule(grammarAccess.getConcreteMultiAccess());
		getEObjectRefConsumer().setRule(grammarAccess.getEObjectRefAccess());
		getEObjectElementConsumer().setRule(grammarAccess.getEObjectElementAccess());
		getTypeBug3055771Consumer().setRule(grammarAccess.getTypeBug305577_1Access());
		getTypeBug3055772Consumer().setRule(grammarAccess.getTypeBug305577_2Access());
		getTypeBug1AInhConsumer().setRule(grammarAccess.getTypeBug1AInhAccess());
		getTypeBug1AConsumer().setRule(grammarAccess.getTypeBug1AAccess());
		getTypeBug1BConsumer().setRule(grammarAccess.getTypeBug1BAccess());
		getTypeBug2AInhConsumer().setRule(grammarAccess.getTypeBug2AInhAccess());
		getTypeBug2AConsumer().setRule(grammarAccess.getTypeBug2AAccess());
		getTypeBug2BConsumer().setRule(grammarAccess.getTypeBug2BAccess());
		getBug305171Consumer().setRule(grammarAccess.getBug305171Access());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getOpConsumer().setTermConsumer(getTermConsumer());

		getTermConsumer().setAtomConsumer(getAtomConsumer());
		getTermConsumer().setBooleanConsumer(getBooleanConsumer());
		getTermConsumer().setBug305171Consumer(getBug305171Consumer());
		getTermConsumer().setConsumed1Consumer(getConsumed1Consumer());
		getTermConsumer().setConsumed2Consumer(getConsumed2Consumer());
		getTermConsumer().setDuplicateBug284491Consumer(getDuplicateBug284491Consumer());
		getTermConsumer().setEObjectRefConsumer(getEObjectRefConsumer());
		getTermConsumer().setEmptyObjectBug284850Consumer(getEmptyObjectBug284850Consumer());
		getTermConsumer().setLoop1Consumer(getLoop1Consumer());
		getTermConsumer().setLoop2Consumer(getLoop2Consumer());
		getTermConsumer().setLoop3Consumer(getLoop3Consumer());
		getTermConsumer().setLoop4Consumer(getLoop4Consumer());
		getTermConsumer().setLoopBug285452Consumer(getLoopBug285452Consumer());
		getTermConsumer().setManyStringsConsumer(getManyStringsConsumer());
		getTermConsumer().setMultiInheritanceBug280439Consumer(getMultiInheritanceBug280439Consumer());
		getTermConsumer().setParensConsumer(getParensConsumer());
		getTermConsumer().setRef2Consumer(getRef2Consumer());
		getTermConsumer().setSpareConsumer(getSpareConsumer());
		getTermConsumer().setTransient1Consumer(getTransient1Consumer());
		getTermConsumer().setTwoNumbersConsumer(getTwoNumbersConsumer());
		getTermConsumer().setTypeBug3055771Consumer(getTypeBug3055771Consumer());
		getTermConsumer().setTypeBug3055772Consumer(getTypeBug3055772Consumer());
		getTermConsumer().setTypeConsumer(getTypeConsumer());

		getAtomConsumer().setIdConsumer(getIdConsumer());

		getParensConsumer().setOpConsumer(getOpConsumer());

		getTwoNumbersConsumer().setIntConsumer(getIntConsumer());

		getManyStringsConsumer().setStringConsumer(getStringConsumer());

		getTypeConsumer().setIdConsumer(getIdConsumer());

		getRef2Consumer().setStringConsumer(getStringConsumer());

		getSpareConsumer().setIdConsumer(getIdConsumer());

		getBooleanConsumer().setIdConsumer(getIdConsumer());

		getTransient1Consumer().setIntConsumer(getIntConsumer());

		getConsumed1Consumer().setIdConsumer(getIdConsumer());
		getConsumed1Consumer().setIntConsumer(getIntConsumer());

		getConsumed2Consumer().setConsumed1Consumer(getConsumed1Consumer());

		getLoop1Consumer().setIdConsumer(getIdConsumer());

		getLoop2Consumer().setIdConsumer(getIdConsumer());

		getLoop3Consumer().setIdConsumer(getIdConsumer());

		getLoop4Consumer().setIdConsumer(getIdConsumer());

		getLoopBug285452Consumer().setIdConsumer(getIdConsumer());

		getEmptyObjectBug284850Consumer().setEmptyObjectItemsConsumer(getEmptyObjectItemsConsumer());

		getEmptyObjectItemsConsumer().setEmptyObjectItemConsumer(getEmptyObjectItemConsumer());

		getEmptyObjectItemConsumer().setIdConsumer(getIdConsumer());

		getMultiInheritanceBug280439Consumer().setConcreteMultiConsumer(getConcreteMultiConsumer());

		getAbstractMulti1Consumer().setConcreteMultiConsumer(getConcreteMultiConsumer());
		getAbstractMulti1Consumer().setIdConsumer(getIdConsumer());

		getAbstractMulti2Consumer().setConcreteMultiConsumer(getConcreteMultiConsumer());
		getAbstractMulti2Consumer().setIdConsumer(getIdConsumer());

		getConcreteMultiConsumer().setIdConsumer(getIdConsumer());

		getEObjectRefConsumer().setEObjectElementConsumer(getEObjectElementConsumer());
		getEObjectRefConsumer().setIdConsumer(getIdConsumer());

		getEObjectElementConsumer().setIdConsumer(getIdConsumer());

		getTypeBug3055771Consumer().setTypeBug1AConsumer(getTypeBug1AConsumer());
		getTypeBug3055771Consumer().setTypeBug1BConsumer(getTypeBug1BConsumer());

		getTypeBug3055772Consumer().setTypeBug2AConsumer(getTypeBug2AConsumer());
		getTypeBug3055772Consumer().setTypeBug2BConsumer(getTypeBug2BConsumer());

		getTypeBug1AInhConsumer().setTypeBug1BConsumer(getTypeBug1BConsumer());

		getTypeBug1AConsumer().setIdConsumer(getIdConsumer());

		getTypeBug1BConsumer().setIdConsumer(getIdConsumer());

		getTypeBug2AInhConsumer().setTypeBug2BConsumer(getTypeBug2BConsumer());

		getTypeBug2AConsumer().setIdConsumer(getIdConsumer());

		getTypeBug2BConsumer().setIdConsumer(getIdConsumer());

		getBug305171Consumer().setIdConsumer(getIdConsumer());

		getAtomConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getParensConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getParensConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getParensConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getTwoNumbersConsumer().setKeyword$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getTwoNumbersConsumer().setRuleCall$3$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getTwoNumbersConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getTwoNumbersConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getManyStringsConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getManyStringsConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getManyStringsConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getTypeConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getTypeConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getTypeConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getTypeConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getRef2Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getRef2Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getRef2Consumer().setKeyword$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getRef2Consumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getSpareConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getSpareConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getSpareConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getSpareConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getBooleanConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getBooleanConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getBooleanConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getBooleanConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getTransient1Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getTransient1Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getTransient1Consumer().setKeyword$9$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getTransient1Consumer().setKeyword$12$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getTransient1Consumer().setRuleCall$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getTransient1Consumer().setRuleCall$14$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getConsumed1Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getConsumed1Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getConsumed1Consumer().setKeyword$11$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getConsumed1Consumer().setRuleCall$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getConsumed1Consumer().setRuleCall$9$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getConsumed1Consumer().setRuleCall$13$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getConsumed1Consumer().setRuleCall$15$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$53$Delimiter);
		getConsumed2Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getLoop1Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop1Consumer().setKeyword$3$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getLoop1Consumer().setKeyword$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop1Consumer().setKeyword$10$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop1Consumer().setKeyword$11$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop1Consumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getLoop1Consumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getLoop2Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getLoop2Consumer().setKeyword$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop2Consumer().setKeyword$10$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop2Consumer().setKeyword$12$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop2Consumer().setKeyword$16$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop2Consumer().setKeyword$18$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop2Consumer().setKeyword$19$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop2Consumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getLoop2Consumer().setRuleCall$9$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getLoop2Consumer().setRuleCall$15$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getLoop3Consumer().setKeyword$3$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop3Consumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop3Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop3Consumer().setKeyword$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getLoop3Consumer().setKeyword$10$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop3Consumer().setKeyword$13$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop3Consumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getLoop3Consumer().setRuleCall$12$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getLoop4Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getLoop4Consumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop4Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop4Consumer().setKeyword$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop4Consumer().setKeyword$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop4Consumer().setKeyword$12$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop4Consumer().setKeyword$14$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop4Consumer().setKeyword$15$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoop4Consumer().setRuleCall$10$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getLoopBug285452Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getLoopBug285452Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoopBug285452Consumer().setKeyword$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getLoopBug285452Consumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getDuplicateBug284491Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getDuplicateBug284491Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getDuplicateBug284491Consumer().setKeyword$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getDuplicateBug284491Consumer().setKeyword$9$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getEmptyObjectBug284850Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getEmptyObjectItemConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getEmptyObjectItemConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getMultiInheritanceBug280439Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getAbstractMulti1Consumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getAbstractMulti2Consumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getConcreteMultiConsumer().setRuleCall$3$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getConcreteMultiConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getEObjectRefConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getEObjectRefConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getEObjectRefConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getEObjectElementConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getTypeBug3055771Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getTypeBug3055772Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getTypeBug1AConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getTypeBug1AConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getTypeBug1BConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getTypeBug1BConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getTypeBug2AConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getTypeBug2AConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getTypeBug2BConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getTypeBug2BConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getBug305171Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getBug305171Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getBug305171Consumer().setKeyword$9$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getBug305171Consumer().setKeyword$13$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$71$Delimiter);
		getBug305171Consumer().setKeyword$17$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.keyword$44$Delimiter);
		getBug305171Consumer().setRuleCall$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getBug305171Consumer().setRuleCall$11$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getBug305171Consumer().setRuleCall$15$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getBug305171Consumer().setRuleCall$19$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
		getBug305171Consumer().setRuleCall$21$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.SimpleReconstrTestLanguageDelimiters.ruleCall$40$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public SimpleReconstrTestLanguageOpConsumer getOpConsumer() {
    	return opConsumer;
    }

    public SimpleReconstrTestLanguageTermConsumer getTermConsumer() {
    	return termConsumer;
    }

    public SimpleReconstrTestLanguageAtomConsumer getAtomConsumer() {
    	return atomConsumer;
    }

    public SimpleReconstrTestLanguageParensConsumer getParensConsumer() {
    	return parensConsumer;
    }

    public SimpleReconstrTestLanguageTwoNumbersConsumer getTwoNumbersConsumer() {
    	return twoNumbersConsumer;
    }

    public SimpleReconstrTestLanguageManyStringsConsumer getManyStringsConsumer() {
    	return manyStringsConsumer;
    }

    public SimpleReconstrTestLanguageTypeConsumer getTypeConsumer() {
    	return typeConsumer;
    }

    public SimpleReconstrTestLanguageRef2Consumer getRef2Consumer() {
    	return ref2Consumer;
    }

    public SimpleReconstrTestLanguageSpareConsumer getSpareConsumer() {
    	return spareConsumer;
    }

    public SimpleReconstrTestLanguageBooleanConsumer getBooleanConsumer() {
    	return booleanConsumer;
    }

    public SimpleReconstrTestLanguageTransient1Consumer getTransient1Consumer() {
    	return transient1Consumer;
    }

    public SimpleReconstrTestLanguageConsumed1Consumer getConsumed1Consumer() {
    	return consumed1Consumer;
    }

    public SimpleReconstrTestLanguageConsumed2Consumer getConsumed2Consumer() {
    	return consumed2Consumer;
    }

    public SimpleReconstrTestLanguageLoop1Consumer getLoop1Consumer() {
    	return loop1Consumer;
    }

    public SimpleReconstrTestLanguageLoop2Consumer getLoop2Consumer() {
    	return loop2Consumer;
    }

    public SimpleReconstrTestLanguageLoop3Consumer getLoop3Consumer() {
    	return loop3Consumer;
    }

    public SimpleReconstrTestLanguageLoop4Consumer getLoop4Consumer() {
    	return loop4Consumer;
    }

    public SimpleReconstrTestLanguageLoopBug285452Consumer getLoopBug285452Consumer() {
    	return loopBug285452Consumer;
    }

    public SimpleReconstrTestLanguageDuplicateBug284491Consumer getDuplicateBug284491Consumer() {
    	return duplicateBug284491Consumer;
    }

    public SimpleReconstrTestLanguageEmptyObjectBug284850Consumer getEmptyObjectBug284850Consumer() {
    	return emptyObjectBug284850Consumer;
    }

    public SimpleReconstrTestLanguageEmptyObjectItemsConsumer getEmptyObjectItemsConsumer() {
    	return emptyObjectItemsConsumer;
    }

    public SimpleReconstrTestLanguageEmptyObjectItemConsumer getEmptyObjectItemConsumer() {
    	return emptyObjectItemConsumer;
    }

    public SimpleReconstrTestLanguageMultiInheritanceBug280439Consumer getMultiInheritanceBug280439Consumer() {
    	return multiInheritanceBug280439Consumer;
    }

    public SimpleReconstrTestLanguageAbstractMulti1Consumer getAbstractMulti1Consumer() {
    	return abstractMulti1Consumer;
    }

    public SimpleReconstrTestLanguageAbstractMulti2Consumer getAbstractMulti2Consumer() {
    	return abstractMulti2Consumer;
    }

    public SimpleReconstrTestLanguageConcreteMultiConsumer getConcreteMultiConsumer() {
    	return concreteMultiConsumer;
    }

    public SimpleReconstrTestLanguageEObjectRefConsumer getEObjectRefConsumer() {
    	return eObjectRefConsumer;
    }

    public SimpleReconstrTestLanguageEObjectElementConsumer getEObjectElementConsumer() {
    	return eObjectElementConsumer;
    }

    public SimpleReconstrTestLanguageTypeBug305577_1Consumer getTypeBug3055771Consumer() {
    	return typeBug3055771Consumer;
    }

    public SimpleReconstrTestLanguageTypeBug305577_2Consumer getTypeBug3055772Consumer() {
    	return typeBug3055772Consumer;
    }

    public SimpleReconstrTestLanguageTypeBug1AInhConsumer getTypeBug1AInhConsumer() {
    	return typeBug1AInhConsumer;
    }

    public SimpleReconstrTestLanguageTypeBug1AConsumer getTypeBug1AConsumer() {
    	return typeBug1AConsumer;
    }

    public SimpleReconstrTestLanguageTypeBug1BConsumer getTypeBug1BConsumer() {
    	return typeBug1BConsumer;
    }

    public SimpleReconstrTestLanguageTypeBug2AInhConsumer getTypeBug2AInhConsumer() {
    	return typeBug2AInhConsumer;
    }

    public SimpleReconstrTestLanguageTypeBug2AConsumer getTypeBug2AConsumer() {
    	return typeBug2AConsumer;
    }

    public SimpleReconstrTestLanguageTypeBug2BConsumer getTypeBug2BConsumer() {
    	return typeBug2BConsumer;
    }

    public SimpleReconstrTestLanguageBug305171Consumer getBug305171Consumer() {
    	return bug305171Consumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
