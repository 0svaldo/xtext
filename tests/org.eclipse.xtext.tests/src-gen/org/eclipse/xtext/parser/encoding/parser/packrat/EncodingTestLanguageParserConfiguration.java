/*
* generated by Xtext
*/
package org.eclipse.xtext.parser.encoding.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.parser.encoding.services.EncodingTestLanguageGrammarAccess;

import org.eclipse.xtext.parser.encoding.parser.packrat.consumers.EncodingTestLanguageModelConsumer;
import org.eclipse.xtext.parser.encoding.parser.packrat.consumers.EncodingTestLanguageWORDConsumer;
import org.eclipse.xtext.parser.encoding.parser.packrat.consumers.EncodingTestLanguageWSConsumer;
import org.eclipse.xtext.parser.encoding.parser.packrat.consumers.EncodingTestLanguageANY_OTHERConsumer;

public class EncodingTestLanguageParserConfiguration extends AbstractParserConfiguration {

    private EncodingTestLanguageModelConsumer modelConsumer;
    private EncodingTestLanguageWORDConsumer wordConsumer;
    private EncodingTestLanguageWSConsumer wsConsumer;
    private EncodingTestLanguageANY_OTHERConsumer anyOtherConsumer;

	private EncodingTestLanguageGrammarAccess grammarAccess;

	public EncodingTestLanguageParserConfiguration(IInternalParserConfiguration configuration, EncodingTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
	}

	public EncodingTestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		modelConsumer = new EncodingTestLanguageModelConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		wordConsumer = new EncodingTestLanguageWORDConsumer(this);
		wsConsumer = new EncodingTestLanguageWSConsumer(this);
		anyOtherConsumer = new EncodingTestLanguageANY_OTHERConsumer(this);
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getWordConsumer().setRule(grammarAccess.getWORDRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setWordConsumer(getWordConsumer());

		getModelConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parser.encoding.parser.packrat.EncodingTestLanguageDelimiters.ruleCall$5$Delimiter);
	}
	
    public EncodingTestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public EncodingTestLanguageWORDConsumer getWordConsumer() {
    	return wordConsumer;
    }

    public EncodingTestLanguageWSConsumer getWsConsumer() {
    	return wsConsumer;
    }

    public EncodingTestLanguageANY_OTHERConsumer getAnyOtherConsumer() {
    	return anyOtherConsumer;
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return new ITerminalConsumer[]{ getWsConsumer() };
	}
	
}
