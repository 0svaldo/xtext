/*
* generated by Xtext
*/
package org.eclipse.xtext.parser.unorderedGroups.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IInstanceDescription;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.eclipse.xtext.parser.unorderedGroups.services.ExUnorderedGroupsTestLanguageGrammarAccess;

import com.google.inject.Inject;

public class ExUnorderedGroupsTestLanguageParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private ExUnorderedGroupsTestLanguageGrammarAccess grammarAccess;
	
	@Override	
	public ExUnorderedGroupsTestLanguageGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}

	@Override
	protected AbstractToken getRootToken(IInstanceDescription inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IInstanceDescription inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new DelegateModel_ModelParserRuleCall(this, this, 0, inst);
			case 1: return new Model_Group(this, this, 1, inst);
			case 2: return new NestedModel_Group(this, this, 2, inst);
			case 3: return new UnorderedSerialization_Group(this, this, 3, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule DelegateModel ****************
 *
 * DelegateModel returns Model:
 *   Model;
 *
 **/

// Model
protected class DelegateModel_ModelParserRuleCall extends RuleCallToken {
	
	public DelegateModel_ModelParserRuleCall(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDelegateModelAccess().getModelParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IInstanceDescription tryConsume() {
		if(current.getDelegate().eClass() == grammarAccess.getModelAccess().getModelAction_0().getType().getClassifier())
			return tryConsumeVal();
		return null;
	}

    @Override
	protected IInstanceDescription tryConsumeVal() {
		if(checkForRecursion(Model_Group.class, current)) return null;
		return current;
	}
	
    @Override
	public AbstractToken createParentFollower(AbstractToken next,	int actIndex, int index, IInstanceDescription inst) {
		switch(index) {
			default: return parent.createParentFollower(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule DelegateModel ****************/


/************ begin Rule Model ****************
 *
 * Model:
 *   {Model} ("1" (first?="a" & second?="b")|"2" (first?="a" & second?="b" & third
 *   ?="c" & forth?="d")|"3" (first?="a"? & second?="b"?)|"4" (first?="a" & second
 *   ?="b"?)|"5" (first?="a"? & second?="b")|"6" (firstAsList+="a"+ & secondAsList
 *   +="b"*)|"7" (firstAsList+="a"* & secondAsList+="b"+)|"8" ("a" "b" first?="c"
 *   & "a" "b" second?="d")|"9" (firstAsList+="a" & secondAsList+="b")+|"10" (
 *   firstAsList+="a" & secondAsList+="b")*|"11" (first?="a" & second?="b")?|"12"
 *   (firstAsList+="a" & secondAsList+="b") (firstAsList+="a" & secondAsList+="b")
 *   |"13" (firstAsList+="a" & secondAsList+="b")? firstAsList+="a" secondAsList+=
 *   "b"|"14" ((firstAsList+="a" & secondAsList+="b") & (thirdAsList+="c" &
 *   forthAsList+="d"))+|"datatypes" value=UnorderedDatatype|"serialization"
 *   serialized=UnorderedSerialization|"bug302585" nestedModel+=NestedModel*);
 *
 **/

// {Model} ("1" (first?="a" & second?="b")|"2" (first?="a" & second?="b" & third?=
// "c" & forth?="d")|"3" (first?="a"? & second?="b"?)|"4" (first?="a" & second?=
// "b"?)|"5" (first?="a"? & second?="b")|"6" (firstAsList+="a"+ & secondAsList+=
// "b"*)|"7" (firstAsList+="a"* & secondAsList+="b"+)|"8" ("a" "b" first?="c" &
// "a" "b" second?="d")|"9" (firstAsList+="a" & secondAsList+="b")+|"10" (
// firstAsList+="a" & secondAsList+="b")*|"11" (first?="a" & second?="b")?|"12" (
// firstAsList+="a" & secondAsList+="b") (firstAsList+="a" & secondAsList+="b")|
// "13" (firstAsList+="a" & secondAsList+="b")? firstAsList+="a" secondAsList+="b"
// |"14" ((firstAsList+="a" & secondAsList+="b") & (thirdAsList+="c" & forthAsList
// +="d"))+|"datatypes" value=UnorderedDatatype|"serialization" serialized=
// UnorderedSerialization|"bug302585" nestedModel+=NestedModel*)
protected class Model_Group extends GroupToken {
	
	public Model_Group(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_Alternatives_1(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IInstanceDescription tryConsume() {
		if(current.getDelegate().eClass() == grammarAccess.getModelAccess().getModelAction_0().getType().getClassifier())
			return tryConsumeVal();
		return null;
	}

}

// {Model}
protected class Model_ModelAction_0 extends ActionToken  {

	public Model_ModelAction_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getModelAccess().getModelAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			default: return parent.createParentFollower(this, index, index, inst);
		}	
	}

    @Override
	protected IInstanceDescription tryConsumeVal() {
		if(!current.isConsumed()) return null;
		return current;
	}
}

// "1" (first?="a" & second?="b")|"2" (first?="a" & second?="b" & third?="c" &
// forth?="d")|"3" (first?="a"? & second?="b"?)|"4" (first?="a" & second?="b"?)|
// "5" (first?="a"? & second?="b")|"6" (firstAsList+="a"+ & secondAsList+="b"*)|
// "7" (firstAsList+="a"* & secondAsList+="b"+)|"8" ("a" "b" first?="c" & "a" "b"
// second?="d")|"9" (firstAsList+="a" & secondAsList+="b")+|"10" (firstAsList+="a"
// & secondAsList+="b")*|"11" (first?="a" & second?="b")?|"12" (firstAsList+="a" &
// secondAsList+="b") (firstAsList+="a" & secondAsList+="b")|"13" (firstAsList+=
// "a" & secondAsList+="b")? firstAsList+="a" secondAsList+="b"|"14" ((firstAsList
// +="a" & secondAsList+="b") & (thirdAsList+="c" & forthAsList+="d"))+|
// "datatypes" value=UnorderedDatatype|"serialization" serialized=
// UnorderedSerialization|"bug302585" nestedModel+=NestedModel*
protected class Model_Alternatives_1 extends AlternativesToken {

	public Model_Alternatives_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getModelAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_Group_1_0(parent, this, 0, inst);
			case 1: return new Model_Group_1_1(parent, this, 1, inst);
			case 2: return new Model_Group_1_2(parent, this, 2, inst);
			case 3: return new Model_Group_1_3(parent, this, 3, inst);
			case 4: return new Model_Group_1_4(parent, this, 4, inst);
			case 5: return new Model_Group_1_5(parent, this, 5, inst);
			case 6: return new Model_Group_1_6(parent, this, 6, inst);
			case 7: return new Model_Group_1_7(parent, this, 7, inst);
			case 8: return new Model_Group_1_8(parent, this, 8, inst);
			case 9: return new Model_Group_1_9(parent, this, 9, inst);
			case 10: return new Model_Group_1_10(parent, this, 10, inst);
			case 11: return new Model_Group_1_11(parent, this, 11, inst);
			case 12: return new Model_Group_1_12(parent, this, 12, inst);
			case 13: return new Model_Group_1_13(parent, this, 13, inst);
			case 14: return new Model_Group_1_14(parent, this, 14, inst);
			case 15: return new Model_Group_1_15(parent, this, 15, inst);
			case 16: return new Model_Group_1_16(parent, this, 16, inst);
			default: return null;
		}	
	}

}

// "1" (first?="a" & second?="b")
protected class Model_Group_1_0 extends GroupToken {
	
	public Model_Group_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_0_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "1"
protected class Model_DigitOneKeyword_1_0_0 extends KeywordToken  {
	
	public Model_DigitOneKeyword_1_0_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitOneKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a" & second?="b"
protected class Model_UnorderedGroup_1_0_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_0_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAssignment_1_0_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a"
protected class Model_FirstAssignment_1_0_1_0 extends AssignmentToken  {
	
	public Model_FirstAssignment_1_0_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAssignment_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitOneKeyword_1_0_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAKeyword_1_0_1_0_0();
			return obj;
		}
		return null;
	}

}

// second?="b"
protected class Model_SecondAssignment_1_0_1_1 extends AssignmentToken  {
	
	public Model_SecondAssignment_1_0_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAssignment_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAssignment_1_0_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondBKeyword_1_0_1_1_0();
			return obj;
		}
		return null;
	}

}



// "2" (first?="a" & second?="b" & third?="c" & forth?="d")
protected class Model_Group_1_1 extends GroupToken {
	
	public Model_Group_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "2"
protected class Model_DigitTwoKeyword_1_1_0 extends KeywordToken  {
	
	public Model_DigitTwoKeyword_1_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitTwoKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a" & second?="b" & third?="c" & forth?="d"
protected class Model_UnorderedGroup_1_1_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ForthAssignment_1_1_1_3(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a"
protected class Model_FirstAssignment_1_1_1_0 extends AssignmentToken  {
	
	public Model_FirstAssignment_1_1_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAssignment_1_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitTwoKeyword_1_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAKeyword_1_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// second?="b"
protected class Model_SecondAssignment_1_1_1_1 extends AssignmentToken  {
	
	public Model_SecondAssignment_1_1_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAssignment_1_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAssignment_1_1_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondBKeyword_1_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// third?="c"
protected class Model_ThirdAssignment_1_1_1_2 extends AssignmentToken  {
	
	public Model_ThirdAssignment_1_1_1_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getThirdAssignment_1_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAssignment_1_1_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("third",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("third");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getThirdCKeyword_1_1_1_2_0();
			return obj;
		}
		return null;
	}

}

// forth?="d"
protected class Model_ForthAssignment_1_1_1_3 extends AssignmentToken  {
	
	public Model_ForthAssignment_1_1_1_3(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getForthAssignment_1_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ThirdAssignment_1_1_1_2(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("forth",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("forth");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getForthDKeyword_1_1_1_3_0();
			return obj;
		}
		return null;
	}

}



// "3" (first?="a"? & second?="b"?)
protected class Model_Group_1_2 extends GroupToken {
	
	public Model_Group_1_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_2_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "3"
protected class Model_DigitThreeKeyword_1_2_0 extends KeywordToken  {
	
	public Model_DigitThreeKeyword_1_2_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitThreeKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a"? & second?="b"?
protected class Model_UnorderedGroup_1_2_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_2_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAssignment_1_2_1_1(parent, this, 0, inst);
			case 1: return new Model_FirstAssignment_1_2_1_0(parent, this, 1, inst);
			case 2: return new Model_DigitThreeKeyword_1_2_0(parent, this, 2, inst);
			default: return null;
		}	
	}

}

// first?="a"?
protected class Model_FirstAssignment_1_2_1_0 extends AssignmentToken  {
	
	public Model_FirstAssignment_1_2_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAssignment_1_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitThreeKeyword_1_2_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAKeyword_1_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// second?="b"?
protected class Model_SecondAssignment_1_2_1_1 extends AssignmentToken  {
	
	public Model_SecondAssignment_1_2_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAssignment_1_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAssignment_1_2_1_0(parent, this, 0, inst);
			case 1: return new Model_DigitThreeKeyword_1_2_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondBKeyword_1_2_1_1_0();
			return obj;
		}
		return null;
	}

}



// "4" (first?="a" & second?="b"?)
protected class Model_Group_1_3 extends GroupToken {
	
	public Model_Group_1_3(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_3_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "4"
protected class Model_DigitFourKeyword_1_3_0 extends KeywordToken  {
	
	public Model_DigitFourKeyword_1_3_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitFourKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a" & second?="b"?
protected class Model_UnorderedGroup_1_3_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_3_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAssignment_1_3_1_1(parent, this, 0, inst);
			case 1: return new Model_FirstAssignment_1_3_1_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}

// first?="a"
protected class Model_FirstAssignment_1_3_1_0 extends AssignmentToken  {
	
	public Model_FirstAssignment_1_3_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAssignment_1_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitFourKeyword_1_3_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAKeyword_1_3_1_0_0();
			return obj;
		}
		return null;
	}

}

// second?="b"?
protected class Model_SecondAssignment_1_3_1_1 extends AssignmentToken  {
	
	public Model_SecondAssignment_1_3_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAssignment_1_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAssignment_1_3_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondBKeyword_1_3_1_1_0();
			return obj;
		}
		return null;
	}

}



// "5" (first?="a"? & second?="b")
protected class Model_Group_1_4 extends GroupToken {
	
	public Model_Group_1_4(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_4_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "5"
protected class Model_DigitFiveKeyword_1_4_0 extends KeywordToken  {
	
	public Model_DigitFiveKeyword_1_4_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitFiveKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a"? & second?="b"
protected class Model_UnorderedGroup_1_4_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_4_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAssignment_1_4_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a"?
protected class Model_FirstAssignment_1_4_1_0 extends AssignmentToken  {
	
	public Model_FirstAssignment_1_4_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAssignment_1_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitFiveKeyword_1_4_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAKeyword_1_4_1_0_0();
			return obj;
		}
		return null;
	}

}

// second?="b"
protected class Model_SecondAssignment_1_4_1_1 extends AssignmentToken  {
	
	public Model_SecondAssignment_1_4_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAssignment_1_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAssignment_1_4_1_0(parent, this, 0, inst);
			case 1: return new Model_DigitFiveKeyword_1_4_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondBKeyword_1_4_1_1_0();
			return obj;
		}
		return null;
	}

}



// "6" (firstAsList+="a"+ & secondAsList+="b"*)
protected class Model_Group_1_5 extends GroupToken {
	
	public Model_Group_1_5(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_5_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "6"
protected class Model_DigitSixKeyword_1_5_0 extends KeywordToken  {
	
	public Model_DigitSixKeyword_1_5_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitSixKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"+ & secondAsList+="b"*
protected class Model_UnorderedGroup_1_5_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_5_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_5_1_1(parent, this, 0, inst);
			case 1: return new Model_FirstAsListAssignment_1_5_1_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"+
protected class Model_FirstAsListAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_5_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_5_1_0(parent, this, 0, inst);
			case 1: return new Model_DigitSixKeyword_1_5_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_5_1_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"*
protected class Model_SecondAsListAssignment_1_5_1_1 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_5_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_5_1_1(parent, this, 0, inst);
			case 1: return new Model_FirstAsListAssignment_1_5_1_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_5_1_1_0();
			return obj;
		}
		return null;
	}

}



// "7" (firstAsList+="a"* & secondAsList+="b"+)
protected class Model_Group_1_6 extends GroupToken {
	
	public Model_Group_1_6(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_6_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "7"
protected class Model_DigitSevenKeyword_1_6_0 extends KeywordToken  {
	
	public Model_DigitSevenKeyword_1_6_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitSevenKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"* & secondAsList+="b"+
protected class Model_UnorderedGroup_1_6_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_6_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_6_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"*
protected class Model_FirstAsListAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_6_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_6_1_0(parent, this, 0, inst);
			case 1: return new Model_DigitSevenKeyword_1_6_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_6_1_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"+
protected class Model_SecondAsListAssignment_1_6_1_1 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_6_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_6_1_1(parent, this, 0, inst);
			case 1: return new Model_FirstAsListAssignment_1_6_1_0(parent, this, 1, inst);
			case 2: return new Model_DigitSevenKeyword_1_6_0(parent, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_6_1_1_0();
			return obj;
		}
		return null;
	}

}



// "8" ("a" "b" first?="c" & "a" "b" second?="d")
protected class Model_Group_1_7 extends GroupToken {
	
	public Model_Group_1_7(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_7_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "8"
protected class Model_DigitEightKeyword_1_7_0 extends KeywordToken  {
	
	public Model_DigitEightKeyword_1_7_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitEightKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "a" "b" first?="c" & "a" "b" second?="d"
protected class Model_UnorderedGroup_1_7_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_7_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_Group_1_7_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "a" "b" first?="c"
protected class Model_Group_1_7_1_0 extends GroupToken {
	
	public Model_Group_1_7_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAssignment_1_7_1_0_2(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "a"
protected class Model_AKeyword_1_7_1_0_0 extends KeywordToken  {
	
	public Model_AKeyword_1_7_1_0_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getAKeyword_1_7_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitEightKeyword_1_7_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "b"
protected class Model_BKeyword_1_7_1_0_1 extends KeywordToken  {
	
	public Model_BKeyword_1_7_1_0_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getBKeyword_1_7_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_AKeyword_1_7_1_0_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="c"
protected class Model_FirstAssignment_1_7_1_0_2 extends AssignmentToken  {
	
	public Model_FirstAssignment_1_7_1_0_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAssignment_1_7_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_BKeyword_1_7_1_0_1(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",true)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstCKeyword_1_7_1_0_2_0();
			return obj;
		}
		return null;
	}

}


// "a" "b" second?="d"
protected class Model_Group_1_7_1_1 extends GroupToken {
	
	public Model_Group_1_7_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAssignment_1_7_1_1_2(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "a"
protected class Model_AKeyword_1_7_1_1_0 extends KeywordToken  {
	
	public Model_AKeyword_1_7_1_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getAKeyword_1_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_Group_1_7_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "b"
protected class Model_BKeyword_1_7_1_1_1 extends KeywordToken  {
	
	public Model_BKeyword_1_7_1_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getBKeyword_1_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_AKeyword_1_7_1_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// second?="d"
protected class Model_SecondAssignment_1_7_1_1_2 extends AssignmentToken  {
	
	public Model_SecondAssignment_1_7_1_1_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAssignment_1_7_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_BKeyword_1_7_1_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",true)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondDKeyword_1_7_1_1_2_0();
			return obj;
		}
		return null;
	}

}




// "9" (firstAsList+="a" & secondAsList+="b")+
protected class Model_Group_1_8 extends GroupToken {
	
	public Model_Group_1_8(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_8();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_8_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "9"
protected class Model_DigitNineKeyword_1_8_0 extends KeywordToken  {
	
	public Model_DigitNineKeyword_1_8_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitNineKeyword_1_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// (firstAsList+="a" & secondAsList+="b")+
protected class Model_UnorderedGroup_1_8_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_8_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_8_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"
protected class Model_FirstAsListAssignment_1_8_1_0 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_8_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_8_1(parent, this, 0, inst);
			case 1: return new Model_DigitNineKeyword_1_8_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_8_1_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"
protected class Model_SecondAsListAssignment_1_8_1_1 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_8_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_8_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_8_1_1_0();
			return obj;
		}
		return null;
	}

}



// "10" (firstAsList+="a" & secondAsList+="b")*
protected class Model_Group_1_9 extends GroupToken {
	
	public Model_Group_1_9(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_9();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_9_1(parent, this, 0, inst);
			case 1: return new Model_DigitOneDigitZeroKeyword_1_9_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}

// "10"
protected class Model_DigitOneDigitZeroKeyword_1_9_0 extends KeywordToken  {
	
	public Model_DigitOneDigitZeroKeyword_1_9_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitOneDigitZeroKeyword_1_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// (firstAsList+="a" & secondAsList+="b")*
protected class Model_UnorderedGroup_1_9_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_9_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_9_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"
protected class Model_FirstAsListAssignment_1_9_1_0 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_9_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_9_1(parent, this, 0, inst);
			case 1: return new Model_DigitOneDigitZeroKeyword_1_9_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_9_1_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"
protected class Model_SecondAsListAssignment_1_9_1_1 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_9_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_9_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_9_1_1_0();
			return obj;
		}
		return null;
	}

}



// "11" (first?="a" & second?="b")?
protected class Model_Group_1_10 extends GroupToken {
	
	public Model_Group_1_10(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_10();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_10_1(parent, this, 0, inst);
			case 1: return new Model_DigitOneDigitOneKeyword_1_10_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}

// "11"
protected class Model_DigitOneDigitOneKeyword_1_10_0 extends KeywordToken  {
	
	public Model_DigitOneDigitOneKeyword_1_10_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitOneDigitOneKeyword_1_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// (first?="a" & second?="b")?
protected class Model_UnorderedGroup_1_10_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_10_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAssignment_1_10_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a"
protected class Model_FirstAssignment_1_10_1_0 extends AssignmentToken  {
	
	public Model_FirstAssignment_1_10_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAssignment_1_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitOneDigitOneKeyword_1_10_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAKeyword_1_10_1_0_0();
			return obj;
		}
		return null;
	}

}

// second?="b"
protected class Model_SecondAssignment_1_10_1_1 extends AssignmentToken  {
	
	public Model_SecondAssignment_1_10_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAssignment_1_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAssignment_1_10_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondBKeyword_1_10_1_1_0();
			return obj;
		}
		return null;
	}

}



// "12" (firstAsList+="a" & secondAsList+="b") (firstAsList+="a" & secondAsList+=
// "b")
protected class Model_Group_1_11 extends GroupToken {
	
	public Model_Group_1_11(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_11();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_11_2(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "12"
protected class Model_DigitOneDigitTwoKeyword_1_11_0 extends KeywordToken  {
	
	public Model_DigitOneDigitTwoKeyword_1_11_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitOneDigitTwoKeyword_1_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a" & secondAsList+="b"
protected class Model_UnorderedGroup_1_11_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_11_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_11_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"
protected class Model_FirstAsListAssignment_1_11_1_0 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_11_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_11_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitOneDigitTwoKeyword_1_11_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_11_1_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"
protected class Model_SecondAsListAssignment_1_11_1_1 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_11_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_11_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_11_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_11_1_1_0();
			return obj;
		}
		return null;
	}

}


// firstAsList+="a" & secondAsList+="b"
protected class Model_UnorderedGroup_1_11_2 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_11_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_11_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_11_2_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"
protected class Model_FirstAsListAssignment_1_11_2_0 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_11_2_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_11_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_11_1(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_11_2_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"
protected class Model_SecondAsListAssignment_1_11_2_1 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_11_2_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_11_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_11_2_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_11_2_1_0();
			return obj;
		}
		return null;
	}

}



// "13" (firstAsList+="a" & secondAsList+="b")? firstAsList+="a" secondAsList+="b"
protected class Model_Group_1_12 extends GroupToken {
	
	public Model_Group_1_12(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_12();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_12_3(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "13"
protected class Model_DigitOneDigitThreeKeyword_1_12_0 extends KeywordToken  {
	
	public Model_DigitOneDigitThreeKeyword_1_12_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitOneDigitThreeKeyword_1_12_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// (firstAsList+="a" & secondAsList+="b")?
protected class Model_UnorderedGroup_1_12_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_12_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_12_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_12_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"
protected class Model_FirstAsListAssignment_1_12_1_0 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_12_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_12_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DigitOneDigitThreeKeyword_1_12_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_12_1_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"
protected class Model_SecondAsListAssignment_1_12_1_1 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_12_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_12_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_12_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_12_1_1_0();
			return obj;
		}
		return null;
	}

}


// firstAsList+="a"
protected class Model_FirstAsListAssignment_1_12_2 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_12_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_12_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_12_1(parent, this, 0, inst);
			case 1: return new Model_DigitOneDigitThreeKeyword_1_12_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",true)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_12_2_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"
protected class Model_SecondAsListAssignment_1_12_3 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_12_3(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_12_3();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_12_2(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",true)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_12_3_0();
			return obj;
		}
		return null;
	}

}


// "14" ((firstAsList+="a" & secondAsList+="b") & (thirdAsList+="c" & forthAsList+=
// "d"))+
protected class Model_Group_1_13 extends GroupToken {
	
	public Model_Group_1_13(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_13();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_13_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "14"
protected class Model_DigitOneDigitFourKeyword_1_13_0 extends KeywordToken  {
	
	public Model_DigitOneDigitFourKeyword_1_13_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDigitOneDigitFourKeyword_1_13_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// ((firstAsList+="a" & secondAsList+="b") & (thirdAsList+="c" & forthAsList+="d"))
// +
protected class Model_UnorderedGroup_1_13_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_13_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_13_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_13_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a" & secondAsList+="b"
protected class Model_UnorderedGroup_1_13_1_0 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_13_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_13_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SecondAsListAssignment_1_13_1_0_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"
protected class Model_FirstAsListAssignment_1_13_1_0_0 extends AssignmentToken  {
	
	public Model_FirstAsListAssignment_1_13_1_0_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getFirstAsListAssignment_1_13_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_13_1(parent, this, 0, inst);
			case 1: return new Model_DigitOneDigitFourKeyword_1_13_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getFirstAsListAKeyword_1_13_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"
protected class Model_SecondAsListAssignment_1_13_1_0_1 extends AssignmentToken  {
	
	public Model_SecondAsListAssignment_1_13_1_0_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSecondAsListAssignment_1_13_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_FirstAsListAssignment_1_13_1_0_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getSecondAsListBKeyword_1_13_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// thirdAsList+="c" & forthAsList+="d"
protected class Model_UnorderedGroup_1_13_1_1 extends UnorderedGroupToken {
	
	public Model_UnorderedGroup_1_13_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getModelAccess().getUnorderedGroup_1_13_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ForthAsListAssignment_1_13_1_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// thirdAsList+="c"
protected class Model_ThirdAsListAssignment_1_13_1_1_0 extends AssignmentToken  {
	
	public Model_ThirdAsListAssignment_1_13_1_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getThirdAsListAssignment_1_13_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_UnorderedGroup_1_13_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("thirdAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("thirdAsList");
		if("c".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getThirdAsListCKeyword_1_13_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// forthAsList+="d"
protected class Model_ForthAsListAssignment_1_13_1_1_1 extends AssignmentToken  {
	
	public Model_ForthAsListAssignment_1_13_1_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getForthAsListAssignment_1_13_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ThirdAsListAssignment_1_13_1_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("forthAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("forthAsList");
		if("d".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getModelAccess().getForthAsListDKeyword_1_13_1_1_1_0();
			return obj;
		}
		return null;
	}

}




// "datatypes" value=UnorderedDatatype
protected class Model_Group_1_14 extends GroupToken {
	
	public Model_Group_1_14(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_14();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ValueAssignment_1_14_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "datatypes"
protected class Model_DatatypesKeyword_1_14_0 extends KeywordToken  {
	
	public Model_DatatypesKeyword_1_14_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getDatatypesKeyword_1_14_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// value=UnorderedDatatype
protected class Model_ValueAssignment_1_14_1 extends AssignmentToken  {
	
	public Model_ValueAssignment_1_14_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getValueAssignment_1_14_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_DatatypesKeyword_1_14_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("value",true)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getDelegate(), grammarAccess.getModelAccess().getValueUnorderedDatatypeParserRuleCall_1_14_1_0(), value, null)) {
			type = AssignmentType.DRC;
			element = grammarAccess.getModelAccess().getValueUnorderedDatatypeParserRuleCall_1_14_1_0();
			return obj;
		}
		return null;
	}

}


// "serialization" serialized=UnorderedSerialization
protected class Model_Group_1_15 extends GroupToken {
	
	public Model_Group_1_15(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_15();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_SerializedAssignment_1_15_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// "serialization"
protected class Model_SerializationKeyword_1_15_0 extends KeywordToken  {
	
	public Model_SerializationKeyword_1_15_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getSerializationKeyword_1_15_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// serialized=UnorderedSerialization
protected class Model_SerializedAssignment_1_15_1 extends AssignmentToken  {
	
	public Model_SerializedAssignment_1_15_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSerializedAssignment_1_15_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("serialized",true)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("serialized");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IInstanceDescription param = getDescr((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnorderedSerializationRule().getType().getClassifier())) {
				type = AssignmentType.PRC;
				element = grammarAccess.getModelAccess().getSerializedUnorderedSerializationParserRuleCall_1_15_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createParentFollower(AbstractToken next,	int actIndex, int index, IInstanceDescription inst) {
		if(value == inst.getDelegate() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_SerializationKeyword_1_15_0(parent, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "bug302585" nestedModel+=NestedModel*
protected class Model_Group_1_16 extends GroupToken {
	
	public Model_Group_1_16(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_1_16();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_NestedModelAssignment_1_16_1(parent, this, 0, inst);
			case 1: return new Model_Bug302585Keyword_1_16_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}

// "bug302585"
protected class Model_Bug302585Keyword_1_16_0 extends KeywordToken  {
	
	public Model_Bug302585Keyword_1_16_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getBug302585Keyword_1_16_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// nestedModel+=NestedModel*
protected class Model_NestedModelAssignment_1_16_1 extends AssignmentToken  {
	
	public Model_NestedModelAssignment_1_16_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getNestedModelAssignment_1_16_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new NestedModel_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("nestedModel",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("nestedModel");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IInstanceDescription param = getDescr((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNestedModelRule().getType().getClassifier())) {
				type = AssignmentType.PRC;
				element = grammarAccess.getModelAccess().getNestedModelNestedModelParserRuleCall_1_16_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createParentFollower(AbstractToken next,	int actIndex, int index, IInstanceDescription inst) {
		if(value == inst.getDelegate() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_NestedModelAssignment_1_16_1(parent, next, actIndex, consumed);
			case 1: return new Model_Bug302585Keyword_1_16_0(parent, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule Model ****************/


/************ begin Rule NestedModel ****************
 *
 * NestedModel:
 *   {NestedModel} (first?="a" & second?="b")? "nested";
 *
 **/

// {NestedModel} (first?="a" & second?="b")? "nested"
protected class NestedModel_Group extends GroupToken {
	
	public NestedModel_Group(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNestedModelAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new NestedModel_NestedKeyword_2(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IInstanceDescription tryConsume() {
		if(current.getDelegate().eClass() == grammarAccess.getNestedModelAccess().getNestedModelAction_0().getType().getClassifier())
			return tryConsumeVal();
		return null;
	}

}

// {NestedModel}
protected class NestedModel_NestedModelAction_0 extends ActionToken  {

	public NestedModel_NestedModelAction_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getNestedModelAccess().getNestedModelAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			default: return parent.createParentFollower(this, index, index, inst);
		}	
	}

    @Override
	protected IInstanceDescription tryConsumeVal() {
		if(!current.isConsumed()) return null;
		return current;
	}
}

// (first?="a" & second?="b")?
protected class NestedModel_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public NestedModel_UnorderedGroup_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getNestedModelAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new NestedModel_SecondAssignment_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a"
protected class NestedModel_FirstAssignment_1_0 extends AssignmentToken  {
	
	public NestedModel_FirstAssignment_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedModelAccess().getFirstAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new NestedModel_NestedModelAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getNestedModelAccess().getFirstAKeyword_1_0_0();
			return obj;
		}
		return null;
	}

}

// second?="b"
protected class NestedModel_SecondAssignment_1_1 extends AssignmentToken  {
	
	public NestedModel_SecondAssignment_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedModelAccess().getSecondAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new NestedModel_FirstAssignment_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getNestedModelAccess().getSecondBKeyword_1_1_0();
			return obj;
		}
		return null;
	}

}


// "nested"
protected class NestedModel_NestedKeyword_2 extends KeywordToken  {
	
	public NestedModel_NestedKeyword_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNestedModelAccess().getNestedKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new NestedModel_UnorderedGroup_1(parent, this, 0, inst);
			case 1: return new NestedModel_NestedModelAction_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule NestedModel ****************/



/************ begin Rule UnorderedSerialization ****************
 *
 * UnorderedSerialization:
 *   {UnorderedSerialization} ("1" first?="a"? & second?="b"? & third?="c"? &
 *   forth?="d"?|"2" (firstAsList+="a" & secondAsList+="b")*|"3" (firstAsList+="a"
 *   + & second?="b")*);
 *
 **/

// {UnorderedSerialization} ("1" first?="a"? & second?="b"? & third?="c"? & forth?=
// "d"?|"2" (firstAsList+="a" & secondAsList+="b")*|"3" (firstAsList+="a"+ &
// second?="b")*)
protected class UnorderedSerialization_Group extends GroupToken {
	
	public UnorderedSerialization_Group(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_Alternatives_1(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IInstanceDescription tryConsume() {
		if(current.getDelegate().eClass() == grammarAccess.getUnorderedSerializationAccess().getUnorderedSerializationAction_0().getType().getClassifier())
			return tryConsumeVal();
		return null;
	}

}

// {UnorderedSerialization}
protected class UnorderedSerialization_UnorderedSerializationAction_0 extends ActionToken  {

	public UnorderedSerialization_UnorderedSerializationAction_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getUnorderedSerializationAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			default: return parent.createParentFollower(this, index, index, inst);
		}	
	}

    @Override
	protected IInstanceDescription tryConsumeVal() {
		if(!current.isConsumed()) return null;
		return current;
	}
}

// "1" first?="a"? & second?="b"? & third?="c"? & forth?="d"?|"2" (firstAsList+="a"
// & secondAsList+="b")*|"3" (firstAsList+="a"+ & second?="b")*
protected class UnorderedSerialization_Alternatives_1 extends AlternativesToken {

	public UnorderedSerialization_Alternatives_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_UnorderedGroup_1_0(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_Group_1_1(parent, this, 1, inst);
			case 2: return new UnorderedSerialization_Group_1_2(parent, this, 2, inst);
			default: return null;
		}	
	}

}

// "1" first?="a"? & second?="b"? & third?="c"? & forth?="d"?
protected class UnorderedSerialization_UnorderedGroup_1_0 extends UnorderedGroupToken {
	
	public UnorderedSerialization_UnorderedGroup_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getUnorderedGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_ForthAssignment_1_0_3(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_ThirdAssignment_1_0_2(parent, this, 1, inst);
			case 2: return new UnorderedSerialization_SecondAssignment_1_0_1(parent, this, 2, inst);
			case 3: return new UnorderedSerialization_Group_1_0_0(parent, this, 3, inst);
			default: return null;
		}	
	}

}

// "1" first?="a"?
protected class UnorderedSerialization_Group_1_0_0 extends GroupToken {
	
	public UnorderedSerialization_Group_1_0_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getGroup_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_FirstAssignment_1_0_0_1(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_DigitOneKeyword_1_0_0_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}

// "1"
protected class UnorderedSerialization_DigitOneKeyword_1_0_0_0 extends KeywordToken  {
	
	public UnorderedSerialization_DigitOneKeyword_1_0_0_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getDigitOneKeyword_1_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_UnorderedSerializationAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// first?="a"?
protected class UnorderedSerialization_FirstAssignment_1_0_0_1 extends AssignmentToken  {
	
	public UnorderedSerialization_FirstAssignment_1_0_0_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getFirstAssignment_1_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_DigitOneKeyword_1_0_0_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("first",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("first");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getUnorderedSerializationAccess().getFirstAKeyword_1_0_0_1_0();
			return obj;
		}
		return null;
	}

}


// second?="b"?
protected class UnorderedSerialization_SecondAssignment_1_0_1 extends AssignmentToken  {
	
	public UnorderedSerialization_SecondAssignment_1_0_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getSecondAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_Group_1_0_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getUnorderedSerializationAccess().getSecondBKeyword_1_0_1_0();
			return obj;
		}
		return null;
	}

}

// third?="c"?
protected class UnorderedSerialization_ThirdAssignment_1_0_2 extends AssignmentToken  {
	
	public UnorderedSerialization_ThirdAssignment_1_0_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getThirdAssignment_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_SecondAssignment_1_0_1(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_Group_1_0_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("third",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("third");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getUnorderedSerializationAccess().getThirdCKeyword_1_0_2_0();
			return obj;
		}
		return null;
	}

}

// forth?="d"?
protected class UnorderedSerialization_ForthAssignment_1_0_3 extends AssignmentToken  {
	
	public UnorderedSerialization_ForthAssignment_1_0_3(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getForthAssignment_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_ThirdAssignment_1_0_2(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_SecondAssignment_1_0_1(parent, this, 1, inst);
			case 2: return new UnorderedSerialization_Group_1_0_0(parent, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("forth",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("forth");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getUnorderedSerializationAccess().getForthDKeyword_1_0_3_0();
			return obj;
		}
		return null;
	}

}


// "2" (firstAsList+="a" & secondAsList+="b")*
protected class UnorderedSerialization_Group_1_1 extends GroupToken {
	
	public UnorderedSerialization_Group_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_UnorderedGroup_1_1_1(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_DigitTwoKeyword_1_1_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}

// "2"
protected class UnorderedSerialization_DigitTwoKeyword_1_1_0 extends KeywordToken  {
	
	public UnorderedSerialization_DigitTwoKeyword_1_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getDigitTwoKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_UnorderedSerializationAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// (firstAsList+="a" & secondAsList+="b")*
protected class UnorderedSerialization_UnorderedGroup_1_1_1 extends UnorderedGroupToken {
	
	public UnorderedSerialization_UnorderedGroup_1_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getUnorderedGroup_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_SecondAsListAssignment_1_1_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"
protected class UnorderedSerialization_FirstAsListAssignment_1_1_1_0 extends AssignmentToken  {
	
	public UnorderedSerialization_FirstAsListAssignment_1_1_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getFirstAsListAssignment_1_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_UnorderedGroup_1_1_1(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_DigitTwoKeyword_1_1_0(parent, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getUnorderedSerializationAccess().getFirstAsListAKeyword_1_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// secondAsList+="b"
protected class UnorderedSerialization_SecondAsListAssignment_1_1_1_1 extends AssignmentToken  {
	
	public UnorderedSerialization_SecondAsListAssignment_1_1_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getSecondAsListAssignment_1_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_FirstAsListAssignment_1_1_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("secondAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("secondAsList");
		if("b".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getUnorderedSerializationAccess().getSecondAsListBKeyword_1_1_1_1_0();
			return obj;
		}
		return null;
	}

}



// "3" (firstAsList+="a"+ & second?="b")*
protected class UnorderedSerialization_Group_1_2 extends GroupToken {
	
	public UnorderedSerialization_Group_1_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_UnorderedGroup_1_2_1(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_DigitThreeKeyword_1_2_0(parent, this, 1, inst);
			default: return null;
		}	
	}

}

// "3"
protected class UnorderedSerialization_DigitThreeKeyword_1_2_0 extends KeywordToken  {
	
	public UnorderedSerialization_DigitThreeKeyword_1_2_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getDigitThreeKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_UnorderedSerializationAction_0(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// (firstAsList+="a"+ & second?="b")*
protected class UnorderedSerialization_UnorderedGroup_1_2_1 extends UnorderedGroupToken {
	
	public UnorderedSerialization_UnorderedGroup_1_2_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getUnorderedGroup_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_SecondAssignment_1_2_1_1(parent, this, 0, inst);
			default: return null;
		}	
	}

}

// firstAsList+="a"+
protected class UnorderedSerialization_FirstAsListAssignment_1_2_1_0 extends AssignmentToken  {
	
	public UnorderedSerialization_FirstAsListAssignment_1_2_1_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getFirstAsListAssignment_1_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_FirstAsListAssignment_1_2_1_0(parent, this, 0, inst);
			case 1: return new UnorderedSerialization_UnorderedGroup_1_2_1(parent, this, 1, inst);
			case 2: return new UnorderedSerialization_DigitThreeKeyword_1_2_0(parent, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("firstAsList",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("firstAsList");
		if("a".equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getUnorderedSerializationAccess().getFirstAsListAKeyword_1_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// second?="b"
protected class UnorderedSerialization_SecondAssignment_1_2_1_1 extends AssignmentToken  {
	
	public UnorderedSerialization_SecondAssignment_1_2_1_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnorderedSerializationAccess().getSecondAssignment_1_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new UnorderedSerialization_FirstAsListAssignment_1_2_1_0(parent, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("second",false)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("second");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KW;
			element = grammarAccess.getUnorderedSerializationAccess().getSecondBKeyword_1_2_1_1_0();
			return obj;
		}
		return null;
	}

}





/************ end Rule UnorderedSerialization ****************/

}
