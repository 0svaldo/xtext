/*
* generated by Xtext
*/
package org.eclipse.xtext.parser.unorderedGroups.parser.packrat.consumers;

import org.eclipse.emf.ecore.EClassifier;

import org.eclipse.xtext.AbstractRule;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.UnorderedGroup;

import org.eclipse.xtext.parser.packrat.consumers.IElementConsumer;
import org.eclipse.xtext.parser.packrat.consumers.INonTerminalConsumerConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;
import org.eclipse.xtext.parser.packrat.consumers.NonTerminalConsumer;
import org.eclipse.xtext.parser.packrat.matching.ICharacterClass;

import org.eclipse.xtext.parser.unorderedGroups.services.UnorderedGroupsTestLanguageGrammarAccess.UnorderedDatatypeElements;

@SuppressWarnings("all")
public final class UnorderedGroupsTestLanguageUnorderedDatatypeConsumer extends NonTerminalConsumer {

	private UnorderedDatatypeElements rule;	

	private IElementConsumer alternatives$1$Consumer;

	private IElementConsumer group$2$Consumer;

	private IElementConsumer keyword$3$Consumer;

	private IElementConsumer unorderedGroup$4$Consumer;

	private IElementConsumer keyword$5$Consumer;

	private IElementConsumer keyword$6$Consumer;

	private IElementConsumer group$7$Consumer;

	private IElementConsumer keyword$8$Consumer;

	private IElementConsumer unorderedGroup$9$Consumer;

	private IElementConsumer keyword$10$Consumer;

	private IElementConsumer keyword$11$Consumer;

	private IElementConsumer keyword$12$Consumer;

	private IElementConsumer keyword$13$Consumer;

	private IElementConsumer group$14$Consumer;

	private IElementConsumer keyword$15$Consumer;

	private IElementConsumer unorderedGroup$16$Consumer;

	private IElementConsumer keyword$17$Consumer;

	private IElementConsumer keyword$18$Consumer;

	private IElementConsumer group$19$Consumer;

	private IElementConsumer keyword$20$Consumer;

	private IElementConsumer unorderedGroup$21$Consumer;

	private IElementConsumer keyword$22$Consumer;

	private IElementConsumer keyword$23$Consumer;

	private IElementConsumer group$24$Consumer;

	private IElementConsumer keyword$25$Consumer;

	private IElementConsumer unorderedGroup$26$Consumer;

	private IElementConsumer keyword$27$Consumer;

	private IElementConsumer keyword$28$Consumer;

	private IElementConsumer group$29$Consumer;

	private IElementConsumer keyword$30$Consumer;

	private IElementConsumer unorderedGroup$31$Consumer;

	private IElementConsumer keyword$32$Consumer;

	private IElementConsumer keyword$33$Consumer;

	private IElementConsumer group$34$Consumer;

	private IElementConsumer keyword$35$Consumer;

	private IElementConsumer unorderedGroup$36$Consumer;

	private IElementConsumer keyword$37$Consumer;

	private IElementConsumer keyword$38$Consumer;

	private IElementConsumer group$39$Consumer;

	private IElementConsumer keyword$40$Consumer;

	private IElementConsumer unorderedGroup$41$Consumer;

	private IElementConsumer group$42$Consumer;

	private IElementConsumer keyword$43$Consumer;

	private IElementConsumer keyword$44$Consumer;

	private IElementConsumer keyword$45$Consumer;

	private IElementConsumer group$46$Consumer;

	private IElementConsumer keyword$47$Consumer;

	private IElementConsumer keyword$48$Consumer;

	private IElementConsumer keyword$49$Consumer;

	private IElementConsumer group$50$Consumer;

	private IElementConsumer keyword$51$Consumer;

	private IElementConsumer unorderedGroup$52$Consumer;

	private IElementConsumer keyword$53$Consumer;

	private IElementConsumer keyword$54$Consumer;

	private IElementConsumer group$55$Consumer;

	private IElementConsumer keyword$56$Consumer;

	private IElementConsumer unorderedGroup$57$Consumer;

	private IElementConsumer keyword$58$Consumer;

	private IElementConsumer keyword$59$Consumer;

	private IElementConsumer group$60$Consumer;

	private IElementConsumer keyword$61$Consumer;

	private IElementConsumer unorderedGroup$62$Consumer;

	private IElementConsumer keyword$63$Consumer;

	private IElementConsumer keyword$64$Consumer;

	private IElementConsumer group$65$Consumer;

	private IElementConsumer keyword$66$Consumer;

	private IElementConsumer unorderedGroup$67$Consumer;

	private IElementConsumer keyword$68$Consumer;

	private IElementConsumer keyword$69$Consumer;

	private IElementConsumer unorderedGroup$70$Consumer;

	private IElementConsumer keyword$71$Consumer;

	private IElementConsumer keyword$72$Consumer;

	private IElementConsumer group$73$Consumer;

	private IElementConsumer keyword$74$Consumer;

	private IElementConsumer unorderedGroup$75$Consumer;

	private IElementConsumer keyword$76$Consumer;

	private IElementConsumer keyword$77$Consumer;

	private IElementConsumer keyword$78$Consumer;

	private IElementConsumer keyword$79$Consumer;

	private IElementConsumer group$80$Consumer;

	private IElementConsumer keyword$81$Consumer;

	private IElementConsumer unorderedGroup$82$Consumer;

	private IElementConsumer unorderedGroup$83$Consumer;

	private IElementConsumer keyword$84$Consumer;

	private IElementConsumer keyword$85$Consumer;

	private IElementConsumer unorderedGroup$86$Consumer;

	private IElementConsumer keyword$87$Consumer;

	private IElementConsumer keyword$88$Consumer;

	private ICharacterClass keyword$3$Delimiter;

	private ICharacterClass keyword$5$Delimiter;

	private ICharacterClass keyword$6$Delimiter;

	private ICharacterClass keyword$8$Delimiter;

	private ICharacterClass keyword$10$Delimiter;

	private ICharacterClass keyword$11$Delimiter;

	private ICharacterClass keyword$12$Delimiter;

	private ICharacterClass keyword$13$Delimiter;

	private ICharacterClass keyword$15$Delimiter;

	private ICharacterClass keyword$17$Delimiter;

	private ICharacterClass keyword$18$Delimiter;

	private ICharacterClass keyword$20$Delimiter;

	private ICharacterClass keyword$22$Delimiter;

	private ICharacterClass keyword$23$Delimiter;

	private ICharacterClass keyword$25$Delimiter;

	private ICharacterClass keyword$27$Delimiter;

	private ICharacterClass keyword$28$Delimiter;

	private ICharacterClass keyword$30$Delimiter;

	private ICharacterClass keyword$32$Delimiter;

	private ICharacterClass keyword$33$Delimiter;

	private ICharacterClass keyword$35$Delimiter;

	private ICharacterClass keyword$37$Delimiter;

	private ICharacterClass keyword$38$Delimiter;

	private ICharacterClass keyword$40$Delimiter;

	private ICharacterClass keyword$43$Delimiter;

	private ICharacterClass keyword$44$Delimiter;

	private ICharacterClass keyword$45$Delimiter;

	private ICharacterClass keyword$47$Delimiter;

	private ICharacterClass keyword$48$Delimiter;

	private ICharacterClass keyword$49$Delimiter;

	private ICharacterClass keyword$51$Delimiter;

	private ICharacterClass keyword$53$Delimiter;

	private ICharacterClass keyword$54$Delimiter;

	private ICharacterClass keyword$56$Delimiter;

	private ICharacterClass keyword$58$Delimiter;

	private ICharacterClass keyword$59$Delimiter;

	private ICharacterClass keyword$61$Delimiter;

	private ICharacterClass keyword$63$Delimiter;

	private ICharacterClass keyword$64$Delimiter;

	private ICharacterClass keyword$66$Delimiter;

	private ICharacterClass keyword$68$Delimiter;

	private ICharacterClass keyword$69$Delimiter;

	private ICharacterClass keyword$71$Delimiter;

	private ICharacterClass keyword$72$Delimiter;

	private ICharacterClass keyword$74$Delimiter;

	private ICharacterClass keyword$76$Delimiter;

	private ICharacterClass keyword$77$Delimiter;

	private ICharacterClass keyword$78$Delimiter;

	private ICharacterClass keyword$79$Delimiter;

	private ICharacterClass keyword$81$Delimiter;

	private ICharacterClass keyword$84$Delimiter;

	private ICharacterClass keyword$85$Delimiter;

	private ICharacterClass keyword$87$Delimiter;

	private ICharacterClass keyword$88$Delimiter;

	protected class Alternatives$1$Consumer extends AlternativesConsumer {
		
		protected Alternatives$1$Consumer(final Alternatives alternatives) {
			super(alternatives);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(group$2$Consumer);
			acceptor.accept(group$7$Consumer);
			acceptor.accept(group$14$Consumer);
			acceptor.accept(group$19$Consumer);
			acceptor.accept(group$24$Consumer);
			acceptor.accept(group$29$Consumer);
			acceptor.accept(group$34$Consumer);
			acceptor.accept(group$39$Consumer);
			acceptor.accept(group$50$Consumer);
			acceptor.accept(group$55$Consumer);
			acceptor.accept(group$60$Consumer);
			acceptor.accept(group$65$Consumer);
			acceptor.accept(group$73$Consumer);
			acceptor.accept(group$80$Consumer);
		}
	}

	protected class Group$2$Consumer extends GroupConsumer {
		
		protected Group$2$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$3$Consumer);
			acceptor.accept(unorderedGroup$4$Consumer);
		}
	}

	protected class Keyword$3$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$3$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$3$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$4$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$4$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$5$Consumer);
			acceptor.accept(keyword$6$Consumer);
		}
	}

	protected class Keyword$5$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$5$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$5$Delimiter(), optional);
		}
	}

	protected class Keyword$6$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$6$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$6$Delimiter(), optional);
		}
	}

	protected class Group$7$Consumer extends GroupConsumer {
		
		protected Group$7$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$8$Consumer);
			acceptor.accept(unorderedGroup$9$Consumer);
		}
	}

	protected class Keyword$8$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$8$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$8$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$9$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$9$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$10$Consumer);
			acceptor.accept(keyword$11$Consumer);
			acceptor.accept(keyword$12$Consumer);
			acceptor.accept(keyword$13$Consumer);
		}
	}

	protected class Keyword$10$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$10$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$10$Delimiter(), optional);
		}
	}

	protected class Keyword$11$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$11$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$11$Delimiter(), optional);
		}
	}

	protected class Keyword$12$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$12$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$12$Delimiter(), optional);
		}
	}

	protected class Keyword$13$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$13$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$13$Delimiter(), optional);
		}
	}

	protected class Group$14$Consumer extends GroupConsumer {
		
		protected Group$14$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$15$Consumer);
			acceptor.accept(unorderedGroup$16$Consumer);
		}
	}

	protected class Keyword$15$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$15$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$15$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$16$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$16$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$17$Consumer);
			acceptor.accept(keyword$18$Consumer);
		}
	}

	protected class Keyword$17$Consumer extends OptionalElementConsumer<Keyword> {
		
		protected Keyword$17$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$17$Delimiter(), optional);
		}
	}

	protected class Keyword$18$Consumer extends OptionalElementConsumer<Keyword> {
		
		protected Keyword$18$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$18$Delimiter(), optional);
		}
	}

	protected class Group$19$Consumer extends GroupConsumer {
		
		protected Group$19$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$20$Consumer);
			acceptor.accept(unorderedGroup$21$Consumer);
		}
	}

	protected class Keyword$20$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$20$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$20$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$21$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$21$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$22$Consumer);
			acceptor.accept(keyword$23$Consumer);
		}
	}

	protected class Keyword$22$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$22$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$22$Delimiter(), optional);
		}
	}

	protected class Keyword$23$Consumer extends OptionalElementConsumer<Keyword> {
		
		protected Keyword$23$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$23$Delimiter(), optional);
		}
	}

	protected class Group$24$Consumer extends GroupConsumer {
		
		protected Group$24$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$25$Consumer);
			acceptor.accept(unorderedGroup$26$Consumer);
		}
	}

	protected class Keyword$25$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$25$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$25$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$26$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$26$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$27$Consumer);
			acceptor.accept(keyword$28$Consumer);
		}
	}

	protected class Keyword$27$Consumer extends OptionalElementConsumer<Keyword> {
		
		protected Keyword$27$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$27$Delimiter(), optional);
		}
	}

	protected class Keyword$28$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$28$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$28$Delimiter(), optional);
		}
	}

	protected class Group$29$Consumer extends GroupConsumer {
		
		protected Group$29$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$30$Consumer);
			acceptor.accept(unorderedGroup$31$Consumer);
		}
	}

	protected class Keyword$30$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$30$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$30$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$31$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$31$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$32$Consumer);
			acceptor.accept(keyword$33$Consumer);
		}
	}

	protected class Keyword$32$Consumer extends MandatoryLoopElementConsumer<Keyword> {
		
		protected Keyword$32$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$32$Delimiter(), optional);
		}
	}

	protected class Keyword$33$Consumer extends LoopElementConsumer<Keyword> {
		
		protected Keyword$33$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$33$Delimiter(), optional);
		}
	}

	protected class Group$34$Consumer extends GroupConsumer {
		
		protected Group$34$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$35$Consumer);
			acceptor.accept(unorderedGroup$36$Consumer);
		}
	}

	protected class Keyword$35$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$35$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$35$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$36$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$36$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$37$Consumer);
			acceptor.accept(keyword$38$Consumer);
		}
	}

	protected class Keyword$37$Consumer extends LoopElementConsumer<Keyword> {
		
		protected Keyword$37$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$37$Delimiter(), optional);
		}
	}

	protected class Keyword$38$Consumer extends MandatoryLoopElementConsumer<Keyword> {
		
		protected Keyword$38$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$38$Delimiter(), optional);
		}
	}

	protected class Group$39$Consumer extends GroupConsumer {
		
		protected Group$39$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$40$Consumer);
			acceptor.accept(unorderedGroup$41$Consumer);
		}
	}

	protected class Keyword$40$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$40$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$40$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$41$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$41$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(group$42$Consumer);
			acceptor.accept(group$46$Consumer);
		}
	}

	protected class Group$42$Consumer extends GroupConsumer {
		
		protected Group$42$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$43$Consumer);
			acceptor.accept(keyword$44$Consumer);
			acceptor.accept(keyword$45$Consumer);
		}
	}

	protected class Keyword$43$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$43$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$43$Delimiter(), optional);
		}
	}

	protected class Keyword$44$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$44$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$44$Delimiter(), optional);
		}
	}

	protected class Keyword$45$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$45$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$45$Delimiter(), optional);
		}
	}

	protected class Group$46$Consumer extends GroupConsumer {
		
		protected Group$46$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$47$Consumer);
			acceptor.accept(keyword$48$Consumer);
			acceptor.accept(keyword$49$Consumer);
		}
	}

	protected class Keyword$47$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$47$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$47$Delimiter(), optional);
		}
	}

	protected class Keyword$48$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$48$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$48$Delimiter(), optional);
		}
	}

	protected class Keyword$49$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$49$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$49$Delimiter(), optional);
		}
	}

	protected class Group$50$Consumer extends GroupConsumer {
		
		protected Group$50$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$51$Consumer);
			acceptor.accept(unorderedGroup$52$Consumer);
		}
	}

	protected class Keyword$51$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$51$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$51$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$52$Consumer extends MandatoryLoopUnorderedGroupConsumer {
		
		protected UnorderedGroup$52$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$53$Consumer);
			acceptor.accept(keyword$54$Consumer);
		}
	}

	protected class Keyword$53$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$53$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$53$Delimiter(), optional);
		}
	}

	protected class Keyword$54$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$54$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$54$Delimiter(), optional);
		}
	}

	protected class Group$55$Consumer extends GroupConsumer {
		
		protected Group$55$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$56$Consumer);
			acceptor.accept(unorderedGroup$57$Consumer);
		}
	}

	protected class Keyword$56$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$56$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$56$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$57$Consumer extends LoopUnorderedGroupConsumer {
		
		protected UnorderedGroup$57$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$58$Consumer);
			acceptor.accept(keyword$59$Consumer);
		}
	}

	protected class Keyword$58$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$58$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$58$Delimiter(), optional);
		}
	}

	protected class Keyword$59$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$59$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$59$Delimiter(), optional);
		}
	}

	protected class Group$60$Consumer extends GroupConsumer {
		
		protected Group$60$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$61$Consumer);
			acceptor.accept(unorderedGroup$62$Consumer);
		}
	}

	protected class Keyword$61$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$61$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$61$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$62$Consumer extends OptionalUnorderedGroupConsumer {
		
		protected UnorderedGroup$62$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$63$Consumer);
			acceptor.accept(keyword$64$Consumer);
		}
	}

	protected class Keyword$63$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$63$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$63$Delimiter(), optional);
		}
	}

	protected class Keyword$64$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$64$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$64$Delimiter(), optional);
		}
	}

	protected class Group$65$Consumer extends GroupConsumer {
		
		protected Group$65$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$66$Consumer);
			acceptor.accept(unorderedGroup$67$Consumer);
			acceptor.accept(unorderedGroup$70$Consumer);
		}
	}

	protected class Keyword$66$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$66$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$66$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$67$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$67$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$68$Consumer);
			acceptor.accept(keyword$69$Consumer);
		}
	}

	protected class Keyword$68$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$68$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$68$Delimiter(), optional);
		}
	}

	protected class Keyword$69$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$69$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$69$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$70$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$70$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$71$Consumer);
			acceptor.accept(keyword$72$Consumer);
		}
	}

	protected class Keyword$71$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$71$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$71$Delimiter(), optional);
		}
	}

	protected class Keyword$72$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$72$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$72$Delimiter(), optional);
		}
	}

	protected class Group$73$Consumer extends GroupConsumer {
		
		protected Group$73$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$74$Consumer);
			acceptor.accept(unorderedGroup$75$Consumer);
			acceptor.accept(keyword$78$Consumer);
			acceptor.accept(keyword$79$Consumer);
		}
	}

	protected class Keyword$74$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$74$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$74$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$75$Consumer extends OptionalUnorderedGroupConsumer {
		
		protected UnorderedGroup$75$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$76$Consumer);
			acceptor.accept(keyword$77$Consumer);
		}
	}

	protected class Keyword$76$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$76$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$76$Delimiter(), optional);
		}
	}

	protected class Keyword$77$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$77$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$77$Delimiter(), optional);
		}
	}

	protected class Keyword$78$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$78$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$78$Delimiter(), optional);
		}
	}

	protected class Keyword$79$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$79$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$79$Delimiter(), optional);
		}
	}

	protected class Group$80$Consumer extends GroupConsumer {
		
		protected Group$80$Consumer(final Group group) {
			super(group);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$81$Consumer);
			acceptor.accept(unorderedGroup$82$Consumer);
		}
	}

	protected class Keyword$81$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$81$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$81$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$82$Consumer extends MandatoryLoopUnorderedGroupConsumer {
		
		protected UnorderedGroup$82$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(unorderedGroup$83$Consumer);
			acceptor.accept(unorderedGroup$86$Consumer);
		}
	}

	protected class UnorderedGroup$83$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$83$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$84$Consumer);
			acceptor.accept(keyword$85$Consumer);
		}
	}

	protected class Keyword$84$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$84$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$84$Delimiter(), optional);
		}
	}

	protected class Keyword$85$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$85$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$85$Delimiter(), optional);
		}
	}

	protected class UnorderedGroup$86$Consumer extends UnorderedGroupConsumer {
		
		protected UnorderedGroup$86$Consumer(final UnorderedGroup unorderedGroup) {
			super(unorderedGroup);
		}
		
		@Override
		protected void doGetConsumers(ConsumerAcceptor acceptor) {
			acceptor.accept(keyword$87$Consumer);
			acceptor.accept(keyword$88$Consumer);
		}
	}

	protected class Keyword$87$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$87$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$87$Delimiter(), optional);
		}
	}

	protected class Keyword$88$Consumer extends ElementConsumer<Keyword> {
		
		protected Keyword$88$Consumer(final Keyword keyword) {
			super(keyword);
		}
		
		@Override
		protected int doConsume(boolean optional) throws Exception {
			return consumeKeyword(getElement(), null, false, false, getKeyword$88$Delimiter(), optional);
		}
	}

	public UnorderedGroupsTestLanguageUnorderedDatatypeConsumer(INonTerminalConsumerConfiguration configuration, ITerminalConsumer[] hiddenTokens) {
		super(configuration, hiddenTokens);
		keyword$3$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$5$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$6$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$8$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$10$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$11$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$12$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$13$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$15$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$17$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$18$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$20$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$22$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$23$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$25$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$27$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$28$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$30$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$32$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$33$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$35$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$37$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$38$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$40$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$43$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$44$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$45$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$47$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$48$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$49$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$51$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$53$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$54$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$56$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$58$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$59$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$61$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$63$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$64$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$66$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$68$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$69$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$71$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$72$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$74$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$76$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$77$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$78$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$79$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$81$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$84$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$85$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$87$Delimiter = ICharacterClass.Factory.nullClass();
		keyword$88$Delimiter = ICharacterClass.Factory.nullClass();
	}
	
	@Override
	protected int doConsume() throws Exception {
		return alternatives$1$Consumer.consume();
	}

	public UnorderedDatatypeElements getRule() {
		return rule;
	}
	
	public void setRule(UnorderedDatatypeElements rule) {
		this.rule = rule;
		
		alternatives$1$Consumer = new Alternatives$1$Consumer(rule.getAlternatives());
		group$2$Consumer = new Group$2$Consumer(rule.getGroup_0());
		keyword$3$Consumer = new Keyword$3$Consumer(rule.getDigitOneKeyword_0_0());
		unorderedGroup$4$Consumer = new UnorderedGroup$4$Consumer(rule.getUnorderedGroup_0_1());
		keyword$5$Consumer = new Keyword$5$Consumer(rule.getAKeyword_0_1_0());
		keyword$6$Consumer = new Keyword$6$Consumer(rule.getBKeyword_0_1_1());
		group$7$Consumer = new Group$7$Consumer(rule.getGroup_1());
		keyword$8$Consumer = new Keyword$8$Consumer(rule.getDigitTwoKeyword_1_0());
		unorderedGroup$9$Consumer = new UnorderedGroup$9$Consumer(rule.getUnorderedGroup_1_1());
		keyword$10$Consumer = new Keyword$10$Consumer(rule.getAKeyword_1_1_0());
		keyword$11$Consumer = new Keyword$11$Consumer(rule.getBKeyword_1_1_1());
		keyword$12$Consumer = new Keyword$12$Consumer(rule.getCKeyword_1_1_2());
		keyword$13$Consumer = new Keyword$13$Consumer(rule.getDKeyword_1_1_3());
		group$14$Consumer = new Group$14$Consumer(rule.getGroup_2());
		keyword$15$Consumer = new Keyword$15$Consumer(rule.getDigitThreeKeyword_2_0());
		unorderedGroup$16$Consumer = new UnorderedGroup$16$Consumer(rule.getUnorderedGroup_2_1());
		keyword$17$Consumer = new Keyword$17$Consumer(rule.getAKeyword_2_1_0());
		keyword$18$Consumer = new Keyword$18$Consumer(rule.getBKeyword_2_1_1());
		group$19$Consumer = new Group$19$Consumer(rule.getGroup_3());
		keyword$20$Consumer = new Keyword$20$Consumer(rule.getDigitFourKeyword_3_0());
		unorderedGroup$21$Consumer = new UnorderedGroup$21$Consumer(rule.getUnorderedGroup_3_1());
		keyword$22$Consumer = new Keyword$22$Consumer(rule.getAKeyword_3_1_0());
		keyword$23$Consumer = new Keyword$23$Consumer(rule.getBKeyword_3_1_1());
		group$24$Consumer = new Group$24$Consumer(rule.getGroup_4());
		keyword$25$Consumer = new Keyword$25$Consumer(rule.getDigitFiveKeyword_4_0());
		unorderedGroup$26$Consumer = new UnorderedGroup$26$Consumer(rule.getUnorderedGroup_4_1());
		keyword$27$Consumer = new Keyword$27$Consumer(rule.getAKeyword_4_1_0());
		keyword$28$Consumer = new Keyword$28$Consumer(rule.getBKeyword_4_1_1());
		group$29$Consumer = new Group$29$Consumer(rule.getGroup_5());
		keyword$30$Consumer = new Keyword$30$Consumer(rule.getDigitSixKeyword_5_0());
		unorderedGroup$31$Consumer = new UnorderedGroup$31$Consumer(rule.getUnorderedGroup_5_1());
		keyword$32$Consumer = new Keyword$32$Consumer(rule.getAKeyword_5_1_0());
		keyword$33$Consumer = new Keyword$33$Consumer(rule.getBKeyword_5_1_1());
		group$34$Consumer = new Group$34$Consumer(rule.getGroup_6());
		keyword$35$Consumer = new Keyword$35$Consumer(rule.getDigitSevenKeyword_6_0());
		unorderedGroup$36$Consumer = new UnorderedGroup$36$Consumer(rule.getUnorderedGroup_6_1());
		keyword$37$Consumer = new Keyword$37$Consumer(rule.getAKeyword_6_1_0());
		keyword$38$Consumer = new Keyword$38$Consumer(rule.getBKeyword_6_1_1());
		group$39$Consumer = new Group$39$Consumer(rule.getGroup_7());
		keyword$40$Consumer = new Keyword$40$Consumer(rule.getDigitEightKeyword_7_0());
		unorderedGroup$41$Consumer = new UnorderedGroup$41$Consumer(rule.getUnorderedGroup_7_1());
		group$42$Consumer = new Group$42$Consumer(rule.getGroup_7_1_0());
		keyword$43$Consumer = new Keyword$43$Consumer(rule.getAKeyword_7_1_0_0());
		keyword$44$Consumer = new Keyword$44$Consumer(rule.getBKeyword_7_1_0_1());
		keyword$45$Consumer = new Keyword$45$Consumer(rule.getCKeyword_7_1_0_2());
		group$46$Consumer = new Group$46$Consumer(rule.getGroup_7_1_1());
		keyword$47$Consumer = new Keyword$47$Consumer(rule.getAKeyword_7_1_1_0());
		keyword$48$Consumer = new Keyword$48$Consumer(rule.getBKeyword_7_1_1_1());
		keyword$49$Consumer = new Keyword$49$Consumer(rule.getDKeyword_7_1_1_2());
		group$50$Consumer = new Group$50$Consumer(rule.getGroup_8());
		keyword$51$Consumer = new Keyword$51$Consumer(rule.getDigitNineKeyword_8_0());
		unorderedGroup$52$Consumer = new UnorderedGroup$52$Consumer(rule.getUnorderedGroup_8_1());
		keyword$53$Consumer = new Keyword$53$Consumer(rule.getAKeyword_8_1_0());
		keyword$54$Consumer = new Keyword$54$Consumer(rule.getBKeyword_8_1_1());
		group$55$Consumer = new Group$55$Consumer(rule.getGroup_9());
		keyword$56$Consumer = new Keyword$56$Consumer(rule.getDigitOneDigitZeroKeyword_9_0());
		unorderedGroup$57$Consumer = new UnorderedGroup$57$Consumer(rule.getUnorderedGroup_9_1());
		keyword$58$Consumer = new Keyword$58$Consumer(rule.getAKeyword_9_1_0());
		keyword$59$Consumer = new Keyword$59$Consumer(rule.getBKeyword_9_1_1());
		group$60$Consumer = new Group$60$Consumer(rule.getGroup_10());
		keyword$61$Consumer = new Keyword$61$Consumer(rule.getDigitOneDigitOneKeyword_10_0());
		unorderedGroup$62$Consumer = new UnorderedGroup$62$Consumer(rule.getUnorderedGroup_10_1());
		keyword$63$Consumer = new Keyword$63$Consumer(rule.getAKeyword_10_1_0());
		keyword$64$Consumer = new Keyword$64$Consumer(rule.getBKeyword_10_1_1());
		group$65$Consumer = new Group$65$Consumer(rule.getGroup_11());
		keyword$66$Consumer = new Keyword$66$Consumer(rule.getDigitOneDigitTwoKeyword_11_0());
		unorderedGroup$67$Consumer = new UnorderedGroup$67$Consumer(rule.getUnorderedGroup_11_1());
		keyword$68$Consumer = new Keyword$68$Consumer(rule.getAKeyword_11_1_0());
		keyword$69$Consumer = new Keyword$69$Consumer(rule.getBKeyword_11_1_1());
		unorderedGroup$70$Consumer = new UnorderedGroup$70$Consumer(rule.getUnorderedGroup_11_2());
		keyword$71$Consumer = new Keyword$71$Consumer(rule.getAKeyword_11_2_0());
		keyword$72$Consumer = new Keyword$72$Consumer(rule.getBKeyword_11_2_1());
		group$73$Consumer = new Group$73$Consumer(rule.getGroup_12());
		keyword$74$Consumer = new Keyword$74$Consumer(rule.getDigitOneDigitThreeKeyword_12_0());
		unorderedGroup$75$Consumer = new UnorderedGroup$75$Consumer(rule.getUnorderedGroup_12_1());
		keyword$76$Consumer = new Keyword$76$Consumer(rule.getAKeyword_12_1_0());
		keyword$77$Consumer = new Keyword$77$Consumer(rule.getBKeyword_12_1_1());
		keyword$78$Consumer = new Keyword$78$Consumer(rule.getAKeyword_12_2());
		keyword$79$Consumer = new Keyword$79$Consumer(rule.getBKeyword_12_3());
		group$80$Consumer = new Group$80$Consumer(rule.getGroup_13());
		keyword$81$Consumer = new Keyword$81$Consumer(rule.getDigitOneDigitFourKeyword_13_0());
		unorderedGroup$82$Consumer = new UnorderedGroup$82$Consumer(rule.getUnorderedGroup_13_1());
		unorderedGroup$83$Consumer = new UnorderedGroup$83$Consumer(rule.getUnorderedGroup_13_1_0());
		keyword$84$Consumer = new Keyword$84$Consumer(rule.getAKeyword_13_1_0_0());
		keyword$85$Consumer = new Keyword$85$Consumer(rule.getBKeyword_13_1_0_1());
		unorderedGroup$86$Consumer = new UnorderedGroup$86$Consumer(rule.getUnorderedGroup_13_1_1());
		keyword$87$Consumer = new Keyword$87$Consumer(rule.getCKeyword_13_1_1_0());
		keyword$88$Consumer = new Keyword$88$Consumer(rule.getDKeyword_13_1_1_1());
	}
	
	@Override
	protected AbstractRule getGrammarElement() {
		return getRule().getRule();
	}

	@Override
	protected EClassifier getDefaultType() {
		return getGrammarElement().getType().getClassifier();
	}
	
	public ICharacterClass getKeyword$3$Delimiter() {
		return keyword$3$Delimiter;
	}
	
	public void setKeyword$3$Delimiter(ICharacterClass characterClass) {
		keyword$3$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$5$Delimiter() {
		return keyword$5$Delimiter;
	}
	
	public void setKeyword$5$Delimiter(ICharacterClass characterClass) {
		keyword$5$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$6$Delimiter() {
		return keyword$6$Delimiter;
	}
	
	public void setKeyword$6$Delimiter(ICharacterClass characterClass) {
		keyword$6$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$8$Delimiter() {
		return keyword$8$Delimiter;
	}
	
	public void setKeyword$8$Delimiter(ICharacterClass characterClass) {
		keyword$8$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$10$Delimiter() {
		return keyword$10$Delimiter;
	}
	
	public void setKeyword$10$Delimiter(ICharacterClass characterClass) {
		keyword$10$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$11$Delimiter() {
		return keyword$11$Delimiter;
	}
	
	public void setKeyword$11$Delimiter(ICharacterClass characterClass) {
		keyword$11$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$12$Delimiter() {
		return keyword$12$Delimiter;
	}
	
	public void setKeyword$12$Delimiter(ICharacterClass characterClass) {
		keyword$12$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$13$Delimiter() {
		return keyword$13$Delimiter;
	}
	
	public void setKeyword$13$Delimiter(ICharacterClass characterClass) {
		keyword$13$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$15$Delimiter() {
		return keyword$15$Delimiter;
	}
	
	public void setKeyword$15$Delimiter(ICharacterClass characterClass) {
		keyword$15$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$17$Delimiter() {
		return keyword$17$Delimiter;
	}
	
	public void setKeyword$17$Delimiter(ICharacterClass characterClass) {
		keyword$17$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$18$Delimiter() {
		return keyword$18$Delimiter;
	}
	
	public void setKeyword$18$Delimiter(ICharacterClass characterClass) {
		keyword$18$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$20$Delimiter() {
		return keyword$20$Delimiter;
	}
	
	public void setKeyword$20$Delimiter(ICharacterClass characterClass) {
		keyword$20$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$22$Delimiter() {
		return keyword$22$Delimiter;
	}
	
	public void setKeyword$22$Delimiter(ICharacterClass characterClass) {
		keyword$22$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$23$Delimiter() {
		return keyword$23$Delimiter;
	}
	
	public void setKeyword$23$Delimiter(ICharacterClass characterClass) {
		keyword$23$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$25$Delimiter() {
		return keyword$25$Delimiter;
	}
	
	public void setKeyword$25$Delimiter(ICharacterClass characterClass) {
		keyword$25$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$27$Delimiter() {
		return keyword$27$Delimiter;
	}
	
	public void setKeyword$27$Delimiter(ICharacterClass characterClass) {
		keyword$27$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$28$Delimiter() {
		return keyword$28$Delimiter;
	}
	
	public void setKeyword$28$Delimiter(ICharacterClass characterClass) {
		keyword$28$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$30$Delimiter() {
		return keyword$30$Delimiter;
	}
	
	public void setKeyword$30$Delimiter(ICharacterClass characterClass) {
		keyword$30$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$32$Delimiter() {
		return keyword$32$Delimiter;
	}
	
	public void setKeyword$32$Delimiter(ICharacterClass characterClass) {
		keyword$32$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$33$Delimiter() {
		return keyword$33$Delimiter;
	}
	
	public void setKeyword$33$Delimiter(ICharacterClass characterClass) {
		keyword$33$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$35$Delimiter() {
		return keyword$35$Delimiter;
	}
	
	public void setKeyword$35$Delimiter(ICharacterClass characterClass) {
		keyword$35$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$37$Delimiter() {
		return keyword$37$Delimiter;
	}
	
	public void setKeyword$37$Delimiter(ICharacterClass characterClass) {
		keyword$37$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$38$Delimiter() {
		return keyword$38$Delimiter;
	}
	
	public void setKeyword$38$Delimiter(ICharacterClass characterClass) {
		keyword$38$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$40$Delimiter() {
		return keyword$40$Delimiter;
	}
	
	public void setKeyword$40$Delimiter(ICharacterClass characterClass) {
		keyword$40$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$43$Delimiter() {
		return keyword$43$Delimiter;
	}
	
	public void setKeyword$43$Delimiter(ICharacterClass characterClass) {
		keyword$43$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$44$Delimiter() {
		return keyword$44$Delimiter;
	}
	
	public void setKeyword$44$Delimiter(ICharacterClass characterClass) {
		keyword$44$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$45$Delimiter() {
		return keyword$45$Delimiter;
	}
	
	public void setKeyword$45$Delimiter(ICharacterClass characterClass) {
		keyword$45$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$47$Delimiter() {
		return keyword$47$Delimiter;
	}
	
	public void setKeyword$47$Delimiter(ICharacterClass characterClass) {
		keyword$47$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$48$Delimiter() {
		return keyword$48$Delimiter;
	}
	
	public void setKeyword$48$Delimiter(ICharacterClass characterClass) {
		keyword$48$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$49$Delimiter() {
		return keyword$49$Delimiter;
	}
	
	public void setKeyword$49$Delimiter(ICharacterClass characterClass) {
		keyword$49$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$51$Delimiter() {
		return keyword$51$Delimiter;
	}
	
	public void setKeyword$51$Delimiter(ICharacterClass characterClass) {
		keyword$51$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$53$Delimiter() {
		return keyword$53$Delimiter;
	}
	
	public void setKeyword$53$Delimiter(ICharacterClass characterClass) {
		keyword$53$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$54$Delimiter() {
		return keyword$54$Delimiter;
	}
	
	public void setKeyword$54$Delimiter(ICharacterClass characterClass) {
		keyword$54$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$56$Delimiter() {
		return keyword$56$Delimiter;
	}
	
	public void setKeyword$56$Delimiter(ICharacterClass characterClass) {
		keyword$56$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$58$Delimiter() {
		return keyword$58$Delimiter;
	}
	
	public void setKeyword$58$Delimiter(ICharacterClass characterClass) {
		keyword$58$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$59$Delimiter() {
		return keyword$59$Delimiter;
	}
	
	public void setKeyword$59$Delimiter(ICharacterClass characterClass) {
		keyword$59$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$61$Delimiter() {
		return keyword$61$Delimiter;
	}
	
	public void setKeyword$61$Delimiter(ICharacterClass characterClass) {
		keyword$61$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$63$Delimiter() {
		return keyword$63$Delimiter;
	}
	
	public void setKeyword$63$Delimiter(ICharacterClass characterClass) {
		keyword$63$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$64$Delimiter() {
		return keyword$64$Delimiter;
	}
	
	public void setKeyword$64$Delimiter(ICharacterClass characterClass) {
		keyword$64$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$66$Delimiter() {
		return keyword$66$Delimiter;
	}
	
	public void setKeyword$66$Delimiter(ICharacterClass characterClass) {
		keyword$66$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$68$Delimiter() {
		return keyword$68$Delimiter;
	}
	
	public void setKeyword$68$Delimiter(ICharacterClass characterClass) {
		keyword$68$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$69$Delimiter() {
		return keyword$69$Delimiter;
	}
	
	public void setKeyword$69$Delimiter(ICharacterClass characterClass) {
		keyword$69$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$71$Delimiter() {
		return keyword$71$Delimiter;
	}
	
	public void setKeyword$71$Delimiter(ICharacterClass characterClass) {
		keyword$71$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$72$Delimiter() {
		return keyword$72$Delimiter;
	}
	
	public void setKeyword$72$Delimiter(ICharacterClass characterClass) {
		keyword$72$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$74$Delimiter() {
		return keyword$74$Delimiter;
	}
	
	public void setKeyword$74$Delimiter(ICharacterClass characterClass) {
		keyword$74$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$76$Delimiter() {
		return keyword$76$Delimiter;
	}
	
	public void setKeyword$76$Delimiter(ICharacterClass characterClass) {
		keyword$76$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$77$Delimiter() {
		return keyword$77$Delimiter;
	}
	
	public void setKeyword$77$Delimiter(ICharacterClass characterClass) {
		keyword$77$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$78$Delimiter() {
		return keyword$78$Delimiter;
	}
	
	public void setKeyword$78$Delimiter(ICharacterClass characterClass) {
		keyword$78$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$79$Delimiter() {
		return keyword$79$Delimiter;
	}
	
	public void setKeyword$79$Delimiter(ICharacterClass characterClass) {
		keyword$79$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$81$Delimiter() {
		return keyword$81$Delimiter;
	}
	
	public void setKeyword$81$Delimiter(ICharacterClass characterClass) {
		keyword$81$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$84$Delimiter() {
		return keyword$84$Delimiter;
	}
	
	public void setKeyword$84$Delimiter(ICharacterClass characterClass) {
		keyword$84$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$85$Delimiter() {
		return keyword$85$Delimiter;
	}
	
	public void setKeyword$85$Delimiter(ICharacterClass characterClass) {
		keyword$85$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$87$Delimiter() {
		return keyword$87$Delimiter;
	}
	
	public void setKeyword$87$Delimiter(ICharacterClass characterClass) {
		keyword$87$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
	public ICharacterClass getKeyword$88$Delimiter() {
		return keyword$88$Delimiter;
	}
	
	public void setKeyword$88$Delimiter(ICharacterClass characterClass) {
		keyword$88$Delimiter = characterClass != null ? characterClass : ICharacterClass.Factory.nullClass();
	}
	
}
