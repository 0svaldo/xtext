package org.eclipse.xtext.parser.unorderedGroups.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.xtext.parser.unorderedGroups.services.ExBacktrackingTestLanguageGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalExBacktrackingTestLanguageParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KEYWORD_64", "KEYWORD_65", "KEYWORD_62", "KEYWORD_63", "KEYWORD_59", "KEYWORD_60", "KEYWORD_61", "KEYWORD_56", "KEYWORD_57", "KEYWORD_58", "KEYWORD_52", "KEYWORD_53", "KEYWORD_54", "KEYWORD_55", "KEYWORD_50", "KEYWORD_51", "KEYWORD_45", "KEYWORD_46", "KEYWORD_47", "KEYWORD_48", "KEYWORD_49", "KEYWORD_38", "KEYWORD_39", "KEYWORD_40", "KEYWORD_41", "KEYWORD_42", "KEYWORD_43", "KEYWORD_44", "KEYWORD_21", "KEYWORD_22", "KEYWORD_23", "KEYWORD_24", "KEYWORD_25", "KEYWORD_26", "KEYWORD_27", "KEYWORD_28", "KEYWORD_29", "KEYWORD_30", "KEYWORD_31", "KEYWORD_32", "KEYWORD_33", "KEYWORD_34", "KEYWORD_35", "KEYWORD_36", "KEYWORD_37", "KEYWORD_1", "KEYWORD_2", "KEYWORD_3", "KEYWORD_4", "KEYWORD_5", "KEYWORD_6", "KEYWORD_7", "KEYWORD_8", "KEYWORD_9", "KEYWORD_10", "KEYWORD_11", "KEYWORD_12", "KEYWORD_13", "KEYWORD_14", "KEYWORD_15", "KEYWORD_16", "KEYWORD_17", "KEYWORD_18", "KEYWORD_19", "KEYWORD_20", "RULE_DOCUMENTATION", "RULE_HEX", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "Tokens"
    };
    public static final int RULE_ID=71;
    public static final int RULE_ANY_OTHER=77;
    public static final int KEYWORD_19=67;
    public static final int KEYWORD_56=11;
    public static final int KEYWORD_55=17;
    public static final int KEYWORD_54=16;
    public static final int KEYWORD_17=65;
    public static final int KEYWORD_53=15;
    public static final int KEYWORD_18=66;
    public static final int KEYWORD_52=14;
    public static final int KEYWORD_15=63;
    public static final int KEYWORD_51=19;
    public static final int KEYWORD_16=64;
    public static final int KEYWORD_50=18;
    public static final int KEYWORD_13=61;
    public static final int KEYWORD_14=62;
    public static final int KEYWORD_11=59;
    public static final int EOF=-1;
    public static final int KEYWORD_12=60;
    public static final int KEYWORD_10=58;
    public static final int KEYWORD_59=8;
    public static final int KEYWORD_58=13;
    public static final int KEYWORD_57=12;
    public static final int RULE_HEX=70;
    public static final int KEYWORD_6=54;
    public static final int KEYWORD_7=55;
    public static final int KEYWORD_8=56;
    public static final int KEYWORD_9=57;
    public static final int KEYWORD_65=5;
    public static final int KEYWORD_28=39;
    public static final int KEYWORD_64=4;
    public static final int KEYWORD_29=40;
    public static final int RULE_INT=72;
    public static final int KEYWORD_61=10;
    public static final int KEYWORD_24=35;
    public static final int KEYWORD_60=9;
    public static final int KEYWORD_25=36;
    public static final int KEYWORD_63=7;
    public static final int KEYWORD_26=37;
    public static final int KEYWORD_62=6;
    public static final int KEYWORD_27=38;
    public static final int KEYWORD_20=68;
    public static final int KEYWORD_21=32;
    public static final int KEYWORD_22=33;
    public static final int KEYWORD_23=34;
    public static final int KEYWORD_30=41;
    public static final int KEYWORD_1=49;
    public static final int KEYWORD_34=45;
    public static final int KEYWORD_5=53;
    public static final int KEYWORD_33=44;
    public static final int KEYWORD_4=52;
    public static final int KEYWORD_32=43;
    public static final int KEYWORD_3=51;
    public static final int KEYWORD_31=42;
    public static final int KEYWORD_2=50;
    public static final int KEYWORD_38=25;
    public static final int KEYWORD_37=48;
    public static final int RULE_SL_COMMENT=75;
    public static final int Tokens=78;
    public static final int KEYWORD_36=47;
    public static final int KEYWORD_35=46;
    public static final int RULE_ML_COMMENT=74;
    public static final int KEYWORD_39=26;
    public static final int RULE_STRING=73;
    public static final int RULE_DOCUMENTATION=69;
    public static final int KEYWORD_41=28;
    public static final int KEYWORD_40=27;
    public static final int KEYWORD_43=30;
    public static final int KEYWORD_42=29;
    public static final int KEYWORD_45=20;
    public static final int KEYWORD_44=31;
    public static final int KEYWORD_47=22;
    public static final int RULE_WS=76;
    public static final int KEYWORD_46=21;
    public static final int KEYWORD_49=24;
    public static final int KEYWORD_48=23;

        public InternalExBacktrackingTestLanguageParser(TokenStream input) {
            super(input);
            ruleMemo = new HashMap[260+1];
         }
        

    public String[] getTokenNames() { return tokenNames; }
    public String getGrammarFileName() { return "../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     

     	private ExBacktrackingTestLanguageGrammarAccess grammarAccess;
     	
        public InternalExBacktrackingTestLanguageParser(TokenStream input, IAstFactory factory, ExBacktrackingTestLanguageGrammarAccess grammarAccess) {
            this(input);
            this.factory = factory;
            registerRules(grammarAccess.getGrammar());
            this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected InputStream getTokenFile() {
        	ClassLoader classLoader = getClass().getClassLoader();
        	return classLoader.getResourceAsStream("org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.tokens");
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "DelegateModel";	
       	} 
       	   	
       	@Override
       	protected ExBacktrackingTestLanguageGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start entryRuleDelegateModel
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:78:1: entryRuleDelegateModel returns [EObject current=null] : iv_ruleDelegateModel= ruleDelegateModel EOF ;
    public final EObject entryRuleDelegateModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDelegateModel = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:79:2: (iv_ruleDelegateModel= ruleDelegateModel EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:80:2: iv_ruleDelegateModel= ruleDelegateModel EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getDelegateModelRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDelegateModel_in_entryRuleDelegateModel73);
            iv_ruleDelegateModel=ruleDelegateModel();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleDelegateModel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDelegateModel83); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleDelegateModel


    // $ANTLR start ruleDelegateModel
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:87:1: ruleDelegateModel returns [EObject current=null] : this_Model_0= ruleModel ;
    public final EObject ruleDelegateModel() throws RecognitionException {
        EObject current = null;

        EObject this_Model_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:92:6: (this_Model_0= ruleModel )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:94:2: this_Model_0= ruleModel
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getDelegateModelAccess().getModelParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleModel_in_ruleDelegateModel132);
            this_Model_0=ruleModel();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_Model_0; 
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleDelegateModel


    // $ANTLR start entryRuleModel
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:113:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:114:2: (iv_ruleModel= ruleModel EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:115:2: iv_ruleModel= ruleModel EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getModelRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleModel_in_entryRuleModel165);
            iv_ruleModel=ruleModel();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleModel175); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleModel


    // $ANTLR start ruleModel
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:122:1: ruleModel returns [EObject current=null] : ( (lv_units_0_0= ruleUnit ) )* ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_units_0_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:127:6: ( ( (lv_units_0_0= ruleUnit ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:128:1: ( (lv_units_0_0= ruleUnit ) )*
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:128:1: ( (lv_units_0_0= ruleUnit ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==KEYWORD_47||LA1_0==RULE_DOCUMENTATION) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:129:1: (lv_units_0_0= ruleUnit )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:129:1: (lv_units_0_0= ruleUnit )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:130:3: lv_units_0_0= ruleUnit
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleUnit_in_ruleModel220);
            	    lv_units_0_0=ruleUnit();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		add(
            	      	       			current, 
            	      	       			"units",
            	      	        		lv_units_0_0, 
            	      	        		"Unit", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleModel


    // $ANTLR start entryRuleUnit
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:160:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


         
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getUnitAccess().getUnorderedGroup_7()
        		);
        	
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:166:2: (iv_ruleUnit= ruleUnit EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:167:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnitRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleUnit_in_entryRuleUnit261);
            iv_ruleUnit=ruleUnit();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleUnit271); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleUnit


    // $ANTLR start ruleUnit
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:177:1: ruleUnit returns [EObject current=null] : ( () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20 ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        Token lv_documentation_1_0=null;
        Token lv_name_3_0=null;
        Token lv_version_5_0=null;
        EObject lv_implements_7_0 = null;

        EObject lv_implements_9_0 = null;

        AntlrDatatypeRuleToken lv_sourceLocation_14_0 = null;

        AntlrDatatypeRuleToken lv_outputLocation_18_0 = null;

        EObject lv_providedCapabilities_22_0 = null;

        EObject lv_requiredCapabilities_26_0 = null;

        EObject lv_metaRequiredCapabilities_31_0 = null;

        EObject lv_functions_33_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getUnitAccess().getUnorderedGroup_7()
        		);
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:185:6: ( ( () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:186:1: ( () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:186:1: ( () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:186:2: () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:186:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:187:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getUnitAccess().getUnitAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getUnitAccess().getUnitAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:200:2: ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==RULE_DOCUMENTATION) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:201:1: (lv_documentation_1_0= RULE_DOCUMENTATION )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:201:1: (lv_documentation_1_0= RULE_DOCUMENTATION )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:202:3: lv_documentation_1_0= RULE_DOCUMENTATION
                    {
                    lv_documentation_1_0=(Token)input.LT(1);
                    match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_RULE_DOCUMENTATION_in_ruleUnit329); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"documentation",
                      	        		lv_documentation_1_0, 
                      	        		"DOCUMENTATION", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleUnit346); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getUnitKeyword_2(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:229:1: ( (lv_name_3_0= RULE_ID ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==RULE_ID) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:230:1: (lv_name_3_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:230:1: (lv_name_3_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:231:3: lv_name_3_0= RULE_ID
                    {
                    lv_name_3_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleUnit363); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"name",
                      	        		lv_name_3_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:253:3: ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==KEYWORD_58) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:254:2: KEYWORD_58 ( (lv_version_5_0= RULE_ID ) )
                    {
                    match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_ruleUnit381); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnitAccess().getVersionKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:258:1: ( (lv_version_5_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:259:1: (lv_version_5_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:259:1: (lv_version_5_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:260:3: lv_version_5_0= RULE_ID
                    {
                    lv_version_5_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleUnit398); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0(), "version"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"version",
                      	        		lv_version_5_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:282:4: ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==KEYWORD_62) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:283:2: KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )*
                    {
                    match(input,KEYWORD_62,FollowSets000.FOLLOW_KEYWORD_62_in_ruleUnit417); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnitAccess().getImplementsKeyword_5_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:287:1: ( (lv_implements_7_0= ruleSimpleTypeRef ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:288:1: (lv_implements_7_0= ruleSimpleTypeRef )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:288:1: (lv_implements_7_0= ruleSimpleTypeRef )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:289:3: lv_implements_7_0= ruleSimpleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleSimpleTypeRef_in_ruleUnit438);
                    lv_implements_7_0=ruleSimpleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"implements",
                      	        		lv_implements_7_0, 
                      	        		"SimpleTypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:311:2: ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==KEYWORD_7) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:312:2: KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleUnit450); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:316:1: ( (lv_implements_9_0= ruleSimpleTypeRef ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:317:1: (lv_implements_9_0= ruleSimpleTypeRef )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:317:1: (lv_implements_9_0= ruleSimpleTypeRef )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:318:3: lv_implements_9_0= ruleSimpleTypeRef
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleSimpleTypeRef_in_ruleUnit471);
                    	    lv_implements_9_0=ruleSimpleTypeRef();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"implements",
                    	      	        		lv_implements_9_0, 
                    	      	        		"SimpleTypeRef", 
                    	      	        		currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleUnit486); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:345:1: ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:347:1: ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:347:1: ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:348:2: ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:351:2: ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:352:3: ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )*
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:352:3: ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )*
            loop11:
            do {
                int alt11=7;
                int LA11_0 = input.LA(1);

                if ( LA11_0 ==KEYWORD_55 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                    alt11=1;
                }
                else if ( LA11_0 ==KEYWORD_54 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                    alt11=2;
                }
                else if ( LA11_0 ==KEYWORD_60 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                    alt11=3;
                }
                else if ( (LA11_0==KEYWORD_61) ) {
                    int LA11_5 = input.LA(2);

                    if ( LA11_5 ==KEYWORD_11 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                        alt11=4;
                    }
                    else if ( LA11_5 ==KEYWORD_41 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                        alt11=5;
                    }


                }
                else if ( LA11_0 ==RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                    alt11=6;
                }
                else if ( LA11_0 ==RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                    alt11=6;
                }
                else if ( LA11_0 ==KEYWORD_50 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                    alt11=6;
                }
                else if ( LA11_0 ==KEYWORD_59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                    alt11=6;
                }


                switch (alt11) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:354:4: ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:354:4: ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:355:5: {...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:355:101: ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:356:6: ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:359:6: ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:360:2: KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_55,FollowSets000.FOLLOW_KEYWORD_55_in_ruleUnit540); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit551); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:369:1: ( (lv_sourceLocation_14_0= rulePath ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:370:1: (lv_sourceLocation_14_0= rulePath )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:370:1: (lv_sourceLocation_14_0= rulePath )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:371:3: lv_sourceLocation_14_0= rulePath
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_rulePath_in_ruleUnit572);
            	    lv_sourceLocation_14_0=rulePath();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"sourceLocation",
            	      	        		lv_sourceLocation_14_0, 
            	      	        		"Path", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit583); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:405:4: ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:405:4: ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:406:5: {...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:406:101: ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:407:6: ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:410:6: ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:411:2: KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_54,FollowSets000.FOLLOW_KEYWORD_54_in_ruleUnit646); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit657); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:420:1: ( (lv_outputLocation_18_0= rulePath ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:421:1: (lv_outputLocation_18_0= rulePath )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:421:1: (lv_outputLocation_18_0= rulePath )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:422:3: lv_outputLocation_18_0= rulePath
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_rulePath_in_ruleUnit678);
            	    lv_outputLocation_18_0=rulePath();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"outputLocation",
            	      	        		lv_outputLocation_18_0, 
            	      	        		"Path", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit689); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:456:4: ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:456:4: ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:457:5: {...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:457:101: ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:458:6: ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:461:6: ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+
            	    int cnt7=0;
            	    loop7:
            	    do {
            	        int alt7=2;
            	        int LA7_0 = input.LA(1);

            	        if ( (LA7_0==KEYWORD_60) ) {
            	            int LA7_4 = input.LA(2);

            	            if ( (synpred9()) ) {
            	                alt7=1;
            	            }


            	        }


            	        switch (alt7) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:462:2: KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12
            	    	    {
            	    	    match(input,KEYWORD_60,FollowSets000.FOLLOW_KEYWORD_60_in_ruleUnit752); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0(), null); 
            	    	          
            	    	    }
            	    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit763); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_2_1(), null); 
            	    	          
            	    	    }
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:471:1: ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) )
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:472:1: (lv_providedCapabilities_22_0= ruleProvidedCapability )
            	    	    {
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:472:1: (lv_providedCapabilities_22_0= ruleProvidedCapability )
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:473:3: lv_providedCapabilities_22_0= ruleProvidedCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_ruleProvidedCapability_in_ruleUnit784);
            	    	    lv_providedCapabilities_22_0=ruleProvidedCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        try {
            	    	      	       		add(
            	    	      	       			current, 
            	    	      	       			"providedCapabilities",
            	    	      	        		lv_providedCapabilities_22_0, 
            	    	      	        		"ProvidedCapability", 
            	    	      	        		currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }

            	    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit795); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt7 >= 1 ) break loop7;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(7, input);
            	                throw eee;
            	        }
            	        cnt7++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:507:4: ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:507:4: ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:508:5: {...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:508:101: ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:509:6: ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:512:6: ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+
            	    int cnt8=0;
            	    loop8:
            	    do {
            	        int alt8=2;
            	        int LA8_0 = input.LA(1);

            	        if ( (LA8_0==KEYWORD_61) ) {
            	            int LA8_5 = input.LA(2);

            	            if ( (synpred11()) ) {
            	                alt8=1;
            	            }


            	        }


            	        switch (alt8) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:513:2: KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12
            	    	    {
            	    	    match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_ruleUnit859); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0(), null); 
            	    	          
            	    	    }
            	    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit870); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_3_1(), null); 
            	    	          
            	    	    }
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:522:1: ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) )
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:523:1: (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability )
            	    	    {
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:523:1: (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability )
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:524:3: lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_ruleAliasedRequiredCapability_in_ruleUnit891);
            	    	    lv_requiredCapabilities_26_0=ruleAliasedRequiredCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        try {
            	    	      	       		add(
            	    	      	       			current, 
            	    	      	       			"requiredCapabilities",
            	    	      	        		lv_requiredCapabilities_26_0, 
            	    	      	        		"AliasedRequiredCapability", 
            	    	      	        		currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }

            	    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit902); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt8 >= 1 ) break loop8;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(8, input);
            	                throw eee;
            	        }
            	        cnt8++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:558:4: ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:558:4: ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:559:5: {...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:559:101: ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:560:6: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:563:6: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+
            	    int cnt9=0;
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==KEYWORD_61) ) {
            	            int LA9_5 = input.LA(2);

            	            if ( (synpred13()) ) {
            	                alt9=1;
            	            }


            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:564:2: KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12
            	    	    {
            	    	    match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_ruleUnit966); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0(), null); 
            	    	          
            	    	    }
            	    	    match(input,KEYWORD_41,FollowSets000.FOLLOW_KEYWORD_41_in_ruleUnit977); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1(), null); 
            	    	          
            	    	    }
            	    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit988); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_4_2(), null); 
            	    	          
            	    	    }
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:578:1: ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) )
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:579:1: (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability )
            	    	    {
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:579:1: (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability )
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:580:3: lv_metaRequiredCapabilities_31_0= ruleRequiredCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_ruleRequiredCapability_in_ruleUnit1009);
            	    	    lv_metaRequiredCapabilities_31_0=ruleRequiredCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        try {
            	    	      	       		add(
            	    	      	       			current, 
            	    	      	       			"metaRequiredCapabilities",
            	    	      	        		lv_metaRequiredCapabilities_31_0, 
            	    	      	        		"RequiredCapability", 
            	    	      	        		currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }

            	    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit1020); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt9 >= 1 ) break loop9;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(9, input);
            	                throw eee;
            	        }
            	        cnt9++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:614:4: ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:614:4: ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:615:5: {...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:615:101: ( ( (lv_functions_33_0= ruleFunction ) )+ )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:616:6: ( (lv_functions_33_0= ruleFunction ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:619:6: ( (lv_functions_33_0= ruleFunction ) )+
            	    int cnt10=0;
            	    loop10:
            	    do {
            	        int alt10=2;
            	        switch ( input.LA(1) ) {
            	        case RULE_DOCUMENTATION:
            	            {
            	            int LA10_6 = input.LA(2);

            	            if ( (synpred15()) ) {
            	                alt10=1;
            	            }


            	            }
            	            break;
            	        case RULE_ID:
            	            {
            	            int LA10_7 = input.LA(2);

            	            if ( (synpred15()) ) {
            	                alt10=1;
            	            }


            	            }
            	            break;
            	        case KEYWORD_50:
            	            {
            	            int LA10_8 = input.LA(2);

            	            if ( (synpred15()) ) {
            	                alt10=1;
            	            }


            	            }
            	            break;
            	        case KEYWORD_59:
            	            {
            	            int LA10_9 = input.LA(2);

            	            if ( (synpred15()) ) {
            	                alt10=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt10) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:620:1: (lv_functions_33_0= ruleFunction )
            	    	    {
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:620:1: (lv_functions_33_0= ruleFunction )
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:621:3: lv_functions_33_0= ruleFunction
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_ruleFunction_in_ruleUnit1093);
            	    	    lv_functions_33_0=ruleFunction();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        try {
            	    	      	       		add(
            	    	      	       			current, 
            	    	      	       			"functions",
            	    	      	        		lv_functions_33_0, 
            	    	      	        		"Function", 
            	    	      	        		currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt10 >= 1 ) break loop10;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(10, input);
            	                throw eee;
            	        }
            	        cnt10++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            }

            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleUnit1144); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end ruleUnit


    // $ANTLR start entryRuleProvidedCapability
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:673:1: entryRuleProvidedCapability returns [EObject current=null] : iv_ruleProvidedCapability= ruleProvidedCapability EOF ;
    public final EObject entryRuleProvidedCapability() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProvidedCapability = null;


         
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()
        		);
        	
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:679:2: (iv_ruleProvidedCapability= ruleProvidedCapability EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:680:2: iv_ruleProvidedCapability= ruleProvidedCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getProvidedCapabilityRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability1189);
            iv_ruleProvidedCapability=ruleProvidedCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleProvidedCapability; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleProvidedCapability1199); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleProvidedCapability


    // $ANTLR start ruleProvidedCapability
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:690:1: ruleProvidedCapability returns [EObject current=null] : ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )? ) ;
    public final EObject ruleProvidedCapability() throws RecognitionException {
        EObject current = null;

        Token lv_nameSpace_1_0=null;
        Token lv_name_11_0=null;
        Token lv_version_15_0=null;
        EObject lv_condExpr_7_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()
        		);
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:698:6: ( ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )? ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:699:1: ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )? )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:699:1: ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )? )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:699:2: () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )?
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:699:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:700:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:713:2: ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_ID) ) {
                alt12=1;
            }
            else if ( (LA12_0==KEYWORD_47) ) {
                alt12=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("713:2: ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 )", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:713:3: ( (lv_nameSpace_1_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:713:3: ( (lv_nameSpace_1_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:714:1: (lv_nameSpace_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:714:1: (lv_nameSpace_1_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:715:3: lv_nameSpace_1_0= RULE_ID
                    {
                    lv_nameSpace_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleProvidedCapability1258); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0(), "nameSpace"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"nameSpace",
                      	        		lv_nameSpace_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:739:2: KEYWORD_47
                    {
                    match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleProvidedCapability1280); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:743:2: ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==KEYWORD_18) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:744:2: KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20
                    {
                    match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleProvidedCapability1293); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:748:1: ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:750:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:750:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:751:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?)
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:754:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?)
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:755:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:755:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+
                    int cnt13=0;
                    loop13:
                    do {
                        int alt13=4;
                        int LA13_0 = input.LA(1);

                        if ( LA13_0 ==KEYWORD_48 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                            alt13=1;
                        }
                        else if ( LA13_0 ==KEYWORD_45 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                            alt13=2;
                        }
                        else if ( LA13_0 ==KEYWORD_58 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                            alt13=3;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:757:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:757:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:758:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                    	        if (backtracking>0) {failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleProvidedCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:758:117: ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:759:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:762:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:763:2: KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12
                    	    {
                    	    match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_ruleProvidedCapability1347); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0(), null); 
                    	          
                    	    }
                    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleProvidedCapability1358); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:772:1: ( (lv_condExpr_7_0= ruleExpression ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:773:1: (lv_condExpr_7_0= ruleExpression )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:773:1: (lv_condExpr_7_0= ruleExpression )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:774:3: lv_condExpr_7_0= ruleExpression
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleProvidedCapability1379);
                    	    lv_condExpr_7_0=ruleExpression();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        try {
                    	      	       		set(
                    	      	       			current, 
                    	      	       			"condExpr",
                    	      	        		lv_condExpr_7_0, 
                    	      	        		"Expression", 
                    	      	        		currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleProvidedCapability1390); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3(), null); 
                    	          
                    	    }

                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:808:4: ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:808:4: ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:809:5: {...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                    	        if (backtracking>0) {failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleProvidedCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:809:117: ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:810:6: ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:813:6: ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:814:2: KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12
                    	    {
                    	    match(input,KEYWORD_45,FollowSets000.FOLLOW_KEYWORD_45_in_ruleProvidedCapability1453); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0(), null); 
                    	          
                    	    }
                    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleProvidedCapability1464); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:823:1: ( (lv_name_11_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:824:1: (lv_name_11_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:824:1: (lv_name_11_0= RULE_ID )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:825:3: lv_name_11_0= RULE_ID
                    	    {
                    	    lv_name_11_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleProvidedCapability1481); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0(), "name"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		set(
                    	      	       			current, 
                    	      	       			"name",
                    	      	        		lv_name_11_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleProvidedCapability1497); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3(), null); 
                    	          
                    	    }

                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:859:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:859:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:860:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                    	        if (backtracking>0) {failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleProvidedCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)");
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:860:117: ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:861:6: ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:864:6: ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:865:2: KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12
                    	    {
                    	    match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_ruleProvidedCapability1560); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0(), null); 
                    	          
                    	    }
                    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleProvidedCapability1571); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:874:1: ( (lv_version_15_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:875:1: (lv_version_15_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:875:1: (lv_version_15_0= RULE_ID )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:876:3: lv_version_15_0= RULE_ID
                    	    {
                    	    lv_version_15_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleProvidedCapability1588); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0(), "version"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		set(
                    	      	       			current, 
                    	      	       			"version",
                    	      	        		lv_version_15_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleProvidedCapability1604); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3(), null); 
                    	          
                    	    }

                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt13 >= 1 ) break loop13;
                    	    if (backtracking>0) {failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(13, input);
                                throw eee;
                        }
                        cnt13++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()) ) {
                        if (backtracking>0) {failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleProvidedCapability", "getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1())");
                    }

                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());

                    }

                    match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleProvidedCapability1661); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2(), null); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end ruleProvidedCapability


    // $ANTLR start entryRuleAliasedRequiredCapability
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:934:1: entryRuleAliasedRequiredCapability returns [EObject current=null] : iv_ruleAliasedRequiredCapability= ruleAliasedRequiredCapability EOF ;
    public final EObject entryRuleAliasedRequiredCapability() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasedRequiredCapability = null;


         
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()
        		);
        	
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:940:2: (iv_ruleAliasedRequiredCapability= ruleAliasedRequiredCapability EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:941:2: iv_ruleAliasedRequiredCapability= ruleAliasedRequiredCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAliasedRequiredCapabilityRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAliasedRequiredCapability_in_entryRuleAliasedRequiredCapability1708);
            iv_ruleAliasedRequiredCapability=ruleAliasedRequiredCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAliasedRequiredCapability; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAliasedRequiredCapability1718); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleAliasedRequiredCapability


    // $ANTLR start ruleAliasedRequiredCapability
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:951:1: ruleAliasedRequiredCapability returns [EObject current=null] : ( ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) ) ;
    public final EObject ruleAliasedRequiredCapability() throws RecognitionException {
        EObject current = null;

        Token lv_nameSpace_0_0=null;
        Token lv_name_2_0=null;
        Token lv_alias_4_0=null;
        Token lv_greedy_11_0=null;
        Token lv_min_15_0=null;
        Token lv_max_19_0=null;
        Token lv_versionRange_23_0=null;
        EObject lv_condExpr_9_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()
        		);
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:959:6: ( ( ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:960:1: ( ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:960:1: ( ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:960:2: ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:960:2: ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_ID) ) {
                alt15=1;
            }
            else if ( (LA15_0==KEYWORD_47) ) {
                alt15=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("960:2: ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 )", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:960:3: ( (lv_nameSpace_0_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:960:3: ( (lv_nameSpace_0_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:961:1: (lv_nameSpace_0_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:961:1: (lv_nameSpace_0_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:962:3: lv_nameSpace_0_0= RULE_ID
                    {
                    lv_nameSpace_0_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1765); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0(), "nameSpace"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"nameSpace",
                      	        		lv_nameSpace_0_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:986:2: KEYWORD_47
                    {
                    match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleAliasedRequiredCapability1787); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:990:2: ( (lv_name_2_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:991:1: (lv_name_2_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:991:1: (lv_name_2_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:992:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1805); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_2_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1014:2: ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==KEYWORD_35) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1015:2: KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) )
                    {
                    match(input,KEYWORD_35,FollowSets000.FOLLOW_KEYWORD_35_in_ruleAliasedRequiredCapability1822); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1019:1: ( (lv_alias_4_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1020:1: (lv_alias_4_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1020:1: (lv_alias_4_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1021:3: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1839); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0(), "alias"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"alias",
                      	        		lv_alias_4_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1043:4: ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1044:2: KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20
            {
            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleAliasedRequiredCapability1858); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1048:1: ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1050:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1050:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1051:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1054:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1055:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )*
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1055:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )*
            loop17:
            do {
                int alt17=6;
                int LA17_0 = input.LA(1);

                if ( LA17_0 ==KEYWORD_48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                    alt17=1;
                }
                else if ( LA17_0 ==KEYWORD_53 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                    alt17=2;
                }
                else if ( LA17_0 ==KEYWORD_65 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                    alt17=3;
                }
                else if ( LA17_0 ==KEYWORD_64 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                    alt17=4;
                }
                else if ( LA17_0 ==KEYWORD_58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                    alt17=5;
                }


                switch (alt17) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1057:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1057:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1058:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1058:124: ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1059:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1062:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1063:2: KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_ruleAliasedRequiredCapability1912); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability1923); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1072:1: ( (lv_condExpr_9_0= ruleExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1073:1: (lv_condExpr_9_0= ruleExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1073:1: (lv_condExpr_9_0= ruleExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1074:3: lv_condExpr_9_0= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleAliasedRequiredCapability1944);
            	    lv_condExpr_9_0=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"condExpr",
            	      	        		lv_condExpr_9_0, 
            	      	        		"Expression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability1955); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1108:4: ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1108:4: ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1109:5: {...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1109:124: ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1110:6: ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1113:6: ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1113:7: ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1113:7: ( (lv_greedy_11_0= KEYWORD_53 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1114:1: (lv_greedy_11_0= KEYWORD_53 )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1114:1: (lv_greedy_11_0= KEYWORD_53 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1115:3: lv_greedy_11_0= KEYWORD_53
            	    {
            	    lv_greedy_11_0=(Token)input.LT(1);
            	    match(input,KEYWORD_53,FollowSets000.FOLLOW_KEYWORD_53_in_ruleAliasedRequiredCapability2026); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0(), "greedy"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "greedy", true, "greedy", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2050); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1147:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1147:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1148:5: {...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1148:124: ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1149:6: ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1152:6: ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1153:2: KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_65,FollowSets000.FOLLOW_KEYWORD_65_in_ruleAliasedRequiredCapability2113); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2124); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1162:1: ( (lv_min_15_0= RULE_INT ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1163:1: (lv_min_15_0= RULE_INT )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1163:1: (lv_min_15_0= RULE_INT )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1164:3: lv_min_15_0= RULE_INT
            	    {
            	    lv_min_15_0=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleAliasedRequiredCapability2141); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0(), "min"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"min",
            	      	        		lv_min_15_0, 
            	      	        		"INT", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2157); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1198:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1198:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1199:5: {...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1199:124: ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1200:6: ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1203:6: ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1204:2: KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_64,FollowSets000.FOLLOW_KEYWORD_64_in_ruleAliasedRequiredCapability2220); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2231); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1213:1: ( (lv_max_19_0= RULE_INT ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1214:1: (lv_max_19_0= RULE_INT )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1214:1: (lv_max_19_0= RULE_INT )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1215:3: lv_max_19_0= RULE_INT
            	    {
            	    lv_max_19_0=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleAliasedRequiredCapability2248); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0(), "max"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"max",
            	      	        		lv_max_19_0, 
            	      	        		"INT", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2264); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1249:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1249:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1250:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1250:124: ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1251:6: ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1254:6: ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1255:2: KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_ruleAliasedRequiredCapability2327); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2338); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1264:1: ( (lv_versionRange_23_0= RULE_ID ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1265:1: (lv_versionRange_23_0= RULE_ID )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1265:1: (lv_versionRange_23_0= RULE_ID )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1266:3: lv_versionRange_23_0= RULE_ID
            	    {
            	    lv_versionRange_23_0=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability2355); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0(), "versionRange"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"versionRange",
            	      	        		lv_versionRange_23_0, 
            	      	        		"ID", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2371); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            }

            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleAliasedRequiredCapability2422); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2(), null); 
                  
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end ruleAliasedRequiredCapability


    // $ANTLR start entryRuleRequiredCapability
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1323:1: entryRuleRequiredCapability returns [EObject current=null] : iv_ruleRequiredCapability= ruleRequiredCapability EOF ;
    public final EObject entryRuleRequiredCapability() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRequiredCapability = null;


         
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()
        		);
        	
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1329:2: (iv_ruleRequiredCapability= ruleRequiredCapability EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1330:2: iv_ruleRequiredCapability= ruleRequiredCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRequiredCapabilityRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability2468);
            iv_ruleRequiredCapability=ruleRequiredCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRequiredCapability; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleRequiredCapability2478); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleRequiredCapability


    // $ANTLR start ruleRequiredCapability
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1340:1: ruleRequiredCapability returns [EObject current=null] : ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) ) ;
    public final EObject ruleRequiredCapability() throws RecognitionException {
        EObject current = null;

        Token lv_nameSpace_1_0=null;
        Token lv_name_3_0=null;
        Token lv_greedy_10_0=null;
        Token lv_min_14_0=null;
        Token lv_max_18_0=null;
        Token lv_versionRange_22_0=null;
        EObject lv_condExpr_8_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()
        		);
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1348:6: ( ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1349:1: ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1349:1: ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1349:2: () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1349:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1350:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1363:2: ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_ID) ) {
                alt18=1;
            }
            else if ( (LA18_0==KEYWORD_47) ) {
                alt18=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("1363:2: ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 )", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1363:3: ( (lv_nameSpace_1_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1363:3: ( (lv_nameSpace_1_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1364:1: (lv_nameSpace_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1364:1: (lv_nameSpace_1_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1365:3: lv_nameSpace_1_0= RULE_ID
                    {
                    lv_nameSpace_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleRequiredCapability2537); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0(), "nameSpace"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"nameSpace",
                      	        		lv_nameSpace_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1389:2: KEYWORD_47
                    {
                    match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleRequiredCapability2559); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1393:2: ( (lv_name_3_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1394:1: (lv_name_3_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1394:1: (lv_name_3_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1395:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleRequiredCapability2577); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_3_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1417:2: ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1418:2: KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20
            {
            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleRequiredCapability2594); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1422:1: ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1424:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1424:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1425:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1428:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1429:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )*
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1429:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )*
            loop19:
            do {
                int alt19=6;
                int LA19_0 = input.LA(1);

                if ( LA19_0 ==KEYWORD_48 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                    alt19=1;
                }
                else if ( LA19_0 ==KEYWORD_53 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                    alt19=2;
                }
                else if ( LA19_0 ==KEYWORD_65 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                    alt19=3;
                }
                else if ( LA19_0 ==KEYWORD_64 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                    alt19=4;
                }
                else if ( LA19_0 ==KEYWORD_58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                    alt19=5;
                }


                switch (alt19) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1431:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1431:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1432:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1432:117: ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1433:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1436:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1437:2: KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_ruleRequiredCapability2648); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleRequiredCapability2659); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1446:1: ( (lv_condExpr_8_0= ruleExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1447:1: (lv_condExpr_8_0= ruleExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1447:1: (lv_condExpr_8_0= ruleExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1448:3: lv_condExpr_8_0= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleRequiredCapability2680);
            	    lv_condExpr_8_0=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"condExpr",
            	      	        		lv_condExpr_8_0, 
            	      	        		"Expression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability2691); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1482:4: ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1482:4: ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1483:5: {...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1483:117: ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1484:6: ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1487:6: ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1487:7: ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1487:7: ( (lv_greedy_10_0= KEYWORD_53 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1488:1: (lv_greedy_10_0= KEYWORD_53 )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1488:1: (lv_greedy_10_0= KEYWORD_53 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1489:3: lv_greedy_10_0= KEYWORD_53
            	    {
            	    lv_greedy_10_0=(Token)input.LT(1);
            	    match(input,KEYWORD_53,FollowSets000.FOLLOW_KEYWORD_53_in_ruleRequiredCapability2762); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0(), "greedy"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "greedy", true, "greedy", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability2786); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1521:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1521:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1522:5: {...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1522:117: ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1523:6: ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1526:6: ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1527:2: KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_65,FollowSets000.FOLLOW_KEYWORD_65_in_ruleRequiredCapability2849); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleRequiredCapability2860); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1536:1: ( (lv_min_14_0= RULE_INT ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1537:1: (lv_min_14_0= RULE_INT )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1537:1: (lv_min_14_0= RULE_INT )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1538:3: lv_min_14_0= RULE_INT
            	    {
            	    lv_min_14_0=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleRequiredCapability2877); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0(), "min"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"min",
            	      	        		lv_min_14_0, 
            	      	        		"INT", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability2893); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1572:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1572:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1573:5: {...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1573:117: ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1574:6: ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1577:6: ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1578:2: KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_64,FollowSets000.FOLLOW_KEYWORD_64_in_ruleRequiredCapability2956); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleRequiredCapability2967); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1587:1: ( (lv_max_18_0= RULE_INT ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1588:1: (lv_max_18_0= RULE_INT )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1588:1: (lv_max_18_0= RULE_INT )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1589:3: lv_max_18_0= RULE_INT
            	    {
            	    lv_max_18_0=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleRequiredCapability2984); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0(), "max"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"max",
            	      	        		lv_max_18_0, 
            	      	        		"INT", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability3000); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1623:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1623:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1624:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1624:117: ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1625:6: ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1628:6: ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1629:2: KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_ruleRequiredCapability3063); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleRequiredCapability3074); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1638:1: ( (lv_versionRange_22_0= RULE_ID ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1639:1: (lv_versionRange_22_0= RULE_ID )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1639:1: (lv_versionRange_22_0= RULE_ID )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1640:3: lv_versionRange_22_0= RULE_ID
            	    {
            	    lv_versionRange_22_0=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleRequiredCapability3091); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0(), "versionRange"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"versionRange",
            	      	        		lv_versionRange_22_0, 
            	      	        		"ID", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability3107); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            }

            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleRequiredCapability3158); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2(), null); 
                  
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end ruleRequiredCapability


    // $ANTLR start entryRulePath
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1697:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1701:1: (iv_rulePath= rulePath EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1702:2: iv_rulePath= rulePath EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPathRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePath_in_entryRulePath3205);
            iv_rulePath=rulePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePath3216); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end entryRulePath


    // $ANTLR start rulePath
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1712:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_QID_2 = null;

        AntlrDatatypeRuleToken this_QID_4 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1718:6: ( (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1719:1: (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1719:1: (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_STRING) ) {
                alt23=1;
            }
            else if ( (LA23_0==KEYWORD_10||LA23_0==RULE_ID) ) {
                alt23=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("1719:1: (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) )", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1719:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FollowSets000.FOLLOW_RULE_STRING_in_rulePath3260); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1727:6: ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1727:6: ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1727:7: (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )?
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1727:7: (kw= KEYWORD_10 )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==KEYWORD_10) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1728:2: kw= KEYWORD_10
                            {
                            kw=(Token)input.LT(1);
                            match(input,KEYWORD_10,FollowSets000.FOLLOW_KEYWORD_10_in_rulePath3286); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_0(), null); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleQID_in_rulePath3310);
                    this_QID_2=ruleQID();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_QID_2);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1744:1: (kw= KEYWORD_10 this_QID_4= ruleQID )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==KEYWORD_10) ) {
                            int LA21_1 = input.LA(2);

                            if ( (LA21_1==RULE_ID) ) {
                                alt21=1;
                            }


                        }


                        switch (alt21) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1745:2: kw= KEYWORD_10 this_QID_4= ruleQID
                    	    {
                    	    kw=(Token)input.LT(1);
                    	    match(input,KEYWORD_10,FollowSets000.FOLLOW_KEYWORD_10_in_rulePath3329); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              current.merge(kw);
                    	              createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0(), null); 
                    	          
                    	    }
                    	    if ( backtracking==0 ) {
                    	       
                    	              currentNode=createCompositeNode(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1(), currentNode); 
                    	          
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleQID_in_rulePath3351);
                    	    this_QID_4=ruleQID();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      		current.merge(this_QID_4);
                    	          
                    	    }
                    	    if ( backtracking==0 ) {
                    	       
                    	              currentNode = currentNode.getParent();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1761:3: (kw= KEYWORD_10 )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==KEYWORD_10) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1762:2: kw= KEYWORD_10
                            {
                            kw=(Token)input.LT(1);
                            match(input,KEYWORD_10,FollowSets000.FOLLOW_KEYWORD_10_in_rulePath3372); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_3(), null); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end rulePath


    // $ANTLR start entryRuleParameterList
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1778:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1779:2: (iv_ruleParameterList= ruleParameterList EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1780:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParameterListRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_entryRuleParameterList3418);
            iv_ruleParameterList=ruleParameterList();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleParameterList3428); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParameterList


    // $ANTLR start ruleParameterList
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1787:1: ruleParameterList returns [EObject current=null] : ( ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )* ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        EObject lv_parameters_0_0 = null;

        EObject lv_parameters_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1792:6: ( ( ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1793:1: ( ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1793:1: ( ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1793:2: ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )*
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1793:2: ( (lv_parameters_0_0= ruleFirstParameter ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1794:1: (lv_parameters_0_0= ruleFirstParameter )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1794:1: (lv_parameters_0_0= ruleFirstParameter )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1795:3: lv_parameters_0_0= ruleFirstParameter
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleFirstParameter_in_ruleParameterList3474);
            lv_parameters_0_0=ruleFirstParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getParameterListRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		add(
              	       			current, 
              	       			"parameters",
              	        		lv_parameters_0_0, 
              	        		"FirstParameter", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1817:2: ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==KEYWORD_7) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1818:2: KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) )
            	    {
            	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleParameterList3486); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getParameterListAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1822:1: ( (lv_parameters_2_0= ruleFirstParameter ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1823:1: (lv_parameters_2_0= ruleFirstParameter )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1823:1: (lv_parameters_2_0= ruleFirstParameter )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1824:3: lv_parameters_2_0= ruleFirstParameter
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleFirstParameter_in_ruleParameterList3507);
            	    lv_parameters_2_0=ruleFirstParameter();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getParameterListRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		add(
            	      	       			current, 
            	      	       			"parameters",
            	      	        		lv_parameters_2_0, 
            	      	        		"FirstParameter", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParameterList


    // $ANTLR start entryRuleFirstParameter
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1854:1: entryRuleFirstParameter returns [EObject current=null] : iv_ruleFirstParameter= ruleFirstParameter EOF ;
    public final EObject entryRuleFirstParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFirstParameter = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1855:2: (iv_ruleFirstParameter= ruleFirstParameter EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1856:2: iv_ruleFirstParameter= ruleFirstParameter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFirstParameterRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFirstParameter_in_entryRuleFirstParameter3544);
            iv_ruleFirstParameter=ruleFirstParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFirstParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFirstParameter3554); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFirstParameter


    // $ANTLR start ruleFirstParameter
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1863:1: ruleFirstParameter returns [EObject current=null] : (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter ) ;
    public final EObject ruleFirstParameter() throws RecognitionException {
        EObject current = null;

        EObject this_ClosureParameter_0 = null;

        EObject this_Parameter_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1868:6: ( (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1869:1: (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1869:1: (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter )
            int alt25=2;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1870:2: this_ClosureParameter_0= ruleClosureParameter
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleClosureParameter_in_ruleFirstParameter3604);
                    this_ClosureParameter_0=ruleClosureParameter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ClosureParameter_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1883:2: this_Parameter_1= ruleParameter
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParameter_in_ruleFirstParameter3634);
                    this_Parameter_1=ruleParameter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_Parameter_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFirstParameter


    // $ANTLR start entryRuleParameter
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1902:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1903:2: (iv_ruleParameter= ruleParameter EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1904:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleParameter_in_entryRuleParameter3668);
            iv_ruleParameter=ruleParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleParameter3678); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParameter


    // $ANTLR start ruleParameter
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1911:1: ruleParameter returns [EObject current=null] : ( (lv_expr_0_0= ruleExpression ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1916:6: ( ( (lv_expr_0_0= ruleExpression ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1917:1: ( (lv_expr_0_0= ruleExpression ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1917:1: ( (lv_expr_0_0= ruleExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1918:1: (lv_expr_0_0= ruleExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1918:1: (lv_expr_0_0= ruleExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1919:3: lv_expr_0_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleParameter3723);
            lv_expr_0_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_0_0, 
              	        		"Expression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParameter


    // $ANTLR start entryRuleClosureParameter
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1949:1: entryRuleClosureParameter returns [EObject current=null] : iv_ruleClosureParameter= ruleClosureParameter EOF ;
    public final EObject entryRuleClosureParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClosureParameter = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1950:2: (iv_ruleClosureParameter= ruleClosureParameter EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1951:2: iv_ruleClosureParameter= ruleClosureParameter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getClosureParameterRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureParameter_in_entryRuleClosureParameter3757);
            iv_ruleClosureParameter=ruleClosureParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleClosureParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleClosureParameter3767); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleClosureParameter


    // $ANTLR start ruleClosureParameter
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1958:1: ruleClosureParameter returns [EObject current=null] : ( (lv_expr_0_0= ruleClosureExpression ) ) ;
    public final EObject ruleClosureParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1963:6: ( ( (lv_expr_0_0= ruleClosureExpression ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1964:1: ( (lv_expr_0_0= ruleClosureExpression ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1964:1: ( (lv_expr_0_0= ruleClosureExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1965:1: (lv_expr_0_0= ruleClosureExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1965:1: (lv_expr_0_0= ruleClosureExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1966:3: lv_expr_0_0= ruleClosureExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureExpression_in_ruleClosureParameter3812);
            lv_expr_0_0=ruleClosureExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getClosureParameterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_0_0, 
              	        		"ClosureExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleClosureParameter


    // $ANTLR start entryRuleParameterDeclaration
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1996:1: entryRuleParameterDeclaration returns [EObject current=null] : iv_ruleParameterDeclaration= ruleParameterDeclaration EOF ;
    public final EObject entryRuleParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterDeclaration = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1997:2: (iv_ruleParameterDeclaration= ruleParameterDeclaration EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1998:2: iv_ruleParameterDeclaration= ruleParameterDeclaration EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParameterDeclarationRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_entryRuleParameterDeclaration3846);
            iv_ruleParameterDeclaration=ruleParameterDeclaration();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParameterDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleParameterDeclaration3856); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParameterDeclaration


    // $ANTLR start ruleParameterDeclaration
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2005:1: ruleParameterDeclaration returns [EObject current=null] : ( ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleParameterDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        EObject lv_type_0_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2010:6: ( ( ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2011:1: ( ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2011:1: ( ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2011:2: ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2011:2: ( (lv_type_0_0= ruleTypeRef ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==KEYWORD_3) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_ID) ) {
                int LA26_2 = input.LA(2);

                if ( (LA26_2==KEYWORD_13||LA26_2==RULE_ID) ) {
                    alt26=1;
                }
            }
            switch (alt26) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2012:1: (lv_type_0_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2012:1: (lv_type_0_0= ruleTypeRef )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2013:3: lv_type_0_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleParameterDeclaration3902);
                    lv_type_0_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getParameterDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"type",
                      	        		lv_type_0_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2035:3: ( (lv_name_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2036:1: (lv_name_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2036:1: (lv_name_1_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2037:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleParameterDeclaration3920); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getParameterDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_1_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParameterDeclaration


    // $ANTLR start entryRuleFunction
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2067:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2068:2: (iv_ruleFunction= ruleFunction EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2069:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFunctionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFunction_in_entryRuleFunction3960);
            iv_ruleFunction=ruleFunction();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFunction3970); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFunction


    // $ANTLR start ruleFunction
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2076:1: ruleFunction returns [EObject current=null] : ( ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) ) ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token lv_documentation_0_0=null;
        Token lv_visibility_1_0=null;
        Token lv_final_2_0=null;
        Token lv_name_5_0=null;
        Token lv_varArgs_11_0=null;
        Token lv_varArgs_13_0=null;
        EObject lv_returnType_4_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_parameters_14_0 = null;

        EObject lv_guard_17_0 = null;

        EObject lv_funcExpr_19_0 = null;

        EObject lv_funcExpr_21_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2081:6: ( ( ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2082:1: ( ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2082:1: ( ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2082:2: ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2082:2: ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_DOCUMENTATION) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2083:1: (lv_documentation_0_0= RULE_DOCUMENTATION )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2083:1: (lv_documentation_0_0= RULE_DOCUMENTATION )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2084:3: lv_documentation_0_0= RULE_DOCUMENTATION
                    {
                    lv_documentation_0_0=(Token)input.LT(1);
                    match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_RULE_DOCUMENTATION_in_ruleFunction4012); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0(), "documentation"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"documentation",
                      	        		lv_documentation_0_0, 
                      	        		"DOCUMENTATION", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2106:3: ( (lv_visibility_1_0= RULE_ID ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_ID) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2107:1: (lv_visibility_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2107:1: (lv_visibility_1_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2108:3: lv_visibility_1_0= RULE_ID
                    {
                    lv_visibility_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleFunction4035); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0(), "visibility"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"visibility",
                      	        		lv_visibility_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2130:3: ( (lv_final_2_0= KEYWORD_50 ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==KEYWORD_50) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2131:1: (lv_final_2_0= KEYWORD_50 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2131:1: (lv_final_2_0= KEYWORD_50 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2132:3: lv_final_2_0= KEYWORD_50
                    {
                    lv_final_2_0=(Token)input.LT(1);
                    match(input,KEYWORD_50,FollowSets000.FOLLOW_KEYWORD_50_in_ruleFunction4060); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0(), "final"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "final", true, "final", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,KEYWORD_59,FollowSets000.FOLLOW_KEYWORD_59_in_ruleFunction4085); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionAccess().getFunctionKeyword_3(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2157:1: ( (lv_returnType_4_0= ruleTypeRef ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==KEYWORD_3) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_ID) ) {
                int LA30_2 = input.LA(2);

                if ( (LA30_2==KEYWORD_13||LA30_2==RULE_ID) ) {
                    alt30=1;
                }
            }
            switch (alt30) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2158:1: (lv_returnType_4_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2158:1: (lv_returnType_4_0= ruleTypeRef )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2159:3: lv_returnType_4_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleFunction4106);
                    lv_returnType_4_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"returnType",
                      	        		lv_returnType_4_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2181:3: ( (lv_name_5_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2182:1: (lv_name_5_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2182:1: (lv_name_5_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2183:3: lv_name_5_0= RULE_ID
            {
            lv_name_5_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleFunction4124); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_5_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2205:2: ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==KEYWORD_3) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2206:2: KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4
                    {
                    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleFunction4141); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2210:1: ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )?
                    int alt33=3;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==KEYWORD_3||LA33_0==RULE_ID) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==KEYWORD_39) ) {
                        alt33=2;
                    }
                    switch (alt33) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2210:2: ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2210:2: ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2210:3: ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )?
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2210:3: ( (lv_parameters_7_0= ruleParameterDeclaration ) )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2211:1: (lv_parameters_7_0= ruleParameterDeclaration )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2211:1: (lv_parameters_7_0= ruleParameterDeclaration )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2212:3: lv_parameters_7_0= ruleParameterDeclaration
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleFunction4164);
                            lv_parameters_7_0=ruleParameterDeclaration();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		add(
                              	       			current, 
                              	       			"parameters",
                              	        		lv_parameters_7_0, 
                              	        		"ParameterDeclaration", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2234:2: ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )*
                            loop31:
                            do {
                                int alt31=2;
                                int LA31_0 = input.LA(1);

                                if ( (LA31_0==KEYWORD_7) ) {
                                    int LA31_1 = input.LA(2);

                                    if ( (LA31_1==KEYWORD_3||LA31_1==RULE_ID) ) {
                                        alt31=1;
                                    }


                                }


                                switch (alt31) {
                            	case 1 :
                            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2235:2: KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) )
                            	    {
                            	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleFunction4176); if (failed) return current;
                            	    if ( backtracking==0 ) {

                            	              createLeafNode(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0(), null); 
                            	          
                            	    }
                            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2239:1: ( (lv_parameters_9_0= ruleParameterDeclaration ) )
                            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2240:1: (lv_parameters_9_0= ruleParameterDeclaration )
                            	    {
                            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2240:1: (lv_parameters_9_0= ruleParameterDeclaration )
                            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2241:3: lv_parameters_9_0= ruleParameterDeclaration
                            	    {
                            	    if ( backtracking==0 ) {
                            	       
                            	      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0(), currentNode); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleFunction4197);
                            	    lv_parameters_9_0=ruleParameterDeclaration();
                            	    _fsp--;
                            	    if (failed) return current;
                            	    if ( backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	      	        }
                            	      	        try {
                            	      	       		add(
                            	      	       			current, 
                            	      	       			"parameters",
                            	      	        		lv_parameters_9_0, 
                            	      	        		"ParameterDeclaration", 
                            	      	        		currentNode);
                            	      	        } catch (ValueConverterException vce) {
                            	      				handleValueConverterException(vce);
                            	      	        }
                            	      	        currentNode = currentNode.getParent();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop31;
                                }
                            } while (true);

                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2263:4: ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )?
                            int alt32=2;
                            int LA32_0 = input.LA(1);

                            if ( (LA32_0==KEYWORD_7) ) {
                                alt32=1;
                            }
                            switch (alt32) {
                                case 1 :
                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2264:2: KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) )
                                    {
                                    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleFunction4211); if (failed) return current;
                                    if ( backtracking==0 ) {

                                              createLeafNode(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0(), null); 
                                          
                                    }
                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2268:1: ( (lv_varArgs_11_0= KEYWORD_39 ) )
                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2269:1: (lv_varArgs_11_0= KEYWORD_39 )
                                    {
                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2269:1: (lv_varArgs_11_0= KEYWORD_39 )
                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2270:3: lv_varArgs_11_0= KEYWORD_39
                                    {
                                    lv_varArgs_11_0=(Token)input.LT(1);
                                    match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleFunction4230); if (failed) return current;
                                    if ( backtracking==0 ) {

                                              createLeafNode(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0(), "varArgs"); 
                                          
                                    }
                                    if ( backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                                      	            associateNodeWithAstElement(currentNode, current);
                                      	        }
                                      	        
                                      	        try {
                                      	       		set(current, "varArgs", true, "...", lastConsumedNode);
                                      	        } catch (ValueConverterException vce) {
                                      				handleValueConverterException(vce);
                                      	        }
                                      	    
                                    }

                                    }


                                    }

                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2290:2: ( (lv_parameters_12_0= ruleParameterDeclaration ) )
                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2291:1: (lv_parameters_12_0= ruleParameterDeclaration )
                                    {
                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2291:1: (lv_parameters_12_0= ruleParameterDeclaration )
                                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2292:3: lv_parameters_12_0= ruleParameterDeclaration
                                    {
                                    if ( backtracking==0 ) {
                                       
                                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0(), currentNode); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleFunction4264);
                                    lv_parameters_12_0=ruleParameterDeclaration();
                                    _fsp--;
                                    if (failed) return current;
                                    if ( backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                                      	        }
                                      	        try {
                                      	       		add(
                                      	       			current, 
                                      	       			"parameters",
                                      	        		lv_parameters_12_0, 
                                      	        		"ParameterDeclaration", 
                                      	        		currentNode);
                                      	        } catch (ValueConverterException vce) {
                                      				handleValueConverterException(vce);
                                      	        }
                                      	        currentNode = currentNode.getParent();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2315:6: ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2315:6: ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2315:7: ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2315:7: ( (lv_varArgs_13_0= KEYWORD_39 ) )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2316:1: (lv_varArgs_13_0= KEYWORD_39 )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2316:1: (lv_varArgs_13_0= KEYWORD_39 )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2317:3: lv_varArgs_13_0= KEYWORD_39
                            {
                            lv_varArgs_13_0=(Token)input.LT(1);
                            match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleFunction4293); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0(), "varArgs"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "varArgs", true, "...", lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2337:2: ( (lv_parameters_14_0= ruleParameterDeclaration ) )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2338:1: (lv_parameters_14_0= ruleParameterDeclaration )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2338:1: (lv_parameters_14_0= ruleParameterDeclaration )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2339:3: lv_parameters_14_0= ruleParameterDeclaration
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleFunction4327);
                            lv_parameters_14_0=ruleParameterDeclaration();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		add(
                              	       			current, 
                              	       			"parameters",
                              	        		lv_parameters_14_0, 
                              	        		"ParameterDeclaration", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleFunction4341); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2366:3: ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==KEYWORD_48) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2367:2: KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) )
                    {
                    match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_ruleFunction4355); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getWhenKeyword_7_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2371:1: ( (lv_guard_17_0= ruleGuardExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2372:1: (lv_guard_17_0= ruleGuardExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2372:1: (lv_guard_17_0= ruleGuardExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2373:3: lv_guard_17_0= ruleGuardExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleGuardExpression_in_ruleFunction4376);
                    lv_guard_17_0=ruleGuardExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"guard",
                      	        		lv_guard_17_0, 
                      	        		"GuardExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2395:4: ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==KEYWORD_11) ) {
                alt36=1;
            }
            else if ( (LA36_0==KEYWORD_18) ) {
                alt36=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2395:4: ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) )", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2395:5: ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2395:5: ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2396:2: KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12
                    {
                    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleFunction4391); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2400:1: ( (lv_funcExpr_19_0= ruleExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2401:1: (lv_funcExpr_19_0= ruleExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2401:1: (lv_funcExpr_19_0= ruleExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2402:3: lv_funcExpr_19_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleFunction4412);
                    lv_funcExpr_19_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"funcExpr",
                      	        		lv_funcExpr_19_0, 
                      	        		"Expression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleFunction4423); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2430:6: ( (lv_funcExpr_21_0= ruleBlockExpression ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2430:6: ( (lv_funcExpr_21_0= ruleBlockExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2431:1: (lv_funcExpr_21_0= ruleBlockExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2431:1: (lv_funcExpr_21_0= ruleBlockExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2432:3: lv_funcExpr_21_0= ruleBlockExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_ruleFunction4451);
                    lv_funcExpr_21_0=ruleBlockExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"funcExpr",
                      	        		lv_funcExpr_21_0, 
                      	        		"BlockExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFunction


    // $ANTLR start entryRuleGuardExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2462:1: entryRuleGuardExpression returns [EObject current=null] : iv_ruleGuardExpression= ruleGuardExpression EOF ;
    public final EObject entryRuleGuardExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2463:2: (iv_ruleGuardExpression= ruleGuardExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2464:2: iv_ruleGuardExpression= ruleGuardExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getGuardExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleGuardExpression_in_entryRuleGuardExpression4487);
            iv_ruleGuardExpression=ruleGuardExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleGuardExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleGuardExpression4497); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleGuardExpression


    // $ANTLR start ruleGuardExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2471:1: ruleGuardExpression returns [EObject current=null] : ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) ) ;
    public final EObject ruleGuardExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_guardExpr_1_0 = null;

        EObject lv_guardExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2476:6: ( ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2477:1: ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2477:1: ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==KEYWORD_11) ) {
                alt37=1;
            }
            else if ( (LA37_0==KEYWORD_18) ) {
                alt37=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2477:1: ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) )", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2477:2: ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2477:2: ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2478:2: KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12
                    {
                    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleGuardExpression4534); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2482:1: ( (lv_guardExpr_1_0= ruleExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2483:1: (lv_guardExpr_1_0= ruleExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2483:1: (lv_guardExpr_1_0= ruleExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2484:3: lv_guardExpr_1_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleGuardExpression4555);
                    lv_guardExpr_1_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getGuardExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"guardExpr",
                      	        		lv_guardExpr_1_0, 
                      	        		"Expression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleGuardExpression4566); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2512:6: ( (lv_guardExpr_3_0= ruleBlockExpression ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2512:6: ( (lv_guardExpr_3_0= ruleBlockExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2513:1: (lv_guardExpr_3_0= ruleBlockExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2513:1: (lv_guardExpr_3_0= ruleBlockExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2514:3: lv_guardExpr_3_0= ruleBlockExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_ruleGuardExpression4594);
                    lv_guardExpr_3_0=ruleBlockExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getGuardExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"guardExpr",
                      	        		lv_guardExpr_3_0, 
                      	        		"BlockExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleGuardExpression


    // $ANTLR start entryRuleAssignmentOperator
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2544:1: entryRuleAssignmentOperator returns [String current=null] : iv_ruleAssignmentOperator= ruleAssignmentOperator EOF ;
    public final String entryRuleAssignmentOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAssignmentOperator = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2545:1: (iv_ruleAssignmentOperator= ruleAssignmentOperator EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2546:2: iv_ruleAssignmentOperator= ruleAssignmentOperator EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAssignmentOperatorRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAssignmentOperator_in_entryRuleAssignmentOperator4630);
            iv_ruleAssignmentOperator=ruleAssignmentOperator();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAssignmentOperator.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAssignmentOperator4641); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssignmentOperator


    // $ANTLR start ruleAssignmentOperator
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2553:1: ruleAssignmentOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 ) ;
    public final AntlrDatatypeRuleToken ruleAssignmentOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2558:6: ( (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2559:1: (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2559:1: (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 )
            int alt38=6;
            switch ( input.LA(1) ) {
            case KEYWORD_14:
                {
                alt38=1;
                }
                break;
            case KEYWORD_26:
                {
                alt38=2;
                }
                break;
            case KEYWORD_28:
                {
                alt38=3;
                }
                break;
            case KEYWORD_24:
                {
                alt38=4;
                }
                break;
            case KEYWORD_30:
                {
                alt38=5;
                }
                break;
            case KEYWORD_22:
                {
                alt38=6;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2559:1: (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 )", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2560:2: kw= KEYWORD_14
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_14,FollowSets000.FOLLOW_KEYWORD_14_in_ruleAssignmentOperator4679); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2567:2: kw= KEYWORD_26
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_26,FollowSets000.FOLLOW_KEYWORD_26_in_ruleAssignmentOperator4698); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1(), null); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2574:2: kw= KEYWORD_28
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_28,FollowSets000.FOLLOW_KEYWORD_28_in_ruleAssignmentOperator4717); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2(), null); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2581:2: kw= KEYWORD_24
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_24,FollowSets000.FOLLOW_KEYWORD_24_in_ruleAssignmentOperator4736); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3(), null); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2588:2: kw= KEYWORD_30
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_30,FollowSets000.FOLLOW_KEYWORD_30_in_ruleAssignmentOperator4755); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4(), null); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2595:2: kw= KEYWORD_22
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_22,FollowSets000.FOLLOW_KEYWORD_22_in_ruleAssignmentOperator4774); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5(), null); 
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssignmentOperator


    // $ANTLR start entryRuleRelationalOperator
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2608:1: entryRuleRelationalOperator returns [String current=null] : iv_ruleRelationalOperator= ruleRelationalOperator EOF ;
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2609:1: (iv_ruleRelationalOperator= ruleRelationalOperator EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2610:2: iv_ruleRelationalOperator= ruleRelationalOperator EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRelationalOperatorRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleRelationalOperator_in_entryRuleRelationalOperator4814);
            iv_ruleRelationalOperator=ruleRelationalOperator();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleRelationalOperator4825); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRelationalOperator


    // $ANTLR start ruleRelationalOperator
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2617:1: ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 ) ;
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2622:6: ( (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2623:1: (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2623:1: (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 )
            int alt39=9;
            switch ( input.LA(1) ) {
            case KEYWORD_37:
                {
                alt39=1;
                }
                break;
            case KEYWORD_32:
                {
                alt39=2;
                }
                break;
            case KEYWORD_40:
                {
                alt39=3;
                }
                break;
            case KEYWORD_21:
                {
                alt39=4;
                }
                break;
            case KEYWORD_38:
                {
                alt39=5;
                }
                break;
            case KEYWORD_34:
                {
                alt39=6;
                }
                break;
            case KEYWORD_31:
                {
                alt39=7;
                }
                break;
            case KEYWORD_15:
                {
                alt39=8;
                }
                break;
            case KEYWORD_13:
                {
                alt39=9;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2623:1: (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 )", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2624:2: kw= KEYWORD_37
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_37,FollowSets000.FOLLOW_KEYWORD_37_in_ruleRelationalOperator4863); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2631:2: kw= KEYWORD_32
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_32,FollowSets000.FOLLOW_KEYWORD_32_in_ruleRelationalOperator4882); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1(), null); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2638:2: kw= KEYWORD_40
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_40,FollowSets000.FOLLOW_KEYWORD_40_in_ruleRelationalOperator4901); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2(), null); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2645:2: kw= KEYWORD_21
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_21,FollowSets000.FOLLOW_KEYWORD_21_in_ruleRelationalOperator4920); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3(), null); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2652:2: kw= KEYWORD_38
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_38,FollowSets000.FOLLOW_KEYWORD_38_in_ruleRelationalOperator4939); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4(), null); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2659:2: kw= KEYWORD_34
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_34,FollowSets000.FOLLOW_KEYWORD_34_in_ruleRelationalOperator4958); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5(), null); 
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2666:2: kw= KEYWORD_31
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_31,FollowSets000.FOLLOW_KEYWORD_31_in_ruleRelationalOperator4977); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6(), null); 
                          
                    }

                    }
                    break;
                case 8 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2673:2: kw= KEYWORD_15
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_15,FollowSets000.FOLLOW_KEYWORD_15_in_ruleRelationalOperator4996); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7(), null); 
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2680:2: kw= KEYWORD_13
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_13,FollowSets000.FOLLOW_KEYWORD_13_in_ruleRelationalOperator5015); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8(), null); 
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRelationalOperator


    // $ANTLR start entryRuleTopLevelExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2693:1: entryRuleTopLevelExpression returns [EObject current=null] : iv_ruleTopLevelExpression= ruleTopLevelExpression EOF ;
    public final EObject entryRuleTopLevelExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2694:2: (iv_ruleTopLevelExpression= ruleTopLevelExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2695:2: iv_ruleTopLevelExpression= ruleTopLevelExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getTopLevelExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleTopLevelExpression_in_entryRuleTopLevelExpression5054);
            iv_ruleTopLevelExpression=ruleTopLevelExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleTopLevelExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleTopLevelExpression5064); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleTopLevelExpression


    // $ANTLR start ruleTopLevelExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2702:1: ruleTopLevelExpression returns [EObject current=null] : (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression ) ;
    public final EObject ruleTopLevelExpression() throws RecognitionException {
        EObject current = null;

        EObject this_VarDeclaration_0 = null;

        EObject this_ValDeclaration_1 = null;

        EObject this_AssignmentExpression_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2707:6: ( (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )
            int alt40=3;
            switch ( input.LA(1) ) {
            case KEYWORD_50:
                {
                int LA40_1 = input.LA(2);

                if ( (LA40_1==KEYWORD_44||LA40_1==KEYWORD_3||LA40_1==RULE_ID) ) {
                    alt40=1;
                }
                else if ( (LA40_1==KEYWORD_43) ) {
                    alt40=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 1, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_44:
                {
                alt40=1;
                }
                break;
            case KEYWORD_3:
                {
                switch ( input.LA(2) ) {
                case RULE_ID:
                    {
                    switch ( input.LA(3) ) {
                    case KEYWORD_38:
                    case KEYWORD_40:
                    case KEYWORD_21:
                    case KEYWORD_22:
                    case KEYWORD_23:
                    case KEYWORD_24:
                    case KEYWORD_25:
                    case KEYWORD_26:
                    case KEYWORD_27:
                    case KEYWORD_28:
                    case KEYWORD_29:
                    case KEYWORD_30:
                    case KEYWORD_31:
                    case KEYWORD_32:
                    case KEYWORD_34:
                    case KEYWORD_36:
                    case KEYWORD_37:
                    case KEYWORD_2:
                    case KEYWORD_3:
                    case KEYWORD_5:
                    case KEYWORD_6:
                    case KEYWORD_8:
                    case KEYWORD_9:
                    case KEYWORD_10:
                    case KEYWORD_13:
                    case KEYWORD_14:
                    case KEYWORD_15:
                    case KEYWORD_16:
                        {
                        alt40=3;
                        }
                        break;
                    case KEYWORD_4:
                        {
                        int LA40_9 = input.LA(4);

                        if ( (LA40_9==KEYWORD_33) ) {
                            alt40=1;
                        }
                        else if ( (LA40_9==EOF||LA40_9==KEYWORD_38||LA40_9==KEYWORD_40||(LA40_9>=KEYWORD_21 && LA40_9<=KEYWORD_32)||LA40_9==KEYWORD_34||(LA40_9>=KEYWORD_36 && LA40_9<=KEYWORD_37)||(LA40_9>=KEYWORD_2 && LA40_9<=KEYWORD_3)||(LA40_9>=KEYWORD_5 && LA40_9<=KEYWORD_6)||(LA40_9>=KEYWORD_8 && LA40_9<=KEYWORD_10)||(LA40_9>=KEYWORD_12 && LA40_9<=KEYWORD_16)) ) {
                            alt40=3;
                        }
                        else {
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 9, input);

                            throw nvae;
                        }
                        }
                        break;
                    case KEYWORD_7:
                        {
                        alt40=1;
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 7, input);

                        throw nvae;
                    }

                    }
                    break;
                case KEYWORD_39:
                case KEYWORD_4:
                    {
                    alt40=1;
                    }
                    break;
                case KEYWORD_63:
                case KEYWORD_56:
                case KEYWORD_52:
                case KEYWORD_54:
                case KEYWORD_55:
                case KEYWORD_51:
                case KEYWORD_46:
                case KEYWORD_47:
                case KEYWORD_49:
                case KEYWORD_42:
                case KEYWORD_25:
                case KEYWORD_27:
                case KEYWORD_1:
                case KEYWORD_3:
                case KEYWORD_8:
                case KEYWORD_9:
                case KEYWORD_18:
                case RULE_STRING:
                    {
                    alt40=3;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case KEYWORD_38:
                case KEYWORD_40:
                case KEYWORD_21:
                case KEYWORD_22:
                case KEYWORD_23:
                case KEYWORD_24:
                case KEYWORD_25:
                case KEYWORD_26:
                case KEYWORD_27:
                case KEYWORD_28:
                case KEYWORD_29:
                case KEYWORD_30:
                case KEYWORD_31:
                case KEYWORD_32:
                case KEYWORD_34:
                case KEYWORD_36:
                case KEYWORD_37:
                case KEYWORD_2:
                case KEYWORD_3:
                case KEYWORD_5:
                case KEYWORD_6:
                case KEYWORD_8:
                case KEYWORD_9:
                case KEYWORD_10:
                case KEYWORD_12:
                case KEYWORD_14:
                case KEYWORD_15:
                case KEYWORD_16:
                    {
                    alt40=3;
                    }
                    break;
                case KEYWORD_13:
                    {
                    int LA40_8 = input.LA(3);

                    if ( (LA40_8==RULE_ID) ) {
                        switch ( input.LA(4) ) {
                        case EOF:
                        case KEYWORD_38:
                        case KEYWORD_40:
                        case KEYWORD_21:
                        case KEYWORD_22:
                        case KEYWORD_23:
                        case KEYWORD_24:
                        case KEYWORD_25:
                        case KEYWORD_26:
                        case KEYWORD_27:
                        case KEYWORD_28:
                        case KEYWORD_29:
                        case KEYWORD_30:
                        case KEYWORD_31:
                        case KEYWORD_32:
                        case KEYWORD_34:
                        case KEYWORD_36:
                        case KEYWORD_37:
                        case KEYWORD_2:
                        case KEYWORD_3:
                        case KEYWORD_5:
                        case KEYWORD_6:
                        case KEYWORD_8:
                        case KEYWORD_9:
                        case KEYWORD_10:
                        case KEYWORD_12:
                        case KEYWORD_13:
                        case KEYWORD_14:
                        case KEYWORD_16:
                            {
                            alt40=3;
                            }
                            break;
                        case KEYWORD_15:
                            {
                            int LA40_11 = input.LA(5);

                            if ( (LA40_11==RULE_ID) ) {
                                int LA40_12 = input.LA(6);

                                if ( (synpred67()) ) {
                                    alt40=1;
                                }
                                else if ( (true) ) {
                                    alt40=3;
                                }
                                else {
                                    if (backtracking>0) {failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 12, input);

                                    throw nvae;
                                }
                            }
                            else if ( (LA40_11==KEYWORD_63||LA40_11==KEYWORD_56||(LA40_11>=KEYWORD_54 && LA40_11<=KEYWORD_55)||LA40_11==KEYWORD_51||(LA40_11>=KEYWORD_46 && LA40_11<=KEYWORD_47)||LA40_11==KEYWORD_49||LA40_11==KEYWORD_42||LA40_11==KEYWORD_25||LA40_11==KEYWORD_27||LA40_11==KEYWORD_1||LA40_11==KEYWORD_3||(LA40_11>=KEYWORD_8 && LA40_11<=KEYWORD_9)||LA40_11==KEYWORD_18||LA40_11==RULE_STRING) ) {
                                alt40=3;
                            }
                            else {
                                if (backtracking>0) {failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 11, input);

                                throw nvae;
                            }
                            }
                            break;
                        case KEYWORD_7:
                            {
                            alt40=1;
                            }
                            break;
                        default:
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 10, input);

                            throw nvae;
                        }

                    }
                    else if ( (LA40_8==KEYWORD_63||LA40_8==KEYWORD_56||(LA40_8>=KEYWORD_54 && LA40_8<=KEYWORD_55)||LA40_8==KEYWORD_51||(LA40_8>=KEYWORD_46 && LA40_8<=KEYWORD_47)||LA40_8==KEYWORD_49||LA40_8==KEYWORD_42||LA40_8==KEYWORD_25||LA40_8==KEYWORD_27||LA40_8==KEYWORD_1||LA40_8==KEYWORD_3||(LA40_8>=KEYWORD_8 && LA40_8<=KEYWORD_9)||LA40_8==KEYWORD_18||LA40_8==RULE_STRING) ) {
                        alt40=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 8, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    alt40=1;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 4, input);

                    throw nvae;
                }

                }
                break;
            case KEYWORD_43:
                {
                alt40=2;
                }
                break;
            case KEYWORD_63:
            case KEYWORD_56:
            case KEYWORD_52:
            case KEYWORD_54:
            case KEYWORD_55:
            case KEYWORD_51:
            case KEYWORD_46:
            case KEYWORD_47:
            case KEYWORD_49:
            case KEYWORD_42:
            case KEYWORD_25:
            case KEYWORD_27:
            case KEYWORD_1:
            case KEYWORD_8:
            case KEYWORD_9:
            case KEYWORD_18:
            case RULE_STRING:
                {
                alt40=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2708:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2709:2: this_VarDeclaration_0= ruleVarDeclaration
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleVarDeclaration_in_ruleTopLevelExpression5114);
                    this_VarDeclaration_0=ruleVarDeclaration();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_VarDeclaration_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2722:2: this_ValDeclaration_1= ruleValDeclaration
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleValDeclaration_in_ruleTopLevelExpression5144);
                    this_ValDeclaration_1=ruleValDeclaration();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ValDeclaration_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2735:2: this_AssignmentExpression_2= ruleAssignmentExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_ruleTopLevelExpression5174);
                    this_AssignmentExpression_2=ruleAssignmentExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_AssignmentExpression_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleTopLevelExpression


    // $ANTLR start entryRuleExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2754:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2755:2: (iv_ruleExpression= ruleExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2756:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_entryRuleExpression5208);
            iv_ruleExpression=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleExpression5218); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleExpression


    // $ANTLR start ruleExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2763:1: ruleExpression returns [EObject current=null] : this_AssignmentExpression_0= ruleAssignmentExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AssignmentExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2768:6: (this_AssignmentExpression_0= ruleAssignmentExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2770:2: this_AssignmentExpression_0= ruleAssignmentExpression
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_ruleExpression5267);
            this_AssignmentExpression_0=ruleAssignmentExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AssignmentExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleExpression


    // $ANTLR start entryRuleAssignmentExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2789:1: entryRuleAssignmentExpression returns [EObject current=null] : iv_ruleAssignmentExpression= ruleAssignmentExpression EOF ;
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2790:2: (iv_ruleAssignmentExpression= ruleAssignmentExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2791:2: iv_ruleAssignmentExpression= ruleAssignmentExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAssignmentExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression5300);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAssignmentExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAssignmentExpression5310); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAssignmentExpression


    // $ANTLR start ruleAssignmentExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2798:1: ruleAssignmentExpression returns [EObject current=null] : (this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )? ) ;
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_CachedExpression_0 = null;

        AntlrDatatypeRuleToken lv_functionName_2_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2803:6: ( (this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )? ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2804:1: (this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )? )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2804:1: (this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )? )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2805:2: this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )?
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleCachedExpression_in_ruleAssignmentExpression5360);
            this_CachedExpression_0=ruleCachedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_CachedExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2816:1: ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )?
            int alt41=2;
            switch ( input.LA(1) ) {
                case KEYWORD_14:
                    {
                    int LA41_1 = input.LA(2);

                    if ( (synpred69()) ) {
                        alt41=1;
                    }
                    }
                    break;
                case KEYWORD_26:
                    {
                    int LA41_2 = input.LA(2);

                    if ( (synpred69()) ) {
                        alt41=1;
                    }
                    }
                    break;
                case KEYWORD_28:
                    {
                    int LA41_3 = input.LA(2);

                    if ( (synpred69()) ) {
                        alt41=1;
                    }
                    }
                    break;
                case KEYWORD_24:
                    {
                    int LA41_4 = input.LA(2);

                    if ( (synpred69()) ) {
                        alt41=1;
                    }
                    }
                    break;
                case KEYWORD_30:
                    {
                    int LA41_5 = input.LA(2);

                    if ( (synpred69()) ) {
                        alt41=1;
                    }
                    }
                    break;
                case KEYWORD_22:
                    {
                    int LA41_6 = input.LA(2);

                    if ( (synpred69()) ) {
                        alt41=1;
                    }
                    }
                    break;
            }

            switch (alt41) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2816:2: () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2816:2: ()
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2817:2: 
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2835:2: ( (lv_functionName_2_0= ruleAssignmentOperator ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2836:1: (lv_functionName_2_0= ruleAssignmentOperator )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2836:1: (lv_functionName_2_0= ruleAssignmentOperator )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2837:3: lv_functionName_2_0= ruleAssignmentOperator
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleAssignmentOperator_in_ruleAssignmentExpression5393);
                    lv_functionName_2_0=ruleAssignmentOperator();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"functionName",
                      	        		lv_functionName_2_0, 
                      	        		"AssignmentOperator", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2859:2: ( (lv_rightExpr_3_0= ruleAssignmentExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2860:1: (lv_rightExpr_3_0= ruleAssignmentExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2860:1: (lv_rightExpr_3_0= ruleAssignmentExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2861:3: lv_rightExpr_3_0= ruleAssignmentExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression5414);
                    lv_rightExpr_3_0=ruleAssignmentExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"rightExpr",
                      	        		lv_rightExpr_3_0, 
                      	        		"AssignmentExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAssignmentExpression


    // $ANTLR start entryRuleVarDeclaration
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2891:1: entryRuleVarDeclaration returns [EObject current=null] : iv_ruleVarDeclaration= ruleVarDeclaration EOF ;
    public final EObject entryRuleVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDeclaration = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2892:2: (iv_ruleVarDeclaration= ruleVarDeclaration EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2893:2: iv_ruleVarDeclaration= ruleVarDeclaration EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVarDeclarationRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleVarDeclaration_in_entryRuleVarDeclaration5451);
            iv_ruleVarDeclaration=ruleVarDeclaration();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVarDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleVarDeclaration5461); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleVarDeclaration


    // $ANTLR start ruleVarDeclaration
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2900:1: ruleVarDeclaration returns [EObject current=null] : ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )? ) ;
    public final EObject ruleVarDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token lv_name_4_0=null;
        EObject lv_type_3_0 = null;

        EObject lv_valueExpr_6_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2905:6: ( ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )? ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2906:1: ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )? )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2906:1: ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )? )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2906:2: () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )?
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2906:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2907:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getVarDeclarationAccess().getDefValueAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getVarDeclarationAccess().getDefValueAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2920:2: ( (lv_final_1_0= KEYWORD_50 ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==KEYWORD_50) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2921:1: (lv_final_1_0= KEYWORD_50 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2921:1: (lv_final_1_0= KEYWORD_50 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2922:3: lv_final_1_0= KEYWORD_50
                    {
                    lv_final_1_0=(Token)input.LT(1);
                    match(input,KEYWORD_50,FollowSets000.FOLLOW_KEYWORD_50_in_ruleVarDeclaration5517); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0(), "final"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "final", true, "final", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2942:3: ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2942:4: ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2942:4: ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==KEYWORD_44) ) {
                alt43=1;
            }
            else if ( (LA43_0==KEYWORD_3||LA43_0==RULE_ID) ) {
                alt43=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2942:4: ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) )", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2943:2: KEYWORD_44
                    {
                    match(input,KEYWORD_44,FollowSets000.FOLLOW_KEYWORD_44_in_ruleVarDeclaration5544); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2948:6: ( (lv_type_3_0= ruleTypeRef ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2948:6: ( (lv_type_3_0= ruleTypeRef ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2949:1: (lv_type_3_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2949:1: (lv_type_3_0= ruleTypeRef )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2950:3: lv_type_3_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleVarDeclaration5571);
                    lv_type_3_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"type",
                      	        		lv_type_3_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2972:3: ( (lv_name_4_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2973:1: (lv_name_4_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2973:1: (lv_name_4_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2974:3: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleVarDeclaration5589); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_4_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2996:3: ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==KEYWORD_14) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2997:2: KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) )
                    {
                    match(input,KEYWORD_14,FollowSets000.FOLLOW_KEYWORD_14_in_ruleVarDeclaration5607); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3001:1: ( (lv_valueExpr_6_0= ruleExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3002:1: (lv_valueExpr_6_0= ruleExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3002:1: (lv_valueExpr_6_0= ruleExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3003:3: lv_valueExpr_6_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleVarDeclaration5628);
                    lv_valueExpr_6_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"valueExpr",
                      	        		lv_valueExpr_6_0, 
                      	        		"Expression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleVarDeclaration


    // $ANTLR start entryRuleValDeclaration
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3033:1: entryRuleValDeclaration returns [EObject current=null] : iv_ruleValDeclaration= ruleValDeclaration EOF ;
    public final EObject entryRuleValDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValDeclaration = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3034:2: (iv_ruleValDeclaration= ruleValDeclaration EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3035:2: iv_ruleValDeclaration= ruleValDeclaration EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getValDeclarationRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleValDeclaration_in_entryRuleValDeclaration5665);
            iv_ruleValDeclaration=ruleValDeclaration();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleValDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleValDeclaration5675); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValDeclaration


    // $ANTLR start ruleValDeclaration
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3042:1: ruleValDeclaration returns [EObject current=null] : ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) ) ;
    public final EObject ruleValDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token lv_immutable_2_0=null;
        Token lv_name_4_0=null;
        EObject lv_type_3_0 = null;

        EObject lv_valueExpr_6_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3047:6: ( ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3048:1: ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3048:1: ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3048:2: () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3048:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3049:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getValDeclarationAccess().getDefValueAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getValDeclarationAccess().getDefValueAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3062:2: ( (lv_final_1_0= KEYWORD_50 ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==KEYWORD_50) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3063:1: (lv_final_1_0= KEYWORD_50 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3063:1: (lv_final_1_0= KEYWORD_50 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3064:3: lv_final_1_0= KEYWORD_50
                    {
                    lv_final_1_0=(Token)input.LT(1);
                    match(input,KEYWORD_50,FollowSets000.FOLLOW_KEYWORD_50_in_ruleValDeclaration5731); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0(), "final"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "final", true, "final", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3084:3: ( (lv_immutable_2_0= KEYWORD_43 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3085:1: (lv_immutable_2_0= KEYWORD_43 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3085:1: (lv_immutable_2_0= KEYWORD_43 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3086:3: lv_immutable_2_0= KEYWORD_43
            {
            lv_immutable_2_0=(Token)input.LT(1);
            match(input,KEYWORD_43,FollowSets000.FOLLOW_KEYWORD_43_in_ruleValDeclaration5764); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0(), "immutable"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "immutable", true, "val", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3106:2: ( (lv_type_3_0= ruleTypeRef ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==KEYWORD_3) ) {
                alt46=1;
            }
            else if ( (LA46_0==RULE_ID) ) {
                int LA46_2 = input.LA(2);

                if ( (LA46_2==KEYWORD_13||LA46_2==RULE_ID) ) {
                    alt46=1;
                }
            }
            switch (alt46) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3107:1: (lv_type_3_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3107:1: (lv_type_3_0= ruleTypeRef )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3108:3: lv_type_3_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleValDeclaration5798);
                    lv_type_3_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"type",
                      	        		lv_type_3_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3130:3: ( (lv_name_4_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3131:1: (lv_name_4_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3131:1: (lv_name_4_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3132:3: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleValDeclaration5816); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_4_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            match(input,KEYWORD_14,FollowSets000.FOLLOW_KEYWORD_14_in_ruleValDeclaration5832); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3159:1: ( (lv_valueExpr_6_0= ruleExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3160:1: (lv_valueExpr_6_0= ruleExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3160:1: (lv_valueExpr_6_0= ruleExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3161:3: lv_valueExpr_6_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleValDeclaration5853);
            lv_valueExpr_6_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"valueExpr",
              	        		lv_valueExpr_6_0, 
              	        		"Expression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValDeclaration


    // $ANTLR start entryRuleTypeRef
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3191:1: entryRuleTypeRef returns [EObject current=null] : iv_ruleTypeRef= ruleTypeRef EOF ;
    public final EObject entryRuleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRef = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3192:2: (iv_ruleTypeRef= ruleTypeRef EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3193:2: iv_ruleTypeRef= ruleTypeRef EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getTypeRefRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_entryRuleTypeRef5888);
            iv_ruleTypeRef=ruleTypeRef();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleTypeRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleTypeRef5898); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleTypeRef


    // $ANTLR start ruleTypeRef
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3200:1: ruleTypeRef returns [EObject current=null] : (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef ) ;
    public final EObject ruleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ClosureTypeRef_0 = null;

        EObject this_SimpleTypeRef_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3205:6: ( (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3206:1: (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3206:1: (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==KEYWORD_3) ) {
                alt47=1;
            }
            else if ( (LA47_0==RULE_ID) ) {
                alt47=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("3206:1: (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef )", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3207:2: this_ClosureTypeRef_0= ruleClosureTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleClosureTypeRef_in_ruleTypeRef5948);
                    this_ClosureTypeRef_0=ruleClosureTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ClosureTypeRef_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3220:2: this_SimpleTypeRef_1= ruleSimpleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleSimpleTypeRef_in_ruleTypeRef5978);
                    this_SimpleTypeRef_1=ruleSimpleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_SimpleTypeRef_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleTypeRef


    // $ANTLR start entryRuleSimpleTypeRef
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3239:1: entryRuleSimpleTypeRef returns [EObject current=null] : iv_ruleSimpleTypeRef= ruleSimpleTypeRef EOF ;
    public final EObject entryRuleSimpleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleTypeRef = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3240:2: (iv_ruleSimpleTypeRef= ruleSimpleTypeRef EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3241:2: iv_ruleSimpleTypeRef= ruleSimpleTypeRef EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSimpleTypeRefRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleSimpleTypeRef_in_entryRuleSimpleTypeRef6012);
            iv_ruleSimpleTypeRef=ruleSimpleTypeRef();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSimpleTypeRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleSimpleTypeRef6022); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSimpleTypeRef


    // $ANTLR start ruleSimpleTypeRef
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3248:1: ruleSimpleTypeRef returns [EObject current=null] : ( ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )? ) ;
    public final EObject ruleSimpleTypeRef() throws RecognitionException {
        EObject current = null;

        Token lv_rawType_0_0=null;
        Token lv_actualArgumentsList_2_0=null;
        Token lv_actualArgumentsList_4_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3253:6: ( ( ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )? ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3254:1: ( ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )? )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3254:1: ( ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )? )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3254:2: ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )?
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3254:2: ( (lv_rawType_0_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3255:1: (lv_rawType_0_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3255:1: (lv_rawType_0_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3256:3: lv_rawType_0_0= RULE_ID
            {
            lv_rawType_0_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleSimpleTypeRef6064); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0(), "rawType"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"rawType",
              	        		lv_rawType_0_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3278:2: ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==KEYWORD_13) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3279:2: KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15
                    {
                    match(input,KEYWORD_13,FollowSets000.FOLLOW_KEYWORD_13_in_ruleSimpleTypeRef6081); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3283:1: ( (lv_actualArgumentsList_2_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3284:1: (lv_actualArgumentsList_2_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3284:1: (lv_actualArgumentsList_2_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3285:3: lv_actualArgumentsList_2_0= RULE_ID
                    {
                    lv_actualArgumentsList_2_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleSimpleTypeRef6098); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0(), "actualArgumentsList"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"actualArgumentsList",
                      	        		lv_actualArgumentsList_2_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3307:2: ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )*
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==KEYWORD_7) ) {
                            alt48=1;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3308:2: KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleSimpleTypeRef6115); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3312:1: ( (lv_actualArgumentsList_4_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3313:1: (lv_actualArgumentsList_4_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3313:1: (lv_actualArgumentsList_4_0= RULE_ID )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3314:3: lv_actualArgumentsList_4_0= RULE_ID
                    	    {
                    	    lv_actualArgumentsList_4_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleSimpleTypeRef6132); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0(), "actualArgumentsList"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"actualArgumentsList",
                    	      	        		lv_actualArgumentsList_4_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop48;
                        }
                    } while (true);

                    match(input,KEYWORD_15,FollowSets000.FOLLOW_KEYWORD_15_in_ruleSimpleTypeRef6150); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3(), null); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSimpleTypeRef


    // $ANTLR start entryRuleClosureTypeRef
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3349:1: entryRuleClosureTypeRef returns [EObject current=null] : iv_ruleClosureTypeRef= ruleClosureTypeRef EOF ;
    public final EObject entryRuleClosureTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClosureTypeRef = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3350:2: (iv_ruleClosureTypeRef= ruleClosureTypeRef EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3351:2: iv_ruleClosureTypeRef= ruleClosureTypeRef EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getClosureTypeRefRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureTypeRef_in_entryRuleClosureTypeRef6187);
            iv_ruleClosureTypeRef=ruleClosureTypeRef();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleClosureTypeRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleClosureTypeRef6197); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleClosureTypeRef


    // $ANTLR start ruleClosureTypeRef
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3358:1: ruleClosureTypeRef returns [EObject current=null] : ( KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) ) ) ;
    public final EObject ruleClosureTypeRef() throws RecognitionException {
        EObject current = null;

        Token lv_parameterTypes_1_0=null;
        Token lv_parameterTypes_3_0=null;
        Token lv_varArgs_5_0=null;
        Token lv_parameterTypes_6_0=null;
        Token lv_varArgs_7_0=null;
        Token lv_parameterTypes_8_0=null;
        Token lv_returnType_11_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3363:6: ( ( KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3364:1: ( KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3364:1: ( KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3365:2: KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) )
            {
            match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleClosureTypeRef6233); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3369:1: ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )?
            int alt52=3;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_ID) ) {
                alt52=1;
            }
            else if ( (LA52_0==KEYWORD_39) ) {
                alt52=2;
            }
            switch (alt52) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3369:2: ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3369:2: ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3369:3: ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )?
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3369:3: ( (lv_parameterTypes_1_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3370:1: (lv_parameterTypes_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3370:1: (lv_parameterTypes_1_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3371:3: lv_parameterTypes_1_0= RULE_ID
                    {
                    lv_parameterTypes_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6252); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0(), "parameterTypes"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"parameterTypes",
                      	        		lv_parameterTypes_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3393:2: ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==KEYWORD_7) ) {
                            int LA50_1 = input.LA(2);

                            if ( (LA50_1==RULE_ID) ) {
                                alt50=1;
                            }


                        }


                        switch (alt50) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3394:2: KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleClosureTypeRef6269); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3398:1: ( (lv_parameterTypes_3_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3399:1: (lv_parameterTypes_3_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3399:1: (lv_parameterTypes_3_0= RULE_ID )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3400:3: lv_parameterTypes_3_0= RULE_ID
                    	    {
                    	    lv_parameterTypes_3_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6286); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0(), "parameterTypes"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"parameterTypes",
                    	      	        		lv_parameterTypes_3_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3422:4: ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )?
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==KEYWORD_7) ) {
                        alt51=1;
                    }
                    switch (alt51) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3423:2: KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) )
                            {
                            match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleClosureTypeRef6305); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0(), null); 
                                  
                            }
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3427:1: ( (lv_varArgs_5_0= KEYWORD_39 ) )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3428:1: (lv_varArgs_5_0= KEYWORD_39 )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3428:1: (lv_varArgs_5_0= KEYWORD_39 )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3429:3: lv_varArgs_5_0= KEYWORD_39
                            {
                            lv_varArgs_5_0=(Token)input.LT(1);
                            match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleClosureTypeRef6324); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0(), "varArgs"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "varArgs", true, "...", lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3449:2: ( (lv_parameterTypes_6_0= RULE_ID ) )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3450:1: (lv_parameterTypes_6_0= RULE_ID )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3450:1: (lv_parameterTypes_6_0= RULE_ID )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3451:3: lv_parameterTypes_6_0= RULE_ID
                            {
                            lv_parameterTypes_6_0=(Token)input.LT(1);
                            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6354); if (failed) return current;
                            if ( backtracking==0 ) {

                              			createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0(), "parameterTypes"); 
                              		
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        try {
                              	       		add(
                              	       			current, 
                              	       			"parameterTypes",
                              	        		lv_parameterTypes_6_0, 
                              	        		"ID", 
                              	        		lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3474:6: ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3474:6: ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3474:7: ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3474:7: ( (lv_varArgs_7_0= KEYWORD_39 ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3475:1: (lv_varArgs_7_0= KEYWORD_39 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3475:1: (lv_varArgs_7_0= KEYWORD_39 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3476:3: lv_varArgs_7_0= KEYWORD_39
                    {
                    lv_varArgs_7_0=(Token)input.LT(1);
                    match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleClosureTypeRef6388); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0(), "varArgs"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "varArgs", true, "...", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3496:2: ( (lv_parameterTypes_8_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3497:1: (lv_parameterTypes_8_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3497:1: (lv_parameterTypes_8_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3498:3: lv_parameterTypes_8_0= RULE_ID
                    {
                    lv_parameterTypes_8_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6418); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0(), "parameterTypes"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"parameterTypes",
                      	        		lv_parameterTypes_8_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleClosureTypeRef6437); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2(), null); 
                  
            }
            match(input,KEYWORD_33,FollowSets000.FOLLOW_KEYWORD_33_in_ruleClosureTypeRef6448); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3530:1: ( (lv_returnType_11_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3531:1: (lv_returnType_11_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3531:1: (lv_returnType_11_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3532:3: lv_returnType_11_0= RULE_ID
            {
            lv_returnType_11_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6465); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0(), "returnType"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"returnType",
              	        		lv_returnType_11_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleClosureTypeRef


    // $ANTLR start entryRuleCachedExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3562:1: entryRuleCachedExpression returns [EObject current=null] : iv_ruleCachedExpression= ruleCachedExpression EOF ;
    public final EObject entryRuleCachedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCachedExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3563:2: (iv_ruleCachedExpression= ruleCachedExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3564:2: iv_ruleCachedExpression= ruleCachedExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCachedExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleCachedExpression_in_entryRuleCachedExpression6505);
            iv_ruleCachedExpression=ruleCachedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCachedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleCachedExpression6515); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCachedExpression


    // $ANTLR start ruleCachedExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3571:1: ruleCachedExpression returns [EObject current=null] : ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression ) ;
    public final EObject ruleCachedExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_2_0 = null;

        EObject this_OrExpression_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3576:6: ( ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3577:1: ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3577:1: ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==KEYWORD_52) ) {
                alt53=1;
            }
            else if ( (LA53_0==KEYWORD_63||LA53_0==KEYWORD_56||(LA53_0>=KEYWORD_54 && LA53_0<=KEYWORD_55)||LA53_0==KEYWORD_51||(LA53_0>=KEYWORD_46 && LA53_0<=KEYWORD_47)||LA53_0==KEYWORD_49||LA53_0==KEYWORD_42||LA53_0==KEYWORD_25||LA53_0==KEYWORD_27||LA53_0==KEYWORD_1||LA53_0==KEYWORD_3||(LA53_0>=KEYWORD_8 && LA53_0<=KEYWORD_9)||LA53_0==KEYWORD_18||LA53_0==RULE_ID||LA53_0==RULE_STRING) ) {
                alt53=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("3577:1: ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression )", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3577:2: ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3577:2: ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3577:3: () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3577:3: ()
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3578:2: 
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0().getType().getClassifier());
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    match(input,KEYWORD_52,FollowSets000.FOLLOW_KEYWORD_52_in_ruleCachedExpression6564); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3596:1: ( (lv_expr_2_0= ruleOrExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3597:1: (lv_expr_2_0= ruleOrExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3597:1: (lv_expr_2_0= ruleOrExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3598:3: lv_expr_2_0= ruleOrExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleOrExpression_in_ruleCachedExpression6585);
                    lv_expr_2_0=ruleOrExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCachedExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"expr",
                      	        		lv_expr_2_0, 
                      	        		"OrExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3622:2: this_OrExpression_3= ruleOrExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleOrExpression_in_ruleCachedExpression6617);
                    this_OrExpression_3=ruleOrExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_OrExpression_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCachedExpression


    // $ANTLR start entryRuleOrExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3641:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3642:2: (iv_ruleOrExpression= ruleOrExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3643:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getOrExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleOrExpression_in_entryRuleOrExpression6651);
            iv_ruleOrExpression=ruleOrExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleOrExpression6661); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleOrExpression


    // $ANTLR start ruleOrExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3650:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3655:6: ( (this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3656:1: (this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3656:1: (this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3657:2: this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleAndExpression_in_ruleOrExpression6711);
            this_AndExpression_0=ruleAndExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AndExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3668:1: ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==KEYWORD_36) ) {
                    int LA54_2 = input.LA(2);

                    if ( (synpred83()) ) {
                        alt54=1;
                    }


                }


                switch (alt54) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3668:2: () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3668:2: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3669:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_36,FollowSets000.FOLLOW_KEYWORD_36_in_ruleOrExpression6734); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3692:1: ( (lv_rightExpr_3_0= ruleAndExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3693:1: (lv_rightExpr_3_0= ruleAndExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3693:1: (lv_rightExpr_3_0= ruleAndExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3694:3: lv_rightExpr_3_0= ruleAndExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleAndExpression_in_ruleOrExpression6755);
            	    lv_rightExpr_3_0=ruleAndExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"AndExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleOrExpression


    // $ANTLR start entryRuleAndExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3724:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3725:2: (iv_ruleAndExpression= ruleAndExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3726:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAndExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAndExpression_in_entryRuleAndExpression6792);
            iv_ruleAndExpression=ruleAndExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAndExpression6802); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAndExpression


    // $ANTLR start ruleAndExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3733:1: ruleAndExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3738:6: ( (this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3739:1: (this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3739:1: (this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3740:2: this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleRelationalExpression_in_ruleAndExpression6852);
            this_RelationalExpression_0=ruleRelationalExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_RelationalExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3751:1: ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==KEYWORD_23) ) {
                    int LA55_2 = input.LA(2);

                    if ( (synpred84()) ) {
                        alt55=1;
                    }


                }


                switch (alt55) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3751:2: () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3751:2: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3752:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_23,FollowSets000.FOLLOW_KEYWORD_23_in_ruleAndExpression6875); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3775:1: ( (lv_rightExpr_3_0= ruleRelationalExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3776:1: (lv_rightExpr_3_0= ruleRelationalExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3776:1: (lv_rightExpr_3_0= ruleRelationalExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3777:3: lv_rightExpr_3_0= ruleRelationalExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleRelationalExpression_in_ruleAndExpression6896);
            	    lv_rightExpr_3_0=ruleRelationalExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"RelationalExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAndExpression


    // $ANTLR start entryRuleRelationalExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3807:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3808:2: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3809:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRelationalExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression6933);
            iv_ruleRelationalExpression=ruleRelationalExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleRelationalExpression6943); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleRelationalExpression


    // $ANTLR start ruleRelationalExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3816:1: ruleRelationalExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_functionName_2_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3821:6: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3822:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3822:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3823:2: this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression6993);
            this_AdditiveExpression_0=ruleAdditiveExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_AdditiveExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3834:1: ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )*
            loop56:
            do {
                int alt56=2;
                switch ( input.LA(1) ) {
                case KEYWORD_37:
                    {
                    int LA56_2 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;
                case KEYWORD_32:
                    {
                    int LA56_3 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;
                case KEYWORD_40:
                    {
                    int LA56_4 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;
                case KEYWORD_21:
                    {
                    int LA56_5 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;
                case KEYWORD_38:
                    {
                    int LA56_6 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;
                case KEYWORD_34:
                    {
                    int LA56_7 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;
                case KEYWORD_31:
                    {
                    int LA56_8 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;
                case KEYWORD_15:
                    {
                    int LA56_9 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;
                case KEYWORD_13:
                    {
                    int LA56_10 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                    }
                    break;

                }

                switch (alt56) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3834:2: () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3834:2: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3835:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3853:2: ( (lv_functionName_2_0= ruleRelationalOperator ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3854:1: (lv_functionName_2_0= ruleRelationalOperator )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3854:1: (lv_functionName_2_0= ruleRelationalOperator )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3855:3: lv_functionName_2_0= ruleRelationalOperator
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleRelationalOperator_in_ruleRelationalExpression7026);
            	    lv_functionName_2_0=ruleRelationalOperator();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"functionName",
            	      	        		lv_functionName_2_0, 
            	      	        		"RelationalOperator", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3877:2: ( (lv_rightExpr_3_0= ruleAdditiveExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3878:1: (lv_rightExpr_3_0= ruleAdditiveExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3878:1: (lv_rightExpr_3_0= ruleAdditiveExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3879:3: lv_rightExpr_3_0= ruleAdditiveExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression7047);
            	    lv_rightExpr_3_0=ruleAdditiveExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"AdditiveExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleRelationalExpression


    // $ANTLR start entryRuleAdditiveExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3909:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3910:2: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3911:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdditiveExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression7084);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAdditiveExpression7094); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleAdditiveExpression


    // $ANTLR start ruleAdditiveExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3918:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        Token lv_functionName_2_1=null;
        Token lv_functionName_2_2=null;
        EObject this_MultiplicativeExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3923:6: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3924:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3924:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3925:2: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression7144);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_MultiplicativeExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3936:1: ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==KEYWORD_6) ) {
                    int LA58_2 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                }
                else if ( (LA58_0==KEYWORD_8) ) {
                    int LA58_3 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                }


                switch (alt58) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3936:2: () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3936:2: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3937:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3955:2: ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3956:1: ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3956:1: ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3957:1: (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3957:1: (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 )
            	    int alt57=2;
            	    int LA57_0 = input.LA(1);

            	    if ( (LA57_0==KEYWORD_6) ) {
            	        alt57=1;
            	    }
            	    else if ( (LA57_0==KEYWORD_8) ) {
            	        alt57=2;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("3957:1: (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 )", 57, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt57) {
            	        case 1 :
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3958:3: lv_functionName_2_1= KEYWORD_6
            	            {
            	            lv_functionName_2_1=(Token)input.LT(1);
            	            match(input,KEYWORD_6,FollowSets000.FOLLOW_KEYWORD_6_in_ruleAdditiveExpression7177); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3977:8: lv_functionName_2_2= KEYWORD_8
            	            {
            	            lv_functionName_2_2=(Token)input.LT(1);
            	            match(input,KEYWORD_8,FollowSets000.FOLLOW_KEYWORD_8_in_ruleAdditiveExpression7207); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3999:2: ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4000:1: (lv_rightExpr_3_0= ruleMultiplicativeExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4000:1: (lv_rightExpr_3_0= ruleMultiplicativeExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4001:3: lv_rightExpr_3_0= ruleMultiplicativeExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression7244);
            	    lv_rightExpr_3_0=ruleMultiplicativeExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"MultiplicativeExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleAdditiveExpression


    // $ANTLR start entryRuleMultiplicativeExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4031:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4032:2: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4033:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression7281);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleMultiplicativeExpression7291); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleMultiplicativeExpression


    // $ANTLR start ruleMultiplicativeExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4040:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_functionName_2_1=null;
        Token lv_functionName_2_2=null;
        Token lv_functionName_2_3=null;
        EObject this_SetExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4045:6: ( (this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4046:1: (this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4046:1: (this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4047:2: this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression7341);
            this_SetExpression_0=ruleSetExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_SetExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4058:1: ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )*
            loop60:
            do {
                int alt60=2;
                switch ( input.LA(1) ) {
                case KEYWORD_5:
                    {
                    int LA60_2 = input.LA(2);

                    if ( (synpred90()) ) {
                        alt60=1;
                    }


                    }
                    break;
                case KEYWORD_10:
                    {
                    int LA60_3 = input.LA(2);

                    if ( (synpred90()) ) {
                        alt60=1;
                    }


                    }
                    break;
                case KEYWORD_2:
                    {
                    int LA60_4 = input.LA(2);

                    if ( (synpred90()) ) {
                        alt60=1;
                    }


                    }
                    break;

                }

                switch (alt60) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4058:2: () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4058:2: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4059:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4077:2: ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4078:1: ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4078:1: ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4079:1: (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4079:1: (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 )
            	    int alt59=3;
            	    switch ( input.LA(1) ) {
            	    case KEYWORD_5:
            	        {
            	        alt59=1;
            	        }
            	        break;
            	    case KEYWORD_10:
            	        {
            	        alt59=2;
            	        }
            	        break;
            	    case KEYWORD_2:
            	        {
            	        alt59=3;
            	        }
            	        break;
            	    default:
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("4079:1: (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 )", 59, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt59) {
            	        case 1 :
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4080:3: lv_functionName_2_1= KEYWORD_5
            	            {
            	            lv_functionName_2_1=(Token)input.LT(1);
            	            match(input,KEYWORD_5,FollowSets000.FOLLOW_KEYWORD_5_in_ruleMultiplicativeExpression7374); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4099:8: lv_functionName_2_2= KEYWORD_10
            	            {
            	            lv_functionName_2_2=(Token)input.LT(1);
            	            match(input,KEYWORD_10,FollowSets000.FOLLOW_KEYWORD_10_in_ruleMultiplicativeExpression7404); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4118:8: lv_functionName_2_3= KEYWORD_2
            	            {
            	            lv_functionName_2_3=(Token)input.LT(1);
            	            match(input,KEYWORD_2,FollowSets000.FOLLOW_KEYWORD_2_in_ruleMultiplicativeExpression7434); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_3, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4140:2: ( (lv_rightExpr_3_0= ruleSetExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4141:1: (lv_rightExpr_3_0= ruleSetExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4141:1: (lv_rightExpr_3_0= ruleSetExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4142:3: lv_rightExpr_3_0= ruleSetExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression7471);
            	    lv_rightExpr_3_0=ruleSetExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"SetExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleMultiplicativeExpression


    // $ANTLR start entryRuleSetExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4172:1: entryRuleSetExpression returns [EObject current=null] : iv_ruleSetExpression= ruleSetExpression EOF ;
    public final EObject entryRuleSetExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4173:2: (iv_ruleSetExpression= ruleSetExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4174:2: iv_ruleSetExpression= ruleSetExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSetExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleSetExpression_in_entryRuleSetExpression7508);
            iv_ruleSetExpression=ruleSetExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSetExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleSetExpression7518); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleSetExpression


    // $ANTLR start ruleSetExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4181:1: ruleSetExpression returns [EObject current=null] : (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )* ) ;
    public final EObject ruleSetExpression() throws RecognitionException {
        EObject current = null;

        Token lv_functionName_2_0=null;
        EObject this_UnaryOrInfixExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4186:6: ( (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4187:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4187:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4188:2: this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression7568);
            this_UnaryOrInfixExpression_0=ruleUnaryOrInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_UnaryOrInfixExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4199:1: ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==KEYWORD_29) ) {
                    int LA61_2 = input.LA(2);

                    if ( (synpred91()) ) {
                        alt61=1;
                    }


                }


                switch (alt61) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4199:2: () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4199:2: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4200:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4218:2: ( (lv_functionName_2_0= KEYWORD_29 ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4219:1: (lv_functionName_2_0= KEYWORD_29 )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4219:1: (lv_functionName_2_0= KEYWORD_29 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4220:3: lv_functionName_2_0= KEYWORD_29
            	    {
            	    lv_functionName_2_0=(Token)input.LT(1);
            	    match(input,KEYWORD_29,FollowSets000.FOLLOW_KEYWORD_29_in_ruleSetExpression7599); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0(), "functionName"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSetExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "functionName", lv_functionName_2_0, "..", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4240:2: ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4241:1: (lv_rightExpr_3_0= ruleUnaryOrInfixExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4241:1: (lv_rightExpr_3_0= ruleUnaryOrInfixExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4242:3: lv_rightExpr_3_0= ruleUnaryOrInfixExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression7633);
            	    lv_rightExpr_3_0=ruleUnaryOrInfixExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSetExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"UnaryOrInfixExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleSetExpression


    // $ANTLR start entryRuleUnaryOrInfixExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4272:1: entryRuleUnaryOrInfixExpression returns [EObject current=null] : iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF ;
    public final EObject entryRuleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryOrInfixExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4273:2: (iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4274:2: iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnaryOrInfixExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression7670);
            iv_ruleUnaryOrInfixExpression=ruleUnaryOrInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnaryOrInfixExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression7680); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryOrInfixExpression


    // $ANTLR start ruleUnaryOrInfixExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4281:1: ruleUnaryOrInfixExpression returns [EObject current=null] : (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression ) ;
    public final EObject ruleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_PostopExpression_0 = null;

        EObject this_UnaryExpression_1 = null;

        EObject this_PreopExpression_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4286:6: ( (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4287:1: (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4287:1: (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression )
            int alt62=3;
            switch ( input.LA(1) ) {
            case KEYWORD_63:
            case KEYWORD_56:
            case KEYWORD_54:
            case KEYWORD_55:
            case KEYWORD_51:
            case KEYWORD_46:
            case KEYWORD_47:
            case KEYWORD_49:
            case KEYWORD_42:
            case KEYWORD_3:
            case KEYWORD_9:
            case KEYWORD_18:
            case RULE_ID:
            case RULE_STRING:
                {
                alt62=1;
                }
                break;
            case KEYWORD_1:
            case KEYWORD_8:
                {
                alt62=2;
                }
                break;
            case KEYWORD_25:
            case KEYWORD_27:
                {
                alt62=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4287:1: (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression )", 62, 0, input);

                throw nvae;
            }

            switch (alt62) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4288:2: this_PostopExpression_0= rulePostopExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression7730);
                    this_PostopExpression_0=rulePostopExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_PostopExpression_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4301:2: this_UnaryExpression_1= ruleUnaryExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression7760);
                    this_UnaryExpression_1=ruleUnaryExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_UnaryExpression_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4314:2: this_PreopExpression_2= rulePreopExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePreopExpression_in_ruleUnaryOrInfixExpression7790);
                    this_PreopExpression_2=rulePreopExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_PreopExpression_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryOrInfixExpression


    // $ANTLR start entryRuleUnaryExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4333:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4334:2: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4335:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnaryExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression7824);
            iv_ruleUnaryExpression=ruleUnaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleUnaryExpression7834); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryExpression


    // $ANTLR start ruleUnaryExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4342:1: ruleUnaryExpression returns [EObject current=null] : ( () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_functionName_1_1=null;
        Token lv_functionName_1_2=null;
        EObject lv_expr_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4347:6: ( ( () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4348:1: ( () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4348:1: ( () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4348:2: () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4348:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4349:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4362:2: ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4363:1: ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4363:1: ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4364:1: (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4364:1: (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==KEYWORD_1) ) {
                alt63=1;
            }
            else if ( (LA63_0==KEYWORD_8) ) {
                alt63=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4364:1: (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 )", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4365:3: lv_functionName_1_1= KEYWORD_1
                    {
                    lv_functionName_1_1=(Token)input.LT(1);
                    match(input,KEYWORD_1,FollowSets000.FOLLOW_KEYWORD_1_in_ruleUnaryExpression7892); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0(), "functionName"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "functionName", lv_functionName_1_1, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4384:8: lv_functionName_1_2= KEYWORD_8
                    {
                    lv_functionName_1_2=(Token)input.LT(1);
                    match(input,KEYWORD_8,FollowSets000.FOLLOW_KEYWORD_8_in_ruleUnaryExpression7922); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1(), "functionName"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "functionName", lv_functionName_1_2, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4406:2: ( (lv_expr_2_0= ruleInfixExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4407:1: (lv_expr_2_0= ruleInfixExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4407:1: (lv_expr_2_0= ruleInfixExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4408:3: lv_expr_2_0= ruleInfixExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleInfixExpression_in_ruleUnaryExpression7959);
            lv_expr_2_0=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_2_0, 
              	        		"InfixExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleUnaryExpression


    // $ANTLR start entryRulePreopExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4438:1: entryRulePreopExpression returns [EObject current=null] : iv_rulePreopExpression= rulePreopExpression EOF ;
    public final EObject entryRulePreopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreopExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4439:2: (iv_rulePreopExpression= rulePreopExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4440:2: iv_rulePreopExpression= rulePreopExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPreopExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePreopExpression_in_entryRulePreopExpression7994);
            iv_rulePreopExpression=rulePreopExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePreopExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePreopExpression8004); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePreopExpression


    // $ANTLR start rulePreopExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4447:1: rulePreopExpression returns [EObject current=null] : ( () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) ) ;
    public final EObject rulePreopExpression() throws RecognitionException {
        EObject current = null;

        Token lv_functionName_1_1=null;
        Token lv_functionName_1_2=null;
        EObject lv_expr_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4452:6: ( ( () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4453:1: ( () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4453:1: ( () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4453:2: () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4453:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4454:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4467:2: ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4468:1: ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4468:1: ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4469:1: (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4469:1: (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==KEYWORD_25) ) {
                alt64=1;
            }
            else if ( (LA64_0==KEYWORD_27) ) {
                alt64=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4469:1: (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 )", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4470:3: lv_functionName_1_1= KEYWORD_25
                    {
                    lv_functionName_1_1=(Token)input.LT(1);
                    match(input,KEYWORD_25,FollowSets000.FOLLOW_KEYWORD_25_in_rulePreopExpression8062); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0(), "functionName"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "functionName", lv_functionName_1_1, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4489:8: lv_functionName_1_2= KEYWORD_27
                    {
                    lv_functionName_1_2=(Token)input.LT(1);
                    match(input,KEYWORD_27,FollowSets000.FOLLOW_KEYWORD_27_in_rulePreopExpression8092); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1(), "functionName"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "functionName", lv_functionName_1_2, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4511:2: ( (lv_expr_2_0= ruleInfixExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4512:1: (lv_expr_2_0= ruleInfixExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4512:1: (lv_expr_2_0= ruleInfixExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4513:3: lv_expr_2_0= ruleInfixExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleInfixExpression_in_rulePreopExpression8129);
            lv_expr_2_0=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_2_0, 
              	        		"InfixExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePreopExpression


    // $ANTLR start entryRulePostopExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4543:1: entryRulePostopExpression returns [EObject current=null] : iv_rulePostopExpression= rulePostopExpression EOF ;
    public final EObject entryRulePostopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostopExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4544:2: (iv_rulePostopExpression= rulePostopExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4545:2: iv_rulePostopExpression= rulePostopExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPostopExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePostopExpression_in_entryRulePostopExpression8164);
            iv_rulePostopExpression=rulePostopExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePostopExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePostopExpression8174); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePostopExpression


    // $ANTLR start rulePostopExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4552:1: rulePostopExpression returns [EObject current=null] : (this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )? ) ;
    public final EObject rulePostopExpression() throws RecognitionException {
        EObject current = null;

        Token lv_functionName_2_1=null;
        Token lv_functionName_2_2=null;
        EObject this_InfixExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4557:6: ( (this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )? ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4558:1: (this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )? )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4558:1: (this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )? )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4559:2: this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )?
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleInfixExpression_in_rulePostopExpression8224);
            this_InfixExpression_0=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_InfixExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4570:1: ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==KEYWORD_27) ) {
                int LA66_1 = input.LA(2);

                if ( (synpred97()) ) {
                    alt66=1;
                }
            }
            else if ( (LA66_0==KEYWORD_25) ) {
                int LA66_2 = input.LA(2);

                if ( (synpred97()) ) {
                    alt66=1;
                }
            }
            switch (alt66) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4570:2: () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4570:2: ()
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4571:2: 
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "expr", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4589:2: ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4590:1: ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4590:1: ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4591:1: (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4591:1: (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 )
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==KEYWORD_27) ) {
                        alt65=1;
                    }
                    else if ( (LA65_0==KEYWORD_25) ) {
                        alt65=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4591:1: (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 )", 65, 0, input);

                        throw nvae;
                    }
                    switch (alt65) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4592:3: lv_functionName_2_1= KEYWORD_27
                            {
                            lv_functionName_2_1=(Token)input.LT(1);
                            match(input,KEYWORD_27,FollowSets000.FOLLOW_KEYWORD_27_in_rulePostopExpression8257); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0(), "functionName"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4611:8: lv_functionName_2_2= KEYWORD_25
                            {
                            lv_functionName_2_2=(Token)input.LT(1);
                            match(input,KEYWORD_25,FollowSets000.FOLLOW_KEYWORD_25_in_rulePostopExpression8287); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1(), "functionName"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePostopExpression


    // $ANTLR start entryRuleInfixExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4641:1: entryRuleInfixExpression returns [EObject current=null] : iv_ruleInfixExpression= ruleInfixExpression EOF ;
    public final EObject entryRuleInfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInfixExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4642:2: (iv_ruleInfixExpression= ruleInfixExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4643:2: iv_ruleInfixExpression= ruleInfixExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInfixExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression8340);
            iv_ruleInfixExpression=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInfixExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleInfixExpression8350); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInfixExpression


    // $ANTLR start ruleInfixExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4650:1: ruleInfixExpression returns [EObject current=null] : (this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )* ) ;
    public final EObject ruleInfixExpression() throws RecognitionException {
        EObject current = null;

        Token lv_name_3_0=null;
        Token lv_featureName_13_0=null;
        EObject this_CallExpression_0 = null;

        EObject lv_parameterList_5_0 = null;

        EObject lv_indexExpr_9_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4655:6: ( (this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4656:1: (this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4656:1: (this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4657:2: this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleCallExpression_in_ruleInfixExpression8400);
            this_CallExpression_0=ruleCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_CallExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:1: ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )*
            loop68:
            do {
                int alt68=4;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==KEYWORD_9) ) {
                    int LA68_2 = input.LA(2);

                    if ( (synpred99()) ) {
                        alt68=1;
                    }
                    else if ( (synpred101()) ) {
                        alt68=3;
                    }


                }
                else if ( (LA68_0==KEYWORD_16) ) {
                    int LA68_3 = input.LA(2);

                    if ( (synpred100()) ) {
                        alt68=2;
                    }


                }


                switch (alt68) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:2: ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:2: ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:3: () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:3: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4669:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "funcExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_ruleInfixExpression8424); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4692:1: ( (lv_name_3_0= RULE_ID ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4693:1: (lv_name_3_0= RULE_ID )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4693:1: (lv_name_3_0= RULE_ID )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4694:3: lv_name_3_0= RULE_ID
            	    {
            	    lv_name_3_0=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleInfixExpression8441); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0(), "name"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"name",
            	      	        		lv_name_3_0, 
            	      	        		"ID", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleInfixExpression8457); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4721:1: ( (lv_parameterList_5_0= ruleParameterList ) )?
            	    int alt67=2;
            	    int LA67_0 = input.LA(1);

            	    if ( (LA67_0==KEYWORD_63||LA67_0==KEYWORD_56||LA67_0==KEYWORD_52||(LA67_0>=KEYWORD_54 && LA67_0<=KEYWORD_55)||LA67_0==KEYWORD_51||(LA67_0>=KEYWORD_46 && LA67_0<=KEYWORD_47)||LA67_0==KEYWORD_49||LA67_0==KEYWORD_39||LA67_0==KEYWORD_42||LA67_0==KEYWORD_25||LA67_0==KEYWORD_27||LA67_0==KEYWORD_1||LA67_0==KEYWORD_3||(LA67_0>=KEYWORD_8 && LA67_0<=KEYWORD_9)||LA67_0==KEYWORD_13||(LA67_0>=KEYWORD_18 && LA67_0<=KEYWORD_19)||LA67_0==RULE_ID||LA67_0==RULE_STRING) ) {
            	        alt67=1;
            	    }
            	    switch (alt67) {
            	        case 1 :
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4722:1: (lv_parameterList_5_0= ruleParameterList )
            	            {
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4722:1: (lv_parameterList_5_0= ruleParameterList )
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4723:3: lv_parameterList_5_0= ruleParameterList
            	            {
            	            if ( backtracking==0 ) {
            	               
            	              	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0(), currentNode); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleInfixExpression8478);
            	            lv_parameterList_5_0=ruleParameterList();
            	            _fsp--;
            	            if (failed) return current;
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode.getParent(), current);
            	              	        }
            	              	        try {
            	              	       		set(
            	              	       			current, 
            	              	       			"parameterList",
            	              	        		lv_parameterList_5_0, 
            	              	        		"ParameterList", 
            	              	        		currentNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	        currentNode = currentNode.getParent();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleInfixExpression8490); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:6: ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:6: ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:7: () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:7: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4752:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "objExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_16,FollowSets000.FOLLOW_KEYWORD_16_in_ruleInfixExpression8521); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4775:1: ( (lv_indexExpr_9_0= ruleExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4776:1: (lv_indexExpr_9_0= ruleExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4776:1: (lv_indexExpr_9_0= ruleExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4777:3: lv_indexExpr_9_0= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleInfixExpression8542);
            	    lv_indexExpr_9_0=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"indexExpr",
            	      	        		lv_indexExpr_9_0, 
            	      	        		"Expression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_17,FollowSets000.FOLLOW_KEYWORD_17_in_ruleInfixExpression8553); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:6: ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:6: ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:7: () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:7: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4806:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "objExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_ruleInfixExpression8584); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4829:1: ( (lv_featureName_13_0= RULE_ID ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4830:1: (lv_featureName_13_0= RULE_ID )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4830:1: (lv_featureName_13_0= RULE_ID )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4831:3: lv_featureName_13_0= RULE_ID
            	    {
            	    lv_featureName_13_0=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleInfixExpression8601); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0(), "featureName"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"featureName",
            	      	        		lv_featureName_13_0, 
            	      	        		"ID", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInfixExpression


    // $ANTLR start entryRuleCallExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4861:1: entryRuleCallExpression returns [EObject current=null] : iv_ruleCallExpression= ruleCallExpression EOF ;
    public final EObject entryRuleCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCallExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4862:2: (iv_ruleCallExpression= ruleCallExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4863:2: iv_ruleCallExpression= ruleCallExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCallExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleCallExpression_in_entryRuleCallExpression8644);
            iv_ruleCallExpression=ruleCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCallExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleCallExpression8654); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleCallExpression


    // $ANTLR start ruleCallExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4870:1: ruleCallExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )* ) ;
    public final EObject ruleCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_PrimaryExpression_0 = null;

        EObject lv_parameterList_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4875:6: ( (this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4876:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4876:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4877:2: this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_rulePrimaryExpression_in_ruleCallExpression8704);
            this_PrimaryExpression_0=rulePrimaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_PrimaryExpression_0; 
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4888:1: ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==KEYWORD_3) ) {
                    int LA70_2 = input.LA(2);

                    if ( (synpred103()) ) {
                        alt70=1;
                    }


                }


                switch (alt70) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4888:2: () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4888:2: ()
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4889:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "funcExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleCallExpression8727); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4912:1: ( (lv_parameterList_3_0= ruleParameterList ) )?
            	    int alt69=2;
            	    int LA69_0 = input.LA(1);

            	    if ( (LA69_0==KEYWORD_63||LA69_0==KEYWORD_56||LA69_0==KEYWORD_52||(LA69_0>=KEYWORD_54 && LA69_0<=KEYWORD_55)||LA69_0==KEYWORD_51||(LA69_0>=KEYWORD_46 && LA69_0<=KEYWORD_47)||LA69_0==KEYWORD_49||LA69_0==KEYWORD_39||LA69_0==KEYWORD_42||LA69_0==KEYWORD_25||LA69_0==KEYWORD_27||LA69_0==KEYWORD_1||LA69_0==KEYWORD_3||(LA69_0>=KEYWORD_8 && LA69_0<=KEYWORD_9)||LA69_0==KEYWORD_13||(LA69_0>=KEYWORD_18 && LA69_0<=KEYWORD_19)||LA69_0==RULE_ID||LA69_0==RULE_STRING) ) {
            	        alt69=1;
            	    }
            	    switch (alt69) {
            	        case 1 :
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4913:1: (lv_parameterList_3_0= ruleParameterList )
            	            {
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4913:1: (lv_parameterList_3_0= ruleParameterList )
            	            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4914:3: lv_parameterList_3_0= ruleParameterList
            	            {
            	            if ( backtracking==0 ) {
            	               
            	              	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0(), currentNode); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleCallExpression8748);
            	            lv_parameterList_3_0=ruleParameterList();
            	            _fsp--;
            	            if (failed) return current;
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode.getParent(), current);
            	              	        }
            	              	        try {
            	              	       		set(
            	              	       			current, 
            	              	       			"parameterList",
            	              	        		lv_parameterList_3_0, 
            	              	        		"ParameterList", 
            	              	        		currentNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	        currentNode = currentNode.getParent();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleCallExpression8760); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleCallExpression


    // $ANTLR start entryRulePrimaryExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4949:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4950:2: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4951:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPrimaryExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression8797);
            iv_rulePrimaryExpression=rulePrimaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePrimaryExpression8807); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRulePrimaryExpression


    // $ANTLR start rulePrimaryExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4958:1: rulePrimaryExpression returns [EObject current=null] : (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_FeatureCall_0 = null;

        EObject this_ConstructorCallExpression_1 = null;

        EObject this_Value_2 = null;

        EObject this_Literal_3 = null;

        EObject this_KeywordVariables_4 = null;

        EObject this_ParanthesizedExpression_5 = null;

        EObject this_BlockExpression_6 = null;

        EObject this_WithExpression_7 = null;

        EObject this_WithContextExpression_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4963:6: ( (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )
            int alt71=9;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA71_1 = input.LA(2);

                if ( (LA71_1==KEYWORD_3) ) {
                    int LA71_9 = input.LA(3);

                    if ( (synpred104()) ) {
                        alt71=1;
                    }
                    else if ( (synpred106()) ) {
                        alt71=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 9, input);

                        throw nvae;
                    }
                }
                else if ( (LA71_1==EOF||LA71_1==KEYWORD_38||LA71_1==KEYWORD_40||(LA71_1>=KEYWORD_21 && LA71_1<=KEYWORD_32)||(LA71_1>=KEYWORD_34 && LA71_1<=KEYWORD_37)||LA71_1==KEYWORD_2||(LA71_1>=KEYWORD_4 && LA71_1<=KEYWORD_10)||(LA71_1>=KEYWORD_12 && LA71_1<=KEYWORD_18)||LA71_1==KEYWORD_20) ) {
                    alt71=3;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 1, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_9:
                {
                alt71=1;
                }
                break;
            case KEYWORD_42:
                {
                alt71=2;
                }
                break;
            case RULE_STRING:
                {
                alt71=4;
                }
                break;
            case KEYWORD_18:
                {
                switch ( input.LA(2) ) {
                case KEYWORD_39:
                case KEYWORD_13:
                case KEYWORD_19:
                    {
                    alt71=4;
                    }
                    break;
                case KEYWORD_3:
                    {
                    int LA71_11 = input.LA(3);

                    if ( (synpred107()) ) {
                        alt71=4;
                    }
                    else if ( (synpred110()) ) {
                        alt71=7;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 11, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    switch ( input.LA(3) ) {
                    case KEYWORD_38:
                    case KEYWORD_40:
                    case KEYWORD_21:
                    case KEYWORD_22:
                    case KEYWORD_23:
                    case KEYWORD_24:
                    case KEYWORD_25:
                    case KEYWORD_26:
                    case KEYWORD_27:
                    case KEYWORD_28:
                    case KEYWORD_29:
                    case KEYWORD_30:
                    case KEYWORD_31:
                    case KEYWORD_32:
                    case KEYWORD_34:
                    case KEYWORD_36:
                    case KEYWORD_37:
                    case KEYWORD_2:
                    case KEYWORD_3:
                    case KEYWORD_5:
                    case KEYWORD_6:
                    case KEYWORD_8:
                    case KEYWORD_9:
                    case KEYWORD_10:
                    case KEYWORD_12:
                    case KEYWORD_14:
                    case KEYWORD_15:
                    case KEYWORD_16:
                        {
                        alt71=7;
                        }
                        break;
                    case KEYWORD_7:
                    case KEYWORD_19:
                        {
                        alt71=4;
                        }
                        break;
                    case KEYWORD_13:
                        {
                        int LA71_16 = input.LA(4);

                        if ( (synpred107()) ) {
                            alt71=4;
                        }
                        else if ( (synpred110()) ) {
                            alt71=7;
                        }
                        else {
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 16, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_ID:
                        {
                        int LA71_17 = input.LA(4);

                        if ( (LA71_17==KEYWORD_7||LA71_17==KEYWORD_19) ) {
                            alt71=4;
                        }
                        else if ( (LA71_17==KEYWORD_12||LA71_17==KEYWORD_14) ) {
                            alt71=7;
                        }
                        else {
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 17, input);

                            throw nvae;
                        }
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 12, input);

                        throw nvae;
                    }

                    }
                    break;
                case KEYWORD_63:
                case KEYWORD_56:
                case KEYWORD_52:
                case KEYWORD_54:
                case KEYWORD_55:
                case KEYWORD_50:
                case KEYWORD_51:
                case KEYWORD_46:
                case KEYWORD_47:
                case KEYWORD_49:
                case KEYWORD_42:
                case KEYWORD_43:
                case KEYWORD_44:
                case KEYWORD_25:
                case KEYWORD_27:
                case KEYWORD_1:
                case KEYWORD_8:
                case KEYWORD_9:
                case KEYWORD_18:
                case KEYWORD_20:
                case RULE_STRING:
                    {
                    alt71=7;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 5, input);

                    throw nvae;
                }

                }
                break;
            case KEYWORD_63:
            case KEYWORD_56:
            case KEYWORD_54:
            case KEYWORD_55:
            case KEYWORD_51:
            case KEYWORD_46:
            case KEYWORD_47:
                {
                alt71=5;
                }
                break;
            case KEYWORD_3:
                {
                alt71=6;
                }
                break;
            case KEYWORD_49:
                {
                int LA71_8 = input.LA(2);

                if ( (LA71_8==KEYWORD_57) ) {
                    alt71=9;
                }
                else if ( (LA71_8==KEYWORD_11||LA71_8==KEYWORD_18||LA71_8==RULE_ID) ) {
                    alt71=8;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 8, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4964:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 71, 0, input);

                throw nvae;
            }

            switch (alt71) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4965:2: this_FeatureCall_0= ruleFeatureCall
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleFeatureCall_in_rulePrimaryExpression8857);
                    this_FeatureCall_0=ruleFeatureCall();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_FeatureCall_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4978:2: this_ConstructorCallExpression_1= ruleConstructorCallExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression8887);
                    this_ConstructorCallExpression_1=ruleConstructorCallExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ConstructorCallExpression_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4991:2: this_Value_2= ruleValue
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleValue_in_rulePrimaryExpression8917);
                    this_Value_2=ruleValue();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_Value_2; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5004:2: this_Literal_3= ruleLiteral
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleLiteral_in_rulePrimaryExpression8947);
                    this_Literal_3=ruleLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_Literal_3; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5017:2: this_KeywordVariables_4= ruleKeywordVariables
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression8977);
                    this_KeywordVariables_4=ruleKeywordVariables();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_KeywordVariables_4; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5030:2: this_ParanthesizedExpression_5= ruleParanthesizedExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression9007);
                    this_ParanthesizedExpression_5=ruleParanthesizedExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ParanthesizedExpression_5; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5043:2: this_BlockExpression_6= ruleBlockExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_rulePrimaryExpression9037);
                    this_BlockExpression_6=ruleBlockExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_BlockExpression_6; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 8 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5056:2: this_WithExpression_7= ruleWithExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleWithExpression_in_rulePrimaryExpression9067);
                    this_WithExpression_7=ruleWithExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_WithExpression_7; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5069:2: this_WithContextExpression_8= ruleWithContextExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleWithContextExpression_in_rulePrimaryExpression9097);
                    this_WithContextExpression_8=ruleWithContextExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_WithContextExpression_8; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end rulePrimaryExpression


    // $ANTLR start entryRuleWithExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5088:1: entryRuleWithExpression returns [EObject current=null] : iv_ruleWithExpression= ruleWithExpression EOF ;
    public final EObject entryRuleWithExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWithExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5089:2: (iv_ruleWithExpression= ruleWithExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5090:2: iv_ruleWithExpression= ruleWithExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getWithExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleWithExpression_in_entryRuleWithExpression9131);
            iv_ruleWithExpression=ruleWithExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleWithExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleWithExpression9141); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWithExpression


    // $ANTLR start ruleWithExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5097:1: ruleWithExpression returns [EObject current=null] : ( KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) ) ) ;
    public final EObject ruleWithExpression() throws RecognitionException {
        EObject current = null;

        Token lv_referencedAdvice_1_0=null;
        Token lv_referencedAdvice_3_0=null;
        EObject lv_funcExpr_5_0 = null;

        EObject lv_funcExpr_7_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5102:6: ( ( KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5103:1: ( KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5103:1: ( KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5104:2: KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) )
            {
            match(input,KEYWORD_49,FollowSets000.FOLLOW_KEYWORD_49_in_ruleWithExpression9177); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithExpressionAccess().getWithKeyword_0(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5108:1: ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_ID) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5108:2: ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )*
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5108:2: ( (lv_referencedAdvice_1_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5109:1: (lv_referencedAdvice_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5109:1: (lv_referencedAdvice_1_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5110:3: lv_referencedAdvice_1_0= RULE_ID
                    {
                    lv_referencedAdvice_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleWithExpression9195); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0(), "referencedAdvice"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"referencedAdvice",
                      	        		lv_referencedAdvice_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5132:2: ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==KEYWORD_7) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5133:2: KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleWithExpression9212); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5137:1: ( (lv_referencedAdvice_3_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5138:1: (lv_referencedAdvice_3_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5138:1: (lv_referencedAdvice_3_0= RULE_ID )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5139:3: lv_referencedAdvice_3_0= RULE_ID
                    	    {
                    	    lv_referencedAdvice_3_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleWithExpression9229); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0(), "referencedAdvice"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"referencedAdvice",
                    	      	        		lv_referencedAdvice_3_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5161:6: ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==KEYWORD_11) ) {
                alt74=1;
            }
            else if ( (LA74_0==KEYWORD_18) ) {
                alt74=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("5161:6: ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) )", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5161:7: ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5161:7: ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5162:2: KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) )
                    {
                    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleWithExpression9251); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5166:1: ( (lv_funcExpr_5_0= ruleExpression ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5167:1: (lv_funcExpr_5_0= ruleExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5167:1: (lv_funcExpr_5_0= ruleExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5168:3: lv_funcExpr_5_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleWithExpression9272);
                    lv_funcExpr_5_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"funcExpr",
                      	        		lv_funcExpr_5_0, 
                      	        		"Expression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5191:6: ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5191:6: ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5192:2: KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20
                    {
                    match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleWithExpression9291); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5196:1: ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5197:1: (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5197:1: (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5198:3: lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpressionWithoutBrackets_in_ruleWithExpression9312);
                    lv_funcExpr_7_0=ruleBlockExpressionWithoutBrackets();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"funcExpr",
                      	        		lv_funcExpr_7_0, 
                      	        		"BlockExpressionWithoutBrackets", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleWithExpression9323); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWithExpression


    // $ANTLR start entryRuleWithContextExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5233:1: entryRuleWithContextExpression returns [EObject current=null] : iv_ruleWithContextExpression= ruleWithContextExpression EOF ;
    public final EObject entryRuleWithContextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWithContextExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5234:2: (iv_ruleWithContextExpression= ruleWithContextExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5235:2: iv_ruleWithContextExpression= ruleWithContextExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getWithContextExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleWithContextExpression_in_entryRuleWithContextExpression9360);
            iv_ruleWithContextExpression=ruleWithContextExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleWithContextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleWithContextExpression9370); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleWithContextExpression


    // $ANTLR start ruleWithContextExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5242:1: ruleWithContextExpression returns [EObject current=null] : ( KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) ) ) ;
    public final EObject ruleWithContextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_alias_4_0=null;
        EObject lv_expr_2_0 = null;

        EObject lv_contextBlock_5_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5247:6: ( ( KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5248:1: ( KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5248:1: ( KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5249:2: KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) )
            {
            match(input,KEYWORD_49,FollowSets000.FOLLOW_KEYWORD_49_in_ruleWithContextExpression9406); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0(), null); 
                  
            }
            match(input,KEYWORD_57,FollowSets000.FOLLOW_KEYWORD_57_in_ruleWithContextExpression9417); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5258:1: ( (lv_expr_2_0= ruleExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5259:1: (lv_expr_2_0= ruleExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5259:1: (lv_expr_2_0= ruleExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5260:3: lv_expr_2_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleWithContextExpression9438);
            lv_expr_2_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_2_0, 
              	        		"Expression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5282:2: ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==KEYWORD_35) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5283:2: KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) )
                    {
                    match(input,KEYWORD_35,FollowSets000.FOLLOW_KEYWORD_35_in_ruleWithContextExpression9450); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5287:1: ( (lv_alias_4_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5288:1: (lv_alias_4_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5288:1: (lv_alias_4_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5289:3: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleWithContextExpression9467); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0(), "alias"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"alias",
                      	        		lv_alias_4_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5311:4: ( (lv_contextBlock_5_0= ruleBlockExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5312:1: (lv_contextBlock_5_0= ruleBlockExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5312:1: (lv_contextBlock_5_0= ruleBlockExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5313:3: lv_contextBlock_5_0= ruleBlockExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_ruleWithContextExpression9495);
            lv_contextBlock_5_0=ruleBlockExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"contextBlock",
              	        		lv_contextBlock_5_0, 
              	        		"BlockExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleWithContextExpression


    // $ANTLR start entryRuleBlockExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5343:1: entryRuleBlockExpression returns [EObject current=null] : iv_ruleBlockExpression= ruleBlockExpression EOF ;
    public final EObject entryRuleBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlockExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5344:2: (iv_ruleBlockExpression= ruleBlockExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5345:2: iv_ruleBlockExpression= ruleBlockExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBlockExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_entryRuleBlockExpression9530);
            iv_ruleBlockExpression=ruleBlockExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBlockExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleBlockExpression9540); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBlockExpression


    // $ANTLR start ruleBlockExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5352:1: ruleBlockExpression returns [EObject current=null] : ( () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20 ) ;
    public final EObject ruleBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5357:6: ( ( () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5358:1: ( () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5358:1: ( () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5358:2: () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5358:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5359:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleBlockExpression9588); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5377:1: ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==KEYWORD_63||LA76_0==KEYWORD_56||LA76_0==KEYWORD_52||(LA76_0>=KEYWORD_54 && LA76_0<=KEYWORD_51)||(LA76_0>=KEYWORD_46 && LA76_0<=KEYWORD_47)||LA76_0==KEYWORD_49||(LA76_0>=KEYWORD_42 && LA76_0<=KEYWORD_44)||LA76_0==KEYWORD_25||LA76_0==KEYWORD_27||LA76_0==KEYWORD_1||LA76_0==KEYWORD_3||(LA76_0>=KEYWORD_8 && LA76_0<=KEYWORD_9)||LA76_0==KEYWORD_18||LA76_0==RULE_ID||LA76_0==RULE_STRING) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5377:2: ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5377:2: ( (lv_expressions_2_0= ruleTopLevelExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5378:1: (lv_expressions_2_0= ruleTopLevelExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5378:1: (lv_expressions_2_0= ruleTopLevelExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5379:3: lv_expressions_2_0= ruleTopLevelExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleTopLevelExpression_in_ruleBlockExpression9610);
            	    lv_expressions_2_0=ruleTopLevelExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBlockExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		add(
            	      	       			current, 
            	      	       			"expressions",
            	      	        		lv_expressions_2_0, 
            	      	        		"TopLevelExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleBlockExpression9621); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleBlockExpression9634); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBlockExpression


    // $ANTLR start entryRuleValue
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5419:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5420:2: (iv_ruleValue= ruleValue EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5421:2: iv_ruleValue= ruleValue EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getValueRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleValue_in_entryRuleValue9669);
            iv_ruleValue=ruleValue();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleValue9679); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValue


    // $ANTLR start ruleValue
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5428:1: ruleValue returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5433:6: ( ( () ( (lv_name_1_0= RULE_ID ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5434:1: ( () ( (lv_name_1_0= RULE_ID ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5434:1: ( () ( (lv_name_1_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5434:2: () ( (lv_name_1_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5434:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5435:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getValueAccess().getVariableExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getValueAccess().getVariableExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5448:2: ( (lv_name_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5449:1: (lv_name_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5449:1: (lv_name_1_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5450:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleValue9733); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValueRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_1_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValue


    // $ANTLR start entryRuleKeywordVariables
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5480:1: entryRuleKeywordVariables returns [EObject current=null] : iv_ruleKeywordVariables= ruleKeywordVariables EOF ;
    public final EObject entryRuleKeywordVariables() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeywordVariables = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5481:2: (iv_ruleKeywordVariables= ruleKeywordVariables EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5482:2: iv_ruleKeywordVariables= ruleKeywordVariables EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getKeywordVariablesRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables9773);
            iv_ruleKeywordVariables=ruleKeywordVariables();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleKeywordVariables; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleKeywordVariables9783); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleKeywordVariables


    // $ANTLR start ruleKeywordVariables
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5489:1: ruleKeywordVariables returns [EObject current=null] : ( () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) ) ) ;
    public final EObject ruleKeywordVariables() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_1=null;
        Token lv_name_1_2=null;
        Token lv_name_1_3=null;
        Token lv_name_1_4=null;
        Token lv_name_1_5=null;
        Token lv_name_1_6=null;
        Token lv_name_1_7=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5494:6: ( ( () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5495:1: ( () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5495:1: ( () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5495:2: () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5495:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5496:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5509:2: ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5510:1: ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5510:1: ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5511:1: (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5511:1: (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 )
            int alt77=7;
            switch ( input.LA(1) ) {
            case KEYWORD_51:
                {
                alt77=1;
                }
                break;
            case KEYWORD_54:
                {
                alt77=2;
                }
                break;
            case KEYWORD_55:
                {
                alt77=3;
                }
                break;
            case KEYWORD_63:
                {
                alt77=4;
                }
                break;
            case KEYWORD_56:
                {
                alt77=5;
                }
                break;
            case KEYWORD_47:
                {
                alt77=6;
                }
                break;
            case KEYWORD_46:
                {
                alt77=7;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("5511:1: (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 )", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5512:3: lv_name_1_1= KEYWORD_51
                    {
                    lv_name_1_1=(Token)input.LT(1);
                    match(input,KEYWORD_51,FollowSets000.FOLLOW_KEYWORD_51_in_ruleKeywordVariables9841); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_1, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5531:8: lv_name_1_2= KEYWORD_54
                    {
                    lv_name_1_2=(Token)input.LT(1);
                    match(input,KEYWORD_54,FollowSets000.FOLLOW_KEYWORD_54_in_ruleKeywordVariables9871); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_2, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5550:8: lv_name_1_3= KEYWORD_55
                    {
                    lv_name_1_3=(Token)input.LT(1);
                    match(input,KEYWORD_55,FollowSets000.FOLLOW_KEYWORD_55_in_ruleKeywordVariables9901); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_3, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5569:8: lv_name_1_4= KEYWORD_63
                    {
                    lv_name_1_4=(Token)input.LT(1);
                    match(input,KEYWORD_63,FollowSets000.FOLLOW_KEYWORD_63_in_ruleKeywordVariables9931); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_4, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5588:8: lv_name_1_5= KEYWORD_56
                    {
                    lv_name_1_5=(Token)input.LT(1);
                    match(input,KEYWORD_56,FollowSets000.FOLLOW_KEYWORD_56_in_ruleKeywordVariables9961); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_5, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5607:8: lv_name_1_6= KEYWORD_47
                    {
                    lv_name_1_6=(Token)input.LT(1);
                    match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleKeywordVariables9991); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_6, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5626:8: lv_name_1_7= KEYWORD_46
                    {
                    lv_name_1_7=(Token)input.LT(1);
                    match(input,KEYWORD_46,FollowSets000.FOLLOW_KEYWORD_46_in_ruleKeywordVariables10021); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_7, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleKeywordVariables


    // $ANTLR start entryRuleFeatureCall
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5656:1: entryRuleFeatureCall returns [EObject current=null] : iv_ruleFeatureCall= ruleFeatureCall EOF ;
    public final EObject entryRuleFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureCall = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5657:2: (iv_ruleFeatureCall= ruleFeatureCall EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5658:2: iv_ruleFeatureCall= ruleFeatureCall EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFeatureCallRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFeatureCall_in_entryRuleFeatureCall10072);
            iv_ruleFeatureCall=ruleFeatureCall();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFeatureCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFeatureCall10082); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFeatureCall


    // $ANTLR start ruleFeatureCall
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5665:1: ruleFeatureCall returns [EObject current=null] : (this_OperationCall_0= ruleOperationCall | ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) ) ) ) ;
    public final EObject ruleFeatureCall() throws RecognitionException {
        EObject current = null;

        Token lv_name_3_0=null;
        Token lv_featureName_9_0=null;
        EObject this_OperationCall_0 = null;

        EObject lv_parameterList_5_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5670:6: ( (this_OperationCall_0= ruleOperationCall | ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5671:1: (this_OperationCall_0= ruleOperationCall | ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5671:1: (this_OperationCall_0= ruleOperationCall | ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) ) ) )
            int alt79=3;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_ID) ) {
                alt79=1;
            }
            else if ( (LA79_0==KEYWORD_9) ) {
                int LA79_2 = input.LA(2);

                if ( (synpred125()) ) {
                    alt79=2;
                }
                else if ( (true) ) {
                    alt79=3;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("5671:1: (this_OperationCall_0= ruleOperationCall | ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) ) ) )", 79, 2, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("5671:1: (this_OperationCall_0= ruleOperationCall | ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) ) ) )", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5672:2: this_OperationCall_0= ruleOperationCall
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleOperationCall_in_ruleFeatureCall10132);
                    this_OperationCall_0=ruleOperationCall();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_OperationCall_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:6: ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:6: ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:7: () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:7: ()
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5685:2: 
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getFeatureCallAccess().getCallFeatureAction_1_0().getType().getClassifier());
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureCallAccess().getCallFeatureAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_ruleFeatureCall10161); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFeatureCallAccess().getFullStopKeyword_1_1(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5703:1: ( (lv_name_3_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5704:1: (lv_name_3_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5704:1: (lv_name_3_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5705:3: lv_name_3_0= RULE_ID
                    {
                    lv_name_3_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleFeatureCall10178); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getFeatureCallAccess().getNameIDTerminalRuleCall_1_2_0(), "name"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFeatureCallRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"name",
                      	        		lv_name_3_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleFeatureCall10194); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFeatureCallAccess().getLeftParenthesisKeyword_1_3(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5732:1: ( (lv_parameterList_5_0= ruleParameterList ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==KEYWORD_63||LA78_0==KEYWORD_56||LA78_0==KEYWORD_52||(LA78_0>=KEYWORD_54 && LA78_0<=KEYWORD_55)||LA78_0==KEYWORD_51||(LA78_0>=KEYWORD_46 && LA78_0<=KEYWORD_47)||LA78_0==KEYWORD_49||LA78_0==KEYWORD_39||LA78_0==KEYWORD_42||LA78_0==KEYWORD_25||LA78_0==KEYWORD_27||LA78_0==KEYWORD_1||LA78_0==KEYWORD_3||(LA78_0>=KEYWORD_8 && LA78_0<=KEYWORD_9)||LA78_0==KEYWORD_13||(LA78_0>=KEYWORD_18 && LA78_0<=KEYWORD_19)||LA78_0==RULE_ID||LA78_0==RULE_STRING) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5733:1: (lv_parameterList_5_0= ruleParameterList )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5733:1: (lv_parameterList_5_0= ruleParameterList )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5734:3: lv_parameterList_5_0= ruleParameterList
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getParameterListParameterListParserRuleCall_1_4_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleFeatureCall10215);
                            lv_parameterList_5_0=ruleParameterList();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getFeatureCallRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		set(
                              	       			current, 
                              	       			"parameterList",
                              	        		lv_parameterList_5_0, 
                              	        		"ParameterList", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleFeatureCall10227); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFeatureCallAccess().getRightParenthesisKeyword_1_5(), null); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5762:6: ( () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5762:6: ( () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5762:7: () KEYWORD_9 ( (lv_featureName_9_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5762:7: ()
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5763:2: 
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getFeatureCallAccess().getFeatureExpressionAction_2_0().getType().getClassifier());
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureCallAccess().getFeatureExpressionAction_2_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_ruleFeatureCall10258); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFeatureCallAccess().getFullStopKeyword_2_1(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5781:1: ( (lv_featureName_9_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5782:1: (lv_featureName_9_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5782:1: (lv_featureName_9_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5783:3: lv_featureName_9_0= RULE_ID
                    {
                    lv_featureName_9_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleFeatureCall10275); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getFeatureCallAccess().getFeatureNameIDTerminalRuleCall_2_2_0(), "featureName"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFeatureCallRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"featureName",
                      	        		lv_featureName_9_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFeatureCall


    // $ANTLR start entryRuleOperationCall
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5813:1: entryRuleOperationCall returns [EObject current=null] : iv_ruleOperationCall= ruleOperationCall EOF ;
    public final EObject entryRuleOperationCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationCall = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5814:2: (iv_ruleOperationCall= ruleOperationCall EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5815:2: iv_ruleOperationCall= ruleOperationCall EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getOperationCallRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleOperationCall_in_entryRuleOperationCall10316);
            iv_ruleOperationCall=ruleOperationCall();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleOperationCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleOperationCall10326); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleOperationCall


    // $ANTLR start ruleOperationCall
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5822:1: ruleOperationCall returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 ) ;
    public final EObject ruleOperationCall() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        EObject lv_parameterList_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5827:6: ( ( () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5828:1: ( () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5828:1: ( () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5828:2: () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5828:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5829:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5842:2: ( (lv_name_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5843:1: (lv_name_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5843:1: (lv_name_1_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5844:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleOperationCall10380); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_1_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleOperationCall10396); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5871:1: ( (lv_parameterList_3_0= ruleParameterList ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==KEYWORD_63||LA80_0==KEYWORD_56||LA80_0==KEYWORD_52||(LA80_0>=KEYWORD_54 && LA80_0<=KEYWORD_55)||LA80_0==KEYWORD_51||(LA80_0>=KEYWORD_46 && LA80_0<=KEYWORD_47)||LA80_0==KEYWORD_49||LA80_0==KEYWORD_39||LA80_0==KEYWORD_42||LA80_0==KEYWORD_25||LA80_0==KEYWORD_27||LA80_0==KEYWORD_1||LA80_0==KEYWORD_3||(LA80_0>=KEYWORD_8 && LA80_0<=KEYWORD_9)||LA80_0==KEYWORD_13||(LA80_0>=KEYWORD_18 && LA80_0<=KEYWORD_19)||LA80_0==RULE_ID||LA80_0==RULE_STRING) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5872:1: (lv_parameterList_3_0= ruleParameterList )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5872:1: (lv_parameterList_3_0= ruleParameterList )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5873:3: lv_parameterList_3_0= ruleParameterList
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleOperationCall10417);
                    lv_parameterList_3_0=ruleParameterList();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"parameterList",
                      	        		lv_parameterList_3_0, 
                      	        		"ParameterList", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleOperationCall10429); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleOperationCall


    // $ANTLR start entryRuleConstructorCallExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5908:1: entryRuleConstructorCallExpression returns [EObject current=null] : iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF ;
    public final EObject entryRuleConstructorCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstructorCallExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5909:2: (iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5910:2: iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getConstructorCallExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression10464);
            iv_ruleConstructorCallExpression=ruleConstructorCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleConstructorCallExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleConstructorCallExpression10474); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleConstructorCallExpression


    // $ANTLR start ruleConstructorCallExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5917:1: ruleConstructorCallExpression returns [EObject current=null] : ( () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )? ) ;
    public final EObject ruleConstructorCallExpression() throws RecognitionException {
        EObject current = null;

        Token lv_typeExpr_2_0=null;
        Token lv_alias_7_0=null;
        EObject lv_parameterList_4_0 = null;

        EObject lv_contextBlock_8_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5922:6: ( ( () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )? ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5923:1: ( () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )? )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5923:1: ( () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )? )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5923:2: () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )?
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5923:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5924:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,KEYWORD_42,FollowSets000.FOLLOW_KEYWORD_42_in_ruleConstructorCallExpression10522); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5942:1: ( (lv_typeExpr_2_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5943:1: (lv_typeExpr_2_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5943:1: (lv_typeExpr_2_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5944:3: lv_typeExpr_2_0= RULE_ID
            {
            lv_typeExpr_2_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleConstructorCallExpression10539); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0(), "typeExpr"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"typeExpr",
              	        		lv_typeExpr_2_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5966:2: ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==KEYWORD_3) ) {
                int LA82_1 = input.LA(2);

                if ( (synpred128()) ) {
                    alt82=1;
                }
            }
            switch (alt82) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5967:2: KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4
                    {
                    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleConstructorCallExpression10556); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5971:1: ( (lv_parameterList_4_0= ruleParameterList ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==KEYWORD_63||LA81_0==KEYWORD_56||LA81_0==KEYWORD_52||(LA81_0>=KEYWORD_54 && LA81_0<=KEYWORD_55)||LA81_0==KEYWORD_51||(LA81_0>=KEYWORD_46 && LA81_0<=KEYWORD_47)||LA81_0==KEYWORD_49||LA81_0==KEYWORD_39||LA81_0==KEYWORD_42||LA81_0==KEYWORD_25||LA81_0==KEYWORD_27||LA81_0==KEYWORD_1||LA81_0==KEYWORD_3||(LA81_0>=KEYWORD_8 && LA81_0<=KEYWORD_9)||LA81_0==KEYWORD_13||(LA81_0>=KEYWORD_18 && LA81_0<=KEYWORD_19)||LA81_0==RULE_ID||LA81_0==RULE_STRING) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5972:1: (lv_parameterList_4_0= ruleParameterList )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5972:1: (lv_parameterList_4_0= ruleParameterList )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5973:3: lv_parameterList_4_0= ruleParameterList
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleConstructorCallExpression10577);
                            lv_parameterList_4_0=ruleParameterList();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		set(
                              	       			current, 
                              	       			"parameterList",
                              	        		lv_parameterList_4_0, 
                              	        		"ParameterList", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleConstructorCallExpression10589); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6000:3: ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==KEYWORD_35) ) {
                int LA83_1 = input.LA(2);

                if ( (LA83_1==RULE_ID) ) {
                    int LA83_3 = input.LA(3);

                    if ( (synpred129()) ) {
                        alt83=1;
                    }
                }
            }
            switch (alt83) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6001:2: KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) )
                    {
                    match(input,KEYWORD_35,FollowSets000.FOLLOW_KEYWORD_35_in_ruleConstructorCallExpression10603); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6005:1: ( (lv_alias_7_0= RULE_ID ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6006:1: (lv_alias_7_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6006:1: (lv_alias_7_0= RULE_ID )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6007:3: lv_alias_7_0= RULE_ID
                    {
                    lv_alias_7_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleConstructorCallExpression10620); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0(), "alias"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"alias",
                      	        		lv_alias_7_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6029:4: ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==KEYWORD_18) ) {
                int LA84_1 = input.LA(2);

                if ( (LA84_1==RULE_ID) ) {
                    int LA84_3 = input.LA(3);

                    if ( (LA84_3==KEYWORD_11) ) {
                        alt84=1;
                    }
                }
            }
            switch (alt84) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6030:1: (lv_contextBlock_8_0= ruleInitializationBlockExpression )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6030:1: (lv_contextBlock_8_0= ruleInitializationBlockExpression )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6031:3: lv_contextBlock_8_0= ruleInitializationBlockExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleInitializationBlockExpression_in_ruleConstructorCallExpression10648);
                    lv_contextBlock_8_0=ruleInitializationBlockExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"contextBlock",
                      	        		lv_contextBlock_8_0, 
                      	        		"InitializationBlockExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleConstructorCallExpression


    // $ANTLR start entryRuleInitializationBlockExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6061:1: entryRuleInitializationBlockExpression returns [EObject current=null] : iv_ruleInitializationBlockExpression= ruleInitializationBlockExpression EOF ;
    public final EObject entryRuleInitializationBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitializationBlockExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6062:2: (iv_ruleInitializationBlockExpression= ruleInitializationBlockExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6063:2: iv_ruleInitializationBlockExpression= ruleInitializationBlockExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInitializationBlockExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleInitializationBlockExpression_in_entryRuleInitializationBlockExpression10684);
            iv_ruleInitializationBlockExpression=ruleInitializationBlockExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInitializationBlockExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleInitializationBlockExpression10694); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInitializationBlockExpression


    // $ANTLR start ruleInitializationBlockExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6070:1: ruleInitializationBlockExpression returns [EObject current=null] : ( () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20 ) ;
    public final EObject ruleInitializationBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6075:6: ( ( () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6076:1: ( () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6076:1: ( () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6076:2: () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6076:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6077:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleInitializationBlockExpression10742); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6095:1: ( (lv_expressions_2_0= ruleInitializationExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6096:1: (lv_expressions_2_0= ruleInitializationExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6096:1: (lv_expressions_2_0= ruleInitializationExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6097:3: lv_expressions_2_0= ruleInitializationExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleInitializationExpression_in_ruleInitializationBlockExpression10763);
            lv_expressions_2_0=ruleInitializationExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getInitializationBlockExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		add(
              	       			current, 
              	       			"expressions",
              	        		lv_expressions_2_0, 
              	        		"InitializationExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleInitializationBlockExpression10774); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3(), null); 
                  
            }
            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleInitializationBlockExpression10785); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInitializationBlockExpression


    // $ANTLR start entryRuleInitializationExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6137:1: entryRuleInitializationExpression returns [EObject current=null] : iv_ruleInitializationExpression= ruleInitializationExpression EOF ;
    public final EObject entryRuleInitializationExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitializationExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6138:2: (iv_ruleInitializationExpression= ruleInitializationExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6139:2: iv_ruleInitializationExpression= ruleInitializationExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInitializationExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleInitializationExpression_in_entryRuleInitializationExpression10820);
            iv_ruleInitializationExpression=ruleInitializationExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInitializationExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleInitializationExpression10830); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleInitializationExpression


    // $ANTLR start ruleInitializationExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6146:1: ruleInitializationExpression returns [EObject current=null] : ( () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) ) ) ;
    public final EObject ruleInitializationExpression() throws RecognitionException {
        EObject current = null;

        Token lv_functionName_2_0=null;
        EObject lv_leftExpr_1_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6151:6: ( ( () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6152:1: ( () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6152:1: ( () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6152:2: () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6152:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6153:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6166:2: ( (lv_leftExpr_1_0= ruleFeatureOfThis ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6167:1: (lv_leftExpr_1_0= ruleFeatureOfThis )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6167:1: (lv_leftExpr_1_0= ruleFeatureOfThis )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6168:3: lv_leftExpr_1_0= ruleFeatureOfThis
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleFeatureOfThis_in_ruleInitializationExpression10888);
            lv_leftExpr_1_0=ruleFeatureOfThis();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"leftExpr",
              	        		lv_leftExpr_1_0, 
              	        		"FeatureOfThis", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6190:2: ( (lv_functionName_2_0= KEYWORD_11 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6191:1: (lv_functionName_2_0= KEYWORD_11 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6191:1: (lv_functionName_2_0= KEYWORD_11 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6192:3: lv_functionName_2_0= KEYWORD_11
            {
            lv_functionName_2_0=(Token)input.LT(1);
            match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleInitializationExpression10907); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0(), "functionName"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "functionName", lv_functionName_2_0, ":", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6212:2: ( (lv_rightExpr_3_0= ruleExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6213:1: (lv_rightExpr_3_0= ruleExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6213:1: (lv_rightExpr_3_0= ruleExpression )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6214:3: lv_rightExpr_3_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleInitializationExpression10941);
            lv_rightExpr_3_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"rightExpr",
              	        		lv_rightExpr_3_0, 
              	        		"Expression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleInitializationExpression


    // $ANTLR start entryRuleFeatureOfThis
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6244:1: entryRuleFeatureOfThis returns [EObject current=null] : iv_ruleFeatureOfThis= ruleFeatureOfThis EOF ;
    public final EObject entryRuleFeatureOfThis() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeatureOfThis = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6245:2: (iv_ruleFeatureOfThis= ruleFeatureOfThis EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6246:2: iv_ruleFeatureOfThis= ruleFeatureOfThis EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFeatureOfThisRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFeatureOfThis_in_entryRuleFeatureOfThis10976);
            iv_ruleFeatureOfThis=ruleFeatureOfThis();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFeatureOfThis; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFeatureOfThis10986); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleFeatureOfThis


    // $ANTLR start ruleFeatureOfThis
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6253:1: ruleFeatureOfThis returns [EObject current=null] : ( () ( (lv_featureName_1_0= RULE_ID ) ) ) ;
    public final EObject ruleFeatureOfThis() throws RecognitionException {
        EObject current = null;

        Token lv_featureName_1_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6258:6: ( ( () ( (lv_featureName_1_0= RULE_ID ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6259:1: ( () ( (lv_featureName_1_0= RULE_ID ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6259:1: ( () ( (lv_featureName_1_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6259:2: () ( (lv_featureName_1_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6259:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6260:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6273:2: ( (lv_featureName_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6274:1: (lv_featureName_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6274:1: (lv_featureName_1_0= RULE_ID )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6275:3: lv_featureName_1_0= RULE_ID
            {
            lv_featureName_1_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleFeatureOfThis11040); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0(), "featureName"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFeatureOfThisRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"featureName",
              	        		lv_featureName_1_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleFeatureOfThis


    // $ANTLR start entryRuleLiteral
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6305:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6306:2: (iv_ruleLiteral= ruleLiteral EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6307:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleLiteral_in_entryRuleLiteral11080);
            iv_ruleLiteral=ruleLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleLiteral11090); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteral


    // $ANTLR start ruleLiteral
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6314:1: ruleLiteral returns [EObject current=null] : (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_ValueLiteral_0 = null;

        EObject this_LiteralFunction_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6319:6: ( (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6320:1: (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6320:1: (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==RULE_STRING) ) {
                alt85=1;
            }
            else if ( (LA85_0==KEYWORD_18) ) {
                alt85=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("6320:1: (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction )", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6321:2: this_ValueLiteral_0= ruleValueLiteral
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleValueLiteral_in_ruleLiteral11140);
                    this_ValueLiteral_0=ruleValueLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_ValueLiteral_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6334:2: this_LiteralFunction_1= ruleLiteralFunction
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleLiteralFunction_in_ruleLiteral11170);
                    this_LiteralFunction_1=ruleLiteralFunction();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_LiteralFunction_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteral


    // $ANTLR start entryRuleLiteralFunction
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6353:1: entryRuleLiteralFunction returns [EObject current=null] : iv_ruleLiteralFunction= ruleLiteralFunction EOF ;
    public final EObject entryRuleLiteralFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralFunction = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6354:2: (iv_ruleLiteralFunction= ruleLiteralFunction EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6355:2: iv_ruleLiteralFunction= ruleLiteralFunction EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralFunctionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction11204);
            iv_ruleLiteralFunction=ruleLiteralFunction();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteralFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleLiteralFunction11214); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralFunction


    // $ANTLR start ruleLiteralFunction
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6362:1: ruleLiteralFunction returns [EObject current=null] : ( KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20 ) ;
    public final EObject ruleLiteralFunction() throws RecognitionException {
        EObject current = null;

        EObject this_ClosureExpression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6367:6: ( ( KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6368:1: ( KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6368:1: ( KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6369:2: KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20
            {
            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleLiteralFunction11250); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureExpression_in_ruleLiteralFunction11275);
            this_ClosureExpression_1=ruleClosureExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_ClosureExpression_1; 
                      currentNode = currentNode.getParent();
                  
            }
            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleLiteralFunction11285); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleLiteralFunction


    // $ANTLR start entryRuleClosureExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6398:1: entryRuleClosureExpression returns [EObject current=null] : iv_ruleClosureExpression= ruleClosureExpression EOF ;
    public final EObject entryRuleClosureExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClosureExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6399:2: (iv_ruleClosureExpression= ruleClosureExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6400:2: iv_ruleClosureExpression= ruleClosureExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getClosureExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureExpression_in_entryRuleClosureExpression11320);
            iv_ruleClosureExpression=ruleClosureExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleClosureExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleClosureExpression11330); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleClosureExpression


    // $ANTLR start ruleClosureExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6407:1: ruleClosureExpression returns [EObject current=null] : ( () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) ) ) ;
    public final EObject ruleClosureExpression() throws RecognitionException {
        EObject current = null;

        Token lv_varArgs_9_0=null;
        Token lv_varArgs_11_0=null;
        EObject lv_returnType_2_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_funcExpr_14_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6412:6: ( ( () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6413:1: ( () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6413:1: ( () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6413:2: () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6413:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6414:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getClosureExpressionAccess().getFunctionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getClosureExpressionAccess().getFunctionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6427:2: ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==KEYWORD_13) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6428:2: KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15
                    {
                    match(input,KEYWORD_13,FollowSets000.FOLLOW_KEYWORD_13_in_ruleClosureExpression11379); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6432:1: ( (lv_returnType_2_0= ruleTypeRef ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6433:1: (lv_returnType_2_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6433:1: (lv_returnType_2_0= ruleTypeRef )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6434:3: lv_returnType_2_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleClosureExpression11400);
                    lv_returnType_2_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"returnType",
                      	        		lv_returnType_2_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_15,FollowSets000.FOLLOW_KEYWORD_15_in_ruleClosureExpression11411); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:3: ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )?
            int alt90=3;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:4: ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:4: ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:5: ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:5: ( KEYWORD_19 )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==KEYWORD_19) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6462:2: KEYWORD_19
                            {
                            match(input,KEYWORD_19,FollowSets000.FOLLOW_KEYWORD_19_in_ruleClosureExpression11427); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0(), null); 
                                  
                            }

                            }
                            break;

                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6466:3: ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6466:4: ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )?
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6466:4: ( (lv_parameters_5_0= ruleParameterDeclaration ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6467:1: (lv_parameters_5_0= ruleParameterDeclaration )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6467:1: (lv_parameters_5_0= ruleParameterDeclaration )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6468:3: lv_parameters_5_0= ruleParameterDeclaration
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11451);
                    lv_parameters_5_0=ruleParameterDeclaration();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"parameters",
                      	        		lv_parameters_5_0, 
                      	        		"ParameterDeclaration", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6490:2: ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==KEYWORD_7) ) {
                            int LA88_1 = input.LA(2);

                            if ( (LA88_1==KEYWORD_3||LA88_1==RULE_ID) ) {
                                alt88=1;
                            }


                        }


                        switch (alt88) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6491:2: KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleClosureExpression11463); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6495:1: ( (lv_parameters_7_0= ruleParameterDeclaration ) )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6496:1: (lv_parameters_7_0= ruleParameterDeclaration )
                    	    {
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6496:1: (lv_parameters_7_0= ruleParameterDeclaration )
                    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6497:3: lv_parameters_7_0= ruleParameterDeclaration
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11484);
                    	    lv_parameters_7_0=ruleParameterDeclaration();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"parameters",
                    	      	        		lv_parameters_7_0, 
                    	      	        		"ParameterDeclaration", 
                    	      	        		currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6519:4: ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==KEYWORD_7) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6520:2: KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) )
                            {
                            match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleClosureExpression11498); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0(), null); 
                                  
                            }
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6524:1: ( (lv_varArgs_9_0= KEYWORD_39 ) )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6525:1: (lv_varArgs_9_0= KEYWORD_39 )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6525:1: (lv_varArgs_9_0= KEYWORD_39 )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6526:3: lv_varArgs_9_0= KEYWORD_39
                            {
                            lv_varArgs_9_0=(Token)input.LT(1);
                            match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleClosureExpression11517); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0(), "varArgs"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "varArgs", true, "...", lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6546:2: ( (lv_parameters_10_0= ruleParameterDeclaration ) )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6547:1: (lv_parameters_10_0= ruleParameterDeclaration )
                            {
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6547:1: (lv_parameters_10_0= ruleParameterDeclaration )
                            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6548:3: lv_parameters_10_0= ruleParameterDeclaration
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11551);
                            lv_parameters_10_0=ruleParameterDeclaration();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		add(
                              	       			current, 
                              	       			"parameters",
                              	        		lv_parameters_10_0, 
                              	        		"ParameterDeclaration", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6571:6: ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6571:6: ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6571:7: ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6571:7: ( (lv_varArgs_11_0= KEYWORD_39 ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6572:1: (lv_varArgs_11_0= KEYWORD_39 )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6572:1: (lv_varArgs_11_0= KEYWORD_39 )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6573:3: lv_varArgs_11_0= KEYWORD_39
                    {
                    lv_varArgs_11_0=(Token)input.LT(1);
                    match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleClosureExpression11581); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0(), "varArgs"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "varArgs", true, "...", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6593:2: ( (lv_parameters_12_0= ruleParameterDeclaration ) )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6594:1: (lv_parameters_12_0= ruleParameterDeclaration )
                    {
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6594:1: (lv_parameters_12_0= ruleParameterDeclaration )
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6595:3: lv_parameters_12_0= ruleParameterDeclaration
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11615);
                    lv_parameters_12_0=ruleParameterDeclaration();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"parameters",
                      	        		lv_parameters_12_0, 
                      	        		"ParameterDeclaration", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            match(input,KEYWORD_19,FollowSets000.FOLLOW_KEYWORD_19_in_ruleClosureExpression11629); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6622:1: ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6623:1: (lv_funcExpr_14_0= ruleOneOrManyExpressions )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6623:1: (lv_funcExpr_14_0= ruleOneOrManyExpressions )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6624:3: lv_funcExpr_14_0= ruleOneOrManyExpressions
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleOneOrManyExpressions_in_ruleClosureExpression11650);
            lv_funcExpr_14_0=ruleOneOrManyExpressions();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"funcExpr",
              	        		lv_funcExpr_14_0, 
              	        		"OneOrManyExpressions", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleClosureExpression


    // $ANTLR start entryRuleOneOrManyExpressions
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6654:1: entryRuleOneOrManyExpressions returns [EObject current=null] : iv_ruleOneOrManyExpressions= ruleOneOrManyExpressions EOF ;
    public final EObject entryRuleOneOrManyExpressions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOneOrManyExpressions = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6655:2: (iv_ruleOneOrManyExpressions= ruleOneOrManyExpressions EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6656:2: iv_ruleOneOrManyExpressions= ruleOneOrManyExpressions EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getOneOrManyExpressionsRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleOneOrManyExpressions_in_entryRuleOneOrManyExpressions11685);
            iv_ruleOneOrManyExpressions=ruleOneOrManyExpressions();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleOneOrManyExpressions; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleOneOrManyExpressions11695); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleOneOrManyExpressions


    // $ANTLR start ruleOneOrManyExpressions
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6663:1: ruleOneOrManyExpressions returns [EObject current=null] : (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression ) ;
    public final EObject ruleOneOrManyExpressions() throws RecognitionException {
        EObject current = null;

        EObject this_BlockExpressionWithoutBrackets_0 = null;

        EObject this_Expression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6668:6: ( (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )
            int alt91=2;
            switch ( input.LA(1) ) {
            case KEYWORD_50:
            case KEYWORD_43:
            case KEYWORD_44:
                {
                alt91=1;
                }
                break;
            case KEYWORD_3:
                {
                int LA91_3 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA91_4 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 4, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_52:
                {
                int LA91_6 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 6, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_9:
                {
                int LA91_7 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 7, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_42:
                {
                int LA91_8 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 8, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA91_9 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 9, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_18:
                {
                int LA91_10 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 10, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_51:
                {
                int LA91_11 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 11, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_54:
                {
                int LA91_12 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 12, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_55:
                {
                int LA91_13 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 13, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_63:
                {
                int LA91_14 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 14, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_56:
                {
                int LA91_15 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 15, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_47:
                {
                int LA91_16 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 16, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_46:
                {
                int LA91_17 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 17, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_49:
                {
                int LA91_18 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 18, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_1:
                {
                int LA91_19 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 19, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_8:
                {
                int LA91_20 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 20, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_25:
                {
                int LA91_21 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 21, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_27:
                {
                int LA91_22 = input.LA(2);

                if ( (synpred138()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 22, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("6669:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6670:2: this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpressionWithoutBrackets_in_ruleOneOrManyExpressions11745);
                    this_BlockExpressionWithoutBrackets_0=ruleBlockExpressionWithoutBrackets();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_BlockExpressionWithoutBrackets_0; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6683:2: this_Expression_1= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleOneOrManyExpressions11775);
                    this_Expression_1=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {
                       
                              current = this_Expression_1; 
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleOneOrManyExpressions


    // $ANTLR start entryRuleBlockExpressionWithoutBrackets
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6702:1: entryRuleBlockExpressionWithoutBrackets returns [EObject current=null] : iv_ruleBlockExpressionWithoutBrackets= ruleBlockExpressionWithoutBrackets EOF ;
    public final EObject entryRuleBlockExpressionWithoutBrackets() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlockExpressionWithoutBrackets = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6703:2: (iv_ruleBlockExpressionWithoutBrackets= ruleBlockExpressionWithoutBrackets EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6704:2: iv_ruleBlockExpressionWithoutBrackets= ruleBlockExpressionWithoutBrackets EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleBlockExpressionWithoutBrackets_in_entryRuleBlockExpressionWithoutBrackets11809);
            iv_ruleBlockExpressionWithoutBrackets=ruleBlockExpressionWithoutBrackets();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBlockExpressionWithoutBrackets; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleBlockExpressionWithoutBrackets11819); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleBlockExpressionWithoutBrackets


    // $ANTLR start ruleBlockExpressionWithoutBrackets
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6711:1: ruleBlockExpressionWithoutBrackets returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+ ) ;
    public final EObject ruleBlockExpressionWithoutBrackets() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_1_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6716:6: ( ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+ ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6717:1: ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+ )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6717:1: ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+ )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6717:2: () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6717:2: ()
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6718:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6731:2: ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+
            int cnt92=0;
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==KEYWORD_63||LA92_0==KEYWORD_56||LA92_0==KEYWORD_52||(LA92_0>=KEYWORD_54 && LA92_0<=KEYWORD_51)||(LA92_0>=KEYWORD_46 && LA92_0<=KEYWORD_47)||LA92_0==KEYWORD_49||(LA92_0>=KEYWORD_42 && LA92_0<=KEYWORD_44)||LA92_0==KEYWORD_25||LA92_0==KEYWORD_27||LA92_0==KEYWORD_1||LA92_0==KEYWORD_3||(LA92_0>=KEYWORD_8 && LA92_0<=KEYWORD_9)||LA92_0==KEYWORD_18||LA92_0==RULE_ID||LA92_0==RULE_STRING) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6731:3: ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6731:3: ( (lv_expressions_1_0= ruleTopLevelExpression ) )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6732:1: (lv_expressions_1_0= ruleTopLevelExpression )
            	    {
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6732:1: (lv_expressions_1_0= ruleTopLevelExpression )
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6733:3: lv_expressions_1_0= ruleTopLevelExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleTopLevelExpression_in_ruleBlockExpressionWithoutBrackets11878);
            	    lv_expressions_1_0=ruleTopLevelExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBlockExpressionWithoutBracketsRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		add(
            	      	       			current, 
            	      	       			"expressions",
            	      	        		lv_expressions_1_0, 
            	      	        		"TopLevelExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleBlockExpressionWithoutBrackets11889); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt92 >= 1 ) break loop92;
            	    if (backtracking>0) {failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(92, input);
                        throw eee;
                }
                cnt92++;
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleBlockExpressionWithoutBrackets


    // $ANTLR start entryRuleValueLiteral
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6768:1: entryRuleValueLiteral returns [EObject current=null] : iv_ruleValueLiteral= ruleValueLiteral EOF ;
    public final EObject entryRuleValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueLiteral = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6769:2: (iv_ruleValueLiteral= ruleValueLiteral EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6770:2: iv_ruleValueLiteral= ruleValueLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getValueLiteralRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral11926);
            iv_ruleValueLiteral=ruleValueLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleValueLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleValueLiteral11936); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleValueLiteral


    // $ANTLR start ruleValueLiteral
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6777:1: ruleValueLiteral returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleValueLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6782:6: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6783:1: ( (lv_value_0_0= RULE_STRING ) )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6783:1: ( (lv_value_0_0= RULE_STRING ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6784:1: (lv_value_0_0= RULE_STRING )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6784:1: (lv_value_0_0= RULE_STRING )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6785:3: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)input.LT(1);
            match(input,RULE_STRING,FollowSets000.FOLLOW_RULE_STRING_in_ruleValueLiteral11977); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0(), "value"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValueLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"value",
              	        		lv_value_0_0, 
              	        		"STRING", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleValueLiteral


    // $ANTLR start entryRuleParanthesizedExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6815:1: entryRuleParanthesizedExpression returns [EObject current=null] : iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF ;
    public final EObject entryRuleParanthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParanthesizedExpression = null;


        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6816:2: (iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6817:2: iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParanthesizedExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression12016);
            iv_ruleParanthesizedExpression=ruleParanthesizedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParanthesizedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleParanthesizedExpression12026); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end entryRuleParanthesizedExpression


    // $ANTLR start ruleParanthesizedExpression
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6824:1: ruleParanthesizedExpression returns [EObject current=null] : ( KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4 ) ;
    public final EObject ruleParanthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6829:6: ( ( KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4 ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6830:1: ( KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4 )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6830:1: ( KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4 )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6831:2: KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4
            {
            match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleParanthesizedExpression12062); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0(), null); 
                  
            }
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleParanthesizedExpression12087);
            this_Expression_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               
                      current = this_Expression_1; 
                      currentNode = currentNode.getParent();
                  
            }
            match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleParanthesizedExpression12097); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end ruleParanthesizedExpression


    // $ANTLR start entryRuleQID
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6860:1: entryRuleQID returns [String current=null] : iv_ruleQID= ruleQID EOF ;
    public final String entryRuleQID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQID = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6864:1: (iv_ruleQID= ruleQID EOF )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6865:2: iv_ruleQID= ruleQID EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getQIDRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleQID_in_entryRuleQID12139);
            iv_ruleQID=ruleQID();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleQID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleQID12150); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleQID


    // $ANTLR start ruleQID
    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6875:1: ruleQID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* ) ;
    public final AntlrDatatypeRuleToken ruleQID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_ID_3=null;
        Token kw=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_ID_8=null;

         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6881:6: ( (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* ) )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6882:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* )
            {
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6882:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* )
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6882:6: this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )*
            {
            this_ID_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleQID12194); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0(), null); 
                  
            }
            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6889:1: (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )*
            loop93:
            do {
                int alt93=4;
                switch ( input.LA(1) ) {
                case RULE_INT:
                    {
                    alt93=1;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt93=2;
                    }
                    break;
                case RULE_ID:
                    {
                    alt93=3;
                    }
                    break;

                }

                switch (alt93) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6889:6: this_INT_1= RULE_INT
            	    {
            	    this_INT_1=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleQID12215); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_INT_1);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6897:10: this_HEX_2= RULE_HEX
            	    {
            	    this_HEX_2=(Token)input.LT(1);
            	    match(input,RULE_HEX,FollowSets000.FOLLOW_RULE_HEX_in_ruleQID12241); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_HEX_2);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6905:10: this_ID_3= RULE_ID
            	    {
            	    this_ID_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleQID12267); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_3);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6912:3: (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==KEYWORD_9) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6913:2: kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    {
            	    kw=(Token)input.LT(1);
            	    match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_ruleQID12288); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              current.merge(kw);
            	              createLeafNode(grammarAccess.getQIDAccess().getFullStopKeyword_2_0(), null); 
            	          
            	    }
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleQID12303); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_5);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6925:1: (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    loop94:
            	    do {
            	        int alt94=4;
            	        switch ( input.LA(1) ) {
            	        case RULE_INT:
            	            {
            	            alt94=1;
            	            }
            	            break;
            	        case RULE_HEX:
            	            {
            	            alt94=2;
            	            }
            	            break;
            	        case RULE_ID:
            	            {
            	            alt94=3;
            	            }
            	            break;

            	        }

            	        switch (alt94) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6925:6: this_INT_6= RULE_INT
            	    	    {
            	    	    this_INT_6=(Token)input.LT(1);
            	    	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleQID12324); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_INT_6);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6933:10: this_HEX_7= RULE_HEX
            	    	    {
            	    	    this_HEX_7=(Token)input.LT(1);
            	    	    match(input,RULE_HEX,FollowSets000.FOLLOW_RULE_HEX_in_ruleQID12350); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_HEX_7);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6941:10: this_ID_8= RULE_ID
            	    	    {
            	    	    this_ID_8=(Token)input.LT(1);
            	    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleQID12376); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_ID_8);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop94;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end ruleQID

    // $ANTLR start synpred7
    public final void synpred7_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:354:4: ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:354:4: ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:354:4: ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:355:5: {...}? => ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred7", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:355:101: ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:356:6: ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:359:6: ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:360:2: KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12
        {
        match(input,KEYWORD_55,FollowSets000.FOLLOW_KEYWORD_55_in_synpred7540); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred7551); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:369:1: ( ( rulePath ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:370:1: ( rulePath )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:370:1: ( rulePath )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:371:3: rulePath
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_rulePath_in_synpred7572);
        rulePath();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred7583); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7

    // $ANTLR start synpred8
    public final void synpred8_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:405:4: ( ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:405:4: ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:405:4: ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:406:5: {...}? => ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred8", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:406:101: ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:407:6: ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:410:6: ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:411:2: KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12
        {
        match(input,KEYWORD_54,FollowSets000.FOLLOW_KEYWORD_54_in_synpred8646); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred8657); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:420:1: ( ( rulePath ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:421:1: ( rulePath )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:421:1: ( rulePath )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:422:3: rulePath
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_rulePath_in_synpred8678);
        rulePath();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred8689); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred8

    // $ANTLR start synpred9
    public final void synpred9_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:462:2: ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:462:2: KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12
        {
        match(input,KEYWORD_60,FollowSets000.FOLLOW_KEYWORD_60_in_synpred9752); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred9763); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:471:1: ( ( ruleProvidedCapability ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:472:1: ( ruleProvidedCapability )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:472:1: ( ruleProvidedCapability )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:473:3: ruleProvidedCapability
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleProvidedCapability_in_synpred9784);
        ruleProvidedCapability();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred9795); if (failed) return ;

        }
    }
    // $ANTLR end synpred9

    // $ANTLR start synpred10
    public final void synpred10_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:456:4: ( ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:456:4: ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:456:4: ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:457:5: {...}? => ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:457:101: ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:458:6: ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:461:6: ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+
        int cnt97=0;
        loop97:
        do {
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==KEYWORD_60) ) {
                alt97=1;
            }


            switch (alt97) {
        	case 1 :
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:462:2: KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12
        	    {
        	    match(input,KEYWORD_60,FollowSets000.FOLLOW_KEYWORD_60_in_synpred10752); if (failed) return ;
        	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred10763); if (failed) return ;
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:471:1: ( ( ruleProvidedCapability ) )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:472:1: ( ruleProvidedCapability )
        	    {
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:472:1: ( ruleProvidedCapability )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:473:3: ruleProvidedCapability
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleProvidedCapability_in_synpred10784);
        	    ruleProvidedCapability();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }

        	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred10795); if (failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt97 >= 1 ) break loop97;
        	    if (backtracking>0) {failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(97, input);
                    throw eee;
            }
            cnt97++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred10

    // $ANTLR start synpred11
    public final void synpred11_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:513:2: ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:513:2: KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12
        {
        match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_synpred11859); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred11870); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:522:1: ( ( ruleAliasedRequiredCapability ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:523:1: ( ruleAliasedRequiredCapability )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:523:1: ( ruleAliasedRequiredCapability )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:524:3: ruleAliasedRequiredCapability
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAliasedRequiredCapability_in_synpred11891);
        ruleAliasedRequiredCapability();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred11902); if (failed) return ;

        }
    }
    // $ANTLR end synpred11

    // $ANTLR start synpred12
    public final void synpred12_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:507:4: ( ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:507:4: ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:507:4: ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:508:5: {...}? => ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:508:101: ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:509:6: ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:512:6: ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+
        int cnt98=0;
        loop98:
        do {
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==KEYWORD_61) ) {
                alt98=1;
            }


            switch (alt98) {
        	case 1 :
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:513:2: KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12
        	    {
        	    match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_synpred12859); if (failed) return ;
        	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred12870); if (failed) return ;
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:522:1: ( ( ruleAliasedRequiredCapability ) )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:523:1: ( ruleAliasedRequiredCapability )
        	    {
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:523:1: ( ruleAliasedRequiredCapability )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:524:3: ruleAliasedRequiredCapability
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleAliasedRequiredCapability_in_synpred12891);
        	    ruleAliasedRequiredCapability();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }

        	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred12902); if (failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt98 >= 1 ) break loop98;
        	    if (backtracking>0) {failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(98, input);
                    throw eee;
            }
            cnt98++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred12

    // $ANTLR start synpred13
    public final void synpred13_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:564:2: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:564:2: KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12
        {
        match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_synpred13966); if (failed) return ;
        match(input,KEYWORD_41,FollowSets000.FOLLOW_KEYWORD_41_in_synpred13977); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred13988); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:578:1: ( ( ruleRequiredCapability ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:579:1: ( ruleRequiredCapability )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:579:1: ( ruleRequiredCapability )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:580:3: ruleRequiredCapability
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleRequiredCapability_in_synpred131009);
        ruleRequiredCapability();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred131020); if (failed) return ;

        }
    }
    // $ANTLR end synpred13

    // $ANTLR start synpred14
    public final void synpred14_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:558:4: ( ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:558:4: ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:558:4: ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:559:5: {...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred14", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:559:101: ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:560:6: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:563:6: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+
        int cnt99=0;
        loop99:
        do {
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==KEYWORD_61) ) {
                alt99=1;
            }


            switch (alt99) {
        	case 1 :
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:564:2: KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12
        	    {
        	    match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_synpred14966); if (failed) return ;
        	    match(input,KEYWORD_41,FollowSets000.FOLLOW_KEYWORD_41_in_synpred14977); if (failed) return ;
        	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred14988); if (failed) return ;
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:578:1: ( ( ruleRequiredCapability ) )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:579:1: ( ruleRequiredCapability )
        	    {
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:579:1: ( ruleRequiredCapability )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:580:3: ruleRequiredCapability
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleRequiredCapability_in_synpred141009);
        	    ruleRequiredCapability();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }

        	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred141020); if (failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt99 >= 1 ) break loop99;
        	    if (backtracking>0) {failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(99, input);
                    throw eee;
            }
            cnt99++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred14

    // $ANTLR start synpred15
    public final void synpred15_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:620:1: ( ( ruleFunction ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:620:1: ( ruleFunction )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:620:1: ( ruleFunction )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:621:3: ruleFunction
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleFunction_in_synpred151093);
        ruleFunction();
        _fsp--;
        if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred15

    // $ANTLR start synpred16
    public final void synpred16_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:614:4: ( ({...}? => ( ( ( ruleFunction ) )+ ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:614:4: ({...}? => ( ( ( ruleFunction ) )+ ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:614:4: ({...}? => ( ( ( ruleFunction ) )+ ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:615:5: {...}? => ( ( ( ruleFunction ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred16", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:615:101: ( ( ( ruleFunction ) )+ )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:616:6: ( ( ruleFunction ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:619:6: ( ( ruleFunction ) )+
        int cnt100=0;
        loop100:
        do {
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==KEYWORD_59||LA100_0==KEYWORD_50||LA100_0==RULE_DOCUMENTATION||LA100_0==RULE_ID) ) {
                alt100=1;
            }


            switch (alt100) {
        	case 1 :
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:620:1: ( ruleFunction )
        	    {
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:620:1: ( ruleFunction )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:621:3: ruleFunction
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleFunction_in_synpred161093);
        	    ruleFunction();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt100 >= 1 ) break loop100;
        	    if (backtracking>0) {failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(100, input);
                    throw eee;
            }
            cnt100++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred16

    // $ANTLR start synpred18
    public final void synpred18_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:757:4: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:757:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:757:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:758:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred18", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:758:117: ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:759:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:762:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:763:2: KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12
        {
        match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_synpred181347); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred181358); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:772:1: ( ( ruleExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:773:1: ( ruleExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:773:1: ( ruleExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:774:3: ruleExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleExpression_in_synpred181379);
        ruleExpression();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred181390); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred18

    // $ANTLR start synpred19
    public final void synpred19_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:808:4: ( ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:808:4: ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:808:4: ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:809:5: {...}? => ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred19", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:809:117: ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:810:6: ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:813:6: ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:814:2: KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12
        {
        match(input,KEYWORD_45,FollowSets000.FOLLOW_KEYWORD_45_in_synpred191453); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred191464); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:823:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:824:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:824:1: ( RULE_ID )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:825:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred191481); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred191497); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred19

    // $ANTLR start synpred20
    public final void synpred20_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:859:4: ( ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:859:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:859:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:860:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred20", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:860:117: ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:861:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:864:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:865:2: KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12
        {
        match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_synpred201560); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred201571); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:874:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:875:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:875:1: ( RULE_ID )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:876:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred201588); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred201604); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred20

    // $ANTLR start synpred24
    public final void synpred24_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1057:4: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1057:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1057:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1058:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred24", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1058:124: ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1059:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1062:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1063:2: KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12
        {
        match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_synpred241912); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred241923); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1072:1: ( ( ruleExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1073:1: ( ruleExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1073:1: ( ruleExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1074:3: ruleExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleExpression_in_synpred241944);
        ruleExpression();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred241955); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred24

    // $ANTLR start synpred25
    public final void synpred25_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1108:4: ( ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1108:4: ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1108:4: ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1109:5: {...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred25", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1109:124: ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1110:6: ( ( ( KEYWORD_53 ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1113:6: ( ( ( KEYWORD_53 ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1113:7: ( ( KEYWORD_53 ) ) KEYWORD_12
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1113:7: ( ( KEYWORD_53 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1114:1: ( KEYWORD_53 )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1114:1: ( KEYWORD_53 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1115:3: KEYWORD_53
        {
        match(input,KEYWORD_53,FollowSets000.FOLLOW_KEYWORD_53_in_synpred252026); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred252050); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred25

    // $ANTLR start synpred26
    public final void synpred26_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1147:4: ( ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1147:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1147:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1148:5: {...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred26", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1148:124: ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1149:6: ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1152:6: ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1153:2: KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12
        {
        match(input,KEYWORD_65,FollowSets000.FOLLOW_KEYWORD_65_in_synpred262113); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred262124); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1162:1: ( ( RULE_INT ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1163:1: ( RULE_INT )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1163:1: ( RULE_INT )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1164:3: RULE_INT
        {
        match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_synpred262141); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred262157); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred26

    // $ANTLR start synpred27
    public final void synpred27_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1198:4: ( ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1198:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1198:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1199:5: {...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred27", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1199:124: ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1200:6: ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1203:6: ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1204:2: KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12
        {
        match(input,KEYWORD_64,FollowSets000.FOLLOW_KEYWORD_64_in_synpred272220); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred272231); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1213:1: ( ( RULE_INT ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1214:1: ( RULE_INT )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1214:1: ( RULE_INT )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1215:3: RULE_INT
        {
        match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_synpred272248); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred272264); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27

    // $ANTLR start synpred28
    public final void synpred28_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1249:4: ( ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1249:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1249:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1250:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred28", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1250:124: ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1251:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1254:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1255:2: KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12
        {
        match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_synpred282327); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred282338); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1264:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1265:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1265:1: ( RULE_ID )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1266:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred282355); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred282371); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred28

    // $ANTLR start synpred30
    public final void synpred30_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1431:4: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1431:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1431:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1432:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred30", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1432:117: ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1433:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1436:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1437:2: KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12
        {
        match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_synpred302648); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred302659); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1446:1: ( ( ruleExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1447:1: ( ruleExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1447:1: ( ruleExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1448:3: ruleExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleExpression_in_synpred302680);
        ruleExpression();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred302691); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred30

    // $ANTLR start synpred31
    public final void synpred31_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1482:4: ( ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1482:4: ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1482:4: ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1483:5: {...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred31", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1483:117: ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1484:6: ( ( ( KEYWORD_53 ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1487:6: ( ( ( KEYWORD_53 ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1487:7: ( ( KEYWORD_53 ) ) KEYWORD_12
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1487:7: ( ( KEYWORD_53 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1488:1: ( KEYWORD_53 )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1488:1: ( KEYWORD_53 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1489:3: KEYWORD_53
        {
        match(input,KEYWORD_53,FollowSets000.FOLLOW_KEYWORD_53_in_synpred312762); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred312786); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31

    // $ANTLR start synpred32
    public final void synpred32_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1521:4: ( ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1521:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1521:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1522:5: {...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred32", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1522:117: ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1523:6: ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1526:6: ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1527:2: KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12
        {
        match(input,KEYWORD_65,FollowSets000.FOLLOW_KEYWORD_65_in_synpred322849); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred322860); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1536:1: ( ( RULE_INT ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1537:1: ( RULE_INT )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1537:1: ( RULE_INT )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1538:3: RULE_INT
        {
        match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_synpred322877); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred322893); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred32

    // $ANTLR start synpred33
    public final void synpred33_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1572:4: ( ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1572:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1572:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1573:5: {...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred33", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1573:117: ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1574:6: ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1577:6: ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1578:2: KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12
        {
        match(input,KEYWORD_64,FollowSets000.FOLLOW_KEYWORD_64_in_synpred332956); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred332967); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1587:1: ( ( RULE_INT ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1588:1: ( RULE_INT )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1588:1: ( RULE_INT )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1589:3: RULE_INT
        {
        match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_synpred332984); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred333000); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred33

    // $ANTLR start synpred34
    public final void synpred34_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1623:4: ( ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1623:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1623:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1624:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred34", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
        }
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1624:117: ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1625:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1628:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1629:2: KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12
        {
        match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_synpred343063); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred343074); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1638:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1639:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1639:1: ( RULE_ID )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1640:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred343091); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred343107); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred34

    // $ANTLR start synpred40
    public final void synpred40_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1870:2: ( ruleClosureParameter )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:1870:2: ruleClosureParameter
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleClosureParameter_in_synpred403604);
        ruleClosureParameter();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred40

    // $ANTLR start synpred67
    public final void synpred67_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2709:2: ( ruleVarDeclaration )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2709:2: ruleVarDeclaration
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleVarDeclaration_in_synpred675114);
        ruleVarDeclaration();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred67

    // $ANTLR start synpred69
    public final void synpred69_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2816:2: ( () ( ( ruleAssignmentOperator ) ) ( ( ruleAssignmentExpression ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2816:2: () ( ( ruleAssignmentOperator ) ) ( ( ruleAssignmentExpression ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2816:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2817:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2835:2: ( ( ruleAssignmentOperator ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2836:1: ( ruleAssignmentOperator )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2836:1: ( ruleAssignmentOperator )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2837:3: ruleAssignmentOperator
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAssignmentOperator_in_synpred695393);
        ruleAssignmentOperator();
        _fsp--;
        if (failed) return ;

        }


        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2859:2: ( ( ruleAssignmentExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2860:1: ( ruleAssignmentExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2860:1: ( ruleAssignmentExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:2861:3: ruleAssignmentExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_synpred695414);
        ruleAssignmentExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred69

    // $ANTLR start synpred83
    public final void synpred83_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3668:2: ( () KEYWORD_36 ( ( ruleAndExpression ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3668:2: () KEYWORD_36 ( ( ruleAndExpression ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3668:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3669:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_36,FollowSets000.FOLLOW_KEYWORD_36_in_synpred836734); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3692:1: ( ( ruleAndExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3693:1: ( ruleAndExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3693:1: ( ruleAndExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3694:3: ruleAndExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAndExpression_in_synpred836755);
        ruleAndExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred83

    // $ANTLR start synpred84
    public final void synpred84_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3751:2: ( () KEYWORD_23 ( ( ruleRelationalExpression ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3751:2: () KEYWORD_23 ( ( ruleRelationalExpression ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3751:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3752:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_23,FollowSets000.FOLLOW_KEYWORD_23_in_synpred846875); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3775:1: ( ( ruleRelationalExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3776:1: ( ruleRelationalExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3776:1: ( ruleRelationalExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3777:3: ruleRelationalExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleRelationalExpression_in_synpred846896);
        ruleRelationalExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred84

    // $ANTLR start synpred85
    public final void synpred85_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3834:2: ( () ( ( ruleRelationalOperator ) ) ( ( ruleAdditiveExpression ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3834:2: () ( ( ruleRelationalOperator ) ) ( ( ruleAdditiveExpression ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3834:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3835:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3853:2: ( ( ruleRelationalOperator ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3854:1: ( ruleRelationalOperator )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3854:1: ( ruleRelationalOperator )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3855:3: ruleRelationalOperator
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleRelationalOperator_in_synpred857026);
        ruleRelationalOperator();
        _fsp--;
        if (failed) return ;

        }


        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3877:2: ( ( ruleAdditiveExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3878:1: ( ruleAdditiveExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3878:1: ( ruleAdditiveExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3879:3: ruleAdditiveExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAdditiveExpression_in_synpred857047);
        ruleAdditiveExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred85

    // $ANTLR start synpred87
    public final void synpred87_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3936:2: ( () ( ( ( KEYWORD_6 | KEYWORD_8 ) ) ) ( ( ruleMultiplicativeExpression ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3936:2: () ( ( ( KEYWORD_6 | KEYWORD_8 ) ) ) ( ( ruleMultiplicativeExpression ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3936:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3937:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3955:2: ( ( ( KEYWORD_6 | KEYWORD_8 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3956:1: ( ( KEYWORD_6 | KEYWORD_8 ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3956:1: ( ( KEYWORD_6 | KEYWORD_8 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3957:1: ( KEYWORD_6 | KEYWORD_8 )
        {
        if ( input.LA(1)==KEYWORD_6||input.LA(1)==KEYWORD_8 ) {
            input.consume();
            errorRecovery=false;failed=false;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            MismatchedSetException mse =
                new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FollowSets000.FOLLOW_set_in_synpred877169);    throw mse;
        }


        }


        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:3999:2: ( ( ruleMultiplicativeExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4000:1: ( ruleMultiplicativeExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4000:1: ( ruleMultiplicativeExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4001:3: ruleMultiplicativeExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleMultiplicativeExpression_in_synpred877244);
        ruleMultiplicativeExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred87

    // $ANTLR start synpred90
    public final void synpred90_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4058:2: ( () ( ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) ) ) ( ( ruleSetExpression ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4058:2: () ( ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) ) ) ( ( ruleSetExpression ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4058:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4059:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4077:2: ( ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4078:1: ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4078:1: ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4079:1: ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 )
        {
        if ( input.LA(1)==KEYWORD_2||input.LA(1)==KEYWORD_5||input.LA(1)==KEYWORD_10 ) {
            input.consume();
            errorRecovery=false;failed=false;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            MismatchedSetException mse =
                new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FollowSets000.FOLLOW_set_in_synpred907366);    throw mse;
        }


        }


        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4140:2: ( ( ruleSetExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4141:1: ( ruleSetExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4141:1: ( ruleSetExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4142:3: ruleSetExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleSetExpression_in_synpred907471);
        ruleSetExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred90

    // $ANTLR start synpred91
    public final void synpred91_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4199:2: ( () ( ( KEYWORD_29 ) ) ( ( ruleUnaryOrInfixExpression ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4199:2: () ( ( KEYWORD_29 ) ) ( ( ruleUnaryOrInfixExpression ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4199:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4200:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4218:2: ( ( KEYWORD_29 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4219:1: ( KEYWORD_29 )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4219:1: ( KEYWORD_29 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4220:3: KEYWORD_29
        {
        match(input,KEYWORD_29,FollowSets000.FOLLOW_KEYWORD_29_in_synpred917599); if (failed) return ;

        }


        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4240:2: ( ( ruleUnaryOrInfixExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4241:1: ( ruleUnaryOrInfixExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4241:1: ( ruleUnaryOrInfixExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4242:3: ruleUnaryOrInfixExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleUnaryOrInfixExpression_in_synpred917633);
        ruleUnaryOrInfixExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred91

    // $ANTLR start synpred97
    public final void synpred97_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4570:2: ( () ( ( ( KEYWORD_27 | KEYWORD_25 ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4570:2: () ( ( ( KEYWORD_27 | KEYWORD_25 ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4570:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4571:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4589:2: ( ( ( KEYWORD_27 | KEYWORD_25 ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4590:1: ( ( KEYWORD_27 | KEYWORD_25 ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4590:1: ( ( KEYWORD_27 | KEYWORD_25 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4591:1: ( KEYWORD_27 | KEYWORD_25 )
        {
        if ( input.LA(1)==KEYWORD_25||input.LA(1)==KEYWORD_27 ) {
            input.consume();
            errorRecovery=false;failed=false;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            MismatchedSetException mse =
                new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FollowSets000.FOLLOW_set_in_synpred978249);    throw mse;
        }


        }


        }


        }
    }
    // $ANTLR end synpred97

    // $ANTLR start synpred99
    public final void synpred99_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:2: ( ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:2: ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:2: ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:3: () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4668:3: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4669:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_synpred998424); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4692:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4693:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4693:1: ( RULE_ID )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4694:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred998441); if (failed) return ;

        }


        }

        match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_synpred998457); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4721:1: ( ( ruleParameterList ) )?
        int alt110=2;
        int LA110_0 = input.LA(1);

        if ( (LA110_0==KEYWORD_63||LA110_0==KEYWORD_56||LA110_0==KEYWORD_52||(LA110_0>=KEYWORD_54 && LA110_0<=KEYWORD_55)||LA110_0==KEYWORD_51||(LA110_0>=KEYWORD_46 && LA110_0<=KEYWORD_47)||LA110_0==KEYWORD_49||LA110_0==KEYWORD_39||LA110_0==KEYWORD_42||LA110_0==KEYWORD_25||LA110_0==KEYWORD_27||LA110_0==KEYWORD_1||LA110_0==KEYWORD_3||(LA110_0>=KEYWORD_8 && LA110_0<=KEYWORD_9)||LA110_0==KEYWORD_13||(LA110_0>=KEYWORD_18 && LA110_0<=KEYWORD_19)||LA110_0==RULE_ID||LA110_0==RULE_STRING) ) {
            alt110=1;
        }
        switch (alt110) {
            case 1 :
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4722:1: ( ruleParameterList )
                {
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4722:1: ( ruleParameterList )
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4723:3: ruleParameterList
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_synpred998478);
                ruleParameterList();
                _fsp--;
                if (failed) return ;

                }


                }
                break;

        }

        match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_synpred998490); if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred99

    // $ANTLR start synpred100
    public final void synpred100_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:6: ( ( () KEYWORD_16 ( ( ruleExpression ) ) KEYWORD_17 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:6: ( () KEYWORD_16 ( ( ruleExpression ) ) KEYWORD_17 )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:6: ( () KEYWORD_16 ( ( ruleExpression ) ) KEYWORD_17 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:7: () KEYWORD_16 ( ( ruleExpression ) ) KEYWORD_17
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4751:7: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4752:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_16,FollowSets000.FOLLOW_KEYWORD_16_in_synpred1008521); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4775:1: ( ( ruleExpression ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4776:1: ( ruleExpression )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4776:1: ( ruleExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4777:3: ruleExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleExpression_in_synpred1008542);
        ruleExpression();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_17,FollowSets000.FOLLOW_KEYWORD_17_in_synpred1008553); if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred100

    // $ANTLR start synpred101
    public final void synpred101_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:6: ( ( () KEYWORD_9 ( ( RULE_ID ) ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:6: ( () KEYWORD_9 ( ( RULE_ID ) ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:6: ( () KEYWORD_9 ( ( RULE_ID ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:7: () KEYWORD_9 ( ( RULE_ID ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4805:7: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4806:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_synpred1018584); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4829:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4830:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4830:1: ( RULE_ID )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4831:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred1018601); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred101

    // $ANTLR start synpred103
    public final void synpred103_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4888:2: ( () KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4888:2: () KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4888:2: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4889:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_synpred1038727); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4912:1: ( ( ruleParameterList ) )?
        int alt111=2;
        int LA111_0 = input.LA(1);

        if ( (LA111_0==KEYWORD_63||LA111_0==KEYWORD_56||LA111_0==KEYWORD_52||(LA111_0>=KEYWORD_54 && LA111_0<=KEYWORD_55)||LA111_0==KEYWORD_51||(LA111_0>=KEYWORD_46 && LA111_0<=KEYWORD_47)||LA111_0==KEYWORD_49||LA111_0==KEYWORD_39||LA111_0==KEYWORD_42||LA111_0==KEYWORD_25||LA111_0==KEYWORD_27||LA111_0==KEYWORD_1||LA111_0==KEYWORD_3||(LA111_0>=KEYWORD_8 && LA111_0<=KEYWORD_9)||LA111_0==KEYWORD_13||(LA111_0>=KEYWORD_18 && LA111_0<=KEYWORD_19)||LA111_0==RULE_ID||LA111_0==RULE_STRING) ) {
            alt111=1;
        }
        switch (alt111) {
            case 1 :
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4913:1: ( ruleParameterList )
                {
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4913:1: ( ruleParameterList )
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4914:3: ruleParameterList
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_synpred1038748);
                ruleParameterList();
                _fsp--;
                if (failed) return ;

                }


                }
                break;

        }

        match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_synpred1038760); if (failed) return ;

        }
    }
    // $ANTLR end synpred103

    // $ANTLR start synpred104
    public final void synpred104_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4965:2: ( ruleFeatureCall )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4965:2: ruleFeatureCall
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleFeatureCall_in_synpred1048857);
        ruleFeatureCall();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred104

    // $ANTLR start synpred106
    public final void synpred106_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4991:2: ( ruleValue )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:4991:2: ruleValue
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleValue_in_synpred1068917);
        ruleValue();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred106

    // $ANTLR start synpred107
    public final void synpred107_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5004:2: ( ruleLiteral )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5004:2: ruleLiteral
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleLiteral_in_synpred1078947);
        ruleLiteral();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred107

    // $ANTLR start synpred110
    public final void synpred110_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5043:2: ( ruleBlockExpression )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5043:2: ruleBlockExpression
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_synpred1109037);
        ruleBlockExpression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred110

    // $ANTLR start synpred125
    public final void synpred125_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:6: ( ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:6: ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:6: ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:7: () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5684:7: ()
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5685:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_synpred12510161); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5703:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5704:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5704:1: ( RULE_ID )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5705:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred12510178); if (failed) return ;

        }


        }

        match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_synpred12510194); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5732:1: ( ( ruleParameterList ) )?
        int alt113=2;
        int LA113_0 = input.LA(1);

        if ( (LA113_0==KEYWORD_63||LA113_0==KEYWORD_56||LA113_0==KEYWORD_52||(LA113_0>=KEYWORD_54 && LA113_0<=KEYWORD_55)||LA113_0==KEYWORD_51||(LA113_0>=KEYWORD_46 && LA113_0<=KEYWORD_47)||LA113_0==KEYWORD_49||LA113_0==KEYWORD_39||LA113_0==KEYWORD_42||LA113_0==KEYWORD_25||LA113_0==KEYWORD_27||LA113_0==KEYWORD_1||LA113_0==KEYWORD_3||(LA113_0>=KEYWORD_8 && LA113_0<=KEYWORD_9)||LA113_0==KEYWORD_13||(LA113_0>=KEYWORD_18 && LA113_0<=KEYWORD_19)||LA113_0==RULE_ID||LA113_0==RULE_STRING) ) {
            alt113=1;
        }
        switch (alt113) {
            case 1 :
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5733:1: ( ruleParameterList )
                {
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5733:1: ( ruleParameterList )
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5734:3: ruleParameterList
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getParameterListParameterListParserRuleCall_1_4_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_synpred12510215);
                ruleParameterList();
                _fsp--;
                if (failed) return ;

                }


                }
                break;

        }

        match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_synpred12510227); if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred125

    // $ANTLR start synpred128
    public final void synpred128_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5967:2: ( KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5967:2: KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4
        {
        match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_synpred12810556); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5971:1: ( ( ruleParameterList ) )?
        int alt114=2;
        int LA114_0 = input.LA(1);

        if ( (LA114_0==KEYWORD_63||LA114_0==KEYWORD_56||LA114_0==KEYWORD_52||(LA114_0>=KEYWORD_54 && LA114_0<=KEYWORD_55)||LA114_0==KEYWORD_51||(LA114_0>=KEYWORD_46 && LA114_0<=KEYWORD_47)||LA114_0==KEYWORD_49||LA114_0==KEYWORD_39||LA114_0==KEYWORD_42||LA114_0==KEYWORD_25||LA114_0==KEYWORD_27||LA114_0==KEYWORD_1||LA114_0==KEYWORD_3||(LA114_0>=KEYWORD_8 && LA114_0<=KEYWORD_9)||LA114_0==KEYWORD_13||(LA114_0>=KEYWORD_18 && LA114_0<=KEYWORD_19)||LA114_0==RULE_ID||LA114_0==RULE_STRING) ) {
            alt114=1;
        }
        switch (alt114) {
            case 1 :
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5972:1: ( ruleParameterList )
                {
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5972:1: ( ruleParameterList )
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:5973:3: ruleParameterList
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_synpred12810577);
                ruleParameterList();
                _fsp--;
                if (failed) return ;

                }


                }
                break;

        }

        match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_synpred12810589); if (failed) return ;

        }
    }
    // $ANTLR end synpred128

    // $ANTLR start synpred129
    public final void synpred129_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6001:2: ( KEYWORD_35 ( ( RULE_ID ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6001:2: KEYWORD_35 ( ( RULE_ID ) )
        {
        match(input,KEYWORD_35,FollowSets000.FOLLOW_KEYWORD_35_in_synpred12910603); if (failed) return ;
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6005:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6006:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6006:1: ( RULE_ID )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6007:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred12910620); if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred129

    // $ANTLR start synpred136
    public final void synpred136_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:4: ( ( ( KEYWORD_19 )? ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? ) ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:4: ( ( KEYWORD_19 )? ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? ) )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:4: ( ( KEYWORD_19 )? ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:5: ( KEYWORD_19 )? ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6461:5: ( KEYWORD_19 )?
        int alt115=2;
        int LA115_0 = input.LA(1);

        if ( (LA115_0==KEYWORD_19) ) {
            alt115=1;
        }
        switch (alt115) {
            case 1 :
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6462:2: KEYWORD_19
                {
                match(input,KEYWORD_19,FollowSets000.FOLLOW_KEYWORD_19_in_synpred13611427); if (failed) return ;

                }
                break;

        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6466:3: ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6466:4: ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )?
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6466:4: ( ( ruleParameterDeclaration ) )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6467:1: ( ruleParameterDeclaration )
        {
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6467:1: ( ruleParameterDeclaration )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6468:3: ruleParameterDeclaration
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_synpred13611451);
        ruleParameterDeclaration();
        _fsp--;
        if (failed) return ;

        }


        }

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6490:2: ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )*
        loop116:
        do {
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==KEYWORD_7) ) {
                int LA116_1 = input.LA(2);

                if ( (LA116_1==KEYWORD_3||LA116_1==RULE_ID) ) {
                    alt116=1;
                }


            }


            switch (alt116) {
        	case 1 :
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6491:2: KEYWORD_7 ( ( ruleParameterDeclaration ) )
        	    {
        	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_synpred13611463); if (failed) return ;
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6495:1: ( ( ruleParameterDeclaration ) )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6496:1: ( ruleParameterDeclaration )
        	    {
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6496:1: ( ruleParameterDeclaration )
        	    // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6497:3: ruleParameterDeclaration
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_synpred13611484);
        	    ruleParameterDeclaration();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop116;
            }
        } while (true);

        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6519:4: ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )?
        int alt117=2;
        int LA117_0 = input.LA(1);

        if ( (LA117_0==KEYWORD_7) ) {
            alt117=1;
        }
        switch (alt117) {
            case 1 :
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6520:2: KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) )
                {
                match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_synpred13611498); if (failed) return ;
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6524:1: ( ( KEYWORD_39 ) )
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6525:1: ( KEYWORD_39 )
                {
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6525:1: ( KEYWORD_39 )
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6526:3: KEYWORD_39
                {
                match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_synpred13611517); if (failed) return ;

                }


                }

                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6546:2: ( ( ruleParameterDeclaration ) )
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6547:1: ( ruleParameterDeclaration )
                {
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6547:1: ( ruleParameterDeclaration )
                // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6548:3: ruleParameterDeclaration
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_synpred13611551);
                ruleParameterDeclaration();
                _fsp--;
                if (failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred136

    // $ANTLR start synpred138
    public final void synpred138_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6670:2: ( ruleBlockExpressionWithoutBrackets )
        // ../org.eclipse.xtext.tests/src-gen/org/eclipse/xtext/parser/unorderedGroups/parser/antlr/internal/InternalExBacktrackingTestLanguage.g:6670:2: ruleBlockExpressionWithoutBrackets
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleBlockExpressionWithoutBrackets_in_synpred13811745);
        ruleBlockExpressionWithoutBrackets();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred138

    public final boolean synpred69() {
        backtracking++;
        int start = input.mark();
        try {
            synpred69_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred128() {
        backtracking++;
        int start = input.mark();
        try {
            synpred128_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred129() {
        backtracking++;
        int start = input.mark();
        try {
            synpred129_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred83() {
        backtracking++;
        int start = input.mark();
        try {
            synpred83_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred84() {
        backtracking++;
        int start = input.mark();
        try {
            synpred84_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred85() {
        backtracking++;
        int start = input.mark();
        try {
            synpred85_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred125() {
        backtracking++;
        int start = input.mark();
        try {
            synpred125_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred67() {
        backtracking++;
        int start = input.mark();
        try {
            synpred67_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred101() {
        backtracking++;
        int start = input.mark();
        try {
            synpred101_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred87() {
        backtracking++;
        int start = input.mark();
        try {
            synpred87_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred100() {
        backtracking++;
        int start = input.mark();
        try {
            synpred100_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred103() {
        backtracking++;
        int start = input.mark();
        try {
            synpred103_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred40() {
        backtracking++;
        int start = input.mark();
        try {
            synpred40_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred104() {
        backtracking++;
        int start = input.mark();
        try {
            synpred104_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred107() {
        backtracking++;
        int start = input.mark();
        try {
            synpred107_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred106() {
        backtracking++;
        int start = input.mark();
        try {
            synpred106_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred20() {
        backtracking++;
        int start = input.mark();
        try {
            synpred20_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred27() {
        backtracking++;
        int start = input.mark();
        try {
            synpred27_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred28() {
        backtracking++;
        int start = input.mark();
        try {
            synpred28_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred25() {
        backtracking++;
        int start = input.mark();
        try {
            synpred25_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred26() {
        backtracking++;
        int start = input.mark();
        try {
            synpred26_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred24() {
        backtracking++;
        int start = input.mark();
        try {
            synpred24_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred136() {
        backtracking++;
        int start = input.mark();
        try {
            synpred136_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred97() {
        backtracking++;
        int start = input.mark();
        try {
            synpred97_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred34() {
        backtracking++;
        int start = input.mark();
        try {
            synpred34_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred33() {
        backtracking++;
        int start = input.mark();
        try {
            synpred33_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred32() {
        backtracking++;
        int start = input.mark();
        try {
            synpred32_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred19() {
        backtracking++;
        int start = input.mark();
        try {
            synpred19_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred18() {
        backtracking++;
        int start = input.mark();
        try {
            synpred18_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred90() {
        backtracking++;
        int start = input.mark();
        try {
            synpred90_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred138() {
        backtracking++;
        int start = input.mark();
        try {
            synpred138_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred91() {
        backtracking++;
        int start = input.mark();
        try {
            synpred91_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred110() {
        backtracking++;
        int start = input.mark();
        try {
            synpred110_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred7() {
        backtracking++;
        int start = input.mark();
        try {
            synpred7_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred8() {
        backtracking++;
        int start = input.mark();
        try {
            synpred8_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred31() {
        backtracking++;
        int start = input.mark();
        try {
            synpred31_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred30() {
        backtracking++;
        int start = input.mark();
        try {
            synpred30_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred99() {
        backtracking++;
        int start = input.mark();
        try {
            synpred99_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred9() {
        backtracking++;
        int start = input.mark();
        try {
            synpred9_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred14() {
        backtracking++;
        int start = input.mark();
        try {
            synpred14_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred15() {
        backtracking++;
        int start = input.mark();
        try {
            synpred15_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred16() {
        backtracking++;
        int start = input.mark();
        try {
            synpred16_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred10() {
        backtracking++;
        int start = input.mark();
        try {
            synpred10_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred11() {
        backtracking++;
        int start = input.mark();
        try {
            synpred11_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred12() {
        backtracking++;
        int start = input.mark();
        try {
            synpred12_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred13() {
        backtracking++;
        int start = input.mark();
        try {
            synpred13_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }


    protected DFA25 dfa25 = new DFA25(this);
    protected DFA90 dfa90 = new DFA90(this);
    static final String DFA25_eotS =
        "\56\uffff";
    static final String DFA25_eofS =
        "\3\uffff\1\4\4\uffff\2\4\12\uffff\2\4\1\uffff\1\4\15\uffff\2\4\7"+
        "\uffff";
    static final String DFA25_minS =
        "\1\7\1\uffff\1\7\1\31\1\uffff\1\31\2\7\2\31\1\7\1\0\1\63\2\7\1\31"+
        "\1\107\1\54\1\32\1\0\2\31\1\32\1\31\1\64\1\107\1\64\1\107\1\54\2"+
        "\7\1\107\1\64\1\107\1\32\1\64\1\107\2\31\1\64\1\0\1\107\1\64\1\107"+
        "\1\64\1\0";
    static final String DFA25_maxS =
        "\1\111\1\uffff\1\111\1\107\1\uffff\1\100\2\111\2\100\1\111\1\0\1"+
        "\107\2\111\1\100\1\107\1\54\1\107\1\0\1\107\1\103\1\107\1\100\1"+
        "\64\1\107\1\67\1\107\1\54\2\111\1\107\1\67\2\107\1\64\2\107\1\103"+
        "\1\64\1\0\1\107\1\67\1\107\1\64\1\0";
    static final String DFA25_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\51\uffff";
    static final String DFA25_specialS =
        "\13\uffff\1\0\7\uffff\1\3\24\uffff\1\2\4\uffff\1\1}>";
    static final String[] DFA25_transitionS = {
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\1\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\2\4\uffff\2\4\3\uffff\1\1\4\uffff"+
            "\1\4\1\1\3\uffff\1\3\1\uffff\1\4",
            "",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\1\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\4\1\1\3\uffff\2\4\10\uffff\1\4\4"+
            "\uffff\1\5\1\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\7\3\4\2\uffff\1\6\3\4\2\uffff\1\1\3\uffff\1\1",
            "",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\2\4\1\10\2\4\1\1\3\4\2\uffff\4\4",
            "\1\4\3\uffff\1\4\4\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\12\uffff\1\4\1\uffff"+
            "\1\4\4\uffff\2\4\10\uffff\1\4\4\uffff\1\11\1\uffff\1\4",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\14\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\12\4\uffff\2\4\3\uffff\1\4\4\uffff"+
            "\2\4\3\uffff\1\13\1\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\1\1\4\1\uffff\2\4\1\uffff\11"+
            "\4\2\uffff\4\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\15\3\4\2\uffff\2\4\1\16\1\4",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\20\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\4\1\21\3\uffff\2\4\10\uffff\1\4"+
            "\4\uffff\1\17\1\uffff\1\4",
            "\1\uffff",
            "\1\22\23\uffff\1\23",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\4\4\uffff\2\4\3\uffff\1\4\4\uffff"+
            "\2\4\3\uffff\1\24\1\uffff\1\4",
            "\1\4\3\uffff\1\4\4\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\12\uffff\1\4\1\uffff"+
            "\1\4\4\uffff\2\4\10\uffff\1\4\4\uffff\1\25\1\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\2\4\1\27\2\4\1\26\3\4\2\uffff\4\4",
            "\1\30",
            "\1\31",
            "\1\33\31\uffff\1\34\22\uffff\1\32",
            "\1\uffff",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\35\3\4\2\uffff\2\4\1\36\1\4\2\uffff\1\4\3\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\7\3\4\2\uffff\4\4\2\uffff\1\1",
            "\1\37\54\uffff\1\40",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\31\1\4\1\uffff\2\4\1\uffff\11"+
            "\4\2\uffff\4\4",
            "\1\21",
            "\1\41",
            "\1\34\2\uffff\1\42",
            "\1\43",
            "\1\44",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\4\4\uffff\2\4\3\uffff\1\4\4\uffff"+
            "\2\4\3\uffff\1\45\1\uffff\1\4",
            "\1\4\3\uffff\1\4\4\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\12\uffff\1\4\1\uffff"+
            "\1\4\4\uffff\2\4\10\uffff\1\4\4\uffff\1\46\1\uffff\1\4",
            "\1\47",
            "\1\21\2\uffff\1\26",
            "\1\50",
            "\1\51\54\uffff\1\52",
            "\1\34",
            "\1\53",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\35\3\4\2\uffff\2\4\1\36\1\4\2\uffff\1\4\3\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\7\3\4\2\uffff\4\4\2\uffff\1\1",
            "\1\21",
            "\1\uffff",
            "\1\54",
            "\1\34\2\uffff\1\42",
            "\1\55",
            "\1\34",
            "\1\uffff"
    };

    static final short[] DFA25_eot = DFA.unpackEncodedString(DFA25_eotS);
    static final short[] DFA25_eof = DFA.unpackEncodedString(DFA25_eofS);
    static final char[] DFA25_min = DFA.unpackEncodedStringToUnsignedChars(DFA25_minS);
    static final char[] DFA25_max = DFA.unpackEncodedStringToUnsignedChars(DFA25_maxS);
    static final short[] DFA25_accept = DFA.unpackEncodedString(DFA25_acceptS);
    static final short[] DFA25_special = DFA.unpackEncodedString(DFA25_specialS);
    static final short[][] DFA25_transition;

    static {
        int numStates = DFA25_transitionS.length;
        DFA25_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA25_transition[i] = DFA.unpackEncodedString(DFA25_transitionS[i]);
        }
    }

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = DFA25_eot;
            this.eof = DFA25_eof;
            this.min = DFA25_min;
            this.max = DFA25_max;
            this.accept = DFA25_accept;
            this.special = DFA25_special;
            this.transition = DFA25_transition;
        }
        public String getDescription() {
            return "1869:1: (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter )";
        }
        public int specialStateTransition(int s, IntStream input) throws NoViableAltException {
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA25_11 = input.LA(1);

                         
                        int index25_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index25_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA25_45 = input.LA(1);

                         
                        int index25_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index25_45);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA25_40 = input.LA(1);

                         
                        int index25_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index25_40);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA25_19 = input.LA(1);

                         
                        int index25_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index25_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (backtracking>0) {failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA90_eotS =
        "\72\uffff";
    static final String DFA90_eofS =
        "\5\uffff\1\6\7\uffff\1\6\3\uffff\1\6\16\uffff\2\6\1\uffff\1\6\15"+
        "\uffff\2\6\7\uffff";
    static final String DFA90_minS =
        "\1\32\1\7\2\uffff\1\7\1\31\1\uffff\1\31\1\107\1\54\2\7\1\67\1\31"+
        "\1\32\1\64\1\107\1\31\1\7\1\0\1\63\1\64\2\107\2\7\1\31\1\107\1\54"+
        "\1\32\1\0\1\64\2\31\1\32\1\31\1\64\1\107\1\64\1\107\1\54\2\7\1\107"+
        "\1\64\1\107\1\32\1\64\1\107\2\31\1\64\1\0\1\64\2\107\1\64\1\0";
    static final String DFA90_maxS =
        "\1\107\1\111\2\uffff\1\111\1\107\1\uffff\1\100\1\107\1\54\2\111"+
        "\1\103\1\104\1\107\1\64\1\107\1\104\1\111\1\0\1\107\1\67\2\107\2"+
        "\111\1\100\1\107\1\54\1\107\1\0\1\64\1\107\1\104\1\107\1\100\1\64"+
        "\1\107\1\67\1\107\1\54\2\111\1\107\1\67\2\107\1\64\2\107\1\103\1"+
        "\64\1\0\1\67\2\107\1\64\1\0";
    static final String DFA90_acceptS =
        "\2\uffff\1\1\1\2\2\uffff\1\3\63\uffff";
    static final String DFA90_specialS =
        "\23\uffff\1\2\12\uffff\1\3\25\uffff\1\0\4\uffff\1\1}>";
    static final String[] DFA90_transitionS = {
            "\1\3\30\uffff\1\2\17\uffff\1\1\3\uffff\1\2",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\4\6\1\uffff\2\6\1\uffff"+
            "\1\6\4\uffff\3\6\4\uffff\1\6\1\uffff\1\6\12\uffff\1\6\1\uffff"+
            "\1\4\4\uffff\2\6\10\uffff\1\6\4\uffff\1\5\1\uffff\1\6",
            "",
            "",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\10\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\6\1\11\3\uffff\2\6\10\uffff\1\6"+
            "\4\uffff\1\7\1\uffff\1\6",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\13\3\6\1\uffff\1\6\1\12\3\6\2\uffff\1\2\1\6\2\uffff\1"+
            "\14",
            "",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\2\6\1\15\2\6\1\16\3\6\2\uffff\4\6",
            "\1\17",
            "\1\20",
            "\1\6\3\uffff\1\6\4\uffff\2\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\1\6\4\uffff\1\6\6\uffff\1\6\1\uffff\1\6\12\uffff\1\6\1\uffff"+
            "\1\6\4\uffff\2\6\10\uffff\1\6\4\uffff\1\21\1\uffff\1\6",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\24\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\22\4\uffff\2\6\3\uffff\1\6\4\uffff"+
            "\2\6\3\uffff\1\23\1\uffff\1\6",
            "\1\2\4\uffff\1\6\1\uffff\1\6\4\uffff\1\2",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\20\1\6\1\uffff\2\6\1\uffff\11"+
            "\6\1\uffff\5\6\3\uffff\1\6",
            "\1\26\54\uffff\1\25",
            "\1\11",
            "\1\27",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\30\3\6\1\uffff\3\6\1\31\1\6\3\uffff\1\6",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\33\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\6\1\34\3\uffff\2\6\10\uffff\1\6"+
            "\4\uffff\1\32\1\uffff\1\6",
            "\1\uffff",
            "\1\35\23\uffff\1\36",
            "\1\11\2\uffff\1\16",
            "\1\37",
            "\1\14",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\6\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\6\4\uffff\2\6\3\uffff\1\6\4\uffff"+
            "\2\6\3\uffff\1\40\1\uffff\1\6",
            "\1\6\3\uffff\1\6\4\uffff\2\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\1\6\4\uffff\1\6\6\uffff\1\6\1\uffff\1\6\12\uffff\1\6\1\uffff"+
            "\1\6\4\uffff\2\6\10\uffff\1\6\4\uffff\1\41\1\uffff\1\6",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\2\6\1\43\2\6\1\42\3\6\2\uffff\4\6",
            "\1\44",
            "\1\45",
            "\1\47\31\uffff\1\50\22\uffff\1\46",
            "\1\uffff",
            "\1\11",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\51\3\6\2\uffff\2\6\1\52\1\6\2\uffff\1\6\3\uffff\1\6",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\13\3\6\1\uffff\5\6\2\uffff\1\2\1\6",
            "\1\53\54\uffff\1\54",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\45\1\6\1\uffff\2\6\1\uffff\11"+
            "\6\2\uffff\4\6",
            "\1\34",
            "\1\55",
            "\1\50\2\uffff\1\56",
            "\1\57",
            "\1\60",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\6\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\6\4\uffff\2\6\3\uffff\1\6\4\uffff"+
            "\2\6\3\uffff\1\61\1\uffff\1\6",
            "\1\6\3\uffff\1\6\4\uffff\2\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\1\6\4\uffff\1\6\6\uffff\1\6\1\uffff\1\6\12\uffff\1\6\1\uffff"+
            "\1\6\4\uffff\2\6\10\uffff\1\6\4\uffff\1\62\1\uffff\1\6",
            "\1\63",
            "\1\34\2\uffff\1\42",
            "\1\64",
            "\1\66\54\uffff\1\65",
            "\1\50",
            "\1\67",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\51\3\6\2\uffff\2\6\1\52\1\6\2\uffff\1\6\3\uffff\1\6",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\13\3\6\1\uffff\5\6\2\uffff\1\2",
            "\1\34",
            "\1\uffff",
            "\1\50\2\uffff\1\56",
            "\1\70",
            "\1\71",
            "\1\50",
            "\1\uffff"
    };

    static final short[] DFA90_eot = DFA.unpackEncodedString(DFA90_eotS);
    static final short[] DFA90_eof = DFA.unpackEncodedString(DFA90_eofS);
    static final char[] DFA90_min = DFA.unpackEncodedStringToUnsignedChars(DFA90_minS);
    static final char[] DFA90_max = DFA.unpackEncodedStringToUnsignedChars(DFA90_maxS);
    static final short[] DFA90_accept = DFA.unpackEncodedString(DFA90_acceptS);
    static final short[] DFA90_special = DFA.unpackEncodedString(DFA90_specialS);
    static final short[][] DFA90_transition;

    static {
        int numStates = DFA90_transitionS.length;
        DFA90_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA90_transition[i] = DFA.unpackEncodedString(DFA90_transitionS[i]);
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = DFA90_eot;
            this.eof = DFA90_eof;
            this.min = DFA90_min;
            this.max = DFA90_max;
            this.accept = DFA90_accept;
            this.special = DFA90_special;
            this.transition = DFA90_transition;
        }
        public String getDescription() {
            return "6461:3: ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream input) throws NoViableAltException {
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_52 = input.LA(1);

                         
                        int index90_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index90_52);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_57 = input.LA(1);

                         
                        int index90_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index90_57);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA90_19 = input.LA(1);

                         
                        int index90_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index90_19);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA90_30 = input.LA(1);

                         
                        int index90_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index90_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (backtracking>0) {failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_ruleDelegateModel_in_entryRuleDelegateModel73 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDelegateModel83 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleModel_in_ruleDelegateModel132 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleModel_in_entryRuleModel165 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleModel175 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleUnit_in_ruleModel220 = new BitSet(new long[]{0x0000000000400002L,0x0000000000000020L});
        public static final BitSet FOLLOW_ruleUnit_in_entryRuleUnit261 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleUnit271 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_DOCUMENTATION_in_ruleUnit329 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleUnit346 = new BitSet(new long[]{0x0000000000002040L,0x0000000000000084L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleUnit363 = new BitSet(new long[]{0x0000000000002040L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_58_in_ruleUnit381 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleUnit398 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_62_in_ruleUnit417 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleSimpleTypeRef_in_ruleUnit438 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleUnit450 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleSimpleTypeRef_in_ruleUnit471 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleUnit486 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_55_in_ruleUnit540 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit551 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000280L});
        public static final BitSet FOLLOW_rulePath_in_ruleUnit572 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit583 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_54_in_ruleUnit646 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit657 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000280L});
        public static final BitSet FOLLOW_rulePath_in_ruleUnit678 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit689 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_60_in_ruleUnit752 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit763 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit784 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit795 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_61_in_ruleUnit859 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit870 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleAliasedRequiredCapability_in_ruleUnit891 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit902 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_61_in_ruleUnit966 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_KEYWORD_41_in_ruleUnit977 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit988 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit1009 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit1020 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_ruleFunction_in_ruleUnit1093 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleUnit1144 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability1189 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleProvidedCapability1199 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleProvidedCapability1258 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleProvidedCapability1280 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleProvidedCapability1293 = new BitSet(new long[]{0x0000000000902000L});
        public static final BitSet FOLLOW_KEYWORD_48_in_ruleProvidedCapability1347 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleProvidedCapability1358 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleProvidedCapability1379 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleProvidedCapability1390 = new BitSet(new long[]{0x0000000000902000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_45_in_ruleProvidedCapability1453 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleProvidedCapability1464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleProvidedCapability1481 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleProvidedCapability1497 = new BitSet(new long[]{0x0000000000902000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_58_in_ruleProvidedCapability1560 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleProvidedCapability1571 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleProvidedCapability1588 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleProvidedCapability1604 = new BitSet(new long[]{0x0000000000902000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleProvidedCapability1661 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAliasedRequiredCapability_in_entryRuleAliasedRequiredCapability1708 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAliasedRequiredCapability1718 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1765 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleAliasedRequiredCapability1787 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1805 = new BitSet(new long[]{0x0000400000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_35_in_ruleAliasedRequiredCapability1822 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1839 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleAliasedRequiredCapability1858 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_48_in_ruleAliasedRequiredCapability1912 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability1923 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleAliasedRequiredCapability1944 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability1955 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_53_in_ruleAliasedRequiredCapability2026 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2050 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_65_in_ruleAliasedRequiredCapability2113 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleAliasedRequiredCapability2141 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2157 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_64_in_ruleAliasedRequiredCapability2220 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2231 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleAliasedRequiredCapability2248 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2264 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_58_in_ruleAliasedRequiredCapability2327 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2338 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability2355 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2371 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleAliasedRequiredCapability2422 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability2468 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleRequiredCapability2478 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleRequiredCapability2537 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleRequiredCapability2559 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleRequiredCapability2577 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleRequiredCapability2594 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_48_in_ruleRequiredCapability2648 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleRequiredCapability2659 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleRequiredCapability2680 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability2691 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_53_in_ruleRequiredCapability2762 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability2786 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_65_in_ruleRequiredCapability2849 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleRequiredCapability2860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleRequiredCapability2877 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability2893 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_64_in_ruleRequiredCapability2956 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleRequiredCapability2967 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleRequiredCapability2984 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability3000 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_58_in_ruleRequiredCapability3063 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleRequiredCapability3074 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleRequiredCapability3091 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability3107 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleRequiredCapability3158 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePath_in_entryRulePath3205 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePath3216 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_rulePath3260 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_10_in_rulePath3286 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleQID_in_rulePath3310 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_KEYWORD_10_in_rulePath3329 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleQID_in_rulePath3351 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_KEYWORD_10_in_rulePath3372 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParameterList_in_entryRuleParameterList3418 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleParameterList3428 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFirstParameter_in_ruleParameterList3474 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleParameterList3486 = new BitSet(new long[]{0x230A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleFirstParameter_in_ruleParameterList3507 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_ruleFirstParameter_in_entryRuleFirstParameter3544 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFirstParameter3554 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureParameter_in_ruleFirstParameter3604 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParameter_in_ruleFirstParameter3634 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParameter_in_entryRuleParameter3668 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleParameter3678 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleParameter3723 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureParameter_in_entryRuleClosureParameter3757 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleClosureParameter3767 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureExpression_in_ruleClosureParameter3812 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_entryRuleParameterDeclaration3846 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleParameterDeclaration3856 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleParameterDeclaration3902 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleParameterDeclaration3920 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunction_in_entryRuleFunction3960 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFunction3970 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_DOCUMENTATION_in_ruleFunction4012 = new BitSet(new long[]{0x0000000000040100L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleFunction4035 = new BitSet(new long[]{0x0000000000040100L});
        public static final BitSet FOLLOW_KEYWORD_50_in_ruleFunction4060 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_KEYWORD_59_in_ruleFunction4085 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleFunction4106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleFunction4124 = new BitSet(new long[]{0x0808000000800000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleFunction4141 = new BitSet(new long[]{0x0018000004000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleFunction4164 = new BitSet(new long[]{0x0090000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleFunction4176 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleFunction4197 = new BitSet(new long[]{0x0090000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleFunction4211 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleFunction4230 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleFunction4264 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleFunction4293 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleFunction4327 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleFunction4341 = new BitSet(new long[]{0x0800000000800000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_48_in_ruleFunction4355 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_ruleGuardExpression_in_ruleFunction4376 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleFunction4391 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleFunction4412 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleFunction4423 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_ruleFunction4451 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleGuardExpression_in_entryRuleGuardExpression4487 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleGuardExpression4497 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleGuardExpression4534 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleGuardExpression4555 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleGuardExpression4566 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_ruleGuardExpression4594 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentOperator_in_entryRuleAssignmentOperator4630 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentOperator4641 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_14_in_ruleAssignmentOperator4679 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_26_in_ruleAssignmentOperator4698 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_28_in_ruleAssignmentOperator4717 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_24_in_ruleAssignmentOperator4736 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_30_in_ruleAssignmentOperator4755 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_22_in_ruleAssignmentOperator4774 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleRelationalOperator_in_entryRuleRelationalOperator4814 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleRelationalOperator4825 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_37_in_ruleRelationalOperator4863 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_32_in_ruleRelationalOperator4882 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_40_in_ruleRelationalOperator4901 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_21_in_ruleRelationalOperator4920 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_38_in_ruleRelationalOperator4939 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_34_in_ruleRelationalOperator4958 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_31_in_ruleRelationalOperator4977 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_15_in_ruleRelationalOperator4996 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_13_in_ruleRelationalOperator5015 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTopLevelExpression_in_entryRuleTopLevelExpression5054 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleTopLevelExpression5064 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleVarDeclaration_in_ruleTopLevelExpression5114 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValDeclaration_in_ruleTopLevelExpression5144 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleTopLevelExpression5174 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExpression_in_entryRuleExpression5208 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExpression5218 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleExpression5267 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression5300 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentExpression5310 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleCachedExpression_in_ruleAssignmentExpression5360 = new BitSet(new long[]{0x400002AA00000002L});
        public static final BitSet FOLLOW_ruleAssignmentOperator_in_ruleAssignmentExpression5393 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression5414 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleVarDeclaration_in_entryRuleVarDeclaration5451 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleVarDeclaration5461 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_50_in_ruleVarDeclaration5517 = new BitSet(new long[]{0x0008000080000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_KEYWORD_44_in_ruleVarDeclaration5544 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleVarDeclaration5571 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleVarDeclaration5589 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_14_in_ruleVarDeclaration5607 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleVarDeclaration5628 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValDeclaration_in_entryRuleValDeclaration5665 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleValDeclaration5675 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_50_in_ruleValDeclaration5731 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_KEYWORD_43_in_ruleValDeclaration5764 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleValDeclaration5798 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleValDeclaration5816 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_14_in_ruleValDeclaration5832 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleValDeclaration5853 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTypeRef_in_entryRuleTypeRef5888 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleTypeRef5898 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureTypeRef_in_ruleTypeRef5948 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSimpleTypeRef_in_ruleTypeRef5978 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSimpleTypeRef_in_entryRuleSimpleTypeRef6012 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSimpleTypeRef6022 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleSimpleTypeRef6064 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_13_in_ruleSimpleTypeRef6081 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleSimpleTypeRef6098 = new BitSet(new long[]{0x8080000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleSimpleTypeRef6115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleSimpleTypeRef6132 = new BitSet(new long[]{0x8080000000000000L});
        public static final BitSet FOLLOW_KEYWORD_15_in_ruleSimpleTypeRef6150 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureTypeRef_in_entryRuleClosureTypeRef6187 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleClosureTypeRef6197 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleClosureTypeRef6233 = new BitSet(new long[]{0x0010000004000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6252 = new BitSet(new long[]{0x0090000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleClosureTypeRef6269 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6286 = new BitSet(new long[]{0x0090000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleClosureTypeRef6305 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleClosureTypeRef6324 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6354 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleClosureTypeRef6388 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6418 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleClosureTypeRef6437 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_KEYWORD_33_in_ruleClosureTypeRef6448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6465 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleCachedExpression_in_entryRuleCachedExpression6505 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleCachedExpression6515 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_52_in_ruleCachedExpression6564 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleOrExpression_in_ruleCachedExpression6585 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrExpression_in_ruleCachedExpression6617 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrExpression_in_entryRuleOrExpression6651 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOrExpression6661 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression6711 = new BitSet(new long[]{0x0000800000000002L});
        public static final BitSet FOLLOW_KEYWORD_36_in_ruleOrExpression6734 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression6755 = new BitSet(new long[]{0x0000800000000002L});
        public static final BitSet FOLLOW_ruleAndExpression_in_entryRuleAndExpression6792 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAndExpression6802 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleAndExpression6852 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_KEYWORD_23_in_ruleAndExpression6875 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleAndExpression6896 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression6933 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleRelationalExpression6943 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression6993 = new BitSet(new long[]{0xA0012C010A000002L});
        public static final BitSet FOLLOW_ruleRelationalOperator_in_ruleRelationalExpression7026 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression7047 = new BitSet(new long[]{0xA0012C010A000002L});
        public static final BitSet FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression7084 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAdditiveExpression7094 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression7144 = new BitSet(new long[]{0x0140000000000002L});
        public static final BitSet FOLLOW_KEYWORD_6_in_ruleAdditiveExpression7177 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_8_in_ruleAdditiveExpression7207 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression7244 = new BitSet(new long[]{0x0140000000000002L});
        public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression7281 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMultiplicativeExpression7291 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression7341 = new BitSet(new long[]{0x0424000000000002L});
        public static final BitSet FOLLOW_KEYWORD_5_in_ruleMultiplicativeExpression7374 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_10_in_ruleMultiplicativeExpression7404 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_2_in_ruleMultiplicativeExpression7434 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression7471 = new BitSet(new long[]{0x0424000000000002L});
        public static final BitSet FOLLOW_ruleSetExpression_in_entryRuleSetExpression7508 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSetExpression7518 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression7568 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_KEYWORD_29_in_ruleSetExpression7599 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression7633 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression7670 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression7680 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression7730 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression7760 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePreopExpression_in_ruleUnaryOrInfixExpression7790 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression7824 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleUnaryExpression7834 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_1_in_ruleUnaryExpression7892 = new BitSet(new long[]{0x02080000216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_8_in_ruleUnaryExpression7922 = new BitSet(new long[]{0x02080000216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleInfixExpression_in_ruleUnaryExpression7959 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePreopExpression_in_entryRulePreopExpression7994 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePreopExpression8004 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_25_in_rulePreopExpression8062 = new BitSet(new long[]{0x02080000216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_27_in_rulePreopExpression8092 = new BitSet(new long[]{0x02080000216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleInfixExpression_in_rulePreopExpression8129 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePostopExpression_in_entryRulePostopExpression8164 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePostopExpression8174 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInfixExpression_in_rulePostopExpression8224 = new BitSet(new long[]{0x0000005000000002L});
        public static final BitSet FOLLOW_KEYWORD_27_in_rulePostopExpression8257 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_25_in_rulePostopExpression8287 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression8340 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleInfixExpression8350 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleCallExpression_in_ruleInfixExpression8400 = new BitSet(new long[]{0x0200000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_KEYWORD_9_in_ruleInfixExpression8424 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression8441 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleInfixExpression8457 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleInfixExpression8478 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleInfixExpression8490 = new BitSet(new long[]{0x0200000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_KEYWORD_16_in_ruleInfixExpression8521 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleInfixExpression8542 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_17_in_ruleInfixExpression8553 = new BitSet(new long[]{0x0200000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_KEYWORD_9_in_ruleInfixExpression8584 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression8601 = new BitSet(new long[]{0x0200000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_ruleCallExpression_in_entryRuleCallExpression8644 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleCallExpression8654 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePrimaryExpression_in_ruleCallExpression8704 = new BitSet(new long[]{0x0008000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleCallExpression8727 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleCallExpression8748 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleCallExpression8760 = new BitSet(new long[]{0x0008000000000002L});
        public static final BitSet FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression8797 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePrimaryExpression8807 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureCall_in_rulePrimaryExpression8857 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression8887 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValue_in_rulePrimaryExpression8917 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteral_in_rulePrimaryExpression8947 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression8977 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression9007 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_rulePrimaryExpression9037 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleWithExpression_in_rulePrimaryExpression9067 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleWithContextExpression_in_rulePrimaryExpression9097 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleWithExpression_in_entryRuleWithExpression9131 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleWithExpression9141 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_49_in_ruleWithExpression9177 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000084L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleWithExpression9195 = new BitSet(new long[]{0x0880000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleWithExpression9212 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleWithExpression9229 = new BitSet(new long[]{0x0880000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleWithExpression9251 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleWithExpression9272 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleWithExpression9291 = new BitSet(new long[]{0x030A0050E16F4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleBlockExpressionWithoutBrackets_in_ruleWithExpression9312 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleWithExpression9323 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleWithContextExpression_in_entryRuleWithContextExpression9360 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleWithContextExpression9370 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_49_in_ruleWithContextExpression9406 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_KEYWORD_57_in_ruleWithContextExpression9417 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleWithContextExpression9438 = new BitSet(new long[]{0x0000400000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_35_in_ruleWithContextExpression9450 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleWithContextExpression9467 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_ruleWithContextExpression9495 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_entryRuleBlockExpression9530 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleBlockExpression9540 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleBlockExpression9588 = new BitSet(new long[]{0x030A0050E16F4880L,0x0000000000000294L});
        public static final BitSet FOLLOW_ruleTopLevelExpression_in_ruleBlockExpression9610 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleBlockExpression9621 = new BitSet(new long[]{0x030A0050E16F4880L,0x0000000000000294L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleBlockExpression9634 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValue_in_entryRuleValue9669 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleValue9679 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleValue9733 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables9773 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleKeywordVariables9783 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_51_in_ruleKeywordVariables9841 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_54_in_ruleKeywordVariables9871 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_55_in_ruleKeywordVariables9901 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_63_in_ruleKeywordVariables9931 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_56_in_ruleKeywordVariables9961 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleKeywordVariables9991 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_46_in_ruleKeywordVariables10021 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureCall_in_entryRuleFeatureCall10072 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFeatureCall10082 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOperationCall_in_ruleFeatureCall10132 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_9_in_ruleFeatureCall10161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleFeatureCall10178 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleFeatureCall10194 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleFeatureCall10215 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleFeatureCall10227 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_9_in_ruleFeatureCall10258 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleFeatureCall10275 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOperationCall_in_entryRuleOperationCall10316 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOperationCall10326 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleOperationCall10380 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleOperationCall10396 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleOperationCall10417 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleOperationCall10429 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression10464 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleConstructorCallExpression10474 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_42_in_ruleConstructorCallExpression10522 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleConstructorCallExpression10539 = new BitSet(new long[]{0x0008400000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleConstructorCallExpression10556 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleConstructorCallExpression10577 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleConstructorCallExpression10589 = new BitSet(new long[]{0x0000400000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_35_in_ruleConstructorCallExpression10603 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleConstructorCallExpression10620 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_ruleInitializationBlockExpression_in_ruleConstructorCallExpression10648 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInitializationBlockExpression_in_entryRuleInitializationBlockExpression10684 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleInitializationBlockExpression10694 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleInitializationBlockExpression10742 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleInitializationExpression_in_ruleInitializationBlockExpression10763 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleInitializationBlockExpression10774 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleInitializationBlockExpression10785 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInitializationExpression_in_entryRuleInitializationExpression10820 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleInitializationExpression10830 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureOfThis_in_ruleInitializationExpression10888 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleInitializationExpression10907 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleInitializationExpression10941 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureOfThis_in_entryRuleFeatureOfThis10976 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFeatureOfThis10986 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleFeatureOfThis11040 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteral_in_entryRuleLiteral11080 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleLiteral11090 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValueLiteral_in_ruleLiteral11140 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteralFunction_in_ruleLiteral11170 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction11204 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleLiteralFunction11214 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleLiteralFunction11250 = new BitSet(new long[]{0x2008000004000000L,0x0000000000000088L});
        public static final BitSet FOLLOW_ruleClosureExpression_in_ruleLiteralFunction11275 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleLiteralFunction11285 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureExpression_in_entryRuleClosureExpression11320 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleClosureExpression11330 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_13_in_ruleClosureExpression11379 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleClosureExpression11400 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_15_in_ruleClosureExpression11411 = new BitSet(new long[]{0x0008000004000000L,0x0000000000000088L});
        public static final BitSet FOLLOW_KEYWORD_19_in_ruleClosureExpression11427 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11451 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleClosureExpression11463 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11484 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleClosureExpression11498 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleClosureExpression11517 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11551 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleClosureExpression11581 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11615 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_KEYWORD_19_in_ruleClosureExpression11629 = new BitSet(new long[]{0x030A0050E16F4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleOneOrManyExpressions_in_ruleClosureExpression11650 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOneOrManyExpressions_in_entryRuleOneOrManyExpressions11685 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOneOrManyExpressions11695 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpressionWithoutBrackets_in_ruleOneOrManyExpressions11745 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleOneOrManyExpressions11775 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpressionWithoutBrackets_in_entryRuleBlockExpressionWithoutBrackets11809 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleBlockExpressionWithoutBrackets11819 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTopLevelExpression_in_ruleBlockExpressionWithoutBrackets11878 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleBlockExpressionWithoutBrackets11889 = new BitSet(new long[]{0x030A0050E16F4882L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral11926 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleValueLiteral11936 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleValueLiteral11977 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression12016 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleParanthesizedExpression12026 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleParanthesizedExpression12062 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleParanthesizedExpression12087 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleParanthesizedExpression12097 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQID_in_entryRuleQID12139 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleQID12150 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleQID12194 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleQID12215 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_HEX_in_ruleQID12241 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleQID12267 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_KEYWORD_9_in_ruleQID12288 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleQID12303 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleQID12324 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_HEX_in_ruleQID12350 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleQID12376 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_KEYWORD_55_in_synpred7540 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred7551 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000280L});
        public static final BitSet FOLLOW_rulePath_in_synpred7572 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred7583 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_54_in_synpred8646 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred8657 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000280L});
        public static final BitSet FOLLOW_rulePath_in_synpred8678 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred8689 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_60_in_synpred9752 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred9763 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleProvidedCapability_in_synpred9784 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred9795 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_60_in_synpred10752 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred10763 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleProvidedCapability_in_synpred10784 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred10795 = new BitSet(new long[]{0x0000000000000202L});
        public static final BitSet FOLLOW_KEYWORD_61_in_synpred11859 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred11870 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleAliasedRequiredCapability_in_synpred11891 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred11902 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_61_in_synpred12859 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred12870 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleAliasedRequiredCapability_in_synpred12891 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred12902 = new BitSet(new long[]{0x0000000000000402L});
        public static final BitSet FOLLOW_KEYWORD_61_in_synpred13966 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_KEYWORD_41_in_synpred13977 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred13988 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleRequiredCapability_in_synpred131009 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred131020 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_61_in_synpred14966 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_KEYWORD_41_in_synpred14977 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred14988 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleRequiredCapability_in_synpred141009 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred141020 = new BitSet(new long[]{0x0000000000000402L});
        public static final BitSet FOLLOW_ruleFunction_in_synpred151093 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunction_in_synpred161093 = new BitSet(new long[]{0x0000000000040102L,0x00000000000000A0L});
        public static final BitSet FOLLOW_KEYWORD_48_in_synpred181347 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred181358 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_synpred181379 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred181390 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_45_in_synpred191453 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred191464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred191481 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred191497 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_58_in_synpred201560 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred201571 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred201588 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred201604 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_48_in_synpred241912 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred241923 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_synpred241944 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred241955 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_53_in_synpred252026 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred252050 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_65_in_synpred262113 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred262124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_synpred262141 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred262157 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_64_in_synpred272220 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred272231 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_synpred272248 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred272264 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_58_in_synpred282327 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred282338 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred282355 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred282371 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_48_in_synpred302648 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred302659 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_synpred302680 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred302691 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_53_in_synpred312762 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred312786 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_65_in_synpred322849 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred322860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_synpred322877 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred322893 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_64_in_synpred332956 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred332967 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_synpred332984 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred333000 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_58_in_synpred343063 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred343074 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred343091 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred343107 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureParameter_in_synpred403604 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleVarDeclaration_in_synpred675114 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentOperator_in_synpred695393 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_synpred695414 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_36_in_synpred836734 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAndExpression_in_synpred836755 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_23_in_synpred846875 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleRelationalExpression_in_synpred846896 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleRelationalOperator_in_synpred857026 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAdditiveExpression_in_synpred857047 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred877169 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_synpred877244 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred907366 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleSetExpression_in_synpred907471 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_29_in_synpred917599 = new BitSet(new long[]{0x030A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_synpred917633 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred978249 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_9_in_synpred998424 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred998441 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_KEYWORD_3_in_synpred998457 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_synpred998478 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_synpred998490 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_16_in_synpred1008521 = new BitSet(new long[]{0x030A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_synpred1008542 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_17_in_synpred1008553 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_9_in_synpred1018584 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred1018601 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_synpred1038727 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_synpred1038748 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_synpred1038760 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureCall_in_synpred1048857 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValue_in_synpred1068917 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteral_in_synpred1078947 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_synpred1109037 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_9_in_synpred12510161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred12510178 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_KEYWORD_3_in_synpred12510194 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_synpred12510215 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_synpred12510227 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_synpred12810556 = new BitSet(new long[]{0x231A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_synpred12810577 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_synpred12810589 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_35_in_synpred12910603 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred12910620 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_19_in_synpred13611427 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_synpred13611451 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_KEYWORD_7_in_synpred13611463 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_synpred13611484 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_KEYWORD_7_in_synpred13611498 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_synpred13611517 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_synpred13611551 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpressionWithoutBrackets_in_synpred13811745 = new BitSet(new long[]{0x0000000000000002L});
    }


}