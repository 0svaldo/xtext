/*
* generated by Xtext
*/

package org.eclipse.xtext.generator.grammarAccess.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class GrammarAccessTestLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class RootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Root");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsTypeParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[0]->ParserRule'Root'.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eClassifiers[1]->EClass'AModel'
		public ParserRule getRule() { return rule; }

		//elements+=Type*
		public Assignment getElementsAssignment() { return cElementsAssignment; }

		//Type
		public RuleCall getElementsTypeParserRuleCall_0() { return cElementsTypeParserRuleCall_0; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cATypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnotherTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[1]->ParserRule'Type'.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eClassifiers[0]->EClass'AType'
		public ParserRule getRule() { return rule; }

		//AType | AnotherType
		public Alternatives getAlternatives() { return cAlternatives; }

		//AType
		public RuleCall getATypeParserRuleCall_0() { return cATypeParserRuleCall_0; }

		//AnotherType
		public RuleCall getAnotherTypeParserRuleCall_1() { return cAnotherTypeParserRuleCall_1; }
	}

	public class ATypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFooKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cATypeAction_1 = (Action)cGroup.eContents().get(1);
		
		//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[2]->ParserRule'AType'.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eClassifiers[0]->EClass'AType'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[2]->ParserRule'AType'.alternatives->Group.elements[1]->Action.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eClassifiers[0]->EClass'AType'
		public Group getGroup() { return cGroup; }

		//"foo"
		public Keyword getFooKeyword_0() { return cFooKeyword_0; }

		//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[2]->ParserRule'AType'.alternatives->Group.elements[1]->Action.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eClassifiers[0]->EClass'AType'
		public Action getATypeAction_1() { return cATypeAction_1; }
	}

	public class AnotherTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnotherType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cAnotherTypeAction_1 = (Action)cGroup.eContents().get(1);
		
		//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[3]->ParserRule'AnotherType'.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eSubpackages[0]->EPackage'emptyPackage'.eSubpackages[0]->EPackage'subsubpackage'.eClassifiers[0]->EClass'AnotherType'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[3]->ParserRule'AnotherType'.alternatives->Group.elements[1]->Action.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eSubpackages[0]->EPackage'emptyPackage'.eSubpackages[0]->EPackage'subsubpackage'.eClassifiers[0]->EClass'AnotherType'
		public Group getGroup() { return cGroup; }

		//"bar"
		public Keyword getBarKeyword_0() { return cBarKeyword_0; }

		//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[3]->ParserRule'AnotherType'.alternatives->Group.elements[1]->Action.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eSubpackages[0]->EPackage'emptyPackage'.eSubpackages[0]->EPackage'subsubpackage'.eClassifiers[0]->EClass'AnotherType'
		public Action getAnotherTypeAction_1() { return cAnotherTypeAction_1; }
	}
	
	
	private RootElements pRoot;
	private TypeElements pType;
	private ATypeElements pAType;
	private AnotherTypeElements pAnotherType;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public GrammarAccessTestLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[0]->ParserRule'Root'.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eClassifiers[1]->EClass'AModel'
	public RootElements getRootAccess() {
		return (pRoot != null) ? pRoot : (pRoot = new RootElements());
	}
	
	public ParserRule getRootRule() {
		return getRootAccess().getRule();
	}

	//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[1]->ParserRule'Type'.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eClassifiers[0]->EClass'AType'
	public TypeElements getTypeAccess() {
		return (pType != null) ? pType : (pType = new TypeElements());
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[2]->ParserRule'AType'.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eClassifiers[0]->EClass'AType'
	public ATypeElements getATypeAccess() {
		return (pAType != null) ? pAType : (pAType = new ATypeElements());
	}
	
	public ParserRule getATypeRule() {
		return getATypeAccess().getRule();
	}

	//org.eclipse.xtext.parsetree.reconstr.XtextSerializationException: Could not serialize cross reference from Grammar'org.eclipse.xtext.generator.grammarAccess.GrammarAccessTestLanguage'.rules[3]->ParserRule'AnotherType'.type->TypeRef.classifier to EPackage'ametamodel'.eSubpackages[0]->EPackage'asubpackage'.eSubpackages[0]->EPackage'emptyPackage'.eSubpackages[0]->EPackage'subsubpackage'.eClassifiers[0]->EClass'AnotherType'
	public AnotherTypeElements getAnotherTypeAccess() {
		return (pAnotherType != null) ? pAnotherType : (pAnotherType = new AnotherTypeElements());
	}
	
	public ParserRule getAnotherTypeRule() {
		return getAnotherTypeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
