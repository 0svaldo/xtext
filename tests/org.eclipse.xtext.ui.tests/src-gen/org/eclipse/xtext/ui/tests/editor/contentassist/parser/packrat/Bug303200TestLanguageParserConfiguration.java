/*
* generated by Xtext
*/
package org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.ui.tests.editor.contentassist.services.Bug303200TestLanguageGrammarAccess;

import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageProgramConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageProgramDirectiveConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageFunctionDefinitionConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageAttributeConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageParametersConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageBlockConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageStatementConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguagePostfixExpressionConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageListExpressionConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguagePropertyOperatorConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguagePrimaryExpressionConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageIDConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageWSConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug303200TestLanguageLTConsumer;

public class Bug303200TestLanguageParserConfiguration extends AbstractParserConfiguration {

    private Bug303200TestLanguageProgramConsumer programConsumer;
    private Bug303200TestLanguageProgramDirectiveConsumer programDirectiveConsumer;
    private Bug303200TestLanguageFunctionDefinitionConsumer functionDefinitionConsumer;
    private Bug303200TestLanguageAttributeConsumer attributeConsumer;
    private Bug303200TestLanguageParametersConsumer parametersConsumer;
    private Bug303200TestLanguageBlockConsumer blockConsumer;
    private Bug303200TestLanguageStatementConsumer statementConsumer;
    private Bug303200TestLanguagePostfixExpressionConsumer postfixExpressionConsumer;
    private Bug303200TestLanguageListExpressionConsumer listExpressionConsumer;
    private Bug303200TestLanguagePropertyOperatorConsumer propertyOperatorConsumer;
    private Bug303200TestLanguagePrimaryExpressionConsumer primaryExpressionConsumer;
    private Bug303200TestLanguageIDConsumer idConsumer;
    private Bug303200TestLanguageWSConsumer wsConsumer;
    private Bug303200TestLanguageLTConsumer ltConsumer;

	private Bug303200TestLanguageGrammarAccess grammarAccess;

	public Bug303200TestLanguageParserConfiguration(IInternalParserConfiguration configuration, Bug303200TestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
	}

	public Bug303200TestLanguageProgramConsumer getRootConsumer() {
		return programConsumer;
	} 

	public void createNonTerminalConsumers() {
		programConsumer = new Bug303200TestLanguageProgramConsumer(
    		this, null
    	);
		programDirectiveConsumer = new Bug303200TestLanguageProgramDirectiveConsumer(
    		this, null
    	);
		functionDefinitionConsumer = new Bug303200TestLanguageFunctionDefinitionConsumer(
    		this, null
    	);
		attributeConsumer = new Bug303200TestLanguageAttributeConsumer(
    		this, null
    	);
		parametersConsumer = new Bug303200TestLanguageParametersConsumer(
    		this, null
    	);
		blockConsumer = new Bug303200TestLanguageBlockConsumer(
    		this, null
    	);
		statementConsumer = new Bug303200TestLanguageStatementConsumer(
    		this, null
    	);
		postfixExpressionConsumer = new Bug303200TestLanguagePostfixExpressionConsumer(
    		this, null
    	);
		listExpressionConsumer = new Bug303200TestLanguageListExpressionConsumer(
    		this, null
    	);
		propertyOperatorConsumer = new Bug303200TestLanguagePropertyOperatorConsumer(
    		this, null
    	);
		primaryExpressionConsumer = new Bug303200TestLanguagePrimaryExpressionConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		idConsumer = new Bug303200TestLanguageIDConsumer(this);
		wsConsumer = new Bug303200TestLanguageWSConsumer(this);
		ltConsumer = new Bug303200TestLanguageLTConsumer(this);
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getProgramConsumer().setRule(grammarAccess.getProgramAccess());
		getProgramDirectiveConsumer().setRule(grammarAccess.getProgramDirectiveAccess());
		getFunctionDefinitionConsumer().setRule(grammarAccess.getFunctionDefinitionAccess());
		getAttributeConsumer().setRule(grammarAccess.getAttributeAccess());
		getParametersConsumer().setRule(grammarAccess.getParametersAccess());
		getBlockConsumer().setRule(grammarAccess.getBlockAccess());
		getStatementConsumer().setRule(grammarAccess.getStatementAccess());
		getPostfixExpressionConsumer().setRule(grammarAccess.getPostfixExpressionAccess());
		getListExpressionConsumer().setRule(grammarAccess.getListExpressionAccess());
		getPropertyOperatorConsumer().setRule(grammarAccess.getPropertyOperatorAccess());
		getPrimaryExpressionConsumer().setRule(grammarAccess.getPrimaryExpressionAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getLtConsumer().setRule(grammarAccess.getLTRule());


		getProgramConsumer().setLtConsumer(getLtConsumer());
		getProgramConsumer().setProgramDirectiveConsumer(getProgramDirectiveConsumer());

		getProgramDirectiveConsumer().setFunctionDefinitionConsumer(getFunctionDefinitionConsumer());
		getProgramDirectiveConsumer().setStatementConsumer(getStatementConsumer());

		getFunctionDefinitionConsumer().setAttributeConsumer(getAttributeConsumer());
		getFunctionDefinitionConsumer().setBlockConsumer(getBlockConsumer());
		getFunctionDefinitionConsumer().setIdConsumer(getIdConsumer());
		getFunctionDefinitionConsumer().setLtConsumer(getLtConsumer());
		getFunctionDefinitionConsumer().setParametersConsumer(getParametersConsumer());

		getAttributeConsumer().setIdConsumer(getIdConsumer());
		getAttributeConsumer().setLtConsumer(getLtConsumer());
		getAttributeConsumer().setPostfixExpressionConsumer(getPostfixExpressionConsumer());

		getParametersConsumer().setIdConsumer(getIdConsumer());
		getParametersConsumer().setLtConsumer(getLtConsumer());

		getBlockConsumer().setLtConsumer(getLtConsumer());
		getBlockConsumer().setStatementConsumer(getStatementConsumer());

		getStatementConsumer().setBlockConsumer(getBlockConsumer());
		getStatementConsumer().setLtConsumer(getLtConsumer());
		getStatementConsumer().setPostfixExpressionConsumer(getPostfixExpressionConsumer());

		getPostfixExpressionConsumer().setListExpressionConsumer(getListExpressionConsumer());
		getPostfixExpressionConsumer().setLtConsumer(getLtConsumer());
		getPostfixExpressionConsumer().setPrimaryExpressionConsumer(getPrimaryExpressionConsumer());
		getPostfixExpressionConsumer().setPropertyOperatorConsumer(getPropertyOperatorConsumer());

		getListExpressionConsumer().setLtConsumer(getLtConsumer());
		getListExpressionConsumer().setPostfixExpressionConsumer(getPostfixExpressionConsumer());

		getPropertyOperatorConsumer().setIdConsumer(getIdConsumer());
		getPropertyOperatorConsumer().setListExpressionConsumer(getListExpressionConsumer());
		getPropertyOperatorConsumer().setLtConsumer(getLtConsumer());

		getPrimaryExpressionConsumer().setBlockConsumer(getBlockConsumer());
		getPrimaryExpressionConsumer().setIdConsumer(getIdConsumer());
		getPrimaryExpressionConsumer().setLtConsumer(getLtConsumer());
		getPrimaryExpressionConsumer().setParametersConsumer(getParametersConsumer());

		getProgramConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getProgramConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getFunctionDefinitionConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$22$Delimiter);
		getFunctionDefinitionConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getFunctionDefinitionConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$25$Delimiter);
		getFunctionDefinitionConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getFunctionDefinitionConsumer().setRuleCall$11$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getAttributeConsumer().setKeyword$7$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getAttributeConsumer().setKeyword$12$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getAttributeConsumer().setRuleCall$3$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$25$Delimiter);
		getAttributeConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getAttributeConsumer().setRuleCall$11$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getParametersConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getParametersConsumer().setKeyword$11$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getParametersConsumer().setKeyword$16$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getParametersConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getParametersConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$25$Delimiter);
		getParametersConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getParametersConsumer().setRuleCall$12$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getParametersConsumer().setRuleCall$14$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$25$Delimiter);
		getParametersConsumer().setRuleCall$15$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getBlockConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getBlockConsumer().setKeyword$10$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getBlockConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getBlockConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getStatementConsumer().setKeyword$9$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getStatementConsumer().setRuleCall$10$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPostfixExpressionConsumer().setKeyword$14$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getPostfixExpressionConsumer().setKeyword$20$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getPostfixExpressionConsumer().setRuleCall$13$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPostfixExpressionConsumer().setRuleCall$15$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPostfixExpressionConsumer().setRuleCall$19$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPostfixExpressionConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getListExpressionConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getListExpressionConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getListExpressionConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPropertyOperatorConsumer().setKeyword$3$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getPropertyOperatorConsumer().setKeyword$8$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getPropertyOperatorConsumer().setKeyword$13$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$40$Delimiter);
		getPropertyOperatorConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPropertyOperatorConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$25$Delimiter);
		getPropertyOperatorConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPropertyOperatorConsumer().setRuleCall$12$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPrimaryExpressionConsumer().setKeyword$10$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.keyword$22$Delimiter);
		getPrimaryExpressionConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$25$Delimiter);
		getPrimaryExpressionConsumer().setRuleCall$11$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
		getPrimaryExpressionConsumer().setRuleCall$14$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug303200TestLanguageDelimiters.ruleCall$8$Delimiter);
	}
	
    public Bug303200TestLanguageProgramConsumer getProgramConsumer() {
    	return programConsumer;
    }

    public Bug303200TestLanguageProgramDirectiveConsumer getProgramDirectiveConsumer() {
    	return programDirectiveConsumer;
    }

    public Bug303200TestLanguageFunctionDefinitionConsumer getFunctionDefinitionConsumer() {
    	return functionDefinitionConsumer;
    }

    public Bug303200TestLanguageAttributeConsumer getAttributeConsumer() {
    	return attributeConsumer;
    }

    public Bug303200TestLanguageParametersConsumer getParametersConsumer() {
    	return parametersConsumer;
    }

    public Bug303200TestLanguageBlockConsumer getBlockConsumer() {
    	return blockConsumer;
    }

    public Bug303200TestLanguageStatementConsumer getStatementConsumer() {
    	return statementConsumer;
    }

    public Bug303200TestLanguagePostfixExpressionConsumer getPostfixExpressionConsumer() {
    	return postfixExpressionConsumer;
    }

    public Bug303200TestLanguageListExpressionConsumer getListExpressionConsumer() {
    	return listExpressionConsumer;
    }

    public Bug303200TestLanguagePropertyOperatorConsumer getPropertyOperatorConsumer() {
    	return propertyOperatorConsumer;
    }

    public Bug303200TestLanguagePrimaryExpressionConsumer getPrimaryExpressionConsumer() {
    	return primaryExpressionConsumer;
    }

    public Bug303200TestLanguageIDConsumer getIdConsumer() {
    	return idConsumer;
    }

    public Bug303200TestLanguageWSConsumer getWsConsumer() {
    	return wsConsumer;
    }

    public Bug303200TestLanguageLTConsumer getLtConsumer() {
    	return ltConsumer;
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return new ITerminalConsumer[]{ getWsConsumer() };
	}
	
}
