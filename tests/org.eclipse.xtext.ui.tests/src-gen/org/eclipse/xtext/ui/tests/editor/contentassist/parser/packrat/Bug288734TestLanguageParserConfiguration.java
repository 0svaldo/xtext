/*
* generated by Xtext
*/
package org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.ui.tests.editor.contentassist.services.Bug288734TestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug288734TestLanguageModelConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug288734TestLanguageTConstantConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug288734TestLanguageTStringConstantConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug288734TestLanguageTIntegerConstantConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug288734TestLanguageTBooleanConstantConsumer;
import org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.consumers.Bug288734TestLanguageTAnnotationConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class Bug288734TestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private Bug288734TestLanguageModelConsumer modelConsumer;
    private Bug288734TestLanguageTConstantConsumer tConstantConsumer;
    private Bug288734TestLanguageTStringConstantConsumer tStringConstantConsumer;
    private Bug288734TestLanguageTIntegerConstantConsumer tIntegerConstantConsumer;
    private Bug288734TestLanguageTBooleanConstantConsumer tBooleanConstantConsumer;
    private Bug288734TestLanguageTAnnotationConsumer tAnnotationConsumer;

	private Bug288734TestLanguageGrammarAccess grammarAccess;

	public Bug288734TestLanguageParserConfiguration(IInternalParserConfiguration configuration, Bug288734TestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public Bug288734TestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		modelConsumer = new Bug288734TestLanguageModelConsumer(
    		this, null
    	);
		tConstantConsumer = new Bug288734TestLanguageTConstantConsumer(
    		this, null
    	);
		tStringConstantConsumer = new Bug288734TestLanguageTStringConstantConsumer(
    		this, null
    	);
		tIntegerConstantConsumer = new Bug288734TestLanguageTIntegerConstantConsumer(
    		this, null
    	);
		tBooleanConstantConsumer = new Bug288734TestLanguageTBooleanConstantConsumer(
    		this, null
    	);
		tAnnotationConsumer = new Bug288734TestLanguageTAnnotationConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getTConstantConsumer().setRule(grammarAccess.getTConstantAccess());
		getTStringConstantConsumer().setRule(grammarAccess.getTStringConstantAccess());
		getTIntegerConstantConsumer().setRule(grammarAccess.getTIntegerConstantAccess());
		getTBooleanConstantConsumer().setRule(grammarAccess.getTBooleanConstantAccess());
		getTAnnotationConsumer().setRule(grammarAccess.getTAnnotationAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setTConstantConsumer(getTConstantConsumer());

		getTConstantConsumer().setTBooleanConstantConsumer(getTBooleanConstantConsumer());
		getTConstantConsumer().setTIntegerConstantConsumer(getTIntegerConstantConsumer());
		getTConstantConsumer().setTStringConstantConsumer(getTStringConstantConsumer());

		getTStringConstantConsumer().setIdConsumer(getIdConsumer());
		getTStringConstantConsumer().setTAnnotationConsumer(getTAnnotationConsumer());

		getTIntegerConstantConsumer().setIdConsumer(getIdConsumer());
		getTIntegerConstantConsumer().setTAnnotationConsumer(getTAnnotationConsumer());

		getTBooleanConstantConsumer().setIdConsumer(getIdConsumer());
		getTBooleanConstantConsumer().setTAnnotationConsumer(getTAnnotationConsumer());

		getTAnnotationConsumer().setStringConsumer(getStringConsumer());

		getTStringConstantConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.keyword$16$Delimiter);
		getTStringConstantConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.keyword$16$Delimiter);
		getTStringConstantConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.ruleCall$19$Delimiter);
		getTIntegerConstantConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.keyword$16$Delimiter);
		getTIntegerConstantConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.keyword$16$Delimiter);
		getTIntegerConstantConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.ruleCall$19$Delimiter);
		getTBooleanConstantConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.keyword$16$Delimiter);
		getTBooleanConstantConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.keyword$16$Delimiter);
		getTBooleanConstantConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.ruleCall$19$Delimiter);
		getTAnnotationConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.keyword$41$Delimiter);
		getTAnnotationConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.ui.tests.editor.contentassist.parser.packrat.Bug288734TestLanguageDelimiters.ruleCall$43$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public Bug288734TestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public Bug288734TestLanguageTConstantConsumer getTConstantConsumer() {
    	return tConstantConsumer;
    }

    public Bug288734TestLanguageTStringConstantConsumer getTStringConstantConsumer() {
    	return tStringConstantConsumer;
    }

    public Bug288734TestLanguageTIntegerConstantConsumer getTIntegerConstantConsumer() {
    	return tIntegerConstantConsumer;
    }

    public Bug288734TestLanguageTBooleanConstantConsumer getTBooleanConstantConsumer() {
    	return tBooleanConstantConsumer;
    }

    public Bug288734TestLanguageTAnnotationConsumer getTAnnotationConsumer() {
    	return tAnnotationConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
