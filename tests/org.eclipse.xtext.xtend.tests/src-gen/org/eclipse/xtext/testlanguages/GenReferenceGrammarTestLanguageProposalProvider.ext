/*
* generated by Xtext
*/

import xtext;

import org::eclipse::emf::ecore;
import org::eclipse::jface::text::contentassist;
import org::eclipse::xtext::crossref;
import org::eclipse::xtext::ui::common::editor::contentassist;
import org::eclipse::xtext::ui::common::xtend::contentassist;

import referenceGrammar;

extension org::eclipse::xtext::xtend::contentassist::ContentAssist reexport;
extension org::eclipse::xtend::util::stdlib::io;

/**
 * Represents a generated, default implementation of interface {@link IProposalProvider}.
 * 
 * @see org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider
 */
	 
List[ICompletionProposal] completeSpielplatz_Groesse(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSpielplatz_Groesse feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "1", contentAssistContext) };
	 
List[ICompletionProposal] completeSpielplatz_Beschreibung(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSpielplatz_Beschreibung feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "\"Spielplatz_Beschreibung\"", contentAssistContext) };
	 
List[ICompletionProposal] completeSpielplatz_Kinder(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSpielplatz_Kinder feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeSpielplatz_Erzieher(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSpielplatz_Erzieher feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeSpielplatz_Spielzeuge(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSpielplatz_Spielzeuge feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeSpielplatz_Familie(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSpielplatz_Familie feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeKind_Name(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeKind_Name feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "Kind_Name", contentAssistContext) };
	 
List[ICompletionProposal] completeKind_Age(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeKind_Age feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "1", contentAssistContext) };
	 
List[ICompletionProposal] completeErwachsener_Name(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeErwachsener_Name feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "Erwachsener_Name", contentAssistContext) };
	 
List[ICompletionProposal] completeErwachsener_Age(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeErwachsener_Age feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "1", contentAssistContext) };
	 
List[ICompletionProposal] completeSpielzeug_Name(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSpielzeug_Name feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "Spielzeug_Name", contentAssistContext) };
	 
List[ICompletionProposal] completeSpielzeug_Farbe(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSpielzeug_Farbe feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeFamilie_Name(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeFamilie_Name feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeFamilie_Mutter(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeFamilie_Mutter feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	lookupCrossReference(((CrossReference)assignment.terminal), contentAssistContext);
	 
List[ICompletionProposal] completeFamilie_Vater(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeFamilie_Vater feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	lookupCrossReference(((CrossReference)assignment.terminal), contentAssistContext);
	 
List[ICompletionProposal] completeFamilie_Kinder(emf::EObject model, Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeFamilie_Kinder feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	lookupCrossReference(((CrossReference)assignment.terminal), contentAssistContext);

	 	  
List[ICompletionProposal] complete(emf::EObject model, RuleCall ruleCall, IContentAssistContext contentAssistContext) :
	{};

/*
	// TODO 
    @Override
	protected String getDefaultImageFilePath() {
		return "icons/editor.gif";
	}

	@Override
	protected String getPluginId() {
		return UI_PLUGIN_ID;
	}
*/
