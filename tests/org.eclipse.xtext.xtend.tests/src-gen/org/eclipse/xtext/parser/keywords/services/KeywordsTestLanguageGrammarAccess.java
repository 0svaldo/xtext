/*
* generated by Xtext
*/

package org.eclipse.xtext.parser.keywords.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class KeywordsTestLanguageGrammarAccess implements IGrammarAccess {
	
	
	public class ModelElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Alternatives c0Alternatives = (Alternatives)cAlternatives.eContents().get(0);
		private final Alternatives c00Alternatives = (Alternatives)c0Alternatives.eContents().get(0);
		private final Assignment c000AssignmentFirst = (Assignment)c00Alternatives.eContents().get(0);
		private final Keyword c0000KeywordFooBar = (Keyword)c000AssignmentFirst.eContents().get(0);
		private final Assignment c001AssignmentSecond = (Assignment)c00Alternatives.eContents().get(1);
		private final Keyword c0010KeywordFoo = (Keyword)c001AssignmentSecond.eContents().get(0);
		private final Assignment c01AssignmentThird = (Assignment)c0Alternatives.eContents().get(1);
		private final Keyword c010KeywordBar = (Keyword)c01AssignmentThird.eContents().get(0);
		private final Assignment c1AssignmentForth = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword c10KeywordReverseSolidus = (Keyword)c1AssignmentForth.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public Alternatives ele0Alternatives() { return c0Alternatives; }

		// not supported
		public Alternatives ele00Alternatives() { return c00Alternatives; }

		// not supported
		public Assignment ele000AssignmentFirst() { return c000AssignmentFirst; }

		// not supported
		public Keyword ele0000KeywordFooBar() { return c0000KeywordFooBar; }

		// not supported
		public Assignment ele001AssignmentSecond() { return c001AssignmentSecond; }

		// not supported
		public Keyword ele0010KeywordFoo() { return c0010KeywordFoo; }

		// not supported
		public Assignment ele01AssignmentThird() { return c01AssignmentThird; }

		// not supported
		public Keyword ele010KeywordBar() { return c010KeywordBar; }

		// not supported
		public Assignment ele1AssignmentForth() { return c1AssignmentForth; }

		// not supported
		public Keyword ele10KeywordReverseSolidus() { return c10KeywordReverseSolidus; }
	}
	
	private ModelElements pModel;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess superGrammarAccess;

	@Inject
	public KeywordsTestLanguageGrammarAccess(GrammarProvider grammarProvider, TerminalsGrammarAccess superGrammarAccess) {
		this.grammarProvider = grammarProvider;
		this.superGrammarAccess = superGrammarAccess;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getSuperGrammarAccess() {
		return superGrammarAccess;
	}

	
	// not supported
	public ModelElements prModel() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.IDElements prID() {
		return superGrammarAccess.prID();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.INTElements prINT() {
		return superGrammarAccess.prINT();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.STRINGElements prSTRING() {
		return superGrammarAccess.prSTRING();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.ML_COMMENTElements prML_COMMENT() {
		return superGrammarAccess.prML_COMMENT();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.SL_COMMENTElements prSL_COMMENT() {
		return superGrammarAccess.prSL_COMMENT();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.WSElements prWS() {
		return superGrammarAccess.prWS();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.ANY_OTHERElements prANY_OTHER() {
		return superGrammarAccess.prANY_OTHER();
	} 
}
