/*
* generated by Xtext
*/

package org.eclipse.xtext.metamodelreferencing.tests.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MetamodelRefTestLanguageGrammarAccess implements IGrammarAccess {
	
	
	public class FooElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Foo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentName = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallID = (RuleCall)c0AssignmentName.eContents().get(0);
		private final Assignment c1AssignmentNameRefs = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10ParserRuleCallNameRef = (RuleCall)c1AssignmentNameRefs.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentName() { return c0AssignmentName; }

		// not supported
		public RuleCall ele00ParserRuleCallID() { return c00ParserRuleCallID; }

		// not supported
		public Assignment ele1AssignmentNameRefs() { return c1AssignmentNameRefs; }

		// not supported
		public RuleCall ele10ParserRuleCallNameRef() { return c10ParserRuleCallNameRef; }
	}

	public class NameRefElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NameRef");
		private final Assignment cAssignmentRule = (Assignment)rule.eContents().get(1);
		private final CrossReference c0CrossReferenceEStringParserRule = (CrossReference)cAssignmentRule.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Assignment eleAssignmentRule() { return cAssignmentRule; }

		// not supported
		public CrossReference ele0CrossReferenceEStringParserRule() { return c0CrossReferenceEStringParserRule; }
	}

	public class MyRuleElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MyRule");
		private final Assignment cAssignmentName = (Assignment)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallID = (RuleCall)cAssignmentName.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Assignment eleAssignmentName() { return cAssignmentName; }

		// not supported
		public RuleCall ele0ParserRuleCallID() { return c0ParserRuleCallID; }
	}
	
	private FooElements pFoo;
	private NameRefElements pNameRef;
	private MyRuleElements pMyRule;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess superGrammarAccess;

	@Inject
	public MetamodelRefTestLanguageGrammarAccess(GrammarProvider grammarProvider, TerminalsGrammarAccess superGrammarAccess) {
		this.grammarProvider = grammarProvider;
		this.superGrammarAccess = superGrammarAccess;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getSuperGrammarAccess() {
		return superGrammarAccess;
	}

	
	// not supported
	public FooElements prFoo() {
		return (pFoo != null) ? pFoo : (pFoo = new FooElements());
	} 

	// not supported
	public NameRefElements prNameRef() {
		return (pNameRef != null) ? pNameRef : (pNameRef = new NameRefElements());
	} 

	// not supported
	public MyRuleElements prMyRule() {
		return (pMyRule != null) ? pMyRule : (pMyRule = new MyRuleElements());
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.IDElements prID() {
		return superGrammarAccess.prID();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.INTElements prINT() {
		return superGrammarAccess.prINT();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.STRINGElements prSTRING() {
		return superGrammarAccess.prSTRING();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.ML_COMMENTElements prML_COMMENT() {
		return superGrammarAccess.prML_COMMENT();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.SL_COMMENTElements prSL_COMMENT() {
		return superGrammarAccess.prSL_COMMENT();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.WSElements prWS() {
		return superGrammarAccess.prWS();
	} 

	// not supported
	public org.eclipse.xtext.common.services.TerminalsGrammarAccess.ANY_OTHERElements prANY_OTHER() {
		return superGrammarAccess.prANY_OTHER();
	} 
}
