/*
* generated by Xtext
*/
package org.eclipse.xtext.metamodelreferencing.tests.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.metamodelreferencing.tests.services.MultiGenMMTestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 

import org.eclipse.xtext.metamodelreferencing.tests.parser.packrat.consumers.MultiGenMMTestLanguageFooConsumer;
import org.eclipse.xtext.metamodelreferencing.tests.parser.packrat.consumers.MultiGenMMTestLanguageNameRefConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class MultiGenMMTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 

    private MultiGenMMTestLanguageFooConsumer fooConsumer;
    private MultiGenMMTestLanguageNameRefConsumer nameRefConsumer;

	private MultiGenMMTestLanguageGrammarAccess grammarAccess;

	public MultiGenMMTestLanguageParserConfiguration(IInternalParserConfiguration configuration, MultiGenMMTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public MultiGenMMTestLanguageFooConsumer getRootConsumer() {
		return fooConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		fooConsumer = new MultiGenMMTestLanguageFooConsumer(
    		this, null
    	);
		nameRefConsumer = new MultiGenMMTestLanguageNameRefConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getFooConsumer().setRule(grammarAccess.prFoo());
		getNameRefConsumer().setRule(grammarAccess.prNameRef());
		getIdConsumer().setRule(grammarAccess.prID());
		getIntConsumer().setRule(grammarAccess.prINT());
		getStringConsumer().setRule(grammarAccess.prSTRING());
		getMlCommentConsumer().setRule(grammarAccess.prML_COMMENT());
		getSlCommentConsumer().setRule(grammarAccess.prSL_COMMENT());
		getWsConsumer().setRule(grammarAccess.prWS());
		getAnyOtherConsumer().setRule(grammarAccess.prANY_OTHER());


		getFooConsumer().setIdConsumer(getIdConsumer());
		getFooConsumer().setNameRefConsumer(getNameRefConsumer());

		getNameRefConsumer().setStringConsumer(getStringConsumer());

		getFooConsumer().setRuleCall$3$Delimiter(org.eclipse.xtext.metamodelreferencing.tests.parser.packrat.MultiGenMMTestLanguageDelimiters.ruleCall$6$Delimiter);
		getNameRefConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.metamodelreferencing.tests.parser.packrat.MultiGenMMTestLanguageDelimiters.ruleCall$6$Delimiter);
	}
	
	// TODO collect superGrammars transitive
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public MultiGenMMTestLanguageFooConsumer getFooConsumer() {
    	return fooConsumer;
    }

    public MultiGenMMTestLanguageNameRefConsumer getNameRefConsumer() {
    	return nameRefConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
