/*
* generated by Xtext
*/
package org.eclipse.xtext.dummy.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.dummy.services.DummyTestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 

import org.eclipse.xtext.dummy.parser.packrat.consumers.DummyTestLanguageModelConsumer;
import org.eclipse.xtext.dummy.parser.packrat.consumers.DummyTestLanguageElementConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class DummyTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 

    private DummyTestLanguageModelConsumer modelConsumer;
    private DummyTestLanguageElementConsumer elementConsumer;

	private DummyTestLanguageGrammarAccess grammarAccess;

	public DummyTestLanguageParserConfiguration(IInternalParserConfiguration configuration, DummyTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public DummyTestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		modelConsumer = new DummyTestLanguageModelConsumer(
    		this, null
    	);
		elementConsumer = new DummyTestLanguageElementConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.prModel());
		getElementConsumer().setRule(grammarAccess.prElement());
		getIdConsumer().setRule(grammarAccess.trID());
		getIntConsumer().setRule(grammarAccess.trINT());
		getStringConsumer().setRule(grammarAccess.trSTRING());
		getMlCommentConsumer().setRule(grammarAccess.trML_COMMENT());
		getSlCommentConsumer().setRule(grammarAccess.trSL_COMMENT());
		getWsConsumer().setRule(grammarAccess.trWS());
		getAnyOtherConsumer().setRule(grammarAccess.trANY_OTHER());


		getModelConsumer().setElementConsumer(getElementConsumer());

		getElementConsumer().setIdConsumer(getIdConsumer());
		getElementConsumer().setStringConsumer(getStringConsumer());

		getElementConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.dummy.parser.packrat.DummyTestLanguageDelimiters.keyword$12$Delimiter);
		getElementConsumer().setKeyword$7$Delimiter(org.eclipse.xtext.dummy.parser.packrat.DummyTestLanguageDelimiters.keyword$12$Delimiter);
		getElementConsumer().setKeyword$12$Delimiter(org.eclipse.xtext.dummy.parser.packrat.DummyTestLanguageDelimiters.keyword$18$Delimiter);
		getElementConsumer().setRuleCall$9$Delimiter(org.eclipse.xtext.dummy.parser.packrat.DummyTestLanguageDelimiters.ruleCall$15$Delimiter);
		getElementConsumer().setRuleCall$11$Delimiter(org.eclipse.xtext.dummy.parser.packrat.DummyTestLanguageDelimiters.ruleCall$17$Delimiter);
	}
	
	// TODO collect superGrammars transitive
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public DummyTestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public DummyTestLanguageElementConsumer getElementConsumer() {
    	return elementConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
