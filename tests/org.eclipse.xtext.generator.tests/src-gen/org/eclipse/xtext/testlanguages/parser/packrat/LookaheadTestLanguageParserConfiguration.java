/*
* generated by Xtext
*/
package org.eclipse.xtext.testlanguages.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.testlanguages.services.LookaheadTestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.testlanguages.parser.packrat.consumers.LookaheadTestLanguageEntryConsumer;
import org.eclipse.xtext.testlanguages.parser.packrat.consumers.LookaheadTestLanguageAltsConsumer;
import org.eclipse.xtext.testlanguages.parser.packrat.consumers.LookaheadTestLanguageLookAhead0Consumer;
import org.eclipse.xtext.testlanguages.parser.packrat.consumers.LookaheadTestLanguageLookAhead1Consumer;
import org.eclipse.xtext.testlanguages.parser.packrat.consumers.LookaheadTestLanguageLookAhead2Consumer;
import org.eclipse.xtext.testlanguages.parser.packrat.consumers.LookaheadTestLanguageLookAhead3Consumer;
import org.eclipse.xtext.testlanguages.parser.packrat.consumers.LookaheadTestLanguageLookAhead4Consumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class LookaheadTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private LookaheadTestLanguageEntryConsumer entryConsumer;
    private LookaheadTestLanguageAltsConsumer altsConsumer;
    private LookaheadTestLanguageLookAhead0Consumer lookAhead0Consumer;
    private LookaheadTestLanguageLookAhead1Consumer lookAhead1Consumer;
    private LookaheadTestLanguageLookAhead2Consumer lookAhead2Consumer;
    private LookaheadTestLanguageLookAhead3Consumer lookAhead3Consumer;
    private LookaheadTestLanguageLookAhead4Consumer lookAhead4Consumer;

	private LookaheadTestLanguageGrammarAccess grammarAccess;

	public LookaheadTestLanguageParserConfiguration(IInternalParserConfiguration configuration, LookaheadTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public LookaheadTestLanguageEntryConsumer getRootConsumer() {
		return entryConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		entryConsumer = new LookaheadTestLanguageEntryConsumer(
    		this, null
    	);
		altsConsumer = new LookaheadTestLanguageAltsConsumer(
    		this, null
    	);
		lookAhead0Consumer = new LookaheadTestLanguageLookAhead0Consumer(
    		this, null
    	);
		lookAhead1Consumer = new LookaheadTestLanguageLookAhead1Consumer(
    		this, null
    	);
		lookAhead2Consumer = new LookaheadTestLanguageLookAhead2Consumer(
    		this, null
    	);
		lookAhead3Consumer = new LookaheadTestLanguageLookAhead3Consumer(
    		this, null
    	);
		lookAhead4Consumer = new LookaheadTestLanguageLookAhead4Consumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getEntryConsumer().setRule(grammarAccess.getEntryAccess());
		getAltsConsumer().setRule(grammarAccess.getAltsAccess());
		getLookAhead0Consumer().setRule(grammarAccess.getLookAhead0Access());
		getLookAhead1Consumer().setRule(grammarAccess.getLookAhead1Access());
		getLookAhead2Consumer().setRule(grammarAccess.getLookAhead2Access());
		getLookAhead3Consumer().setRule(grammarAccess.getLookAhead3Access());
		getLookAhead4Consumer().setRule(grammarAccess.getLookAhead4Access());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getEntryConsumer().setAltsConsumer(getAltsConsumer());

		getAltsConsumer().setLookAhead0Consumer(getLookAhead0Consumer());
		getAltsConsumer().setLookAhead1Consumer(getLookAhead1Consumer());
		getAltsConsumer().setLookAhead3Consumer(getLookAhead3Consumer());

		getLookAhead1Consumer().setLookAhead2Consumer(getLookAhead2Consumer());

		getLookAhead3Consumer().setLookAhead4Consumer(getLookAhead4Consumer());

		getLookAhead0Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead0Consumer().setKeyword$4$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead1Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead1Consumer().setKeyword$6$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead1Consumer().setKeyword$8$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead2Consumer().setKeyword$4$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead2Consumer().setKeyword$6$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead2Consumer().setKeyword$7$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead3Consumer().setKeyword$2$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead3Consumer().setKeyword$3$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead3Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead4Consumer().setKeyword$3$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
		getLookAhead4Consumer().setKeyword$5$Delimiter(org.eclipse.xtext.testlanguages.parser.packrat.LookaheadTestLanguageDelimiters.keyword$14$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public LookaheadTestLanguageEntryConsumer getEntryConsumer() {
    	return entryConsumer;
    }

    public LookaheadTestLanguageAltsConsumer getAltsConsumer() {
    	return altsConsumer;
    }

    public LookaheadTestLanguageLookAhead0Consumer getLookAhead0Consumer() {
    	return lookAhead0Consumer;
    }

    public LookaheadTestLanguageLookAhead1Consumer getLookAhead1Consumer() {
    	return lookAhead1Consumer;
    }

    public LookaheadTestLanguageLookAhead2Consumer getLookAhead2Consumer() {
    	return lookAhead2Consumer;
    }

    public LookaheadTestLanguageLookAhead3Consumer getLookAhead3Consumer() {
    	return lookAhead3Consumer;
    }

    public LookaheadTestLanguageLookAhead4Consumer getLookAhead4Consumer() {
    	return lookAhead4Consumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
