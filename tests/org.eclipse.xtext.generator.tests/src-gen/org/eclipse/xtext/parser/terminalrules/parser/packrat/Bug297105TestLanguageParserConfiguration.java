/*
* generated by Xtext
*/
package org.eclipse.xtext.parser.terminalrules.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.parser.terminalrules.services.Bug297105TestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageModelConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageExpressionConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageLiteralConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageIntLiteralConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageRealLiteralConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageIntValueConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageRealValueConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageRealConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug297105TestLanguageEXT_INTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class Bug297105TestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private Bug297105TestLanguageModelConsumer modelConsumer;
    private Bug297105TestLanguageExpressionConsumer expressionConsumer;
    private Bug297105TestLanguageLiteralConsumer literalConsumer;
    private Bug297105TestLanguageIntLiteralConsumer intLiteralConsumer;
    private Bug297105TestLanguageRealLiteralConsumer realLiteralConsumer;
    private Bug297105TestLanguageIntValueConsumer intValueConsumer;
    private Bug297105TestLanguageRealValueConsumer realValueConsumer;
    private Bug297105TestLanguageRealConsumer realConsumer;
    private Bug297105TestLanguageEXT_INTConsumer extIntConsumer;

	private Bug297105TestLanguageGrammarAccess grammarAccess;

	public Bug297105TestLanguageParserConfiguration(IInternalParserConfiguration configuration, Bug297105TestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public Bug297105TestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		modelConsumer = new Bug297105TestLanguageModelConsumer(
    		this, null
    	);
		expressionConsumer = new Bug297105TestLanguageExpressionConsumer(
    		this, null
    	);
		literalConsumer = new Bug297105TestLanguageLiteralConsumer(
    		this, null
    	);
		intLiteralConsumer = new Bug297105TestLanguageIntLiteralConsumer(
    		this, null
    	);
		realLiteralConsumer = new Bug297105TestLanguageRealLiteralConsumer(
    		this, null
    	);
		intValueConsumer = new Bug297105TestLanguageIntValueConsumer(
    		this, null
    	);
		realValueConsumer = new Bug297105TestLanguageRealValueConsumer(
    		this, null
    	);
		realConsumer = new Bug297105TestLanguageRealConsumer(
    		this, new ITerminalConsumer[]{  }
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
		extIntConsumer = new Bug297105TestLanguageEXT_INTConsumer(this);
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getExpressionConsumer().setRule(grammarAccess.getExpressionAccess());
		getLiteralConsumer().setRule(grammarAccess.getLiteralAccess());
		getIntLiteralConsumer().setRule(grammarAccess.getIntLiteralAccess());
		getRealLiteralConsumer().setRule(grammarAccess.getRealLiteralAccess());
		getIntValueConsumer().setRule(grammarAccess.getIntValueAccess());
		getRealValueConsumer().setRule(grammarAccess.getRealValueAccess());
		getRealConsumer().setRule(grammarAccess.getRealAccess());
		getExtIntConsumer().setRule(grammarAccess.getEXT_INTRule());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setExpressionConsumer(getExpressionConsumer());

		getExpressionConsumer().setLiteralConsumer(getLiteralConsumer());

		getLiteralConsumer().setIntLiteralConsumer(getIntLiteralConsumer());
		getLiteralConsumer().setRealLiteralConsumer(getRealLiteralConsumer());

		getIntLiteralConsumer().setIntValueConsumer(getIntValueConsumer());

		getRealLiteralConsumer().setRealValueConsumer(getRealValueConsumer());

		getIntValueConsumer().setIntConsumer(getIntConsumer());

		getRealValueConsumer().setRealConsumer(getRealConsumer());

		getRealConsumer().setExtIntConsumer(getExtIntConsumer());
		getRealConsumer().setIntConsumer(getIntConsumer());

		getExpressionConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug297105TestLanguageDelimiters.keyword$11$Delimiter);
		getIntValueConsumer().setRuleCall$1$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug297105TestLanguageDelimiters.ruleCall$29$Delimiter);
		getRealConsumer().setKeyword$3$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug297105TestLanguageDelimiters.keyword$11$Delimiter);
		getRealConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug297105TestLanguageDelimiters.ruleCall$29$Delimiter);
		getRealConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug297105TestLanguageDelimiters.ruleCall$29$Delimiter);
		getRealConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug297105TestLanguageDelimiters.ruleCall$29$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public Bug297105TestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public Bug297105TestLanguageExpressionConsumer getExpressionConsumer() {
    	return expressionConsumer;
    }

    public Bug297105TestLanguageLiteralConsumer getLiteralConsumer() {
    	return literalConsumer;
    }

    public Bug297105TestLanguageIntLiteralConsumer getIntLiteralConsumer() {
    	return intLiteralConsumer;
    }

    public Bug297105TestLanguageRealLiteralConsumer getRealLiteralConsumer() {
    	return realLiteralConsumer;
    }

    public Bug297105TestLanguageIntValueConsumer getIntValueConsumer() {
    	return intValueConsumer;
    }

    public Bug297105TestLanguageRealValueConsumer getRealValueConsumer() {
    	return realValueConsumer;
    }

    public Bug297105TestLanguageRealConsumer getRealConsumer() {
    	return realConsumer;
    }

    public Bug297105TestLanguageEXT_INTConsumer getExtIntConsumer() {
    	return extIntConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
