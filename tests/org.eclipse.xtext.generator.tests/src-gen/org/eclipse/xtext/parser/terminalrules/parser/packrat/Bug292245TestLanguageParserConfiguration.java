/*
* generated by Xtext
*/
package org.eclipse.xtext.parser.terminalrules.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.parser.terminalrules.services.Bug292245TestLanguageGrammarAccess;

import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageModelConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageErrorConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageFixConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageApostropheConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageAPOSTROPHE_CHARConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageRehideConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageGraphicalConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageCHARConsumer;
import org.eclipse.xtext.parser.terminalrules.parser.packrat.consumers.Bug292245TestLanguageWSConsumer;

public class Bug292245TestLanguageParserConfiguration extends AbstractParserConfiguration {

    private Bug292245TestLanguageModelConsumer modelConsumer;
    private Bug292245TestLanguageErrorConsumer errorConsumer;
    private Bug292245TestLanguageFixConsumer fixConsumer;
    private Bug292245TestLanguageApostropheConsumer apostropheConsumer;
    private Bug292245TestLanguageAPOSTROPHE_CHARConsumer apostropheCharConsumer;
    private Bug292245TestLanguageRehideConsumer rehideConsumer;
    private Bug292245TestLanguageGraphicalConsumer graphicalConsumer;
    private Bug292245TestLanguageCHARConsumer charConsumer;
    private Bug292245TestLanguageWSConsumer wsConsumer;

	private Bug292245TestLanguageGrammarAccess grammarAccess;

	public Bug292245TestLanguageParserConfiguration(IInternalParserConfiguration configuration, Bug292245TestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
	}

	public Bug292245TestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		modelConsumer = new Bug292245TestLanguageModelConsumer(
    		this, new ITerminalConsumer[]{ getWsConsumer() }
    	);
		errorConsumer = new Bug292245TestLanguageErrorConsumer(
    		this, new ITerminalConsumer[]{  }
    	);
		fixConsumer = new Bug292245TestLanguageFixConsumer(
    		this, new ITerminalConsumer[]{  }
    	);
		apostropheConsumer = new Bug292245TestLanguageApostropheConsumer(
    		this, new ITerminalConsumer[]{ getWsConsumer() }
    	);
		rehideConsumer = new Bug292245TestLanguageRehideConsumer(
    		this, new ITerminalConsumer[]{ getWsConsumer() }
    	);
		graphicalConsumer = new Bug292245TestLanguageGraphicalConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		apostropheCharConsumer = new Bug292245TestLanguageAPOSTROPHE_CHARConsumer(this);
		charConsumer = new Bug292245TestLanguageCHARConsumer(this);
		wsConsumer = new Bug292245TestLanguageWSConsumer(this);
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getErrorConsumer().setRule(grammarAccess.getErrorAccess());
		getFixConsumer().setRule(grammarAccess.getFixAccess());
		getApostropheConsumer().setRule(grammarAccess.getApostropheAccess());
		getApostropheCharConsumer().setRule(grammarAccess.getAPOSTROPHE_CHARRule());
		getRehideConsumer().setRule(grammarAccess.getRehideAccess());
		getGraphicalConsumer().setRule(grammarAccess.getGraphicalAccess());
		getCharConsumer().setRule(grammarAccess.getCHARRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());


		getModelConsumer().setApostropheConsumer(getApostropheConsumer());
		getModelConsumer().setErrorConsumer(getErrorConsumer());
		getModelConsumer().setFixConsumer(getFixConsumer());

		getErrorConsumer().setApostropheCharConsumer(getApostropheCharConsumer());
		getErrorConsumer().setGraphicalConsumer(getGraphicalConsumer());

		getFixConsumer().setApostropheCharConsumer(getApostropheCharConsumer());
		getFixConsumer().setGraphicalConsumer(getGraphicalConsumer());
		getFixConsumer().setRehideConsumer(getRehideConsumer());

		getApostropheConsumer().setApostropheCharConsumer(getApostropheCharConsumer());

		getGraphicalConsumer().setCharConsumer(getCharConsumer());
		getGraphicalConsumer().setWsConsumer(getWsConsumer());

		getModelConsumer().setKeyword$7$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.keyword$6$Delimiter);
		getModelConsumer().setKeyword$11$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.keyword$6$Delimiter);
		getModelConsumer().setKeyword$3$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.keyword$6$Delimiter);
		getErrorConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.ruleCall$20$Delimiter);
		getErrorConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.ruleCall$20$Delimiter);
		getFixConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.ruleCall$20$Delimiter);
		getFixConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.ruleCall$20$Delimiter);
		getApostropheConsumer().setRuleCall$1$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.ruleCall$20$Delimiter);
		getRehideConsumer().setKeyword$1$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.keyword$6$Delimiter);
		getGraphicalConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.ruleCall$20$Delimiter);
		getGraphicalConsumer().setRuleCall$3$Delimiter(org.eclipse.xtext.parser.terminalrules.parser.packrat.Bug292245TestLanguageDelimiters.ruleCall$20$Delimiter);
	}
	
    public Bug292245TestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public Bug292245TestLanguageErrorConsumer getErrorConsumer() {
    	return errorConsumer;
    }

    public Bug292245TestLanguageFixConsumer getFixConsumer() {
    	return fixConsumer;
    }

    public Bug292245TestLanguageApostropheConsumer getApostropheConsumer() {
    	return apostropheConsumer;
    }

    public Bug292245TestLanguageAPOSTROPHE_CHARConsumer getApostropheCharConsumer() {
    	return apostropheCharConsumer;
    }

    public Bug292245TestLanguageRehideConsumer getRehideConsumer() {
    	return rehideConsumer;
    }

    public Bug292245TestLanguageGraphicalConsumer getGraphicalConsumer() {
    	return graphicalConsumer;
    }

    public Bug292245TestLanguageCHARConsumer getCharConsumer() {
    	return charConsumer;
    }

    public Bug292245TestLanguageWSConsumer getWsConsumer() {
    	return wsConsumer;
    }


}
