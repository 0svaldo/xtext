/*
* generated by Xtext
*/
package org.eclipse.xtext.parser.assignments.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.parser.assignments.services.Bug287184TestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.parser.assignments.parser.packrat.consumers.Bug287184TestLanguageModelConsumer;
import org.eclipse.xtext.parser.assignments.parser.packrat.consumers.Bug287184TestLanguageAbstractDetailConsumer;
import org.eclipse.xtext.parser.assignments.parser.packrat.consumers.Bug287184TestLanguageDetailConsumer;
import org.eclipse.xtext.parser.assignments.parser.packrat.consumers.Bug287184TestLanguageAssociatedDetailConsumer;
import org.eclipse.xtext.parser.assignments.parser.packrat.consumers.Bug287184TestLanguageFQNConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class Bug287184TestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private Bug287184TestLanguageModelConsumer modelConsumer;
    private Bug287184TestLanguageAbstractDetailConsumer abstractDetailConsumer;
    private Bug287184TestLanguageDetailConsumer detailConsumer;
    private Bug287184TestLanguageAssociatedDetailConsumer associatedDetailConsumer;
    private Bug287184TestLanguageFQNConsumer fqnConsumer;

	private Bug287184TestLanguageGrammarAccess grammarAccess;

	public Bug287184TestLanguageParserConfiguration(IInternalParserConfiguration configuration, Bug287184TestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public Bug287184TestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		modelConsumer = new Bug287184TestLanguageModelConsumer(
    		this, null
    	);
		abstractDetailConsumer = new Bug287184TestLanguageAbstractDetailConsumer(
    		this, null
    	);
		detailConsumer = new Bug287184TestLanguageDetailConsumer(
    		this, null
    	);
		associatedDetailConsumer = new Bug287184TestLanguageAssociatedDetailConsumer(
    		this, null
    	);
		fqnConsumer = new Bug287184TestLanguageFQNConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getAbstractDetailConsumer().setRule(grammarAccess.getAbstractDetailAccess());
		getDetailConsumer().setRule(grammarAccess.getDetailAccess());
		getAssociatedDetailConsumer().setRule(grammarAccess.getAssociatedDetailAccess());
		getFqnConsumer().setRule(grammarAccess.getFQNAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setAssociatedDetailConsumer(getAssociatedDetailConsumer());
		getModelConsumer().setDetailConsumer(getDetailConsumer());
		getModelConsumer().setFqnConsumer(getFqnConsumer());
		getModelConsumer().setIdConsumer(getIdConsumer());

		getAbstractDetailConsumer().setAssociatedDetailConsumer(getAssociatedDetailConsumer());
		getAbstractDetailConsumer().setDetailConsumer(getDetailConsumer());

		getDetailConsumer().setFqnConsumer(getFqnConsumer());
		getDetailConsumer().setMlCommentConsumer(getMlCommentConsumer());

		getAssociatedDetailConsumer().setFqnConsumer(getFqnConsumer());
		getAssociatedDetailConsumer().setIdConsumer(getIdConsumer());

		getFqnConsumer().setIdConsumer(getIdConsumer());

		getModelConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.keyword$4$Delimiter);
		getModelConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.ruleCall$7$Delimiter);
		getDetailConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.keyword$4$Delimiter);
		getDetailConsumer().setKeyword$7$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.keyword$4$Delimiter);
		getDetailConsumer().setKeyword$8$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.keyword$4$Delimiter);
		getDetailConsumer().setKeyword$9$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.keyword$4$Delimiter);
		getDetailConsumer().setRuleCall$3$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.ruleCall$22$Delimiter);
		getAssociatedDetailConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.keyword$4$Delimiter);
		getAssociatedDetailConsumer().setKeyword$9$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.keyword$43$Delimiter);
		getAssociatedDetailConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.ruleCall$7$Delimiter);
		getFqnConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.keyword$43$Delimiter);
		getFqnConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.ruleCall$7$Delimiter);
		getFqnConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parser.assignments.parser.packrat.Bug287184TestLanguageDelimiters.ruleCall$7$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public Bug287184TestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public Bug287184TestLanguageAbstractDetailConsumer getAbstractDetailConsumer() {
    	return abstractDetailConsumer;
    }

    public Bug287184TestLanguageDetailConsumer getDetailConsumer() {
    	return detailConsumer;
    }

    public Bug287184TestLanguageAssociatedDetailConsumer getAssociatedDetailConsumer() {
    	return associatedDetailConsumer;
    }

    public Bug287184TestLanguageFQNConsumer getFqnConsumer() {
    	return fqnConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
