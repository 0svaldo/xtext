/*
* generated by Xtext
*/

package org.eclipse.xtext.parser.epatch.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class EpatchTestLanguageGrammarAccess implements IGrammarAccess {
	
	
	public class EPatchElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EPatch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordEpatch = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentName = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentName.eContents().get(0);
		private final Keyword c2KeywordLeftCurlyBracket = (Keyword)cGroup.eContents().get(2);
		private final Assignment c3AssignmentImports = (Assignment)cGroup.eContents().get(3);
		private final RuleCall c30ParserRuleCallImport = (RuleCall)c3AssignmentImports.eContents().get(0);
		private final Assignment c4AssignmentResources = (Assignment)cGroup.eContents().get(4);
		private final RuleCall c40ParserRuleCallNamedResource = (RuleCall)c4AssignmentResources.eContents().get(0);
		private final Assignment c5AssignmentObjects = (Assignment)cGroup.eContents().get(5);
		private final RuleCall c50ParserRuleCallObjectRef = (RuleCall)c5AssignmentObjects.eContents().get(0);
		private final Keyword c6KeywordRightCurlyBracket = (Keyword)cGroup.eContents().get(6);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordEpatch() { return c0KeywordEpatch; }

		// not supported
		public Assignment ele1AssignmentName() { return c1AssignmentName; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }

		// not supported
		public Keyword ele2KeywordLeftCurlyBracket() { return c2KeywordLeftCurlyBracket; }

		// not supported
		public Assignment ele3AssignmentImports() { return c3AssignmentImports; }

		// not supported
		public RuleCall ele30ParserRuleCallImport() { return c30ParserRuleCallImport; }

		// not supported
		public Assignment ele4AssignmentResources() { return c4AssignmentResources; }

		// not supported
		public RuleCall ele40ParserRuleCallNamedResource() { return c40ParserRuleCallNamedResource; }

		// not supported
		public Assignment ele5AssignmentObjects() { return c5AssignmentObjects; }

		// not supported
		public RuleCall ele50ParserRuleCallObjectRef() { return c50ParserRuleCallObjectRef; }

		// not supported
		public Keyword ele6KeywordRightCurlyBracket() { return c6KeywordRightCurlyBracket; }
	}

	public class ImportElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallModelImport = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallJavaImport = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall c2ParserRuleCallExtensionImport = (RuleCall)cAlternatives.eContents().get(2);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0ParserRuleCallModelImport() { return c0ParserRuleCallModelImport; }

		// not supported
		public RuleCall ele1ParserRuleCallJavaImport() { return c1ParserRuleCallJavaImport; }

		// not supported
		public RuleCall ele2ParserRuleCallExtensionImport() { return c2ParserRuleCallExtensionImport; }
	}

	public class ModelImportElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelImport");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallResourceImport = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallEPackageImport = (RuleCall)cAlternatives.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0ParserRuleCallResourceImport() { return c0ParserRuleCallResourceImport; }

		// not supported
		public RuleCall ele1ParserRuleCallEPackageImport() { return c1ParserRuleCallEPackageImport; }
	}

	public class ResourceImportElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordImport = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentName = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentName.eContents().get(0);
		private final Keyword c2KeywordUri = (Keyword)cGroup.eContents().get(2);
		private final Assignment c3AssignmentUri = (Assignment)cGroup.eContents().get(3);
		private final RuleCall c30TerminalRuleCallSTRING = (RuleCall)c3AssignmentUri.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordImport() { return c0KeywordImport; }

		// not supported
		public Assignment ele1AssignmentName() { return c1AssignmentName; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }

		// not supported
		public Keyword ele2KeywordUri() { return c2KeywordUri; }

		// not supported
		public Assignment ele3AssignmentUri() { return c3AssignmentUri; }

		// not supported
		public RuleCall ele30TerminalRuleCallSTRING() { return c30TerminalRuleCallSTRING; }
	}

	public class EPackageImportElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EPackageImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordImport = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentName = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentName.eContents().get(0);
		private final Keyword c2KeywordNs = (Keyword)cGroup.eContents().get(2);
		private final Assignment c3AssignmentNsURI = (Assignment)cGroup.eContents().get(3);
		private final RuleCall c30TerminalRuleCallSTRING = (RuleCall)c3AssignmentNsURI.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordImport() { return c0KeywordImport; }

		// not supported
		public Assignment ele1AssignmentName() { return c1AssignmentName; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }

		// not supported
		public Keyword ele2KeywordNs() { return c2KeywordNs; }

		// not supported
		public Assignment ele3AssignmentNsURI() { return c3AssignmentNsURI; }

		// not supported
		public RuleCall ele30TerminalRuleCallSTRING() { return c30TerminalRuleCallSTRING; }
	}

	public class JavaImportElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JavaImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordImport = (Keyword)cGroup.eContents().get(0);
		private final Keyword c1KeywordJava = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentPath = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallID = (RuleCall)c2AssignmentPath.eContents().get(0);
		private final Group c3Group = (Group)cGroup.eContents().get(3);
		private final Keyword c30KeywordFullStop = (Keyword)c3Group.eContents().get(0);
		private final Assignment c31AssignmentPath = (Assignment)c3Group.eContents().get(1);
		private final RuleCall c310TerminalRuleCallID = (RuleCall)c31AssignmentPath.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordImport() { return c0KeywordImport; }

		// not supported
		public Keyword ele1KeywordJava() { return c1KeywordJava; }

		// not supported
		public Assignment ele2AssignmentPath() { return c2AssignmentPath; }

		// not supported
		public RuleCall ele20TerminalRuleCallID() { return c20TerminalRuleCallID; }

		// not supported
		public Group ele3Group() { return c3Group; }

		// not supported
		public Keyword ele30KeywordFullStop() { return c30KeywordFullStop; }

		// not supported
		public Assignment ele31AssignmentPath() { return c31AssignmentPath; }

		// not supported
		public RuleCall ele310TerminalRuleCallID() { return c310TerminalRuleCallID; }
	}

	public class ExtensionImportElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExtensionImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordImport = (Keyword)cGroup.eContents().get(0);
		private final Keyword c1KeywordExtension = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentPath = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallID = (RuleCall)c2AssignmentPath.eContents().get(0);
		private final Group c3Group = (Group)cGroup.eContents().get(3);
		private final Keyword c30KeywordColonColon = (Keyword)c3Group.eContents().get(0);
		private final Assignment c31AssignmentPath = (Assignment)c3Group.eContents().get(1);
		private final RuleCall c310TerminalRuleCallID = (RuleCall)c31AssignmentPath.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordImport() { return c0KeywordImport; }

		// not supported
		public Keyword ele1KeywordExtension() { return c1KeywordExtension; }

		// not supported
		public Assignment ele2AssignmentPath() { return c2AssignmentPath; }

		// not supported
		public RuleCall ele20TerminalRuleCallID() { return c20TerminalRuleCallID; }

		// not supported
		public Group ele3Group() { return c3Group; }

		// not supported
		public Keyword ele30KeywordColonColon() { return c30KeywordColonColon; }

		// not supported
		public Assignment ele31AssignmentPath() { return c31AssignmentPath; }

		// not supported
		public RuleCall ele310TerminalRuleCallID() { return c310TerminalRuleCallID; }
	}

	public class NamedResourceElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordResource = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentName = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentName.eContents().get(0);
		private final Keyword c2KeywordLeftCurlyBracket = (Keyword)cGroup.eContents().get(2);
		private final Keyword c3KeywordLeft = (Keyword)cGroup.eContents().get(3);
		private final Alternatives c4Alternatives = (Alternatives)cGroup.eContents().get(4);
		private final Group c40Group = (Group)c4Alternatives.eContents().get(0);
		private final Keyword c400KeywordUri = (Keyword)c40Group.eContents().get(0);
		private final Assignment c401AssignmentLeftUri = (Assignment)c40Group.eContents().get(1);
		private final RuleCall c4010TerminalRuleCallSTRING = (RuleCall)c401AssignmentLeftUri.eContents().get(0);
		private final Assignment c41AssignmentLeftRoot = (Assignment)c4Alternatives.eContents().get(1);
		private final RuleCall c410ParserRuleCallCreatedObject = (RuleCall)c41AssignmentLeftRoot.eContents().get(0);
		private final Keyword c5KeywordSemicolon = (Keyword)cGroup.eContents().get(5);
		private final Keyword c6KeywordRight = (Keyword)cGroup.eContents().get(6);
		private final Alternatives c7Alternatives = (Alternatives)cGroup.eContents().get(7);
		private final Group c70Group = (Group)c7Alternatives.eContents().get(0);
		private final Keyword c700KeywordUri = (Keyword)c70Group.eContents().get(0);
		private final Assignment c701AssignmentRightUri = (Assignment)c70Group.eContents().get(1);
		private final RuleCall c7010TerminalRuleCallSTRING = (RuleCall)c701AssignmentRightUri.eContents().get(0);
		private final Assignment c71AssignmentRightRoot = (Assignment)c7Alternatives.eContents().get(1);
		private final RuleCall c710ParserRuleCallCreatedObject = (RuleCall)c71AssignmentRightRoot.eContents().get(0);
		private final Keyword c8KeywordSemicolon = (Keyword)cGroup.eContents().get(8);
		private final Keyword c9KeywordRightCurlyBracket = (Keyword)cGroup.eContents().get(9);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordResource() { return c0KeywordResource; }

		// not supported
		public Assignment ele1AssignmentName() { return c1AssignmentName; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }

		// not supported
		public Keyword ele2KeywordLeftCurlyBracket() { return c2KeywordLeftCurlyBracket; }

		// not supported
		public Keyword ele3KeywordLeft() { return c3KeywordLeft; }

		// not supported
		public Alternatives ele4Alternatives() { return c4Alternatives; }

		// not supported
		public Group ele40Group() { return c40Group; }

		// not supported
		public Keyword ele400KeywordUri() { return c400KeywordUri; }

		// not supported
		public Assignment ele401AssignmentLeftUri() { return c401AssignmentLeftUri; }

		// not supported
		public RuleCall ele4010TerminalRuleCallSTRING() { return c4010TerminalRuleCallSTRING; }

		// not supported
		public Assignment ele41AssignmentLeftRoot() { return c41AssignmentLeftRoot; }

		// not supported
		public RuleCall ele410ParserRuleCallCreatedObject() { return c410ParserRuleCallCreatedObject; }

		// not supported
		public Keyword ele5KeywordSemicolon() { return c5KeywordSemicolon; }

		// not supported
		public Keyword ele6KeywordRight() { return c6KeywordRight; }

		// not supported
		public Alternatives ele7Alternatives() { return c7Alternatives; }

		// not supported
		public Group ele70Group() { return c70Group; }

		// not supported
		public Keyword ele700KeywordUri() { return c700KeywordUri; }

		// not supported
		public Assignment ele701AssignmentRightUri() { return c701AssignmentRightUri; }

		// not supported
		public RuleCall ele7010TerminalRuleCallSTRING() { return c7010TerminalRuleCallSTRING; }

		// not supported
		public Assignment ele71AssignmentRightRoot() { return c71AssignmentRightRoot; }

		// not supported
		public RuleCall ele710ParserRuleCallCreatedObject() { return c710ParserRuleCallCreatedObject; }

		// not supported
		public Keyword ele8KeywordSemicolon() { return c8KeywordSemicolon; }

		// not supported
		public Keyword ele9KeywordRightCurlyBracket() { return c9KeywordRightCurlyBracket; }
	}

	public class NamedObjectElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallObjectRef = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallCreatedObject = (RuleCall)cAlternatives.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0ParserRuleCallObjectRef() { return c0ParserRuleCallObjectRef; }

		// not supported
		public RuleCall ele1ParserRuleCallCreatedObject() { return c1ParserRuleCallCreatedObject; }
	}

	public class ObjectRefElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordObject = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentName = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentName.eContents().get(0);
		private final Alternatives c2Alternatives = (Alternatives)cGroup.eContents().get(2);
		private final Group c20Group = (Group)c2Alternatives.eContents().get(0);
		private final Assignment c200AssignmentLeftRes = (Assignment)c20Group.eContents().get(0);
		private final CrossReference c2000CrossReferenceIDNamedResource = (CrossReference)c200AssignmentLeftRes.eContents().get(0);
		private final RuleCall c20001TerminalRuleCallID = (RuleCall)c2000CrossReferenceIDNamedResource.eContents().get(1);
		private final Assignment c201AssignmentLeftFrag = (Assignment)c20Group.eContents().get(1);
		private final RuleCall c2010TerminalRuleCallFRAGMENT = (RuleCall)c201AssignmentLeftFrag.eContents().get(0);
		private final Group c21Group = (Group)c2Alternatives.eContents().get(1);
		private final Keyword c210KeywordLeft = (Keyword)c21Group.eContents().get(0);
		private final Assignment c211AssignmentLeftRes = (Assignment)c21Group.eContents().get(1);
		private final CrossReference c2110CrossReferenceIDNamedResource = (CrossReference)c211AssignmentLeftRes.eContents().get(0);
		private final RuleCall c21101TerminalRuleCallID = (RuleCall)c2110CrossReferenceIDNamedResource.eContents().get(1);
		private final Assignment c212AssignmentLeftFrag = (Assignment)c21Group.eContents().get(2);
		private final RuleCall c2120TerminalRuleCallFRAGMENT = (RuleCall)c212AssignmentLeftFrag.eContents().get(0);
		private final Keyword c213KeywordRight = (Keyword)c21Group.eContents().get(3);
		private final Assignment c214AssignmentRightRes = (Assignment)c21Group.eContents().get(4);
		private final CrossReference c2140CrossReferenceIDNamedResource = (CrossReference)c214AssignmentRightRes.eContents().get(0);
		private final RuleCall c21401TerminalRuleCallID = (RuleCall)c2140CrossReferenceIDNamedResource.eContents().get(1);
		private final Assignment c215AssignmentRightFrag = (Assignment)c21Group.eContents().get(5);
		private final RuleCall c2150TerminalRuleCallFRAGMENT = (RuleCall)c215AssignmentRightFrag.eContents().get(0);
		private final Group c3Group = (Group)cGroup.eContents().get(3);
		private final Keyword c30KeywordLeftCurlyBracket = (Keyword)c3Group.eContents().get(0);
		private final Alternatives c31Alternatives = (Alternatives)c3Group.eContents().get(1);
		private final Assignment c310AssignmentAssignments = (Assignment)c31Alternatives.eContents().get(0);
		private final RuleCall c3100ParserRuleCallBiSingleAssignment = (RuleCall)c310AssignmentAssignments.eContents().get(0);
		private final Assignment c311AssignmentAssignments = (Assignment)c31Alternatives.eContents().get(1);
		private final RuleCall c3110ParserRuleCallBiListAssignment = (RuleCall)c311AssignmentAssignments.eContents().get(0);
		private final Group c32Group = (Group)c3Group.eContents().get(2);
		private final Keyword c320KeywordLeft = (Keyword)c32Group.eContents().get(0);
		private final Assignment c321AssignmentLeftMig = (Assignment)c32Group.eContents().get(1);
		private final RuleCall c3210ParserRuleCallMigration = (RuleCall)c321AssignmentLeftMig.eContents().get(0);
		private final Group c33Group = (Group)c3Group.eContents().get(3);
		private final Keyword c330KeywordRight = (Keyword)c33Group.eContents().get(0);
		private final Assignment c331AssignmentRightMig = (Assignment)c33Group.eContents().get(1);
		private final RuleCall c3310ParserRuleCallMigration = (RuleCall)c331AssignmentRightMig.eContents().get(0);
		private final Keyword c34KeywordRightCurlyBracket = (Keyword)c3Group.eContents().get(4);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordObject() { return c0KeywordObject; }

		// not supported
		public Assignment ele1AssignmentName() { return c1AssignmentName; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }

		// not supported
		public Alternatives ele2Alternatives() { return c2Alternatives; }

		// not supported
		public Group ele20Group() { return c20Group; }

		// not supported
		public Assignment ele200AssignmentLeftRes() { return c200AssignmentLeftRes; }

		// not supported
		public CrossReference ele2000CrossReferenceIDNamedResource() { return c2000CrossReferenceIDNamedResource; }

		// not supported
		public RuleCall ele20001TerminalRuleCallID() { return c20001TerminalRuleCallID; }

		// not supported
		public Assignment ele201AssignmentLeftFrag() { return c201AssignmentLeftFrag; }

		// not supported
		public RuleCall ele2010TerminalRuleCallFRAGMENT() { return c2010TerminalRuleCallFRAGMENT; }

		// not supported
		public Group ele21Group() { return c21Group; }

		// not supported
		public Keyword ele210KeywordLeft() { return c210KeywordLeft; }

		// not supported
		public Assignment ele211AssignmentLeftRes() { return c211AssignmentLeftRes; }

		// not supported
		public CrossReference ele2110CrossReferenceIDNamedResource() { return c2110CrossReferenceIDNamedResource; }

		// not supported
		public RuleCall ele21101TerminalRuleCallID() { return c21101TerminalRuleCallID; }

		// not supported
		public Assignment ele212AssignmentLeftFrag() { return c212AssignmentLeftFrag; }

		// not supported
		public RuleCall ele2120TerminalRuleCallFRAGMENT() { return c2120TerminalRuleCallFRAGMENT; }

		// not supported
		public Keyword ele213KeywordRight() { return c213KeywordRight; }

		// not supported
		public Assignment ele214AssignmentRightRes() { return c214AssignmentRightRes; }

		// not supported
		public CrossReference ele2140CrossReferenceIDNamedResource() { return c2140CrossReferenceIDNamedResource; }

		// not supported
		public RuleCall ele21401TerminalRuleCallID() { return c21401TerminalRuleCallID; }

		// not supported
		public Assignment ele215AssignmentRightFrag() { return c215AssignmentRightFrag; }

		// not supported
		public RuleCall ele2150TerminalRuleCallFRAGMENT() { return c2150TerminalRuleCallFRAGMENT; }

		// not supported
		public Group ele3Group() { return c3Group; }

		// not supported
		public Keyword ele30KeywordLeftCurlyBracket() { return c30KeywordLeftCurlyBracket; }

		// not supported
		public Alternatives ele31Alternatives() { return c31Alternatives; }

		// not supported
		public Assignment ele310AssignmentAssignments() { return c310AssignmentAssignments; }

		// not supported
		public RuleCall ele3100ParserRuleCallBiSingleAssignment() { return c3100ParserRuleCallBiSingleAssignment; }

		// not supported
		public Assignment ele311AssignmentAssignments() { return c311AssignmentAssignments; }

		// not supported
		public RuleCall ele3110ParserRuleCallBiListAssignment() { return c3110ParserRuleCallBiListAssignment; }

		// not supported
		public Group ele32Group() { return c32Group; }

		// not supported
		public Keyword ele320KeywordLeft() { return c320KeywordLeft; }

		// not supported
		public Assignment ele321AssignmentLeftMig() { return c321AssignmentLeftMig; }

		// not supported
		public RuleCall ele3210ParserRuleCallMigration() { return c3210ParserRuleCallMigration; }

		// not supported
		public Group ele33Group() { return c33Group; }

		// not supported
		public Keyword ele330KeywordRight() { return c330KeywordRight; }

		// not supported
		public Assignment ele331AssignmentRightMig() { return c331AssignmentRightMig; }

		// not supported
		public RuleCall ele3310ParserRuleCallMigration() { return c3310ParserRuleCallMigration; }

		// not supported
		public Keyword ele34KeywordRightCurlyBracket() { return c34KeywordRightCurlyBracket; }
	}

	public class AssignmentElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Assignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallBiSingleAssignment = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallBiListAssignment = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall c2ParserRuleCallMonoSingleAssignment = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall c3ParserRuleCallMonoListAssignment = (RuleCall)cAlternatives.eContents().get(3);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0ParserRuleCallBiSingleAssignment() { return c0ParserRuleCallBiSingleAssignment; }

		// not supported
		public RuleCall ele1ParserRuleCallBiListAssignment() { return c1ParserRuleCallBiListAssignment; }

		// not supported
		public RuleCall ele2ParserRuleCallMonoSingleAssignment() { return c2ParserRuleCallMonoSingleAssignment; }

		// not supported
		public RuleCall ele3ParserRuleCallMonoListAssignment() { return c3ParserRuleCallMonoListAssignment; }
	}

	public class BiSingleAssignmentElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BiSingleAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentFeature = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00TerminalRuleCallID = (RuleCall)c0AssignmentFeature.eContents().get(0);
		private final Keyword c1KeywordEqualsSign = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentLeftValue = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20ParserRuleCallSingleAssignmentValue = (RuleCall)c2AssignmentLeftValue.eContents().get(0);
		private final Keyword c3KeywordVerticalLine = (Keyword)cGroup.eContents().get(3);
		private final Assignment c4AssignmentRightValue = (Assignment)cGroup.eContents().get(4);
		private final RuleCall c40ParserRuleCallSingleAssignmentValue = (RuleCall)c4AssignmentRightValue.eContents().get(0);
		private final Keyword c5KeywordSemicolon = (Keyword)cGroup.eContents().get(5);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentFeature() { return c0AssignmentFeature; }

		// not supported
		public RuleCall ele00TerminalRuleCallID() { return c00TerminalRuleCallID; }

		// not supported
		public Keyword ele1KeywordEqualsSign() { return c1KeywordEqualsSign; }

		// not supported
		public Assignment ele2AssignmentLeftValue() { return c2AssignmentLeftValue; }

		// not supported
		public RuleCall ele20ParserRuleCallSingleAssignmentValue() { return c20ParserRuleCallSingleAssignmentValue; }

		// not supported
		public Keyword ele3KeywordVerticalLine() { return c3KeywordVerticalLine; }

		// not supported
		public Assignment ele4AssignmentRightValue() { return c4AssignmentRightValue; }

		// not supported
		public RuleCall ele40ParserRuleCallSingleAssignmentValue() { return c40ParserRuleCallSingleAssignmentValue; }

		// not supported
		public Keyword ele5KeywordSemicolon() { return c5KeywordSemicolon; }
	}

	public class BiListAssignmentElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BiListAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentFeature = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00TerminalRuleCallID = (RuleCall)c0AssignmentFeature.eContents().get(0);
		private final Keyword c1KeywordEqualsSign = (Keyword)cGroup.eContents().get(1);
		private final Keyword c2KeywordLeftSquareBracket = (Keyword)cGroup.eContents().get(2);
		private final Group c3Group = (Group)cGroup.eContents().get(3);
		private final Assignment c30AssignmentLeftValues = (Assignment)c3Group.eContents().get(0);
		private final RuleCall c300ParserRuleCallListAssignmentValue = (RuleCall)c30AssignmentLeftValues.eContents().get(0);
		private final Group c31Group = (Group)c3Group.eContents().get(1);
		private final Keyword c310KeywordComma = (Keyword)c31Group.eContents().get(0);
		private final Assignment c311AssignmentLeftValues = (Assignment)c31Group.eContents().get(1);
		private final RuleCall c3110ParserRuleCallListAssignmentValue = (RuleCall)c311AssignmentLeftValues.eContents().get(0);
		private final Keyword c4KeywordVerticalLine = (Keyword)cGroup.eContents().get(4);
		private final Group c5Group = (Group)cGroup.eContents().get(5);
		private final Assignment c50AssignmentRightValues = (Assignment)c5Group.eContents().get(0);
		private final RuleCall c500ParserRuleCallListAssignmentValue = (RuleCall)c50AssignmentRightValues.eContents().get(0);
		private final Group c51Group = (Group)c5Group.eContents().get(1);
		private final Keyword c510KeywordComma = (Keyword)c51Group.eContents().get(0);
		private final Assignment c511AssignmentRightValues = (Assignment)c51Group.eContents().get(1);
		private final RuleCall c5110ParserRuleCallListAssignmentValue = (RuleCall)c511AssignmentRightValues.eContents().get(0);
		private final Keyword c6KeywordRightSquareBracket = (Keyword)cGroup.eContents().get(6);
		private final Keyword c7KeywordSemicolon = (Keyword)cGroup.eContents().get(7);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentFeature() { return c0AssignmentFeature; }

		// not supported
		public RuleCall ele00TerminalRuleCallID() { return c00TerminalRuleCallID; }

		// not supported
		public Keyword ele1KeywordEqualsSign() { return c1KeywordEqualsSign; }

		// not supported
		public Keyword ele2KeywordLeftSquareBracket() { return c2KeywordLeftSquareBracket; }

		// not supported
		public Group ele3Group() { return c3Group; }

		// not supported
		public Assignment ele30AssignmentLeftValues() { return c30AssignmentLeftValues; }

		// not supported
		public RuleCall ele300ParserRuleCallListAssignmentValue() { return c300ParserRuleCallListAssignmentValue; }

		// not supported
		public Group ele31Group() { return c31Group; }

		// not supported
		public Keyword ele310KeywordComma() { return c310KeywordComma; }

		// not supported
		public Assignment ele311AssignmentLeftValues() { return c311AssignmentLeftValues; }

		// not supported
		public RuleCall ele3110ParserRuleCallListAssignmentValue() { return c3110ParserRuleCallListAssignmentValue; }

		// not supported
		public Keyword ele4KeywordVerticalLine() { return c4KeywordVerticalLine; }

		// not supported
		public Group ele5Group() { return c5Group; }

		// not supported
		public Assignment ele50AssignmentRightValues() { return c50AssignmentRightValues; }

		// not supported
		public RuleCall ele500ParserRuleCallListAssignmentValue() { return c500ParserRuleCallListAssignmentValue; }

		// not supported
		public Group ele51Group() { return c51Group; }

		// not supported
		public Keyword ele510KeywordComma() { return c510KeywordComma; }

		// not supported
		public Assignment ele511AssignmentRightValues() { return c511AssignmentRightValues; }

		// not supported
		public RuleCall ele5110ParserRuleCallListAssignmentValue() { return c5110ParserRuleCallListAssignmentValue; }

		// not supported
		public Keyword ele6KeywordRightSquareBracket() { return c6KeywordRightSquareBracket; }

		// not supported
		public Keyword ele7KeywordSemicolon() { return c7KeywordSemicolon; }
	}

	public class MonoSingleAssignmentElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MonoSingleAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentFeature = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00TerminalRuleCallID = (RuleCall)c0AssignmentFeature.eContents().get(0);
		private final Keyword c1KeywordEqualsSign = (Keyword)cGroup.eContents().get(1);
		private final Assignment c2AssignmentLeftValue = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20ParserRuleCallSingleAssignmentValue = (RuleCall)c2AssignmentLeftValue.eContents().get(0);
		private final Keyword c3KeywordSemicolon = (Keyword)cGroup.eContents().get(3);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentFeature() { return c0AssignmentFeature; }

		// not supported
		public RuleCall ele00TerminalRuleCallID() { return c00TerminalRuleCallID; }

		// not supported
		public Keyword ele1KeywordEqualsSign() { return c1KeywordEqualsSign; }

		// not supported
		public Assignment ele2AssignmentLeftValue() { return c2AssignmentLeftValue; }

		// not supported
		public RuleCall ele20ParserRuleCallSingleAssignmentValue() { return c20ParserRuleCallSingleAssignmentValue; }

		// not supported
		public Keyword ele3KeywordSemicolon() { return c3KeywordSemicolon; }
	}

	public class MonoListAssignmentElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MonoListAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentFeature = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00TerminalRuleCallID = (RuleCall)c0AssignmentFeature.eContents().get(0);
		private final Keyword c1KeywordEqualsSign = (Keyword)cGroup.eContents().get(1);
		private final Keyword c2KeywordLeftSquareBracket = (Keyword)cGroup.eContents().get(2);
		private final Group c3Group = (Group)cGroup.eContents().get(3);
		private final Assignment c30AssignmentLeftValues = (Assignment)c3Group.eContents().get(0);
		private final RuleCall c300ParserRuleCallAssignmentValue = (RuleCall)c30AssignmentLeftValues.eContents().get(0);
		private final Group c31Group = (Group)c3Group.eContents().get(1);
		private final Keyword c310KeywordComma = (Keyword)c31Group.eContents().get(0);
		private final Assignment c311AssignmentLeftValues = (Assignment)c31Group.eContents().get(1);
		private final RuleCall c3110ParserRuleCallAssignmentValue = (RuleCall)c311AssignmentLeftValues.eContents().get(0);
		private final Keyword c4KeywordRightSquareBracket = (Keyword)cGroup.eContents().get(4);
		private final Keyword c5KeywordSemicolon = (Keyword)cGroup.eContents().get(5);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentFeature() { return c0AssignmentFeature; }

		// not supported
		public RuleCall ele00TerminalRuleCallID() { return c00TerminalRuleCallID; }

		// not supported
		public Keyword ele1KeywordEqualsSign() { return c1KeywordEqualsSign; }

		// not supported
		public Keyword ele2KeywordLeftSquareBracket() { return c2KeywordLeftSquareBracket; }

		// not supported
		public Group ele3Group() { return c3Group; }

		// not supported
		public Assignment ele30AssignmentLeftValues() { return c30AssignmentLeftValues; }

		// not supported
		public RuleCall ele300ParserRuleCallAssignmentValue() { return c300ParserRuleCallAssignmentValue; }

		// not supported
		public Group ele31Group() { return c31Group; }

		// not supported
		public Keyword ele310KeywordComma() { return c310KeywordComma; }

		// not supported
		public Assignment ele311AssignmentLeftValues() { return c311AssignmentLeftValues; }

		// not supported
		public RuleCall ele3110ParserRuleCallAssignmentValue() { return c3110ParserRuleCallAssignmentValue; }

		// not supported
		public Keyword ele4KeywordRightSquareBracket() { return c4KeywordRightSquareBracket; }

		// not supported
		public Keyword ele5KeywordSemicolon() { return c5KeywordSemicolon; }
	}

	public class AssignmentValueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AssignmentValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment c0AssignmentValue = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall c00TerminalRuleCallSTRING = (RuleCall)c0AssignmentValue.eContents().get(0);
		private final Group c1Group = (Group)cAlternatives.eContents().get(1);
		private final Assignment c10AssignmentRefObject = (Assignment)c1Group.eContents().get(0);
		private final CrossReference c100CrossReferenceIDNamedObject = (CrossReference)c10AssignmentRefObject.eContents().get(0);
		private final RuleCall c1001TerminalRuleCallID = (RuleCall)c100CrossReferenceIDNamedObject.eContents().get(1);
		private final Group c11Group = (Group)c1Group.eContents().get(1);
		private final Keyword c110KeywordFullStop = (Keyword)c11Group.eContents().get(0);
		private final Assignment c111AssignmentRefFeature = (Assignment)c11Group.eContents().get(1);
		private final RuleCall c1110TerminalRuleCallID = (RuleCall)c111AssignmentRefFeature.eContents().get(0);
		private final Group c112Group = (Group)c11Group.eContents().get(2);
		private final Keyword c1120KeywordLeftSquareBracket = (Keyword)c112Group.eContents().get(0);
		private final Assignment c1121AssignmentRefIndex = (Assignment)c112Group.eContents().get(1);
		private final RuleCall c11210TerminalRuleCallINT = (RuleCall)c1121AssignmentRefIndex.eContents().get(0);
		private final Keyword c1122KeywordRightSquareBracket = (Keyword)c112Group.eContents().get(2);
		private final Assignment c2AssignmentNewObject = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall c20ParserRuleCallCreatedObject = (RuleCall)c2AssignmentNewObject.eContents().get(0);
		private final Group c3Group = (Group)cAlternatives.eContents().get(3);
		private final Assignment c30AssignmentImport = (Assignment)c3Group.eContents().get(0);
		private final CrossReference c300CrossReferenceIDImport = (CrossReference)c30AssignmentImport.eContents().get(0);
		private final RuleCall c3001TerminalRuleCallID = (RuleCall)c300CrossReferenceIDImport.eContents().get(1);
		private final Assignment c31AssignmentImpFrag = (Assignment)c3Group.eContents().get(1);
		private final RuleCall c310TerminalRuleCallFRAGMENT = (RuleCall)c31AssignmentImpFrag.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public Assignment ele0AssignmentValue() { return c0AssignmentValue; }

		// not supported
		public RuleCall ele00TerminalRuleCallSTRING() { return c00TerminalRuleCallSTRING; }

		// not supported
		public Group ele1Group() { return c1Group; }

		// not supported
		public Assignment ele10AssignmentRefObject() { return c10AssignmentRefObject; }

		// not supported
		public CrossReference ele100CrossReferenceIDNamedObject() { return c100CrossReferenceIDNamedObject; }

		// not supported
		public RuleCall ele1001TerminalRuleCallID() { return c1001TerminalRuleCallID; }

		// not supported
		public Group ele11Group() { return c11Group; }

		// not supported
		public Keyword ele110KeywordFullStop() { return c110KeywordFullStop; }

		// not supported
		public Assignment ele111AssignmentRefFeature() { return c111AssignmentRefFeature; }

		// not supported
		public RuleCall ele1110TerminalRuleCallID() { return c1110TerminalRuleCallID; }

		// not supported
		public Group ele112Group() { return c112Group; }

		// not supported
		public Keyword ele1120KeywordLeftSquareBracket() { return c1120KeywordLeftSquareBracket; }

		// not supported
		public Assignment ele1121AssignmentRefIndex() { return c1121AssignmentRefIndex; }

		// not supported
		public RuleCall ele11210TerminalRuleCallINT() { return c11210TerminalRuleCallINT; }

		// not supported
		public Keyword ele1122KeywordRightSquareBracket() { return c1122KeywordRightSquareBracket; }

		// not supported
		public Assignment ele2AssignmentNewObject() { return c2AssignmentNewObject; }

		// not supported
		public RuleCall ele20ParserRuleCallCreatedObject() { return c20ParserRuleCallCreatedObject; }

		// not supported
		public Group ele3Group() { return c3Group; }

		// not supported
		public Assignment ele30AssignmentImport() { return c30AssignmentImport; }

		// not supported
		public CrossReference ele300CrossReferenceIDImport() { return c300CrossReferenceIDImport; }

		// not supported
		public RuleCall ele3001TerminalRuleCallID() { return c3001TerminalRuleCallID; }

		// not supported
		public Assignment ele31AssignmentImpFrag() { return c31AssignmentImpFrag; }

		// not supported
		public RuleCall ele310TerminalRuleCallFRAGMENT() { return c310TerminalRuleCallFRAGMENT; }
	}

	public class ListAssignmentValueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListAssignmentValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment c0AssignmentIndex = (Assignment)cGroup.eContents().get(0);
		private final RuleCall c00TerminalRuleCallINT = (RuleCall)c0AssignmentIndex.eContents().get(0);
		private final Keyword c1KeywordColon = (Keyword)cGroup.eContents().get(1);
		private final Alternatives c2Alternatives = (Alternatives)cGroup.eContents().get(2);
		private final Group c20Group = (Group)c2Alternatives.eContents().get(0);
		private final Keyword c200KeywordLeftSquareBracket = (Keyword)c20Group.eContents().get(0);
		private final Assignment c201AssignmentRefIndex = (Assignment)c20Group.eContents().get(1);
		private final RuleCall c2010TerminalRuleCallINT = (RuleCall)c201AssignmentRefIndex.eContents().get(0);
		private final Keyword c202KeywordRightSquareBracket = (Keyword)c20Group.eContents().get(2);
		private final Assignment c21AssignmentValue = (Assignment)c2Alternatives.eContents().get(1);
		private final RuleCall c210TerminalRuleCallSTRING = (RuleCall)c21AssignmentValue.eContents().get(0);
		private final Group c22Group = (Group)c2Alternatives.eContents().get(2);
		private final Assignment c220AssignmentRefObject = (Assignment)c22Group.eContents().get(0);
		private final CrossReference c2200CrossReferenceIDNamedObject = (CrossReference)c220AssignmentRefObject.eContents().get(0);
		private final RuleCall c22001TerminalRuleCallID = (RuleCall)c2200CrossReferenceIDNamedObject.eContents().get(1);
		private final Group c221Group = (Group)c22Group.eContents().get(1);
		private final Keyword c2210KeywordFullStop = (Keyword)c221Group.eContents().get(0);
		private final Assignment c2211AssignmentRefFeature = (Assignment)c221Group.eContents().get(1);
		private final RuleCall c22110TerminalRuleCallID = (RuleCall)c2211AssignmentRefFeature.eContents().get(0);
		private final Group c2212Group = (Group)c221Group.eContents().get(2);
		private final Keyword c22120KeywordLeftSquareBracket = (Keyword)c2212Group.eContents().get(0);
		private final Assignment c22121AssignmentRefIndex = (Assignment)c2212Group.eContents().get(1);
		private final RuleCall c221210TerminalRuleCallINT = (RuleCall)c22121AssignmentRefIndex.eContents().get(0);
		private final Keyword c22122KeywordRightSquareBracket = (Keyword)c2212Group.eContents().get(2);
		private final Assignment c23AssignmentNewObject = (Assignment)c2Alternatives.eContents().get(3);
		private final RuleCall c230ParserRuleCallCreatedObject = (RuleCall)c23AssignmentNewObject.eContents().get(0);
		private final Group c24Group = (Group)c2Alternatives.eContents().get(4);
		private final Assignment c240AssignmentImport = (Assignment)c24Group.eContents().get(0);
		private final CrossReference c2400CrossReferenceIDImport = (CrossReference)c240AssignmentImport.eContents().get(0);
		private final RuleCall c24001TerminalRuleCallID = (RuleCall)c2400CrossReferenceIDImport.eContents().get(1);
		private final Assignment c241AssignmentImpFrag = (Assignment)c24Group.eContents().get(1);
		private final RuleCall c2410TerminalRuleCallFRAGMENT = (RuleCall)c241AssignmentImpFrag.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Assignment ele0AssignmentIndex() { return c0AssignmentIndex; }

		// not supported
		public RuleCall ele00TerminalRuleCallINT() { return c00TerminalRuleCallINT; }

		// not supported
		public Keyword ele1KeywordColon() { return c1KeywordColon; }

		// not supported
		public Alternatives ele2Alternatives() { return c2Alternatives; }

		// not supported
		public Group ele20Group() { return c20Group; }

		// not supported
		public Keyword ele200KeywordLeftSquareBracket() { return c200KeywordLeftSquareBracket; }

		// not supported
		public Assignment ele201AssignmentRefIndex() { return c201AssignmentRefIndex; }

		// not supported
		public RuleCall ele2010TerminalRuleCallINT() { return c2010TerminalRuleCallINT; }

		// not supported
		public Keyword ele202KeywordRightSquareBracket() { return c202KeywordRightSquareBracket; }

		// not supported
		public Assignment ele21AssignmentValue() { return c21AssignmentValue; }

		// not supported
		public RuleCall ele210TerminalRuleCallSTRING() { return c210TerminalRuleCallSTRING; }

		// not supported
		public Group ele22Group() { return c22Group; }

		// not supported
		public Assignment ele220AssignmentRefObject() { return c220AssignmentRefObject; }

		// not supported
		public CrossReference ele2200CrossReferenceIDNamedObject() { return c2200CrossReferenceIDNamedObject; }

		// not supported
		public RuleCall ele22001TerminalRuleCallID() { return c22001TerminalRuleCallID; }

		// not supported
		public Group ele221Group() { return c221Group; }

		// not supported
		public Keyword ele2210KeywordFullStop() { return c2210KeywordFullStop; }

		// not supported
		public Assignment ele2211AssignmentRefFeature() { return c2211AssignmentRefFeature; }

		// not supported
		public RuleCall ele22110TerminalRuleCallID() { return c22110TerminalRuleCallID; }

		// not supported
		public Group ele2212Group() { return c2212Group; }

		// not supported
		public Keyword ele22120KeywordLeftSquareBracket() { return c22120KeywordLeftSquareBracket; }

		// not supported
		public Assignment ele22121AssignmentRefIndex() { return c22121AssignmentRefIndex; }

		// not supported
		public RuleCall ele221210TerminalRuleCallINT() { return c221210TerminalRuleCallINT; }

		// not supported
		public Keyword ele22122KeywordRightSquareBracket() { return c22122KeywordRightSquareBracket; }

		// not supported
		public Assignment ele23AssignmentNewObject() { return c23AssignmentNewObject; }

		// not supported
		public RuleCall ele230ParserRuleCallCreatedObject() { return c230ParserRuleCallCreatedObject; }

		// not supported
		public Group ele24Group() { return c24Group; }

		// not supported
		public Assignment ele240AssignmentImport() { return c240AssignmentImport; }

		// not supported
		public CrossReference ele2400CrossReferenceIDImport() { return c2400CrossReferenceIDImport; }

		// not supported
		public RuleCall ele24001TerminalRuleCallID() { return c24001TerminalRuleCallID; }

		// not supported
		public Assignment ele241AssignmentImpFrag() { return c241AssignmentImpFrag; }

		// not supported
		public RuleCall ele2410TerminalRuleCallFRAGMENT() { return c2410TerminalRuleCallFRAGMENT; }
	}

	public class SingleAssignmentValueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SingleAssignmentValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment c0AssignmentKeyword = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword c00KeywordNull = (Keyword)c0AssignmentKeyword.eContents().get(0);
		private final Assignment c1AssignmentValue = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall c10TerminalRuleCallSTRING = (RuleCall)c1AssignmentValue.eContents().get(0);
		private final Group c2Group = (Group)cAlternatives.eContents().get(2);
		private final Assignment c20AssignmentRefObject = (Assignment)c2Group.eContents().get(0);
		private final CrossReference c200CrossReferenceIDNamedObject = (CrossReference)c20AssignmentRefObject.eContents().get(0);
		private final RuleCall c2001TerminalRuleCallID = (RuleCall)c200CrossReferenceIDNamedObject.eContents().get(1);
		private final Group c21Group = (Group)c2Group.eContents().get(1);
		private final Keyword c210KeywordFullStop = (Keyword)c21Group.eContents().get(0);
		private final Assignment c211AssignmentRefFeature = (Assignment)c21Group.eContents().get(1);
		private final RuleCall c2110TerminalRuleCallID = (RuleCall)c211AssignmentRefFeature.eContents().get(0);
		private final Group c212Group = (Group)c21Group.eContents().get(2);
		private final Keyword c2120KeywordLeftSquareBracket = (Keyword)c212Group.eContents().get(0);
		private final Assignment c2121AssignmentRefIndex = (Assignment)c212Group.eContents().get(1);
		private final RuleCall c21210TerminalRuleCallINT = (RuleCall)c2121AssignmentRefIndex.eContents().get(0);
		private final Keyword c2122KeywordRightSquareBracket = (Keyword)c212Group.eContents().get(2);
		private final Assignment c3AssignmentNewObject = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall c30ParserRuleCallCreatedObject = (RuleCall)c3AssignmentNewObject.eContents().get(0);
		private final Group c4Group = (Group)cAlternatives.eContents().get(4);
		private final Assignment c40AssignmentImport = (Assignment)c4Group.eContents().get(0);
		private final CrossReference c400CrossReferenceIDImport = (CrossReference)c40AssignmentImport.eContents().get(0);
		private final RuleCall c4001TerminalRuleCallID = (RuleCall)c400CrossReferenceIDImport.eContents().get(1);
		private final Assignment c41AssignmentImpFrag = (Assignment)c4Group.eContents().get(1);
		private final RuleCall c410TerminalRuleCallFRAGMENT = (RuleCall)c41AssignmentImpFrag.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public Assignment ele0AssignmentKeyword() { return c0AssignmentKeyword; }

		// not supported
		public Keyword ele00KeywordNull() { return c00KeywordNull; }

		// not supported
		public Assignment ele1AssignmentValue() { return c1AssignmentValue; }

		// not supported
		public RuleCall ele10TerminalRuleCallSTRING() { return c10TerminalRuleCallSTRING; }

		// not supported
		public Group ele2Group() { return c2Group; }

		// not supported
		public Assignment ele20AssignmentRefObject() { return c20AssignmentRefObject; }

		// not supported
		public CrossReference ele200CrossReferenceIDNamedObject() { return c200CrossReferenceIDNamedObject; }

		// not supported
		public RuleCall ele2001TerminalRuleCallID() { return c2001TerminalRuleCallID; }

		// not supported
		public Group ele21Group() { return c21Group; }

		// not supported
		public Keyword ele210KeywordFullStop() { return c210KeywordFullStop; }

		// not supported
		public Assignment ele211AssignmentRefFeature() { return c211AssignmentRefFeature; }

		// not supported
		public RuleCall ele2110TerminalRuleCallID() { return c2110TerminalRuleCallID; }

		// not supported
		public Group ele212Group() { return c212Group; }

		// not supported
		public Keyword ele2120KeywordLeftSquareBracket() { return c2120KeywordLeftSquareBracket; }

		// not supported
		public Assignment ele2121AssignmentRefIndex() { return c2121AssignmentRefIndex; }

		// not supported
		public RuleCall ele21210TerminalRuleCallINT() { return c21210TerminalRuleCallINT; }

		// not supported
		public Keyword ele2122KeywordRightSquareBracket() { return c2122KeywordRightSquareBracket; }

		// not supported
		public Assignment ele3AssignmentNewObject() { return c3AssignmentNewObject; }

		// not supported
		public RuleCall ele30ParserRuleCallCreatedObject() { return c30ParserRuleCallCreatedObject; }

		// not supported
		public Group ele4Group() { return c4Group; }

		// not supported
		public Assignment ele40AssignmentImport() { return c40AssignmentImport; }

		// not supported
		public CrossReference ele400CrossReferenceIDImport() { return c400CrossReferenceIDImport; }

		// not supported
		public RuleCall ele4001TerminalRuleCallID() { return c4001TerminalRuleCallID; }

		// not supported
		public Assignment ele41AssignmentImpFrag() { return c41AssignmentImpFrag; }

		// not supported
		public RuleCall ele410TerminalRuleCallFRAGMENT() { return c410TerminalRuleCallFRAGMENT; }
	}

	public class CreatedObjectElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CreatedObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives c0Alternatives = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall c00ParserRuleCallObjectNew = (RuleCall)c0Alternatives.eContents().get(0);
		private final RuleCall c01ParserRuleCallObjectCopy = (RuleCall)c0Alternatives.eContents().get(1);
		private final Assignment c1AssignmentName = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentName.eContents().get(0);
		private final Group c2Group = (Group)cGroup.eContents().get(2);
		private final Keyword c20KeywordLeftCurlyBracket = (Keyword)c2Group.eContents().get(0);
		private final Alternatives c21Alternatives = (Alternatives)c2Group.eContents().get(1);
		private final Assignment c210AssignmentAssignments = (Assignment)c21Alternatives.eContents().get(0);
		private final RuleCall c2100ParserRuleCallMonoSingleAssignment = (RuleCall)c210AssignmentAssignments.eContents().get(0);
		private final Assignment c211AssignmentAssignments = (Assignment)c21Alternatives.eContents().get(1);
		private final RuleCall c2110ParserRuleCallMonoListAssignment = (RuleCall)c211AssignmentAssignments.eContents().get(0);
		private final Assignment c22AssignmentLeftMig = (Assignment)c2Group.eContents().get(2);
		private final RuleCall c220ParserRuleCallMigration = (RuleCall)c22AssignmentLeftMig.eContents().get(0);
		private final Keyword c23KeywordRightCurlyBracket = (Keyword)c2Group.eContents().get(3);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Alternatives ele0Alternatives() { return c0Alternatives; }

		// not supported
		public RuleCall ele00ParserRuleCallObjectNew() { return c00ParserRuleCallObjectNew; }

		// not supported
		public RuleCall ele01ParserRuleCallObjectCopy() { return c01ParserRuleCallObjectCopy; }

		// not supported
		public Assignment ele1AssignmentName() { return c1AssignmentName; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }

		// not supported
		public Group ele2Group() { return c2Group; }

		// not supported
		public Keyword ele20KeywordLeftCurlyBracket() { return c20KeywordLeftCurlyBracket; }

		// not supported
		public Alternatives ele21Alternatives() { return c21Alternatives; }

		// not supported
		public Assignment ele210AssignmentAssignments() { return c210AssignmentAssignments; }

		// not supported
		public RuleCall ele2100ParserRuleCallMonoSingleAssignment() { return c2100ParserRuleCallMonoSingleAssignment; }

		// not supported
		public Assignment ele211AssignmentAssignments() { return c211AssignmentAssignments; }

		// not supported
		public RuleCall ele2110ParserRuleCallMonoListAssignment() { return c2110ParserRuleCallMonoListAssignment; }

		// not supported
		public Assignment ele22AssignmentLeftMig() { return c22AssignmentLeftMig; }

		// not supported
		public RuleCall ele220ParserRuleCallMigration() { return c220ParserRuleCallMigration; }

		// not supported
		public Keyword ele23KeywordRightCurlyBracket() { return c23KeywordRightCurlyBracket; }
	}

	public class ObjectNewElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectNew");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordNew = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentImport = (Assignment)cGroup.eContents().get(1);
		private final CrossReference c10CrossReferenceIDImport = (CrossReference)c1AssignmentImport.eContents().get(0);
		private final RuleCall c101TerminalRuleCallID = (RuleCall)c10CrossReferenceIDImport.eContents().get(1);
		private final Assignment c2AssignmentImpFrag = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallFRAGMENT = (RuleCall)c2AssignmentImpFrag.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordNew() { return c0KeywordNew; }

		// not supported
		public Assignment ele1AssignmentImport() { return c1AssignmentImport; }

		// not supported
		public CrossReference ele10CrossReferenceIDImport() { return c10CrossReferenceIDImport; }

		// not supported
		public RuleCall ele101TerminalRuleCallID() { return c101TerminalRuleCallID; }

		// not supported
		public Assignment ele2AssignmentImpFrag() { return c2AssignmentImpFrag; }

		// not supported
		public RuleCall ele20TerminalRuleCallFRAGMENT() { return c20TerminalRuleCallFRAGMENT; }
	}

	public class ObjectCopyElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectCopy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordCopy = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentResource = (Assignment)cGroup.eContents().get(1);
		private final CrossReference c10CrossReferenceIDNamedResource = (CrossReference)c1AssignmentResource.eContents().get(0);
		private final RuleCall c101TerminalRuleCallID = (RuleCall)c10CrossReferenceIDNamedResource.eContents().get(1);
		private final Assignment c2AssignmentFragment = (Assignment)cGroup.eContents().get(2);
		private final RuleCall c20TerminalRuleCallFRAGMENT = (RuleCall)c2AssignmentFragment.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordCopy() { return c0KeywordCopy; }

		// not supported
		public Assignment ele1AssignmentResource() { return c1AssignmentResource; }

		// not supported
		public CrossReference ele10CrossReferenceIDNamedResource() { return c10CrossReferenceIDNamedResource; }

		// not supported
		public RuleCall ele101TerminalRuleCallID() { return c101TerminalRuleCallID; }

		// not supported
		public Assignment ele2AssignmentFragment() { return c2AssignmentFragment; }

		// not supported
		public RuleCall ele20TerminalRuleCallFRAGMENT() { return c20TerminalRuleCallFRAGMENT; }
	}

	public class MigrationElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Migration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordMigrate = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentFirst = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10ParserRuleCallExecutable = (RuleCall)c1AssignmentFirst.eContents().get(0);
		private final Alternatives c2Alternatives = (Alternatives)cGroup.eContents().get(2);
		private final Group c20Group = (Group)c2Alternatives.eContents().get(0);
		private final Keyword c200KeywordAs = (Keyword)c20Group.eContents().get(0);
		private final Assignment c201AssignmentAsOp = (Assignment)c20Group.eContents().get(1);
		private final RuleCall c2010ParserRuleCallExecutable = (RuleCall)c201AssignmentAsOp.eContents().get(0);
		private final Group c21Group = (Group)c2Alternatives.eContents().get(1);
		private final Keyword c210KeywordEach = (Keyword)c21Group.eContents().get(0);
		private final Assignment c211AssignmentEachOp = (Assignment)c21Group.eContents().get(1);
		private final RuleCall c2110ParserRuleCallExecutable = (RuleCall)c211AssignmentEachOp.eContents().get(0);
		private final Keyword c3KeywordSemicolon = (Keyword)cGroup.eContents().get(3);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordMigrate() { return c0KeywordMigrate; }

		// not supported
		public Assignment ele1AssignmentFirst() { return c1AssignmentFirst; }

		// not supported
		public RuleCall ele10ParserRuleCallExecutable() { return c10ParserRuleCallExecutable; }

		// not supported
		public Alternatives ele2Alternatives() { return c2Alternatives; }

		// not supported
		public Group ele20Group() { return c20Group; }

		// not supported
		public Keyword ele200KeywordAs() { return c200KeywordAs; }

		// not supported
		public Assignment ele201AssignmentAsOp() { return c201AssignmentAsOp; }

		// not supported
		public RuleCall ele2010ParserRuleCallExecutable() { return c2010ParserRuleCallExecutable; }

		// not supported
		public Group ele21Group() { return c21Group; }

		// not supported
		public Keyword ele210KeywordEach() { return c210KeywordEach; }

		// not supported
		public Assignment ele211AssignmentEachOp() { return c211AssignmentEachOp; }

		// not supported
		public RuleCall ele2110ParserRuleCallExecutable() { return c2110ParserRuleCallExecutable; }

		// not supported
		public Keyword ele3KeywordSemicolon() { return c3KeywordSemicolon; }
	}

	public class ExecutableElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Executable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallJavaExecutable = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallExpressionExecutable = (RuleCall)cAlternatives.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0ParserRuleCallJavaExecutable() { return c0ParserRuleCallJavaExecutable; }

		// not supported
		public RuleCall ele1ParserRuleCallExpressionExecutable() { return c1ParserRuleCallExpressionExecutable; }
	}

	public class JavaExecutableElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JavaExecutable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c0KeywordJava = (Keyword)cGroup.eContents().get(0);
		private final Assignment c1AssignmentMethod = (Assignment)cGroup.eContents().get(1);
		private final RuleCall c10TerminalRuleCallID = (RuleCall)c1AssignmentMethod.eContents().get(0);
		private final Keyword c2KeywordLeftParenthesis = (Keyword)cGroup.eContents().get(2);
		private final Keyword c3KeywordRightParenthesis = (Keyword)cGroup.eContents().get(3);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public Keyword ele0KeywordJava() { return c0KeywordJava; }

		// not supported
		public Assignment ele1AssignmentMethod() { return c1AssignmentMethod; }

		// not supported
		public RuleCall ele10TerminalRuleCallID() { return c10TerminalRuleCallID; }

		// not supported
		public Keyword ele2KeywordLeftParenthesis() { return c2KeywordLeftParenthesis; }

		// not supported
		public Keyword ele3KeywordRightParenthesis() { return c3KeywordRightParenthesis; }
	}

	public class ExpressionExecutableElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionExecutable");
		private final Assignment cAssignmentExprstr = (Assignment)rule.eContents().get(1);
		private final RuleCall c0TerminalRuleCallSTRING = (RuleCall)cAssignmentExprstr.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Assignment eleAssignmentExprstr() { return cAssignmentExprstr; }

		// not supported
		public RuleCall ele0TerminalRuleCallSTRING() { return c0TerminalRuleCallSTRING; }
	}
	
	private EPatchElements pEPatch;
	private ImportElements pImport;
	private ModelImportElements pModelImport;
	private ResourceImportElements pResourceImport;
	private EPackageImportElements pEPackageImport;
	private JavaImportElements pJavaImport;
	private ExtensionImportElements pExtensionImport;
	private NamedResourceElements pNamedResource;
	private NamedObjectElements pNamedObject;
	private ObjectRefElements pObjectRef;
	private AssignmentElements pAssignment;
	private BiSingleAssignmentElements pBiSingleAssignment;
	private BiListAssignmentElements pBiListAssignment;
	private MonoSingleAssignmentElements pMonoSingleAssignment;
	private MonoListAssignmentElements pMonoListAssignment;
	private AssignmentValueElements pAssignmentValue;
	private ListAssignmentValueElements pListAssignmentValue;
	private SingleAssignmentValueElements pSingleAssignmentValue;
	private CreatedObjectElements pCreatedObject;
	private ObjectNewElements pObjectNew;
	private ObjectCopyElements pObjectCopy;
	private TerminalRule tFRAGMENT;
	private MigrationElements pMigration;
	private ExecutableElements pExecutable;
	private JavaExecutableElements pJavaExecutable;
	private ExpressionExecutableElements pExpressionExecutable;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess terminalsGrammarAccess;

	@Inject
	public EpatchTestLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess terminalsGrammarAccess) {
		this.grammarProvider = grammarProvider;
		this.terminalsGrammarAccess = terminalsGrammarAccess;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return terminalsGrammarAccess;
	}

	
	// not supported
	public EPatchElements prEPatch() {
		return (pEPatch != null) ? pEPatch : (pEPatch = new EPatchElements());
	} 

	// not supported
	public ImportElements prImport() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	} 

	// not supported
	public ModelImportElements prModelImport() {
		return (pModelImport != null) ? pModelImport : (pModelImport = new ModelImportElements());
	} 

	// not supported
	public ResourceImportElements prResourceImport() {
		return (pResourceImport != null) ? pResourceImport : (pResourceImport = new ResourceImportElements());
	} 

	// not supported
	public EPackageImportElements prEPackageImport() {
		return (pEPackageImport != null) ? pEPackageImport : (pEPackageImport = new EPackageImportElements());
	} 

	// not supported
	public JavaImportElements prJavaImport() {
		return (pJavaImport != null) ? pJavaImport : (pJavaImport = new JavaImportElements());
	} 

	// not supported
	public ExtensionImportElements prExtensionImport() {
		return (pExtensionImport != null) ? pExtensionImport : (pExtensionImport = new ExtensionImportElements());
	} 

	// not supported
	public NamedResourceElements prNamedResource() {
		return (pNamedResource != null) ? pNamedResource : (pNamedResource = new NamedResourceElements());
	} 

	// not supported
	public NamedObjectElements prNamedObject() {
		return (pNamedObject != null) ? pNamedObject : (pNamedObject = new NamedObjectElements());
	} 

	// not supported
	public ObjectRefElements prObjectRef() {
		return (pObjectRef != null) ? pObjectRef : (pObjectRef = new ObjectRefElements());
	} 

	// not supported
	public AssignmentElements prAssignment() {
		return (pAssignment != null) ? pAssignment : (pAssignment = new AssignmentElements());
	} 

	// not supported
	public BiSingleAssignmentElements prBiSingleAssignment() {
		return (pBiSingleAssignment != null) ? pBiSingleAssignment : (pBiSingleAssignment = new BiSingleAssignmentElements());
	} 

	// not supported
	public BiListAssignmentElements prBiListAssignment() {
		return (pBiListAssignment != null) ? pBiListAssignment : (pBiListAssignment = new BiListAssignmentElements());
	} 

	// not supported
	public MonoSingleAssignmentElements prMonoSingleAssignment() {
		return (pMonoSingleAssignment != null) ? pMonoSingleAssignment : (pMonoSingleAssignment = new MonoSingleAssignmentElements());
	} 

	// not supported
	public MonoListAssignmentElements prMonoListAssignment() {
		return (pMonoListAssignment != null) ? pMonoListAssignment : (pMonoListAssignment = new MonoListAssignmentElements());
	} 

	// not supported
	public AssignmentValueElements prAssignmentValue() {
		return (pAssignmentValue != null) ? pAssignmentValue : (pAssignmentValue = new AssignmentValueElements());
	} 

	// not supported
	public ListAssignmentValueElements prListAssignmentValue() {
		return (pListAssignmentValue != null) ? pListAssignmentValue : (pListAssignmentValue = new ListAssignmentValueElements());
	} 

	// not supported
	public SingleAssignmentValueElements prSingleAssignmentValue() {
		return (pSingleAssignmentValue != null) ? pSingleAssignmentValue : (pSingleAssignmentValue = new SingleAssignmentValueElements());
	} 

	// not supported
	public CreatedObjectElements prCreatedObject() {
		return (pCreatedObject != null) ? pCreatedObject : (pCreatedObject = new CreatedObjectElements());
	} 

	// not supported
	public ObjectNewElements prObjectNew() {
		return (pObjectNew != null) ? pObjectNew : (pObjectNew = new ObjectNewElements());
	} 

	// not supported
	public ObjectCopyElements prObjectCopy() {
		return (pObjectCopy != null) ? pObjectCopy : (pObjectCopy = new ObjectCopyElements());
	} 

	// not supported
	public TerminalRule trFRAGMENT() {
		return (tFRAGMENT != null) ? tFRAGMENT : (tFRAGMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "FRAGMENT"));
	} 

	// not supported
	public MigrationElements prMigration() {
		return (pMigration != null) ? pMigration : (pMigration = new MigrationElements());
	} 

	// not supported
	public ExecutableElements prExecutable() {
		return (pExecutable != null) ? pExecutable : (pExecutable = new ExecutableElements());
	} 

	// not supported
	public JavaExecutableElements prJavaExecutable() {
		return (pJavaExecutable != null) ? pJavaExecutable : (pJavaExecutable = new JavaExecutableElements());
	} 

	// not supported
	public ExpressionExecutableElements prExpressionExecutable() {
		return (pExpressionExecutable != null) ? pExpressionExecutable : (pExpressionExecutable = new ExpressionExecutableElements());
	} 

	// not supported
	public TerminalRule trID() {
		return terminalsGrammarAccess.trID();
	} 

	// not supported
	public TerminalRule trINT() {
		return terminalsGrammarAccess.trINT();
	} 

	// not supported
	public TerminalRule trSTRING() {
		return terminalsGrammarAccess.trSTRING();
	} 

	// not supported
	public TerminalRule trML_COMMENT() {
		return terminalsGrammarAccess.trML_COMMENT();
	} 

	// not supported
	public TerminalRule trSL_COMMENT() {
		return terminalsGrammarAccess.trSL_COMMENT();
	} 

	// not supported
	public TerminalRule trWS() {
		return terminalsGrammarAccess.trWS();
	} 

	// not supported
	public TerminalRule trANY_OTHER() {
		return terminalsGrammarAccess.trANY_OTHER();
	} 
}
