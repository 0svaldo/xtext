/*
* generated by Xtext
*/
package org.eclipse.xtext.parsetree.unassignedtext.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.parsetree.unassignedtext.services.UnassignedTextTestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageModelConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageCaseInsensitiveKeywordRuleConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageCaseInsensitiveKeywordConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguagePluralRuleConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguagePluralConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageMultiRuleConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageMultiConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageMulti2Consumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageDatatypeRuleConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageDatatypeConsumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageDatatype2Consumer;
import org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.consumers.UnassignedTextTestLanguageCommonTerminalsRuleConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class UnassignedTextTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private UnassignedTextTestLanguageModelConsumer modelConsumer;
    private UnassignedTextTestLanguageCaseInsensitiveKeywordRuleConsumer caseInsensitiveKeywordRuleConsumer;
    private UnassignedTextTestLanguageCaseInsensitiveKeywordConsumer caseInsensitiveKeywordConsumer;
    private UnassignedTextTestLanguagePluralRuleConsumer pluralRuleConsumer;
    private UnassignedTextTestLanguagePluralConsumer pluralConsumer;
    private UnassignedTextTestLanguageMultiRuleConsumer multiRuleConsumer;
    private UnassignedTextTestLanguageMultiConsumer multiConsumer;
    private UnassignedTextTestLanguageMulti2Consumer multi2Consumer;
    private UnassignedTextTestLanguageDatatypeRuleConsumer datatypeRuleConsumer;
    private UnassignedTextTestLanguageDatatypeConsumer datatypeConsumer;
    private UnassignedTextTestLanguageDatatype2Consumer datatype2Consumer;
    private UnassignedTextTestLanguageCommonTerminalsRuleConsumer commonTerminalsRuleConsumer;

	private UnassignedTextTestLanguageGrammarAccess grammarAccess;

	public UnassignedTextTestLanguageParserConfiguration(IInternalParserConfiguration configuration, UnassignedTextTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public UnassignedTextTestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		modelConsumer = new UnassignedTextTestLanguageModelConsumer(
    		this, null
    	);
		caseInsensitiveKeywordRuleConsumer = new UnassignedTextTestLanguageCaseInsensitiveKeywordRuleConsumer(
    		this, null
    	);
		pluralRuleConsumer = new UnassignedTextTestLanguagePluralRuleConsumer(
    		this, null
    	);
		multiRuleConsumer = new UnassignedTextTestLanguageMultiRuleConsumer(
    		this, null
    	);
		datatypeRuleConsumer = new UnassignedTextTestLanguageDatatypeRuleConsumer(
    		this, null
    	);
		datatypeConsumer = new UnassignedTextTestLanguageDatatypeConsumer(
    		this, null
    	);
		datatype2Consumer = new UnassignedTextTestLanguageDatatype2Consumer(
    		this, null
    	);
		commonTerminalsRuleConsumer = new UnassignedTextTestLanguageCommonTerminalsRuleConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
		caseInsensitiveKeywordConsumer = new UnassignedTextTestLanguageCaseInsensitiveKeywordConsumer(this);
		pluralConsumer = new UnassignedTextTestLanguagePluralConsumer(this);
		multiConsumer = new UnassignedTextTestLanguageMultiConsumer(this);
		multi2Consumer = new UnassignedTextTestLanguageMulti2Consumer(this);
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getCaseInsensitiveKeywordRuleConsumer().setRule(grammarAccess.getCaseInsensitiveKeywordRuleAccess());
		getCaseInsensitiveKeywordConsumer().setRule(grammarAccess.getCaseInsensitiveKeywordRule());
		getPluralRuleConsumer().setRule(grammarAccess.getPluralRuleAccess());
		getPluralConsumer().setRule(grammarAccess.getPluralRule());
		getMultiRuleConsumer().setRule(grammarAccess.getMultiRuleAccess());
		getMultiConsumer().setRule(grammarAccess.getMultiRule());
		getMulti2Consumer().setRule(grammarAccess.getMulti2Rule());
		getDatatypeRuleConsumer().setRule(grammarAccess.getDatatypeRuleAccess());
		getDatatypeConsumer().setRule(grammarAccess.getDatatypeAccess());
		getDatatype2Consumer().setRule(grammarAccess.getDatatype2Access());
		getCommonTerminalsRuleConsumer().setRule(grammarAccess.getCommonTerminalsRuleAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setCaseInsensitiveKeywordRuleConsumer(getCaseInsensitiveKeywordRuleConsumer());
		getModelConsumer().setCommonTerminalsRuleConsumer(getCommonTerminalsRuleConsumer());
		getModelConsumer().setDatatypeRuleConsumer(getDatatypeRuleConsumer());
		getModelConsumer().setMultiRuleConsumer(getMultiRuleConsumer());
		getModelConsumer().setPluralRuleConsumer(getPluralRuleConsumer());

		getCaseInsensitiveKeywordRuleConsumer().setCaseInsensitiveKeywordConsumer(getCaseInsensitiveKeywordConsumer());
		getCaseInsensitiveKeywordRuleConsumer().setIntConsumer(getIntConsumer());

		getPluralRuleConsumer().setIntConsumer(getIntConsumer());
		getPluralRuleConsumer().setPluralConsumer(getPluralConsumer());

		getMultiRuleConsumer().setIntConsumer(getIntConsumer());
		getMultiRuleConsumer().setMultiConsumer(getMultiConsumer());

		getDatatypeRuleConsumer().setDatatypeConsumer(getDatatypeConsumer());
		getDatatypeRuleConsumer().setIntConsumer(getIntConsumer());

		getDatatypeConsumer().setDatatype2Consumer(getDatatype2Consumer());
		getDatatypeConsumer().setIntConsumer(getIntConsumer());

		getDatatype2Consumer().setStringConsumer(getStringConsumer());

		getCommonTerminalsRuleConsumer().setIdConsumer(getIdConsumer());
		getCommonTerminalsRuleConsumer().setIntConsumer(getIntConsumer());
		getCommonTerminalsRuleConsumer().setStringConsumer(getStringConsumer());

		getCaseInsensitiveKeywordRuleConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getCaseInsensitiveKeywordRuleConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getPluralRuleConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.keyword$43$Delimiter);
		getPluralRuleConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getPluralRuleConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getMultiRuleConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.keyword$43$Delimiter);
		getMultiRuleConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getMultiRuleConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getMultiRuleConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getMultiRuleConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getDatatypeRuleConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.keyword$43$Delimiter);
		getDatatypeRuleConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getDatatypeConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.keyword$43$Delimiter);
		getDatatypeConsumer().setRuleCall$3$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getDatatype2Consumer().setRuleCall$1$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getCommonTerminalsRuleConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.keyword$43$Delimiter);
		getCommonTerminalsRuleConsumer().setRuleCall$3$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$106$Delimiter);
		getCommonTerminalsRuleConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getCommonTerminalsRuleConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$13$Delimiter);
		getCommonTerminalsRuleConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.parsetree.unassignedtext.parser.packrat.UnassignedTextTestLanguageDelimiters.ruleCall$106$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public UnassignedTextTestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public UnassignedTextTestLanguageCaseInsensitiveKeywordRuleConsumer getCaseInsensitiveKeywordRuleConsumer() {
    	return caseInsensitiveKeywordRuleConsumer;
    }

    public UnassignedTextTestLanguageCaseInsensitiveKeywordConsumer getCaseInsensitiveKeywordConsumer() {
    	return caseInsensitiveKeywordConsumer;
    }

    public UnassignedTextTestLanguagePluralRuleConsumer getPluralRuleConsumer() {
    	return pluralRuleConsumer;
    }

    public UnassignedTextTestLanguagePluralConsumer getPluralConsumer() {
    	return pluralConsumer;
    }

    public UnassignedTextTestLanguageMultiRuleConsumer getMultiRuleConsumer() {
    	return multiRuleConsumer;
    }

    public UnassignedTextTestLanguageMultiConsumer getMultiConsumer() {
    	return multiConsumer;
    }

    public UnassignedTextTestLanguageMulti2Consumer getMulti2Consumer() {
    	return multi2Consumer;
    }

    public UnassignedTextTestLanguageDatatypeRuleConsumer getDatatypeRuleConsumer() {
    	return datatypeRuleConsumer;
    }

    public UnassignedTextTestLanguageDatatypeConsumer getDatatypeConsumer() {
    	return datatypeConsumer;
    }

    public UnassignedTextTestLanguageDatatype2Consumer getDatatype2Consumer() {
    	return datatype2Consumer;
    }

    public UnassignedTextTestLanguageCommonTerminalsRuleConsumer getCommonTerminalsRuleConsumer() {
    	return commonTerminalsRuleConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
