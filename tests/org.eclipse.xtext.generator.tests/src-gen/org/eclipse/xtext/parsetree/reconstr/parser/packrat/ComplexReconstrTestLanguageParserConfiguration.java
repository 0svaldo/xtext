/*
* generated by Xtext
*/
package org.eclipse.xtext.parsetree.reconstr.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.parsetree.reconstr.services.ComplexReconstrTestLanguageGrammarAccess;

import org.eclipse.xtext.builtin.parser.packrat.XtextBuiltinParserConfiguration; 

import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageRootConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageOpConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTermConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageAtomConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageParensConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyAConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyA1Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyBConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyCConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyDConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyEConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyFConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyGConsumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyG1Consumer;
import org.eclipse.xtext.parsetree.reconstr.parser.packrat.consumers.ComplexReconstrTestLanguageTrickyG2Consumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinIDConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinINTConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinSTRINGConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinML_COMMENTConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinSL_COMMENTConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinWSConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinANY_OTHERConsumer;

public class ComplexReconstrTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final XtextBuiltinParserConfiguration xtextBuiltinConfiguration; 

    private ComplexReconstrTestLanguageRootConsumer rootConsumer;
    private ComplexReconstrTestLanguageOpConsumer opConsumer;
    private ComplexReconstrTestLanguageTermConsumer termConsumer;
    private ComplexReconstrTestLanguageAtomConsumer atomConsumer;
    private ComplexReconstrTestLanguageParensConsumer parensConsumer;
    private ComplexReconstrTestLanguageTrickyAConsumer trickyAConsumer;
    private ComplexReconstrTestLanguageTrickyA1Consumer trickyA1Consumer;
    private ComplexReconstrTestLanguageTrickyBConsumer trickyBConsumer;
    private ComplexReconstrTestLanguageTrickyCConsumer trickyCConsumer;
    private ComplexReconstrTestLanguageTrickyDConsumer trickyDConsumer;
    private ComplexReconstrTestLanguageTrickyEConsumer trickyEConsumer;
    private ComplexReconstrTestLanguageTrickyFConsumer trickyFConsumer;
    private ComplexReconstrTestLanguageTrickyGConsumer trickyGConsumer;
    private ComplexReconstrTestLanguageTrickyG1Consumer trickyG1Consumer;
    private ComplexReconstrTestLanguageTrickyG2Consumer trickyG2Consumer;

	private ComplexReconstrTestLanguageGrammarAccess grammarAccess;

	public ComplexReconstrTestLanguageParserConfiguration(IInternalParserConfiguration configuration, ComplexReconstrTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.xtextBuiltinConfiguration = new XtextBuiltinParserConfiguration(configuration, null);
	}

	public ComplexReconstrTestLanguageRootConsumer getRootConsumer() {
		return rootConsumer;
	} 

	public void createNonTerminalConsumers() {
		getXtextBuiltinConfiguration().createNonTerminalConsumers();
		rootConsumer = new ComplexReconstrTestLanguageRootConsumer(
    		this, null
    	);
		opConsumer = new ComplexReconstrTestLanguageOpConsumer(
    		this, null
    	);
		termConsumer = new ComplexReconstrTestLanguageTermConsumer(
    		this, null
    	);
		atomConsumer = new ComplexReconstrTestLanguageAtomConsumer(
    		this, null
    	);
		parensConsumer = new ComplexReconstrTestLanguageParensConsumer(
    		this, null
    	);
		trickyAConsumer = new ComplexReconstrTestLanguageTrickyAConsumer(
    		this, null
    	);
		trickyA1Consumer = new ComplexReconstrTestLanguageTrickyA1Consumer(
    		this, null
    	);
		trickyBConsumer = new ComplexReconstrTestLanguageTrickyBConsumer(
    		this, null
    	);
		trickyCConsumer = new ComplexReconstrTestLanguageTrickyCConsumer(
    		this, null
    	);
		trickyDConsumer = new ComplexReconstrTestLanguageTrickyDConsumer(
    		this, null
    	);
		trickyEConsumer = new ComplexReconstrTestLanguageTrickyEConsumer(
    		this, null
    	);
		trickyFConsumer = new ComplexReconstrTestLanguageTrickyFConsumer(
    		this, null
    	);
		trickyGConsumer = new ComplexReconstrTestLanguageTrickyGConsumer(
    		this, null
    	);
		trickyG1Consumer = new ComplexReconstrTestLanguageTrickyG1Consumer(
    		this, null
    	);
		trickyG2Consumer = new ComplexReconstrTestLanguageTrickyG2Consumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getXtextBuiltinConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getRootConsumer().setRule(grammarAccess.prRoot());
		getOpConsumer().setRule(grammarAccess.prOp());
		getTermConsumer().setRule(grammarAccess.prTerm());
		getAtomConsumer().setRule(grammarAccess.prAtom());
		getParensConsumer().setRule(grammarAccess.prParens());
		getTrickyAConsumer().setRule(grammarAccess.prTrickyA());
		getTrickyA1Consumer().setRule(grammarAccess.prTrickyA1());
		getTrickyBConsumer().setRule(grammarAccess.prTrickyB());
		getTrickyCConsumer().setRule(grammarAccess.prTrickyC());
		getTrickyDConsumer().setRule(grammarAccess.prTrickyD());
		getTrickyEConsumer().setRule(grammarAccess.prTrickyE());
		getTrickyFConsumer().setRule(grammarAccess.prTrickyF());
		getTrickyGConsumer().setRule(grammarAccess.prTrickyG());
		getTrickyG1Consumer().setRule(grammarAccess.prTrickyG1());
		getTrickyG2Consumer().setRule(grammarAccess.prTrickyG2());
		getIdConsumer().setRule(grammarAccess.lrID());
		getIntConsumer().setRule(grammarAccess.lrINT());
		getStringConsumer().setRule(grammarAccess.lrSTRING());
		getMlCommentConsumer().setRule(grammarAccess.lrML_COMMENT());
		getSlCommentConsumer().setRule(grammarAccess.lrSL_COMMENT());
		getWsConsumer().setRule(grammarAccess.lrWS());
		getAnyOtherConsumer().setRule(grammarAccess.lrANY_OTHER());


		getRootConsumer$().setOpConsumer(getOpConsumer());
		getRootConsumer$().setTrickyGConsumer(getTrickyGConsumer());

		getOpConsumer().setTermConsumer(getTermConsumer());

		getTermConsumer().setAtomConsumer(getAtomConsumer());
		getTermConsumer().setParensConsumer(getParensConsumer());

		getAtomConsumer().setIdConsumer(getIdConsumer());

		getParensConsumer().setOpConsumer(getOpConsumer());

		getTrickyAConsumer().setIdConsumer(getIdConsumer());
		getTrickyAConsumer().setStringConsumer(getStringConsumer());
		getTrickyAConsumer().setTrickyA1Consumer(getTrickyA1Consumer());

		getTrickyA1Consumer().setIdConsumer(getIdConsumer());

		getTrickyBConsumer().setIdConsumer(getIdConsumer());
		getTrickyBConsumer().setIntConsumer(getIntConsumer());

		getTrickyCConsumer().setIdConsumer(getIdConsumer());

		getTrickyDConsumer().setIdConsumer(getIdConsumer());
		getTrickyDConsumer().setIntConsumer(getIntConsumer());
		getTrickyDConsumer().setStringConsumer(getStringConsumer());

		getTrickyEConsumer().setIdConsumer(getIdConsumer());
		getTrickyEConsumer().setIntConsumer(getIntConsumer());
		getTrickyEConsumer().setStringConsumer(getStringConsumer());

		getTrickyFConsumer().setIdConsumer(getIdConsumer());
		getTrickyFConsumer().setIntConsumer(getIntConsumer());

		getTrickyGConsumer().setTrickyG1Consumer(getTrickyG1Consumer());

		getTrickyG1Consumer().setTrickyG2Consumer(getTrickyG2Consumer());

		getTrickyG2Consumer().setIntConsumer(getIntConsumer());
		getTrickyG2Consumer().setTrickyG1Consumer(getTrickyG1Consumer());

		getOpConsumer().setKeyword$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$15$Delimiter);
		getOpConsumer().setKeyword$15$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$15$Delimiter);
		getAtomConsumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getParensConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$15$Delimiter);
		getParensConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$15$Delimiter);
		getParensConsumer().setKeyword$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$15$Delimiter);
		getTrickyAConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyAConsumer().setKeyword$13$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyAConsumer().setKeyword$17$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyAConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyAConsumer().setRuleCall$19$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyA1Consumer().setRuleCall$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyBConsumer().setKeyword$3$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyBConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyBConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyBConsumer().setRuleCall$10$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyCConsumer().setKeyword$19$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyCConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyCConsumer().setKeyword$11$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyCConsumer().setKeyword$15$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyCConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyDConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyDConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyDConsumer().setRuleCall$10$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyDConsumer().setRuleCall$12$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyDConsumer().setRuleCall$15$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyDConsumer().setRuleCall$17$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyDConsumer().setRuleCall$19$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyEConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyEConsumer().setKeyword$13$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyEConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyEConsumer().setRuleCall$10$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyEConsumer().setRuleCall$12$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyEConsumer().setRuleCall$16$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyEConsumer().setRuleCall$18$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyFConsumer().setKeyword$3$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyFConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyFConsumer().setRuleCall$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyFConsumer().setRuleCall$11$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$33$Delimiter);
		getTrickyFConsumer().setRuleCall$13$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
		getTrickyGConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$50$Delimiter);
		getTrickyG1Consumer().setKeyword$3$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$15$Delimiter);
		getTrickyG1Consumer().setKeyword$8$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$15$Delimiter);
		getTrickyG1Consumer().setKeyword$11$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.keyword$15$Delimiter);
		getTrickyG2Consumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.reconstr.parser.packrat.ComplexReconstrTestLanguageDelimiters.ruleCall$64$Delimiter);
	}
	
	// TODO collect superGrammars transitive
	public XtextBuiltinParserConfiguration getXtextBuiltinConfiguration() {
		return xtextBuiltinConfiguration;
	} 
	
	public ComplexReconstrTestLanguageRootConsumer getRootConsumer$() {
    	return rootConsumer;
    }

    public ComplexReconstrTestLanguageOpConsumer getOpConsumer() {
    	return opConsumer;
    }

    public ComplexReconstrTestLanguageTermConsumer getTermConsumer() {
    	return termConsumer;
    }

    public ComplexReconstrTestLanguageAtomConsumer getAtomConsumer() {
    	return atomConsumer;
    }

    public ComplexReconstrTestLanguageParensConsumer getParensConsumer() {
    	return parensConsumer;
    }

    public ComplexReconstrTestLanguageTrickyAConsumer getTrickyAConsumer() {
    	return trickyAConsumer;
    }

    public ComplexReconstrTestLanguageTrickyA1Consumer getTrickyA1Consumer() {
    	return trickyA1Consumer;
    }

    public ComplexReconstrTestLanguageTrickyBConsumer getTrickyBConsumer() {
    	return trickyBConsumer;
    }

    public ComplexReconstrTestLanguageTrickyCConsumer getTrickyCConsumer() {
    	return trickyCConsumer;
    }

    public ComplexReconstrTestLanguageTrickyDConsumer getTrickyDConsumer() {
    	return trickyDConsumer;
    }

    public ComplexReconstrTestLanguageTrickyEConsumer getTrickyEConsumer() {
    	return trickyEConsumer;
    }

    public ComplexReconstrTestLanguageTrickyFConsumer getTrickyFConsumer() {
    	return trickyFConsumer;
    }

    public ComplexReconstrTestLanguageTrickyGConsumer getTrickyGConsumer() {
    	return trickyGConsumer;
    }

    public ComplexReconstrTestLanguageTrickyG1Consumer getTrickyG1Consumer() {
    	return trickyG1Consumer;
    }

    public ComplexReconstrTestLanguageTrickyG2Consumer getTrickyG2Consumer() {
    	return trickyG2Consumer;
    }

    public XtextBuiltinIDConsumer getIdConsumer() {
    	return getXtextBuiltinConfiguration().getIdConsumer();
    }

    public XtextBuiltinINTConsumer getIntConsumer() {
    	return getXtextBuiltinConfiguration().getIntConsumer();
    }

    public XtextBuiltinSTRINGConsumer getStringConsumer() {
    	return getXtextBuiltinConfiguration().getStringConsumer();
    }

    public XtextBuiltinML_COMMENTConsumer getMlCommentConsumer() {
    	return getXtextBuiltinConfiguration().getMlCommentConsumer();
    }

    public XtextBuiltinSL_COMMENTConsumer getSlCommentConsumer() {
    	return getXtextBuiltinConfiguration().getSlCommentConsumer();
    }

    public XtextBuiltinWSConsumer getWsConsumer() {
    	return getXtextBuiltinConfiguration().getWsConsumer();
    }

    public XtextBuiltinANY_OTHERConsumer getAnyOtherConsumer() {
    	return getXtextBuiltinConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getXtextBuiltinConfiguration().getInitialHiddenTerminals();
	}
	
}
