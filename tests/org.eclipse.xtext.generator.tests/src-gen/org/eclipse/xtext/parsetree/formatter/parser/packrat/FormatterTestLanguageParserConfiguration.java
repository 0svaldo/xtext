/*
* generated by Xtext
*/
package org.eclipse.xtext.parsetree.formatter.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.parsetree.formatter.services.FormatterTestLanguageGrammarAccess;

import org.eclipse.xtext.builtin.parser.packrat.XtextBuiltinParserConfiguration; 

import org.eclipse.xtext.parsetree.formatter.parser.packrat.consumers.FormatterTestLanguageRootConsumer;
import org.eclipse.xtext.parsetree.formatter.parser.packrat.consumers.FormatterTestLanguageLineConsumer;
import org.eclipse.xtext.parsetree.formatter.parser.packrat.consumers.FormatterTestLanguageTestLinewrapConsumer;
import org.eclipse.xtext.parsetree.formatter.parser.packrat.consumers.FormatterTestLanguageTestIndentationConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinIDConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinINTConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinSTRINGConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinML_COMMENTConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinSL_COMMENTConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinWSConsumer;
import org.eclipse.xtext.builtin.parser.packrat.consumers.XtextBuiltinANY_OTHERConsumer;

public class FormatterTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final XtextBuiltinParserConfiguration xtextBuiltinConfiguration; 

    private FormatterTestLanguageRootConsumer rootConsumer;
    private FormatterTestLanguageLineConsumer lineConsumer;
    private FormatterTestLanguageTestLinewrapConsumer testLinewrapConsumer;
    private FormatterTestLanguageTestIndentationConsumer testIndentationConsumer;

	private FormatterTestLanguageGrammarAccess grammarAccess;

	public FormatterTestLanguageParserConfiguration(IInternalParserConfiguration configuration, FormatterTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.xtextBuiltinConfiguration = new XtextBuiltinParserConfiguration(configuration, null);
	}

	public FormatterTestLanguageRootConsumer getRootConsumer() {
		return rootConsumer;
	} 

	public void createNonTerminalConsumers() {
		getXtextBuiltinConfiguration().createNonTerminalConsumers();
		rootConsumer = new FormatterTestLanguageRootConsumer(
    		this, null
    	);
		lineConsumer = new FormatterTestLanguageLineConsumer(
    		this, null
    	);
		testLinewrapConsumer = new FormatterTestLanguageTestLinewrapConsumer(
    		this, null
    	);
		testIndentationConsumer = new FormatterTestLanguageTestIndentationConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getXtextBuiltinConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getRootConsumer().setRule(grammarAccess.prRoot());
		getLineConsumer().setRule(grammarAccess.prLine());
		getTestLinewrapConsumer().setRule(grammarAccess.prTestLinewrap());
		getTestIndentationConsumer().setRule(grammarAccess.prTestIndentation());
		getIdConsumer().setRule(grammarAccess.lrID());
		getIntConsumer().setRule(grammarAccess.lrINT());
		getStringConsumer().setRule(grammarAccess.lrSTRING());
		getMlCommentConsumer().setRule(grammarAccess.lrML_COMMENT());
		getSlCommentConsumer().setRule(grammarAccess.lrSL_COMMENT());
		getWsConsumer().setRule(grammarAccess.lrWS());
		getAnyOtherConsumer().setRule(grammarAccess.lrANY_OTHER());


		getRootConsumer$().setTestIndentationConsumer(getTestIndentationConsumer());
		getRootConsumer$().setTestLinewrapConsumer(getTestLinewrapConsumer());

		getLineConsumer().setIdConsumer(getIdConsumer());

		getTestLinewrapConsumer().setLineConsumer(getLineConsumer());

		getTestIndentationConsumer().setLineConsumer(getLineConsumer());
		getTestIndentationConsumer().setTestIndentationConsumer(getTestIndentationConsumer());

		getRootConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.formatter.parser.packrat.FormatterTestLanguageDelimiters.keyword$4$Delimiter);
		getLineConsumer().setKeyword$7$Delimiter(org.eclipse.xtext.parsetree.formatter.parser.packrat.FormatterTestLanguageDelimiters.keyword$16$Delimiter);
		getLineConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.parsetree.formatter.parser.packrat.FormatterTestLanguageDelimiters.ruleCall$13$Delimiter);
		getLineConsumer().setRuleCall$6$Delimiter(org.eclipse.xtext.parsetree.formatter.parser.packrat.FormatterTestLanguageDelimiters.ruleCall$13$Delimiter);
		getTestLinewrapConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.parsetree.formatter.parser.packrat.FormatterTestLanguageDelimiters.keyword$4$Delimiter);
		getTestIndentationConsumer().setKeyword$4$Delimiter(org.eclipse.xtext.parsetree.formatter.parser.packrat.FormatterTestLanguageDelimiters.keyword$4$Delimiter);
		getTestIndentationConsumer().setKeyword$5$Delimiter(org.eclipse.xtext.parsetree.formatter.parser.packrat.FormatterTestLanguageDelimiters.keyword$16$Delimiter);
		getTestIndentationConsumer().setKeyword$11$Delimiter(org.eclipse.xtext.parsetree.formatter.parser.packrat.FormatterTestLanguageDelimiters.keyword$16$Delimiter);
	}
	
	// TODO collect superGrammars transitive
	public XtextBuiltinParserConfiguration getXtextBuiltinConfiguration() {
		return xtextBuiltinConfiguration;
	} 
	
	public FormatterTestLanguageRootConsumer getRootConsumer$() {
    	return rootConsumer;
    }

    public FormatterTestLanguageLineConsumer getLineConsumer() {
    	return lineConsumer;
    }

    public FormatterTestLanguageTestLinewrapConsumer getTestLinewrapConsumer() {
    	return testLinewrapConsumer;
    }

    public FormatterTestLanguageTestIndentationConsumer getTestIndentationConsumer() {
    	return testIndentationConsumer;
    }

    public XtextBuiltinIDConsumer getIdConsumer() {
    	return getXtextBuiltinConfiguration().getIdConsumer();
    }

    public XtextBuiltinINTConsumer getIntConsumer() {
    	return getXtextBuiltinConfiguration().getIntConsumer();
    }

    public XtextBuiltinSTRINGConsumer getStringConsumer() {
    	return getXtextBuiltinConfiguration().getStringConsumer();
    }

    public XtextBuiltinML_COMMENTConsumer getMlCommentConsumer() {
    	return getXtextBuiltinConfiguration().getMlCommentConsumer();
    }

    public XtextBuiltinSL_COMMENTConsumer getSlCommentConsumer() {
    	return getXtextBuiltinConfiguration().getSlCommentConsumer();
    }

    public XtextBuiltinWSConsumer getWsConsumer() {
    	return getXtextBuiltinConfiguration().getWsConsumer();
    }

    public XtextBuiltinANY_OTHERConsumer getAnyOtherConsumer() {
    	return getXtextBuiltinConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getXtextBuiltinConfiguration().getInitialHiddenTerminals();
	}
	
}
