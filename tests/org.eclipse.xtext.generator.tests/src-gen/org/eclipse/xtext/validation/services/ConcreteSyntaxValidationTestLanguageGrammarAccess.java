/*
* generated by Xtext
*/

package org.eclipse.xtext.validation.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ConcreteSyntaxValidationTestLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cX1Assignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cX1SimpleGroupParserRuleCall_0_0 = (RuleCall)cX1Assignment_0.eContents().get(0);
		private final Assignment cX2Assignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cX2SimpleAlternativeParserRuleCall_1_0 = (RuleCall)cX2Assignment_1.eContents().get(0);
		private final Assignment cX3Assignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cX3SimpleMultiplicitiesParserRuleCall_2_0 = (RuleCall)cX3Assignment_2.eContents().get(0);
		private final Assignment cX4Assignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cX4GroupMultiplicitiesParserRuleCall_3_0 = (RuleCall)cX4Assignment_3.eContents().get(0);
		private final Assignment cX5Assignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cX5AlternativeMultiplicitiesParserRuleCall_4_0 = (RuleCall)cX5Assignment_4.eContents().get(0);
		private final Assignment cX6Assignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cX6AssignedActionParserRuleCall_5_0 = (RuleCall)cX6Assignment_5.eContents().get(0);
		private final Assignment cX7Assignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cX7AssignedActionSecondParserRuleCall_6_0 = (RuleCall)cX7Assignment_6.eContents().get(0);
		private final Assignment cX8Assignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cX8UnassignedAction1ParserRuleCall_7_0 = (RuleCall)cX8Assignment_7.eContents().get(0);
		private final Assignment cX9Assignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cX9UnassignedAction2ParserRuleCall_8_0 = (RuleCall)cX9Assignment_8.eContents().get(0);
		private final Assignment cX10Assignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cX10UnassignedAction3ParserRuleCall_9_0 = (RuleCall)cX10Assignment_9.eContents().get(0);
		private final Assignment cX11Assignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final RuleCall cX11UnassignedRuleCall1ParserRuleCall_10_0 = (RuleCall)cX11Assignment_10.eContents().get(0);
		private final Assignment cX12Assignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final RuleCall cX12UnassignedRuleCall2ParserRuleCall_11_0 = (RuleCall)cX12Assignment_11.eContents().get(0);
		private final Assignment cX13Assignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final RuleCall cX13Combination1ParserRuleCall_12_0 = (RuleCall)cX13Assignment_12.eContents().get(0);
		private final Assignment cX14Assignment_13 = (Assignment)cAlternatives.eContents().get(13);
		private final RuleCall cX14Combination2ParserRuleCall_13_0 = (RuleCall)cX14Assignment_13.eContents().get(0);
		private final Assignment cX15Assignment_14 = (Assignment)cAlternatives.eContents().get(14);
		private final RuleCall cX15Combination3ParserRuleCall_14_0 = (RuleCall)cX15Assignment_14.eContents().get(0);
		private final Assignment cX16Assignment_15 = (Assignment)cAlternatives.eContents().get(15);
		private final RuleCall cX16Combination4ParserRuleCall_15_0 = (RuleCall)cX16Assignment_15.eContents().get(0);
		private final Assignment cX17Assignment_16 = (Assignment)cAlternatives.eContents().get(16);
		private final RuleCall cX17List1ParserRuleCall_16_0 = (RuleCall)cX17Assignment_16.eContents().get(0);
		private final Assignment cX18Assignment_17 = (Assignment)cAlternatives.eContents().get(17);
		private final RuleCall cX18List2ParserRuleCall_17_0 = (RuleCall)cX18Assignment_17.eContents().get(0);
		private final Assignment cX19Assignment_18 = (Assignment)cAlternatives.eContents().get(18);
		private final RuleCall cX19List3ParserRuleCall_18_0 = (RuleCall)cX19Assignment_18.eContents().get(0);
		
		//Model:
		//  x1=SimpleGroup|x2=SimpleAlternative|x3=SimpleMultiplicities|x4=
		//  GroupMultiplicities|x5=AlternativeMultiplicities|x6=AssignedAction|x7=
		//  AssignedActionSecond|x8=UnassignedAction1|x9=UnassignedAction2|x10=
		//  UnassignedAction3|x11=UnassignedRuleCall1|x12=UnassignedRuleCall2|x13=
		//  Combination1|x14=Combination2|x15=Combination3|x16=Combination4|x17=List1|x18=
		//  List2|x19=List3;
		public ParserRule getRule() { return rule; }

		//x1=SimpleGroup|x2=SimpleAlternative|x3=SimpleMultiplicities|x4=
		//GroupMultiplicities|x5=AlternativeMultiplicities|x6=AssignedAction|x7=
		//AssignedActionSecond|x8=UnassignedAction1|x9=UnassignedAction2|x10=
		//UnassignedAction3|x11=UnassignedRuleCall1|x12=UnassignedRuleCall2|x13=
		//Combination1|x14=Combination2|x15=Combination3|x16=Combination4|x17=List1|x18=
		//List2|x19=List3
		public Alternatives getAlternatives() { return cAlternatives; }

		//x1=SimpleGroup
		public Assignment getX1Assignment_0() { return cX1Assignment_0; }

		//SimpleGroup
		public RuleCall getX1SimpleGroupParserRuleCall_0_0() { return cX1SimpleGroupParserRuleCall_0_0; }

		//x2=SimpleAlternative
		public Assignment getX2Assignment_1() { return cX2Assignment_1; }

		//SimpleAlternative
		public RuleCall getX2SimpleAlternativeParserRuleCall_1_0() { return cX2SimpleAlternativeParserRuleCall_1_0; }

		//x3=SimpleMultiplicities
		public Assignment getX3Assignment_2() { return cX3Assignment_2; }

		//SimpleMultiplicities
		public RuleCall getX3SimpleMultiplicitiesParserRuleCall_2_0() { return cX3SimpleMultiplicitiesParserRuleCall_2_0; }

		//x4=GroupMultiplicities
		public Assignment getX4Assignment_3() { return cX4Assignment_3; }

		//GroupMultiplicities
		public RuleCall getX4GroupMultiplicitiesParserRuleCall_3_0() { return cX4GroupMultiplicitiesParserRuleCall_3_0; }

		//x5=AlternativeMultiplicities
		public Assignment getX5Assignment_4() { return cX5Assignment_4; }

		//AlternativeMultiplicities
		public RuleCall getX5AlternativeMultiplicitiesParserRuleCall_4_0() { return cX5AlternativeMultiplicitiesParserRuleCall_4_0; }

		//x6=AssignedAction
		public Assignment getX6Assignment_5() { return cX6Assignment_5; }

		//AssignedAction
		public RuleCall getX6AssignedActionParserRuleCall_5_0() { return cX6AssignedActionParserRuleCall_5_0; }

		//x7=AssignedActionSecond
		public Assignment getX7Assignment_6() { return cX7Assignment_6; }

		//AssignedActionSecond
		public RuleCall getX7AssignedActionSecondParserRuleCall_6_0() { return cX7AssignedActionSecondParserRuleCall_6_0; }

		//x8=UnassignedAction1
		public Assignment getX8Assignment_7() { return cX8Assignment_7; }

		//UnassignedAction1
		public RuleCall getX8UnassignedAction1ParserRuleCall_7_0() { return cX8UnassignedAction1ParserRuleCall_7_0; }

		//x9=UnassignedAction2
		public Assignment getX9Assignment_8() { return cX9Assignment_8; }

		//UnassignedAction2
		public RuleCall getX9UnassignedAction2ParserRuleCall_8_0() { return cX9UnassignedAction2ParserRuleCall_8_0; }

		//x10=UnassignedAction3
		public Assignment getX10Assignment_9() { return cX10Assignment_9; }

		//UnassignedAction3
		public RuleCall getX10UnassignedAction3ParserRuleCall_9_0() { return cX10UnassignedAction3ParserRuleCall_9_0; }

		//x11=UnassignedRuleCall1
		public Assignment getX11Assignment_10() { return cX11Assignment_10; }

		//UnassignedRuleCall1
		public RuleCall getX11UnassignedRuleCall1ParserRuleCall_10_0() { return cX11UnassignedRuleCall1ParserRuleCall_10_0; }

		//x12=UnassignedRuleCall2
		public Assignment getX12Assignment_11() { return cX12Assignment_11; }

		//UnassignedRuleCall2
		public RuleCall getX12UnassignedRuleCall2ParserRuleCall_11_0() { return cX12UnassignedRuleCall2ParserRuleCall_11_0; }

		//x13=Combination1
		public Assignment getX13Assignment_12() { return cX13Assignment_12; }

		//Combination1
		public RuleCall getX13Combination1ParserRuleCall_12_0() { return cX13Combination1ParserRuleCall_12_0; }

		//x14=Combination2
		public Assignment getX14Assignment_13() { return cX14Assignment_13; }

		//Combination2
		public RuleCall getX14Combination2ParserRuleCall_13_0() { return cX14Combination2ParserRuleCall_13_0; }

		//x15=Combination3
		public Assignment getX15Assignment_14() { return cX15Assignment_14; }

		//Combination3
		public RuleCall getX15Combination3ParserRuleCall_14_0() { return cX15Combination3ParserRuleCall_14_0; }

		//x16=Combination4
		public Assignment getX16Assignment_15() { return cX16Assignment_15; }

		//Combination4
		public RuleCall getX16Combination4ParserRuleCall_15_0() { return cX16Combination4ParserRuleCall_15_0; }

		//x17=List1
		public Assignment getX17Assignment_16() { return cX17Assignment_16; }

		//List1
		public RuleCall getX17List1ParserRuleCall_16_0() { return cX17List1ParserRuleCall_16_0; }

		//x18=List2
		public Assignment getX18Assignment_17() { return cX18Assignment_17; }

		//List2
		public RuleCall getX18List2ParserRuleCall_17_0() { return cX18List2ParserRuleCall_17_0; }

		//x19=List3
		public Assignment getX19Assignment_18() { return cX19Assignment_18; }

		//List3
		public RuleCall getX19List3ParserRuleCall_18_0() { return cX19List3ParserRuleCall_18_0; }
	}

	public class SimpleGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVal1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0 = (RuleCall)cVal1Assignment_1.eContents().get(0);
		private final Assignment cVal2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVal2IDTerminalRuleCall_2_0 = (RuleCall)cVal2Assignment_2.eContents().get(0);
		
		//SimpleGroup:
		//  "#1" val1=ID val2=ID;
		public ParserRule getRule() { return rule; }

		//"#1" val1=ID val2=ID
		public Group getGroup() { return cGroup; }

		//"#1"
		public Keyword getNumberSignDigitOneKeyword_0() { return cNumberSignDigitOneKeyword_0; }

		//val1=ID
		public Assignment getVal1Assignment_1() { return cVal1Assignment_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0() { return cVal1IDTerminalRuleCall_1_0; }

		//val2=ID
		public Assignment getVal2Assignment_2() { return cVal2Assignment_2; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_2_0() { return cVal2IDTerminalRuleCall_2_0; }
	}

	public class SimpleAlternativeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleAlternative");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitTwoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cKw1Keyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cVal1Assignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0_1_0 = (RuleCall)cVal1Assignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cKw2Keyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cVal2Assignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cVal2IDTerminalRuleCall_1_1_1_0 = (RuleCall)cVal2Assignment_1_1_1.eContents().get(0);
		
		//SimpleAlternative:
		//  "#2" ("kw1" val1=ID|"kw2" val2=ID);
		public ParserRule getRule() { return rule; }

		//"#2" ("kw1" val1=ID|"kw2" val2=ID)
		public Group getGroup() { return cGroup; }

		//"#2"
		public Keyword getNumberSignDigitTwoKeyword_0() { return cNumberSignDigitTwoKeyword_0; }

		//"kw1" val1=ID|"kw2" val2=ID
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"kw1" val1=ID
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"kw1"
		public Keyword getKw1Keyword_1_0_0() { return cKw1Keyword_1_0_0; }

		//val1=ID
		public Assignment getVal1Assignment_1_0_1() { return cVal1Assignment_1_0_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0_1_0() { return cVal1IDTerminalRuleCall_1_0_1_0; }

		//"kw2" val2=ID
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"kw2"
		public Keyword getKw2Keyword_1_1_0() { return cKw2Keyword_1_1_0; }

		//val2=ID
		public Assignment getVal2Assignment_1_1_1() { return cVal2Assignment_1_1_1; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_1_1_1_0() { return cVal2IDTerminalRuleCall_1_1_1_0; }
	}

	public class SimpleMultiplicitiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleMultiplicities");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitThreeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVal1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0 = (RuleCall)cVal1Assignment_1.eContents().get(0);
		private final Keyword cKw1Keyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVal2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVal2IDTerminalRuleCall_3_0 = (RuleCall)cVal2Assignment_3.eContents().get(0);
		private final Keyword cKw2Keyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cVal3Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVal3IDTerminalRuleCall_5_0 = (RuleCall)cVal3Assignment_5.eContents().get(0);
		private final Keyword cKw3Keyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVal4Assignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVal4IDTerminalRuleCall_7_0 = (RuleCall)cVal4Assignment_7.eContents().get(0);
		
		//SimpleMultiplicities:
		//  "#3" val1=ID "kw1" val2=ID? "kw2" val3+=ID+ "kw3" val4+=ID*;
		public ParserRule getRule() { return rule; }

		//"#3" val1=ID "kw1" val2=ID? "kw2" val3+=ID+ "kw3" val4+=ID*
		public Group getGroup() { return cGroup; }

		//"#3"
		public Keyword getNumberSignDigitThreeKeyword_0() { return cNumberSignDigitThreeKeyword_0; }

		//val1=ID
		public Assignment getVal1Assignment_1() { return cVal1Assignment_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0() { return cVal1IDTerminalRuleCall_1_0; }

		//"kw1"
		public Keyword getKw1Keyword_2() { return cKw1Keyword_2; }

		//val2=ID?
		public Assignment getVal2Assignment_3() { return cVal2Assignment_3; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_3_0() { return cVal2IDTerminalRuleCall_3_0; }

		//"kw2"
		public Keyword getKw2Keyword_4() { return cKw2Keyword_4; }

		//val3+=ID+
		public Assignment getVal3Assignment_5() { return cVal3Assignment_5; }

		//ID
		public RuleCall getVal3IDTerminalRuleCall_5_0() { return cVal3IDTerminalRuleCall_5_0; }

		//"kw3"
		public Keyword getKw3Keyword_6() { return cKw3Keyword_6; }

		//val4+=ID*
		public Assignment getVal4Assignment_7() { return cVal4Assignment_7; }

		//ID
		public RuleCall getVal4IDTerminalRuleCall_7_0() { return cVal4IDTerminalRuleCall_7_0; }
	}

	public class GroupMultiplicitiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GroupMultiplicities");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitFourKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVal1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0 = (RuleCall)cVal1Assignment_1.eContents().get(0);
		private final Keyword cKw1Keyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cVal2Assignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cVal2IDTerminalRuleCall_3_0_0 = (RuleCall)cVal2Assignment_3_0.eContents().get(0);
		private final Assignment cVal3Assignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cVal3IDTerminalRuleCall_3_1_0 = (RuleCall)cVal3Assignment_3_1.eContents().get(0);
		private final Keyword cKw2Keyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cVal4Assignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cVal4IDTerminalRuleCall_5_0_0 = (RuleCall)cVal4Assignment_5_0.eContents().get(0);
		private final Assignment cVal5Assignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cVal5IDTerminalRuleCall_5_1_0 = (RuleCall)cVal5Assignment_5_1.eContents().get(0);
		private final Keyword cKw3Keyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cVal6Assignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cVal6IDTerminalRuleCall_7_0_0 = (RuleCall)cVal6Assignment_7_0.eContents().get(0);
		private final Assignment cVal7Assignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cVal7IDTerminalRuleCall_7_1_0 = (RuleCall)cVal7Assignment_7_1.eContents().get(0);
		
		//GroupMultiplicities:
		//  "#4" val1=ID "kw1" (val2=ID val3=ID)? "kw2" (val4+=ID val5+=ID)+ "kw3" (val6+=ID val7+=ID)
		//  *;
		public ParserRule getRule() { return rule; }

		//"#4" val1=ID "kw1" (val2=ID val3=ID)? "kw2" (val4+=ID val5+=ID)+ "kw3" (val6+=ID val7+=ID)
		// *
		public Group getGroup() { return cGroup; }

		//"#4"
		public Keyword getNumberSignDigitFourKeyword_0() { return cNumberSignDigitFourKeyword_0; }

		//val1=ID
		public Assignment getVal1Assignment_1() { return cVal1Assignment_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0() { return cVal1IDTerminalRuleCall_1_0; }

		//"kw1"
		public Keyword getKw1Keyword_2() { return cKw1Keyword_2; }

		//(val2=ID val3=ID)?
		public Group getGroup_3() { return cGroup_3; }

		//val2=ID
		public Assignment getVal2Assignment_3_0() { return cVal2Assignment_3_0; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_3_0_0() { return cVal2IDTerminalRuleCall_3_0_0; }

		//val3=ID
		public Assignment getVal3Assignment_3_1() { return cVal3Assignment_3_1; }

		//ID
		public RuleCall getVal3IDTerminalRuleCall_3_1_0() { return cVal3IDTerminalRuleCall_3_1_0; }

		//"kw2"
		public Keyword getKw2Keyword_4() { return cKw2Keyword_4; }

		//(val4+=ID val5+=ID)+
		public Group getGroup_5() { return cGroup_5; }

		//val4+=ID
		public Assignment getVal4Assignment_5_0() { return cVal4Assignment_5_0; }

		//ID
		public RuleCall getVal4IDTerminalRuleCall_5_0_0() { return cVal4IDTerminalRuleCall_5_0_0; }

		//val5+=ID
		public Assignment getVal5Assignment_5_1() { return cVal5Assignment_5_1; }

		//ID
		public RuleCall getVal5IDTerminalRuleCall_5_1_0() { return cVal5IDTerminalRuleCall_5_1_0; }

		//"kw3"
		public Keyword getKw3Keyword_6() { return cKw3Keyword_6; }

		//(val6+=ID val7+=ID)*
		public Group getGroup_7() { return cGroup_7; }

		//val6+=ID
		public Assignment getVal6Assignment_7_0() { return cVal6Assignment_7_0; }

		//ID
		public RuleCall getVal6IDTerminalRuleCall_7_0_0() { return cVal6IDTerminalRuleCall_7_0_0; }

		//val7+=ID
		public Assignment getVal7Assignment_7_1() { return cVal7Assignment_7_1; }

		//ID
		public RuleCall getVal7IDTerminalRuleCall_7_1_0() { return cVal7IDTerminalRuleCall_7_1_0; }
	}

	public class AlternativeMultiplicitiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AlternativeMultiplicities");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitFiveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cVal2Assignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cVal2IDTerminalRuleCall_1_0_0 = (RuleCall)cVal2Assignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cKw1Keyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cVal3Assignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cVal3IDTerminalRuleCall_1_1_1_0 = (RuleCall)cVal3Assignment_1_1_1.eContents().get(0);
		private final Keyword cKw2Keyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cVal4Assignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cVal4IDTerminalRuleCall_3_0_0 = (RuleCall)cVal4Assignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cKw3Keyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cVal5Assignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cVal5IDTerminalRuleCall_3_1_1_0 = (RuleCall)cVal5Assignment_3_1_1.eContents().get(0);
		private final Keyword cKw4Keyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cVal6Assignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cVal6IDTerminalRuleCall_5_0_0 = (RuleCall)cVal6Assignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cKw5Keyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cVal7Assignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cVal7IDTerminalRuleCall_5_1_1_0 = (RuleCall)cVal7Assignment_5_1_1.eContents().get(0);
		
		//AlternativeMultiplicities:
		//  "#5" (val2=ID|"kw1" val3=ID)? "kw2" (val4+=ID|"kw3" val5+=ID)+ "kw4" (val6+=ID|"kw5"
		//  val7+=ID)*;
		public ParserRule getRule() { return rule; }

		//"#5" (val2=ID|"kw1" val3=ID)? "kw2" (val4+=ID|"kw3" val5+=ID)+ "kw4" (val6+=ID|"kw5"
		//val7+=ID)*
		public Group getGroup() { return cGroup; }

		//"#5"
		public Keyword getNumberSignDigitFiveKeyword_0() { return cNumberSignDigitFiveKeyword_0; }

		//(val2=ID|"kw1" val3=ID)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//val2=ID
		public Assignment getVal2Assignment_1_0() { return cVal2Assignment_1_0; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_1_0_0() { return cVal2IDTerminalRuleCall_1_0_0; }

		//"kw1" val3=ID
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"kw1"
		public Keyword getKw1Keyword_1_1_0() { return cKw1Keyword_1_1_0; }

		//val3=ID
		public Assignment getVal3Assignment_1_1_1() { return cVal3Assignment_1_1_1; }

		//ID
		public RuleCall getVal3IDTerminalRuleCall_1_1_1_0() { return cVal3IDTerminalRuleCall_1_1_1_0; }

		//"kw2"
		public Keyword getKw2Keyword_2() { return cKw2Keyword_2; }

		//(val4+=ID|"kw3" val5+=ID)+
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//val4+=ID
		public Assignment getVal4Assignment_3_0() { return cVal4Assignment_3_0; }

		//ID
		public RuleCall getVal4IDTerminalRuleCall_3_0_0() { return cVal4IDTerminalRuleCall_3_0_0; }

		//"kw3" val5+=ID
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"kw3"
		public Keyword getKw3Keyword_3_1_0() { return cKw3Keyword_3_1_0; }

		//val5+=ID
		public Assignment getVal5Assignment_3_1_1() { return cVal5Assignment_3_1_1; }

		//ID
		public RuleCall getVal5IDTerminalRuleCall_3_1_1_0() { return cVal5IDTerminalRuleCall_3_1_1_0; }

		//"kw4"
		public Keyword getKw4Keyword_4() { return cKw4Keyword_4; }

		//(val6+=ID|"kw5" val7+=ID)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//val6+=ID
		public Assignment getVal6Assignment_5_0() { return cVal6Assignment_5_0; }

		//ID
		public RuleCall getVal6IDTerminalRuleCall_5_0_0() { return cVal6IDTerminalRuleCall_5_0_0; }

		//"kw5" val7+=ID
		public Group getGroup_5_1() { return cGroup_5_1; }

		//"kw5"
		public Keyword getKw5Keyword_5_1_0() { return cKw5Keyword_5_1_0; }

		//val7+=ID
		public Assignment getVal7Assignment_5_1_1() { return cVal7Assignment_5_1_1; }

		//ID
		public RuleCall getVal7IDTerminalRuleCall_5_1_1_0() { return cVal7IDTerminalRuleCall_5_1_1_0; }
	}

	public class AssignedActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AssignedAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitSixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVal1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0 = (RuleCall)cVal1Assignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Action cAssignedActionChildAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Assignment cVal1Assignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_2_1_0 = (RuleCall)cVal1Assignment_2_1.eContents().get(0);
		
		//AssignedAction:
		//  "#6" val1=ID ({AssignedAction.child=current} val1=ID)+;
		public ParserRule getRule() { return rule; }

		//"#6" val1=ID ({AssignedAction.child=current} val1=ID)+
		public Group getGroup() { return cGroup; }

		//"#6"
		public Keyword getNumberSignDigitSixKeyword_0() { return cNumberSignDigitSixKeyword_0; }

		//val1=ID
		public Assignment getVal1Assignment_1() { return cVal1Assignment_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0() { return cVal1IDTerminalRuleCall_1_0; }

		//({AssignedAction.child=current} val1=ID)+
		public Group getGroup_2() { return cGroup_2; }

		//{AssignedAction.child=current}
		public Action getAssignedActionChildAction_2_0() { return cAssignedActionChildAction_2_0; }

		//val1=ID
		public Assignment getVal1Assignment_2_1() { return cVal1Assignment_2_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_2_1_0() { return cVal1IDTerminalRuleCall_2_1_0; }
	}

	public class AssignedActionSecondElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AssignedActionSecond");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitSevenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVal1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0 = (RuleCall)cVal1Assignment_1.eContents().get(0);
		private final Keyword cKw1Keyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVal2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVal2IDTerminalRuleCall_3_0 = (RuleCall)cVal2Assignment_3.eContents().get(0);
		
		//AssignedActionSecond returns AssignedAction:
		//  "#7" val1=ID "kw1" val2=ID;
		public ParserRule getRule() { return rule; }

		//"#7" val1=ID "kw1" val2=ID
		public Group getGroup() { return cGroup; }

		//"#7"
		public Keyword getNumberSignDigitSevenKeyword_0() { return cNumberSignDigitSevenKeyword_0; }

		//val1=ID
		public Assignment getVal1Assignment_1() { return cVal1Assignment_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0() { return cVal1IDTerminalRuleCall_1_0; }

		//"kw1"
		public Keyword getKw1Keyword_2() { return cKw1Keyword_2; }

		//val2=ID
		public Assignment getVal2Assignment_3() { return cVal2Assignment_3; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_3_0() { return cVal2IDTerminalRuleCall_3_0; }
	}

	public class UnassignedAction1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnassignedAction1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUnassignedAction1Action_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNumberSignDigitEightKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVal1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVal1IDTerminalRuleCall_2_0 = (RuleCall)cVal1Assignment_2.eContents().get(0);
		private final Assignment cVal2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVal2IDTerminalRuleCall_3_0 = (RuleCall)cVal2Assignment_3.eContents().get(0);
		
		//UnassignedAction1:
		//  {UnassignedAction1} "#8" val1=ID val2=ID?;
		public ParserRule getRule() { return rule; }

		//{UnassignedAction1} "#8" val1=ID val2=ID?
		public Group getGroup() { return cGroup; }

		//{UnassignedAction1}
		public Action getUnassignedAction1Action_0() { return cUnassignedAction1Action_0; }

		//"#8"
		public Keyword getNumberSignDigitEightKeyword_1() { return cNumberSignDigitEightKeyword_1; }

		//val1=ID
		public Assignment getVal1Assignment_2() { return cVal1Assignment_2; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_2_0() { return cVal1IDTerminalRuleCall_2_0; }

		//val2=ID?
		public Assignment getVal2Assignment_3() { return cVal2Assignment_3; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_3_0() { return cVal2IDTerminalRuleCall_3_0; }
	}

	public class UnassignedAction2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnassignedAction2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUnassignedAction2SubAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNumberSignDigitNineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVal1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVal1IDTerminalRuleCall_2_0 = (RuleCall)cVal1Assignment_2.eContents().get(0);
		private final Assignment cVal2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVal2IDTerminalRuleCall_3_0 = (RuleCall)cVal2Assignment_3.eContents().get(0);
		
		//UnassignedAction2:
		//  {UnassignedAction2Sub} "#9" val1=ID val2=ID?;
		public ParserRule getRule() { return rule; }

		//{UnassignedAction2Sub} "#9" val1=ID val2=ID?
		public Group getGroup() { return cGroup; }

		//{UnassignedAction2Sub}
		public Action getUnassignedAction2SubAction_0() { return cUnassignedAction2SubAction_0; }

		//"#9"
		public Keyword getNumberSignDigitNineKeyword_1() { return cNumberSignDigitNineKeyword_1; }

		//val1=ID
		public Assignment getVal1Assignment_2() { return cVal1Assignment_2; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_2_0() { return cVal1IDTerminalRuleCall_2_0; }

		//val2=ID?
		public Assignment getVal2Assignment_3() { return cVal2Assignment_3; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_3_0() { return cVal2IDTerminalRuleCall_3_0; }
	}

	public class UnassignedAction3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnassignedAction3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitZeroKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cKw1Keyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Action cUnassignedAction2Sub1Action_1_0_1 = (Action)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cKw2Keyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Action cUnassignedAction2Sub2Action_1_1_1 = (Action)cGroup_1_1.eContents().get(1);
		private final Assignment cVal1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVal1IDTerminalRuleCall_2_0 = (RuleCall)cVal1Assignment_2.eContents().get(0);
		private final Assignment cVal2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVal2IDTerminalRuleCall_3_0 = (RuleCall)cVal2Assignment_3.eContents().get(0);
		
		//UnassignedAction3:
		//  "#10" ("kw1" {UnassignedAction2Sub1}|"kw2" {UnassignedAction2Sub2}) val1=ID val2=ID?;
		public ParserRule getRule() { return rule; }

		//"#10" ("kw1" {UnassignedAction2Sub1}|"kw2" {UnassignedAction2Sub2}) val1=ID val2=ID?
		public Group getGroup() { return cGroup; }

		//"#10"
		public Keyword getNumberSignDigitOneDigitZeroKeyword_0() { return cNumberSignDigitOneDigitZeroKeyword_0; }

		//"kw1" {UnassignedAction2Sub1}|"kw2" {UnassignedAction2Sub2}
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"kw1" {UnassignedAction2Sub1}
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"kw1"
		public Keyword getKw1Keyword_1_0_0() { return cKw1Keyword_1_0_0; }

		//{UnassignedAction2Sub1}
		public Action getUnassignedAction2Sub1Action_1_0_1() { return cUnassignedAction2Sub1Action_1_0_1; }

		//"kw2" {UnassignedAction2Sub2}
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"kw2"
		public Keyword getKw2Keyword_1_1_0() { return cKw2Keyword_1_1_0; }

		//{UnassignedAction2Sub2}
		public Action getUnassignedAction2Sub2Action_1_1_1() { return cUnassignedAction2Sub2Action_1_1_1; }

		//val1=ID
		public Assignment getVal1Assignment_2() { return cVal1Assignment_2; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_2_0() { return cVal1IDTerminalRuleCall_2_0; }

		//val2=ID?
		public Assignment getVal2Assignment_3() { return cVal2Assignment_3; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_3_0() { return cVal2IDTerminalRuleCall_3_0; }
	}

	public class UnassignedRuleCall1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnassignedRuleCall1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitOneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUnassignedRuleCall1SubParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cVal2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVal2IDTerminalRuleCall_2_0 = (RuleCall)cVal2Assignment_2.eContents().get(0);
		
		//UnassignedRuleCall1:
		//  "#11" UnassignedRuleCall1Sub val2=ID;
		public ParserRule getRule() { return rule; }

		//"#11" UnassignedRuleCall1Sub val2=ID
		public Group getGroup() { return cGroup; }

		//"#11"
		public Keyword getNumberSignDigitOneDigitOneKeyword_0() { return cNumberSignDigitOneDigitOneKeyword_0; }

		//UnassignedRuleCall1Sub
		public RuleCall getUnassignedRuleCall1SubParserRuleCall_1() { return cUnassignedRuleCall1SubParserRuleCall_1; }

		//val2=ID
		public Assignment getVal2Assignment_2() { return cVal2Assignment_2; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_2_0() { return cVal2IDTerminalRuleCall_2_0; }
	}

	public class UnassignedRuleCall1SubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnassignedRuleCall1Sub");
		private final Assignment cVal1Assignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_0 = (RuleCall)cVal1Assignment.eContents().get(0);
		
		//UnassignedRuleCall1Sub:
		//  val1=ID;
		public ParserRule getRule() { return rule; }

		//val1=ID
		public Assignment getVal1Assignment() { return cVal1Assignment; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_0() { return cVal1IDTerminalRuleCall_0; }
	}

	public class UnassignedRuleCall2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnassignedRuleCall2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitTwoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUnassignedRuleCall2SubParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cVal2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVal2IDTerminalRuleCall_2_0 = (RuleCall)cVal2Assignment_2.eContents().get(0);
		
		//UnassignedRuleCall2:
		//  "#12" UnassignedRuleCall2Sub val2=ID;
		public ParserRule getRule() { return rule; }

		//"#12" UnassignedRuleCall2Sub val2=ID
		public Group getGroup() { return cGroup; }

		//"#12"
		public Keyword getNumberSignDigitOneDigitTwoKeyword_0() { return cNumberSignDigitOneDigitTwoKeyword_0; }

		//UnassignedRuleCall2Sub
		public RuleCall getUnassignedRuleCall2SubParserRuleCall_1() { return cUnassignedRuleCall2SubParserRuleCall_1; }

		//val2=ID
		public Assignment getVal2Assignment_2() { return cVal2Assignment_2; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_2_0() { return cVal2IDTerminalRuleCall_2_0; }
	}

	public class UnassignedRuleCall2SubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnassignedRuleCall2Sub");
		private final Action cUnassignedRuleCall2SubActionAction = (Action)rule.eContents().get(1);
		
		//UnassignedRuleCall2Sub:
		//  {UnassignedRuleCall2SubAction};
		public ParserRule getRule() { return rule; }

		//{UnassignedRuleCall2SubAction}
		public Action getUnassignedRuleCall2SubActionAction() { return cUnassignedRuleCall2SubActionAction; }
	}

	public class Combination1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Combination1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitThreeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVal1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0 = (RuleCall)cVal1Assignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cKw1Keyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cVal2Assignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVal2IDTerminalRuleCall_2_1_0 = (RuleCall)cVal2Assignment_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2_2 = (Alternatives)cGroup_2.eContents().get(2);
		private final Group cGroup_2_2_0 = (Group)cAlternatives_2_2.eContents().get(0);
		private final Keyword cKw2Keyword_2_2_0_0 = (Keyword)cGroup_2_2_0.eContents().get(0);
		private final Assignment cVal3Assignment_2_2_0_1 = (Assignment)cGroup_2_2_0.eContents().get(1);
		private final RuleCall cVal3IDTerminalRuleCall_2_2_0_1_0 = (RuleCall)cVal3Assignment_2_2_0_1.eContents().get(0);
		private final Assignment cVal4Assignment_2_2_1 = (Assignment)cAlternatives_2_2.eContents().get(1);
		private final RuleCall cVal4IDTerminalRuleCall_2_2_1_0 = (RuleCall)cVal4Assignment_2_2_1.eContents().get(0);
		
		//Combination1:
		//  "#13" val1=ID ("kw1" val2=ID ("kw2" val3=ID|val4=ID))?;
		public ParserRule getRule() { return rule; }

		//"#13" val1=ID ("kw1" val2=ID ("kw2" val3=ID|val4=ID))?
		public Group getGroup() { return cGroup; }

		//"#13"
		public Keyword getNumberSignDigitOneDigitThreeKeyword_0() { return cNumberSignDigitOneDigitThreeKeyword_0; }

		//val1=ID
		public Assignment getVal1Assignment_1() { return cVal1Assignment_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0() { return cVal1IDTerminalRuleCall_1_0; }

		//("kw1" val2=ID ("kw2" val3=ID|val4=ID))?
		public Group getGroup_2() { return cGroup_2; }

		//"kw1"
		public Keyword getKw1Keyword_2_0() { return cKw1Keyword_2_0; }

		//val2=ID
		public Assignment getVal2Assignment_2_1() { return cVal2Assignment_2_1; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_2_1_0() { return cVal2IDTerminalRuleCall_2_1_0; }

		//"kw2" val3=ID|val4=ID
		public Alternatives getAlternatives_2_2() { return cAlternatives_2_2; }

		//"kw2" val3=ID
		public Group getGroup_2_2_0() { return cGroup_2_2_0; }

		//"kw2"
		public Keyword getKw2Keyword_2_2_0_0() { return cKw2Keyword_2_2_0_0; }

		//val3=ID
		public Assignment getVal3Assignment_2_2_0_1() { return cVal3Assignment_2_2_0_1; }

		//ID
		public RuleCall getVal3IDTerminalRuleCall_2_2_0_1_0() { return cVal3IDTerminalRuleCall_2_2_0_1_0; }

		//val4=ID
		public Assignment getVal4Assignment_2_2_1() { return cVal4Assignment_2_2_1; }

		//ID
		public RuleCall getVal4IDTerminalRuleCall_2_2_1_0() { return cVal4IDTerminalRuleCall_2_2_1_0; }
	}

	public class Combination2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Combination2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitFourKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVal1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0 = (RuleCall)cVal1Assignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cKw1Keyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cVal2Assignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cVal2IDTerminalRuleCall_2_0_1_0 = (RuleCall)cVal2Assignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cVal3Assignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cVal3IDTerminalRuleCall_2_1_0_0 = (RuleCall)cVal3Assignment_2_1_0.eContents().get(0);
		private final Assignment cVal4Assignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cVal4IDTerminalRuleCall_2_1_1_0 = (RuleCall)cVal4Assignment_2_1_1.eContents().get(0);
		
		//Combination2:
		//  "#14" val1=ID ("kw1" val2=ID|(val3+=ID val4+=ID)*);
		public ParserRule getRule() { return rule; }

		//"#14" val1=ID ("kw1" val2=ID|(val3+=ID val4+=ID)*)
		public Group getGroup() { return cGroup; }

		//"#14"
		public Keyword getNumberSignDigitOneDigitFourKeyword_0() { return cNumberSignDigitOneDigitFourKeyword_0; }

		//val1=ID
		public Assignment getVal1Assignment_1() { return cVal1Assignment_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0() { return cVal1IDTerminalRuleCall_1_0; }

		//"kw1" val2=ID|(val3+=ID val4+=ID)*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"kw1" val2=ID
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"kw1"
		public Keyword getKw1Keyword_2_0_0() { return cKw1Keyword_2_0_0; }

		//val2=ID
		public Assignment getVal2Assignment_2_0_1() { return cVal2Assignment_2_0_1; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_2_0_1_0() { return cVal2IDTerminalRuleCall_2_0_1_0; }

		//(val3+=ID val4+=ID)*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//val3+=ID
		public Assignment getVal3Assignment_2_1_0() { return cVal3Assignment_2_1_0; }

		//ID
		public RuleCall getVal3IDTerminalRuleCall_2_1_0_0() { return cVal3IDTerminalRuleCall_2_1_0_0; }

		//val4+=ID
		public Assignment getVal4Assignment_2_1_1() { return cVal4Assignment_2_1_1; }

		//ID
		public RuleCall getVal4IDTerminalRuleCall_2_1_1_0() { return cVal4IDTerminalRuleCall_2_1_1_0; }
	}

	public class Combination3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Combination3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitFiveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cVal1Assignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cVal1IDTerminalRuleCall_1_0_0 = (RuleCall)cVal1Assignment_1_0.eContents().get(0);
		private final Assignment cVal2Assignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cVal2INTTerminalRuleCall_1_1_0 = (RuleCall)cVal2Assignment_1_1.eContents().get(0);
		private final Assignment cVal3Assignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cVal3STRINGTerminalRuleCall_1_2_0 = (RuleCall)cVal3Assignment_1_2.eContents().get(0);
		
		//Combination3:
		//  "#15" (val1=ID|val2=INT|val3=STRING)*;
		public ParserRule getRule() { return rule; }

		//"#15" (val1=ID|val2=INT|val3=STRING)*
		public Group getGroup() { return cGroup; }

		//"#15"
		public Keyword getNumberSignDigitOneDigitFiveKeyword_0() { return cNumberSignDigitOneDigitFiveKeyword_0; }

		//(val1=ID|val2=INT|val3=STRING)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//val1=ID
		public Assignment getVal1Assignment_1_0() { return cVal1Assignment_1_0; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0_0() { return cVal1IDTerminalRuleCall_1_0_0; }

		//val2=INT
		public Assignment getVal2Assignment_1_1() { return cVal2Assignment_1_1; }

		//INT
		public RuleCall getVal2INTTerminalRuleCall_1_1_0() { return cVal2INTTerminalRuleCall_1_1_0; }

		//val3=STRING
		public Assignment getVal3Assignment_1_2() { return cVal3Assignment_1_2; }

		//STRING
		public RuleCall getVal3STRINGTerminalRuleCall_1_2_0() { return cVal3STRINGTerminalRuleCall_1_2_0; }
	}

	public class Combination4Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Combination4");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitSixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cGroupKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cVal1Assignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_1_0 = (RuleCall)cVal1Assignment_1_1.eContents().get(0);
		private final Assignment cVal2Assignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cVal2IDTerminalRuleCall_1_2_0 = (RuleCall)cVal2Assignment_1_2.eContents().get(0);
		private final Assignment cVal3Assignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cVal3IDTerminalRuleCall_1_3_0 = (RuleCall)cVal3Assignment_1_3.eContents().get(0);
		
		//Combination4:
		//  "#16" ("group" val1+=ID val2+=ID val3+=ID)+;
		public ParserRule getRule() { return rule; }

		//"#16" ("group" val1+=ID val2+=ID val3+=ID)+
		public Group getGroup() { return cGroup; }

		//"#16"
		public Keyword getNumberSignDigitOneDigitSixKeyword_0() { return cNumberSignDigitOneDigitSixKeyword_0; }

		//("group" val1+=ID val2+=ID val3+=ID)+
		public Group getGroup_1() { return cGroup_1; }

		//"group"
		public Keyword getGroupKeyword_1_0() { return cGroupKeyword_1_0; }

		//val1+=ID
		public Assignment getVal1Assignment_1_1() { return cVal1Assignment_1_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_1_0() { return cVal1IDTerminalRuleCall_1_1_0; }

		//val2+=ID
		public Assignment getVal2Assignment_1_2() { return cVal2Assignment_1_2; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_1_2_0() { return cVal2IDTerminalRuleCall_1_2_0; }

		//val3+=ID
		public Assignment getVal3Assignment_1_3() { return cVal3Assignment_1_3; }

		//ID
		public RuleCall getVal3IDTerminalRuleCall_1_3_0() { return cVal3IDTerminalRuleCall_1_3_0; }
	}

	public class List1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "List1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitSevenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVal1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_0 = (RuleCall)cVal1Assignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cVal1Assignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_2_1_0 = (RuleCall)cVal1Assignment_2_1.eContents().get(0);
		
		//List1:
		//  "#17" val1+=ID ("," val1+=ID)*;
		public ParserRule getRule() { return rule; }

		//"#17" val1+=ID ("," val1+=ID)*
		public Group getGroup() { return cGroup; }

		//"#17"
		public Keyword getNumberSignDigitOneDigitSevenKeyword_0() { return cNumberSignDigitOneDigitSevenKeyword_0; }

		//val1+=ID
		public Assignment getVal1Assignment_1() { return cVal1Assignment_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0() { return cVal1IDTerminalRuleCall_1_0; }

		//("," val1+=ID)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//val1+=ID
		public Assignment getVal1Assignment_2_1() { return cVal1Assignment_2_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_2_1_0() { return cVal1IDTerminalRuleCall_2_1_0; }
	}

	public class List2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "List2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignDigitOneDigitEightKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cVal1Assignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cVal1IDTerminalRuleCall_1_0_0 = (RuleCall)cVal1Assignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cVal1Assignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_1_1_1_0 = (RuleCall)cVal1Assignment_1_1_1.eContents().get(0);
		
		//List2:
		//  "#18" (val1+=ID ("," val1+=ID)*)?;
		public ParserRule getRule() { return rule; }

		//"#18" (val1+=ID ("," val1+=ID)*)?
		public Group getGroup() { return cGroup; }

		//"#18"
		public Keyword getNumberSignDigitOneDigitEightKeyword_0() { return cNumberSignDigitOneDigitEightKeyword_0; }

		//(val1+=ID ("," val1+=ID)*)?
		public Group getGroup_1() { return cGroup_1; }

		//val1+=ID
		public Assignment getVal1Assignment_1_0() { return cVal1Assignment_1_0; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_0_0() { return cVal1IDTerminalRuleCall_1_0_0; }

		//("," val1+=ID)*
		public Group getGroup_1_1() { return cGroup_1_1; }

		//","
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }

		//val1+=ID
		public Assignment getVal1Assignment_1_1_1() { return cVal1Assignment_1_1_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_1_1_1_0() { return cVal1IDTerminalRuleCall_1_1_1_0; }
	}

	public class List3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "List3");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cNumberSignDigitOneDigitNineKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Assignment cVal1Assignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final RuleCall cVal1IDTerminalRuleCall_0_1_0_0 = (RuleCall)cVal1Assignment_0_1_0.eContents().get(0);
		private final Group cGroup_0_1_1 = (Group)cGroup_0_1.eContents().get(1);
		private final Keyword cCommaKeyword_0_1_1_0 = (Keyword)cGroup_0_1_1.eContents().get(0);
		private final Assignment cVal1Assignment_0_1_1_1 = (Assignment)cGroup_0_1_1.eContents().get(1);
		private final RuleCall cVal1IDTerminalRuleCall_0_1_1_1_0 = (RuleCall)cVal1Assignment_0_1_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cKw3Keyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cVal2Assignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cVal2IDTerminalRuleCall_1_1_0 = (RuleCall)cVal2Assignment_1_1.eContents().get(0);
		
		//List3:
		//  "#19" (val1+=ID ("," val1+=ID)*)|"kw3" val2=ID;
		public ParserRule getRule() { return rule; }

		//"#19" (val1+=ID ("," val1+=ID)*)|"kw3" val2=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//"#19" (val1+=ID ("," val1+=ID)*)
		public Group getGroup_0() { return cGroup_0; }

		//"#19"
		public Keyword getNumberSignDigitOneDigitNineKeyword_0_0() { return cNumberSignDigitOneDigitNineKeyword_0_0; }

		//val1+=ID ("," val1+=ID)*
		public Group getGroup_0_1() { return cGroup_0_1; }

		//val1+=ID
		public Assignment getVal1Assignment_0_1_0() { return cVal1Assignment_0_1_0; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_0_1_0_0() { return cVal1IDTerminalRuleCall_0_1_0_0; }

		//("," val1+=ID)*
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }

		//","
		public Keyword getCommaKeyword_0_1_1_0() { return cCommaKeyword_0_1_1_0; }

		//val1+=ID
		public Assignment getVal1Assignment_0_1_1_1() { return cVal1Assignment_0_1_1_1; }

		//ID
		public RuleCall getVal1IDTerminalRuleCall_0_1_1_1_0() { return cVal1IDTerminalRuleCall_0_1_1_1_0; }

		//"kw3" val2=ID
		public Group getGroup_1() { return cGroup_1; }

		//"kw3"
		public Keyword getKw3Keyword_1_0() { return cKw3Keyword_1_0; }

		//val2=ID
		public Assignment getVal2Assignment_1_1() { return cVal2Assignment_1_1; }

		//ID
		public RuleCall getVal2IDTerminalRuleCall_1_1_0() { return cVal2IDTerminalRuleCall_1_1_0; }
	}
	
	
	private ModelElements pModel;
	private SimpleGroupElements pSimpleGroup;
	private SimpleAlternativeElements pSimpleAlternative;
	private SimpleMultiplicitiesElements pSimpleMultiplicities;
	private GroupMultiplicitiesElements pGroupMultiplicities;
	private AlternativeMultiplicitiesElements pAlternativeMultiplicities;
	private AssignedActionElements pAssignedAction;
	private AssignedActionSecondElements pAssignedActionSecond;
	private UnassignedAction1Elements pUnassignedAction1;
	private UnassignedAction2Elements pUnassignedAction2;
	private UnassignedAction3Elements pUnassignedAction3;
	private UnassignedRuleCall1Elements pUnassignedRuleCall1;
	private UnassignedRuleCall1SubElements pUnassignedRuleCall1Sub;
	private UnassignedRuleCall2Elements pUnassignedRuleCall2;
	private UnassignedRuleCall2SubElements pUnassignedRuleCall2Sub;
	private Combination1Elements pCombination1;
	private Combination2Elements pCombination2;
	private Combination3Elements pCombination3;
	private Combination4Elements pCombination4;
	private List1Elements pList1;
	private List2Elements pList2;
	private List3Elements pList3;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ConcreteSyntaxValidationTestLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//  x1=SimpleGroup|x2=SimpleAlternative|x3=SimpleMultiplicities|x4=
	//  GroupMultiplicities|x5=AlternativeMultiplicities|x6=AssignedAction|x7=
	//  AssignedActionSecond|x8=UnassignedAction1|x9=UnassignedAction2|x10=
	//  UnassignedAction3|x11=UnassignedRuleCall1|x12=UnassignedRuleCall2|x13=
	//  Combination1|x14=Combination2|x15=Combination3|x16=Combination4|x17=List1|x18=
	//  List2|x19=List3;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//SimpleGroup:
	//  "#1" val1=ID val2=ID;
	public SimpleGroupElements getSimpleGroupAccess() {
		return (pSimpleGroup != null) ? pSimpleGroup : (pSimpleGroup = new SimpleGroupElements());
	}
	
	public ParserRule getSimpleGroupRule() {
		return getSimpleGroupAccess().getRule();
	}

	//SimpleAlternative:
	//  "#2" ("kw1" val1=ID|"kw2" val2=ID);
	public SimpleAlternativeElements getSimpleAlternativeAccess() {
		return (pSimpleAlternative != null) ? pSimpleAlternative : (pSimpleAlternative = new SimpleAlternativeElements());
	}
	
	public ParserRule getSimpleAlternativeRule() {
		return getSimpleAlternativeAccess().getRule();
	}

	//SimpleMultiplicities:
	//  "#3" val1=ID "kw1" val2=ID? "kw2" val3+=ID+ "kw3" val4+=ID*;
	public SimpleMultiplicitiesElements getSimpleMultiplicitiesAccess() {
		return (pSimpleMultiplicities != null) ? pSimpleMultiplicities : (pSimpleMultiplicities = new SimpleMultiplicitiesElements());
	}
	
	public ParserRule getSimpleMultiplicitiesRule() {
		return getSimpleMultiplicitiesAccess().getRule();
	}

	//GroupMultiplicities:
	//  "#4" val1=ID "kw1" (val2=ID val3=ID)? "kw2" (val4+=ID val5+=ID)+ "kw3" (val6+=ID val7+=ID)
	//  *;
	public GroupMultiplicitiesElements getGroupMultiplicitiesAccess() {
		return (pGroupMultiplicities != null) ? pGroupMultiplicities : (pGroupMultiplicities = new GroupMultiplicitiesElements());
	}
	
	public ParserRule getGroupMultiplicitiesRule() {
		return getGroupMultiplicitiesAccess().getRule();
	}

	//AlternativeMultiplicities:
	//  "#5" (val2=ID|"kw1" val3=ID)? "kw2" (val4+=ID|"kw3" val5+=ID)+ "kw4" (val6+=ID|"kw5"
	//  val7+=ID)*;
	public AlternativeMultiplicitiesElements getAlternativeMultiplicitiesAccess() {
		return (pAlternativeMultiplicities != null) ? pAlternativeMultiplicities : (pAlternativeMultiplicities = new AlternativeMultiplicitiesElements());
	}
	
	public ParserRule getAlternativeMultiplicitiesRule() {
		return getAlternativeMultiplicitiesAccess().getRule();
	}

	//AssignedAction:
	//  "#6" val1=ID ({AssignedAction.child=current} val1=ID)+;
	public AssignedActionElements getAssignedActionAccess() {
		return (pAssignedAction != null) ? pAssignedAction : (pAssignedAction = new AssignedActionElements());
	}
	
	public ParserRule getAssignedActionRule() {
		return getAssignedActionAccess().getRule();
	}

	//AssignedActionSecond returns AssignedAction:
	//  "#7" val1=ID "kw1" val2=ID;
	public AssignedActionSecondElements getAssignedActionSecondAccess() {
		return (pAssignedActionSecond != null) ? pAssignedActionSecond : (pAssignedActionSecond = new AssignedActionSecondElements());
	}
	
	public ParserRule getAssignedActionSecondRule() {
		return getAssignedActionSecondAccess().getRule();
	}

	//UnassignedAction1:
	//  {UnassignedAction1} "#8" val1=ID val2=ID?;
	public UnassignedAction1Elements getUnassignedAction1Access() {
		return (pUnassignedAction1 != null) ? pUnassignedAction1 : (pUnassignedAction1 = new UnassignedAction1Elements());
	}
	
	public ParserRule getUnassignedAction1Rule() {
		return getUnassignedAction1Access().getRule();
	}

	//UnassignedAction2:
	//  {UnassignedAction2Sub} "#9" val1=ID val2=ID?;
	public UnassignedAction2Elements getUnassignedAction2Access() {
		return (pUnassignedAction2 != null) ? pUnassignedAction2 : (pUnassignedAction2 = new UnassignedAction2Elements());
	}
	
	public ParserRule getUnassignedAction2Rule() {
		return getUnassignedAction2Access().getRule();
	}

	//UnassignedAction3:
	//  "#10" ("kw1" {UnassignedAction2Sub1}|"kw2" {UnassignedAction2Sub2}) val1=ID val2=ID?;
	public UnassignedAction3Elements getUnassignedAction3Access() {
		return (pUnassignedAction3 != null) ? pUnassignedAction3 : (pUnassignedAction3 = new UnassignedAction3Elements());
	}
	
	public ParserRule getUnassignedAction3Rule() {
		return getUnassignedAction3Access().getRule();
	}

	//UnassignedRuleCall1:
	//  "#11" UnassignedRuleCall1Sub val2=ID;
	public UnassignedRuleCall1Elements getUnassignedRuleCall1Access() {
		return (pUnassignedRuleCall1 != null) ? pUnassignedRuleCall1 : (pUnassignedRuleCall1 = new UnassignedRuleCall1Elements());
	}
	
	public ParserRule getUnassignedRuleCall1Rule() {
		return getUnassignedRuleCall1Access().getRule();
	}

	//UnassignedRuleCall1Sub:
	//  val1=ID;
	public UnassignedRuleCall1SubElements getUnassignedRuleCall1SubAccess() {
		return (pUnassignedRuleCall1Sub != null) ? pUnassignedRuleCall1Sub : (pUnassignedRuleCall1Sub = new UnassignedRuleCall1SubElements());
	}
	
	public ParserRule getUnassignedRuleCall1SubRule() {
		return getUnassignedRuleCall1SubAccess().getRule();
	}

	//UnassignedRuleCall2:
	//  "#12" UnassignedRuleCall2Sub val2=ID;
	public UnassignedRuleCall2Elements getUnassignedRuleCall2Access() {
		return (pUnassignedRuleCall2 != null) ? pUnassignedRuleCall2 : (pUnassignedRuleCall2 = new UnassignedRuleCall2Elements());
	}
	
	public ParserRule getUnassignedRuleCall2Rule() {
		return getUnassignedRuleCall2Access().getRule();
	}

	//UnassignedRuleCall2Sub:
	//  {UnassignedRuleCall2SubAction};
	public UnassignedRuleCall2SubElements getUnassignedRuleCall2SubAccess() {
		return (pUnassignedRuleCall2Sub != null) ? pUnassignedRuleCall2Sub : (pUnassignedRuleCall2Sub = new UnassignedRuleCall2SubElements());
	}
	
	public ParserRule getUnassignedRuleCall2SubRule() {
		return getUnassignedRuleCall2SubAccess().getRule();
	}

	//Combination1:
	//  "#13" val1=ID ("kw1" val2=ID ("kw2" val3=ID|val4=ID))?;
	public Combination1Elements getCombination1Access() {
		return (pCombination1 != null) ? pCombination1 : (pCombination1 = new Combination1Elements());
	}
	
	public ParserRule getCombination1Rule() {
		return getCombination1Access().getRule();
	}

	//Combination2:
	//  "#14" val1=ID ("kw1" val2=ID|(val3+=ID val4+=ID)*);
	public Combination2Elements getCombination2Access() {
		return (pCombination2 != null) ? pCombination2 : (pCombination2 = new Combination2Elements());
	}
	
	public ParserRule getCombination2Rule() {
		return getCombination2Access().getRule();
	}

	//Combination3:
	//  "#15" (val1=ID|val2=INT|val3=STRING)*;
	public Combination3Elements getCombination3Access() {
		return (pCombination3 != null) ? pCombination3 : (pCombination3 = new Combination3Elements());
	}
	
	public ParserRule getCombination3Rule() {
		return getCombination3Access().getRule();
	}

	//Combination4:
	//  "#16" ("group" val1+=ID val2+=ID val3+=ID)+;
	public Combination4Elements getCombination4Access() {
		return (pCombination4 != null) ? pCombination4 : (pCombination4 = new Combination4Elements());
	}
	
	public ParserRule getCombination4Rule() {
		return getCombination4Access().getRule();
	}

	//List1:
	//  "#17" val1+=ID ("," val1+=ID)*;
	public List1Elements getList1Access() {
		return (pList1 != null) ? pList1 : (pList1 = new List1Elements());
	}
	
	public ParserRule getList1Rule() {
		return getList1Access().getRule();
	}

	//List2:
	//  "#18" (val1+=ID ("," val1+=ID)*)?;
	public List2Elements getList2Access() {
		return (pList2 != null) ? pList2 : (pList2 = new List2Elements());
	}
	
	public ParserRule getList2Rule() {
		return getList2Access().getRule();
	}

	//List3:
	//  "#19" (val1+=ID ("," val1+=ID)*)|"kw3" val2=ID;
	public List3Elements getList3Access() {
		return (pList3 != null) ? pList3 : (pList3 = new List3Elements());
	}
	
	public ParserRule getList3Rule() {
		return getList3Access().getRule();
	}

	//terminal ID:
	//  "^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//  "0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//  "\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" |
	//  "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//  "/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//  "//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//  (" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//  .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
