/*
* generated by Xtext
*/
package org.eclipse.xtext.linking.lazy.parser.packrat;

import org.eclipse.xtext.parser.packrat.AbstractParserConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumer;

import org.eclipse.xtext.linking.lazy.services.LazyLinkingTestLanguageGrammarAccess;

import org.eclipse.xtext.common.parser.packrat.TerminalsParserConfiguration; 
import org.eclipse.xtext.linking.lazy.parser.packrat.consumers.LazyLinkingTestLanguageModelConsumer;
import org.eclipse.xtext.linking.lazy.parser.packrat.consumers.LazyLinkingTestLanguageTypeConsumer;
import org.eclipse.xtext.linking.lazy.parser.packrat.consumers.LazyLinkingTestLanguagePropertyConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsIDConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsINTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSTRINGConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsML_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsSL_COMMENTConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsWSConsumer;
import org.eclipse.xtext.common.parser.packrat.consumers.TerminalsANY_OTHERConsumer;

public class LazyLinkingTestLanguageParserConfiguration extends AbstractParserConfiguration {

	private final TerminalsParserConfiguration terminalsConfiguration; 
    private LazyLinkingTestLanguageModelConsumer modelConsumer;
    private LazyLinkingTestLanguageTypeConsumer typeConsumer;
    private LazyLinkingTestLanguagePropertyConsumer propertyConsumer;

	private LazyLinkingTestLanguageGrammarAccess grammarAccess;

	public LazyLinkingTestLanguageParserConfiguration(IInternalParserConfiguration configuration, LazyLinkingTestLanguageGrammarAccess grammarAccess) {
		super(configuration);
		this.grammarAccess = grammarAccess;
		this.terminalsConfiguration = new TerminalsParserConfiguration(configuration, null);
	}

	public LazyLinkingTestLanguageModelConsumer getRootConsumer() {
		return modelConsumer;
	} 

	public void createNonTerminalConsumers() {
		getTerminalsConfiguration().createNonTerminalConsumers();
		modelConsumer = new LazyLinkingTestLanguageModelConsumer(
    		this, null
    	);
		typeConsumer = new LazyLinkingTestLanguageTypeConsumer(
    		this, null
    	);
		propertyConsumer = new LazyLinkingTestLanguagePropertyConsumer(
    		this, null
    	);
	}
	
	public void createTerminalConsumers() {
		getTerminalsConfiguration().createTerminalConsumers();
	}
	
	public void configureConsumers() {
		if (grammarAccess == null)
			throw new NullPointerException("grammarAccess may not be null, you call configureConsumers");
		getModelConsumer().setRule(grammarAccess.getModelAccess());
		getTypeConsumer().setRule(grammarAccess.getTypeAccess());
		getPropertyConsumer().setRule(grammarAccess.getPropertyAccess());
		getIdConsumer().setRule(grammarAccess.getIDRule());
		getIntConsumer().setRule(grammarAccess.getINTRule());
		getStringConsumer().setRule(grammarAccess.getSTRINGRule());
		getMlCommentConsumer().setRule(grammarAccess.getML_COMMENTRule());
		getSlCommentConsumer().setRule(grammarAccess.getSL_COMMENTRule());
		getWsConsumer().setRule(grammarAccess.getWSRule());
		getAnyOtherConsumer().setRule(grammarAccess.getANY_OTHERRule());


		getModelConsumer().setTypeConsumer(getTypeConsumer());

		getTypeConsumer().setIdConsumer(getIdConsumer());
		getTypeConsumer().setPropertyConsumer(getPropertyConsumer());

		getPropertyConsumer().setIdConsumer(getIdConsumer());

		getTypeConsumer().setKeyword$6$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.keyword$8$Delimiter);
		getTypeConsumer().setKeyword$11$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.keyword$17$Delimiter);
		getTypeConsumer().setKeyword$17$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.keyword$8$Delimiter);
		getTypeConsumer().setKeyword$22$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.keyword$8$Delimiter);
		getTypeConsumer().setKeyword$27$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.keyword$17$Delimiter);
		getTypeConsumer().setKeyword$30$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.keyword$17$Delimiter);
		getTypeConsumer().setKeyword$2$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.keyword$8$Delimiter);
		getTypeConsumer().setRuleCall$4$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.ruleCall$10$Delimiter);
		getTypeConsumer().setRuleCall$10$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.ruleCall$10$Delimiter);
		getTypeConsumer().setRuleCall$15$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.ruleCall$10$Delimiter);
		getTypeConsumer().setRuleCall$21$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.ruleCall$10$Delimiter);
		getTypeConsumer().setRuleCall$26$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.ruleCall$10$Delimiter);
		getPropertyConsumer().setKeyword$8$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.keyword$17$Delimiter);
		getPropertyConsumer().setRuleCall$5$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.ruleCall$10$Delimiter);
		getPropertyConsumer().setRuleCall$7$Delimiter(org.eclipse.xtext.linking.lazy.parser.packrat.LazyLinkingTestLanguageDelimiters.ruleCall$10$Delimiter);
	}
	
	public TerminalsParserConfiguration getTerminalsConfiguration() {
		return terminalsConfiguration;
	} 
	
    public LazyLinkingTestLanguageModelConsumer getModelConsumer() {
    	return modelConsumer;
    }

    public LazyLinkingTestLanguageTypeConsumer getTypeConsumer() {
    	return typeConsumer;
    }

    public LazyLinkingTestLanguagePropertyConsumer getPropertyConsumer() {
    	return propertyConsumer;
    }

    public TerminalsIDConsumer getIdConsumer() {
    	return getTerminalsConfiguration().getIdConsumer();
    }

    public TerminalsINTConsumer getIntConsumer() {
    	return getTerminalsConfiguration().getIntConsumer();
    }

    public TerminalsSTRINGConsumer getStringConsumer() {
    	return getTerminalsConfiguration().getStringConsumer();
    }

    public TerminalsML_COMMENTConsumer getMlCommentConsumer() {
    	return getTerminalsConfiguration().getMlCommentConsumer();
    }

    public TerminalsSL_COMMENTConsumer getSlCommentConsumer() {
    	return getTerminalsConfiguration().getSlCommentConsumer();
    }

    public TerminalsWSConsumer getWsConsumer() {
    	return getTerminalsConfiguration().getWsConsumer();
    }

    public TerminalsANY_OTHERConsumer getAnyOtherConsumer() {
    	return getTerminalsConfiguration().getAnyOtherConsumer();
    }


	@Override
	public ITerminalConsumer[] getInitialHiddenTerminals() {
		return getTerminalsConfiguration().getInitialHiddenTerminals();
	}
	
}
