/*
* generated by Xtext
*/

package org.eclipse.xtext.valueconverter.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class Bug250313GrammarAccess implements IGrammarAccess {
	
	
	public class ModelElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group c0Group = (Group)cAlternatives.eContents().get(0);
		private final Keyword c00KeywordDigitOne = (Keyword)c0Group.eContents().get(0);
		private final Assignment c01AssignmentValue = (Assignment)c0Group.eContents().get(1);
		private final Alternatives c010Alternatives = (Alternatives)c01AssignmentValue.eContents().get(0);
		private final Keyword c0100KeywordMykeyword1 = (Keyword)c010Alternatives.eContents().get(0);
		private final RuleCall c0101TerminalRuleCallSTRING = (RuleCall)c010Alternatives.eContents().get(1);
		private final RuleCall c0102ParserRuleCallNestedDatatype = (RuleCall)c010Alternatives.eContents().get(2);
		private final RuleCall c0103ParserRuleCallDatatype = (RuleCall)c010Alternatives.eContents().get(3);
		private final RuleCall c0104TerminalRuleCallID = (RuleCall)c010Alternatives.eContents().get(4);
		private final Group c1Group = (Group)cAlternatives.eContents().get(1);
		private final Keyword c10KeywordDigitOnePlusSign = (Keyword)c1Group.eContents().get(0);
		private final Assignment c11AssignmentMultiValue = (Assignment)c1Group.eContents().get(1);
		private final Alternatives c110Alternatives = (Alternatives)c11AssignmentMultiValue.eContents().get(0);
		private final Keyword c1100KeywordMykeyword1 = (Keyword)c110Alternatives.eContents().get(0);
		private final RuleCall c1101TerminalRuleCallSTRING = (RuleCall)c110Alternatives.eContents().get(1);
		private final RuleCall c1102ParserRuleCallNestedDatatype = (RuleCall)c110Alternatives.eContents().get(2);
		private final RuleCall c1103ParserRuleCallDatatype = (RuleCall)c110Alternatives.eContents().get(3);
		private final RuleCall c1104TerminalRuleCallID = (RuleCall)c110Alternatives.eContents().get(4);
		private final Group c2Group = (Group)cAlternatives.eContents().get(2);
		private final Keyword c20KeywordDigitTwo = (Keyword)c2Group.eContents().get(0);
		private final Assignment c21AssignmentValue = (Assignment)c2Group.eContents().get(1);
		private final RuleCall c210TerminalRuleCallSTRING = (RuleCall)c21AssignmentValue.eContents().get(0);
		private final Group c3Group = (Group)cAlternatives.eContents().get(3);
		private final Keyword c30KeywordDigitTwoPlusSign = (Keyword)c3Group.eContents().get(0);
		private final Assignment c31AssignmentMultiValue = (Assignment)c3Group.eContents().get(1);
		private final RuleCall c310TerminalRuleCallSTRING = (RuleCall)c31AssignmentMultiValue.eContents().get(0);
		private final Group c4Group = (Group)cAlternatives.eContents().get(4);
		private final Keyword c40KeywordDigitThree = (Keyword)c4Group.eContents().get(0);
		private final Assignment c41AssignmentValue = (Assignment)c4Group.eContents().get(1);
		private final RuleCall c410ParserRuleCallDatatype = (RuleCall)c41AssignmentValue.eContents().get(0);
		private final Group c5Group = (Group)cAlternatives.eContents().get(5);
		private final Keyword c50KeywordDigitThreePlusSign = (Keyword)c5Group.eContents().get(0);
		private final Assignment c51AssignmentMultiValue = (Assignment)c5Group.eContents().get(1);
		private final RuleCall c510ParserRuleCallDatatype = (RuleCall)c51AssignmentMultiValue.eContents().get(0);
		private final Group c6Group = (Group)cAlternatives.eContents().get(6);
		private final Keyword c60KeywordDigitFour = (Keyword)c6Group.eContents().get(0);
		private final Assignment c61AssignmentValue = (Assignment)c6Group.eContents().get(1);
		private final RuleCall c610ParserRuleCallNestedDatatype = (RuleCall)c61AssignmentValue.eContents().get(0);
		private final Group c7Group = (Group)cAlternatives.eContents().get(7);
		private final Keyword c70KeywordDigitFourPlusSign = (Keyword)c7Group.eContents().get(0);
		private final Assignment c71AssignmentMultiValue = (Assignment)c7Group.eContents().get(1);
		private final RuleCall c710ParserRuleCallNestedDatatype = (RuleCall)c71AssignmentMultiValue.eContents().get(0);
		private final Group c8Group = (Group)cAlternatives.eContents().get(8);
		private final Group c80Group = (Group)c8Group.eContents().get(0);
		private final Keyword c800KeywordContent = (Keyword)c80Group.eContents().get(0);
		private final Assignment c801AssignmentChildren = (Assignment)c80Group.eContents().get(1);
		private final RuleCall c8010ParserRuleCallChild = (RuleCall)c801AssignmentChildren.eContents().get(0);
		private final Group c81Group = (Group)c8Group.eContents().get(1);
		private final Keyword c810KeywordRef = (Keyword)c81Group.eContents().get(0);
		private final Assignment c811AssignmentRef = (Assignment)c81Group.eContents().get(1);
		private final Alternatives c8110Alternatives = (Alternatives)c811AssignmentRef.eContents().get(0);
		private final CrossReference c81100CrossReferenceSTRINGChild1 = (CrossReference)c8110Alternatives.eContents().get(0);
		private final RuleCall c811001TerminalRuleCallSTRING = (RuleCall)c81100CrossReferenceSTRINGChild1.eContents().get(1);
		private final CrossReference c81101CrossReferenceIDChild2 = (CrossReference)c8110Alternatives.eContents().get(1);
		private final RuleCall c811011TerminalRuleCallID = (RuleCall)c81101CrossReferenceIDChild2.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public Group ele0Group() { return c0Group; }

		// not supported
		public Keyword ele00KeywordDigitOne() { return c00KeywordDigitOne; }

		// not supported
		public Assignment ele01AssignmentValue() { return c01AssignmentValue; }

		// not supported
		public Alternatives ele010Alternatives() { return c010Alternatives; }

		// not supported
		public Keyword ele0100KeywordMykeyword1() { return c0100KeywordMykeyword1; }

		// not supported
		public RuleCall ele0101TerminalRuleCallSTRING() { return c0101TerminalRuleCallSTRING; }

		// not supported
		public RuleCall ele0102ParserRuleCallNestedDatatype() { return c0102ParserRuleCallNestedDatatype; }

		// not supported
		public RuleCall ele0103ParserRuleCallDatatype() { return c0103ParserRuleCallDatatype; }

		// not supported
		public RuleCall ele0104TerminalRuleCallID() { return c0104TerminalRuleCallID; }

		// not supported
		public Group ele1Group() { return c1Group; }

		// not supported
		public Keyword ele10KeywordDigitOnePlusSign() { return c10KeywordDigitOnePlusSign; }

		// not supported
		public Assignment ele11AssignmentMultiValue() { return c11AssignmentMultiValue; }

		// not supported
		public Alternatives ele110Alternatives() { return c110Alternatives; }

		// not supported
		public Keyword ele1100KeywordMykeyword1() { return c1100KeywordMykeyword1; }

		// not supported
		public RuleCall ele1101TerminalRuleCallSTRING() { return c1101TerminalRuleCallSTRING; }

		// not supported
		public RuleCall ele1102ParserRuleCallNestedDatatype() { return c1102ParserRuleCallNestedDatatype; }

		// not supported
		public RuleCall ele1103ParserRuleCallDatatype() { return c1103ParserRuleCallDatatype; }

		// not supported
		public RuleCall ele1104TerminalRuleCallID() { return c1104TerminalRuleCallID; }

		// not supported
		public Group ele2Group() { return c2Group; }

		// not supported
		public Keyword ele20KeywordDigitTwo() { return c20KeywordDigitTwo; }

		// not supported
		public Assignment ele21AssignmentValue() { return c21AssignmentValue; }

		// not supported
		public RuleCall ele210TerminalRuleCallSTRING() { return c210TerminalRuleCallSTRING; }

		// not supported
		public Group ele3Group() { return c3Group; }

		// not supported
		public Keyword ele30KeywordDigitTwoPlusSign() { return c30KeywordDigitTwoPlusSign; }

		// not supported
		public Assignment ele31AssignmentMultiValue() { return c31AssignmentMultiValue; }

		// not supported
		public RuleCall ele310TerminalRuleCallSTRING() { return c310TerminalRuleCallSTRING; }

		// not supported
		public Group ele4Group() { return c4Group; }

		// not supported
		public Keyword ele40KeywordDigitThree() { return c40KeywordDigitThree; }

		// not supported
		public Assignment ele41AssignmentValue() { return c41AssignmentValue; }

		// not supported
		public RuleCall ele410ParserRuleCallDatatype() { return c410ParserRuleCallDatatype; }

		// not supported
		public Group ele5Group() { return c5Group; }

		// not supported
		public Keyword ele50KeywordDigitThreePlusSign() { return c50KeywordDigitThreePlusSign; }

		// not supported
		public Assignment ele51AssignmentMultiValue() { return c51AssignmentMultiValue; }

		// not supported
		public RuleCall ele510ParserRuleCallDatatype() { return c510ParserRuleCallDatatype; }

		// not supported
		public Group ele6Group() { return c6Group; }

		// not supported
		public Keyword ele60KeywordDigitFour() { return c60KeywordDigitFour; }

		// not supported
		public Assignment ele61AssignmentValue() { return c61AssignmentValue; }

		// not supported
		public RuleCall ele610ParserRuleCallNestedDatatype() { return c610ParserRuleCallNestedDatatype; }

		// not supported
		public Group ele7Group() { return c7Group; }

		// not supported
		public Keyword ele70KeywordDigitFourPlusSign() { return c70KeywordDigitFourPlusSign; }

		// not supported
		public Assignment ele71AssignmentMultiValue() { return c71AssignmentMultiValue; }

		// not supported
		public RuleCall ele710ParserRuleCallNestedDatatype() { return c710ParserRuleCallNestedDatatype; }

		// not supported
		public Group ele8Group() { return c8Group; }

		// not supported
		public Group ele80Group() { return c80Group; }

		// not supported
		public Keyword ele800KeywordContent() { return c800KeywordContent; }

		// not supported
		public Assignment ele801AssignmentChildren() { return c801AssignmentChildren; }

		// not supported
		public RuleCall ele8010ParserRuleCallChild() { return c8010ParserRuleCallChild; }

		// not supported
		public Group ele81Group() { return c81Group; }

		// not supported
		public Keyword ele810KeywordRef() { return c810KeywordRef; }

		// not supported
		public Assignment ele811AssignmentRef() { return c811AssignmentRef; }

		// not supported
		public Alternatives ele8110Alternatives() { return c8110Alternatives; }

		// not supported
		public CrossReference ele81100CrossReferenceSTRINGChild1() { return c81100CrossReferenceSTRINGChild1; }

		// not supported
		public RuleCall ele811001TerminalRuleCallSTRING() { return c811001TerminalRuleCallSTRING; }

		// not supported
		public CrossReference ele81101CrossReferenceIDChild2() { return c81101CrossReferenceIDChild2; }

		// not supported
		public RuleCall ele811011TerminalRuleCallID() { return c811011TerminalRuleCallID; }
	}

	public class DatatypeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Datatype");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall c0TerminalRuleCallID = (RuleCall)cGroup.eContents().get(0);
		private final Keyword c1KeywordHyphenMinus = (Keyword)cGroup.eContents().get(1);
		private final RuleCall c2TerminalRuleCallID = (RuleCall)cGroup.eContents().get(2);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public RuleCall ele0TerminalRuleCallID() { return c0TerminalRuleCallID; }

		// not supported
		public Keyword ele1KeywordHyphenMinus() { return c1KeywordHyphenMinus; }

		// not supported
		public RuleCall ele2TerminalRuleCallID() { return c2TerminalRuleCallID; }
	}

	public class NestedDatatypeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NestedDatatype");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall c0TerminalRuleCallID = (RuleCall)cGroup.eContents().get(0);
		private final Keyword c1KeywordPlusSign = (Keyword)cGroup.eContents().get(1);
		private final RuleCall c2ParserRuleCallDatatype = (RuleCall)cGroup.eContents().get(2);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Group eleGroup() { return cGroup; }

		// not supported
		public RuleCall ele0TerminalRuleCallID() { return c0TerminalRuleCallID; }

		// not supported
		public Keyword ele1KeywordPlusSign() { return c1KeywordPlusSign; }

		// not supported
		public RuleCall ele2ParserRuleCallDatatype() { return c2ParserRuleCallDatatype; }
	}

	public class ChildElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Child");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall c0ParserRuleCallChild1 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall c1ParserRuleCallChild2 = (RuleCall)cAlternatives.eContents().get(1);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Alternatives eleAlternatives() { return cAlternatives; }

		// not supported
		public RuleCall ele0ParserRuleCallChild1() { return c0ParserRuleCallChild1; }

		// not supported
		public RuleCall ele1ParserRuleCallChild2() { return c1ParserRuleCallChild2; }
	}

	public class Child1Elements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Child1");
		private final Assignment cAssignmentName = (Assignment)rule.eContents().get(1);
		private final RuleCall c0TerminalRuleCallID = (RuleCall)cAssignmentName.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Assignment eleAssignmentName() { return cAssignmentName; }

		// not supported
		public RuleCall ele0TerminalRuleCallID() { return c0TerminalRuleCallID; }
	}

	public class Child2Elements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Child2");
		private final Assignment cAssignmentName = (Assignment)rule.eContents().get(1);
		private final RuleCall c0TerminalRuleCallSTRING = (RuleCall)cAssignmentName.eContents().get(0);
		
		// not supported
		public ParserRule getRule() { return rule; }

		// not supported
		public Assignment eleAssignmentName() { return cAssignmentName; }

		// not supported
		public RuleCall ele0TerminalRuleCallSTRING() { return c0TerminalRuleCallSTRING; }
	}
	
	private ModelElements pModel;
	private DatatypeElements pDatatype;
	private NestedDatatypeElements pNestedDatatype;
	private ChildElements pChild;
	private Child1Elements pChild1;
	private Child2Elements pChild2;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess terminalsGrammarAccess;

	@Inject
	public Bug250313GrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess terminalsGrammarAccess) {
		this.grammarProvider = grammarProvider;
		this.terminalsGrammarAccess = terminalsGrammarAccess;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return terminalsGrammarAccess;
	}

	
	// not supported
	public ModelElements prModel() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	} 

	// not supported
	public DatatypeElements prDatatype() {
		return (pDatatype != null) ? pDatatype : (pDatatype = new DatatypeElements());
	} 

	// not supported
	public NestedDatatypeElements prNestedDatatype() {
		return (pNestedDatatype != null) ? pNestedDatatype : (pNestedDatatype = new NestedDatatypeElements());
	} 

	// not supported
	public ChildElements prChild() {
		return (pChild != null) ? pChild : (pChild = new ChildElements());
	} 

	// not supported
	public Child1Elements prChild1() {
		return (pChild1 != null) ? pChild1 : (pChild1 = new Child1Elements());
	} 

	// not supported
	public Child2Elements prChild2() {
		return (pChild2 != null) ? pChild2 : (pChild2 = new Child2Elements());
	} 

	// not supported
	public TerminalRule trID() {
		return terminalsGrammarAccess.trID();
	} 

	// not supported
	public TerminalRule trINT() {
		return terminalsGrammarAccess.trINT();
	} 

	// not supported
	public TerminalRule trSTRING() {
		return terminalsGrammarAccess.trSTRING();
	} 

	// not supported
	public TerminalRule trML_COMMENT() {
		return terminalsGrammarAccess.trML_COMMENT();
	} 

	// not supported
	public TerminalRule trSL_COMMENT() {
		return terminalsGrammarAccess.trSL_COMMENT();
	} 

	// not supported
	public TerminalRule trWS() {
		return terminalsGrammarAccess.trWS();
	} 

	// not supported
	public TerminalRule trANY_OTHER() {
		return terminalsGrammarAccess.trANY_OTHER();
	} 
}
