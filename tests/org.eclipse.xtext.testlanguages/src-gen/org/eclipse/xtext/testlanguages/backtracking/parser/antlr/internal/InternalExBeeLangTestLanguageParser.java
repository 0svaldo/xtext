package org.eclipse.xtext.testlanguages.backtracking.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.xtext.testlanguages.backtracking.services.ExBeeLangTestLanguageGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalExBeeLangTestLanguageParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KEYWORD_64", "KEYWORD_65", "KEYWORD_62", "KEYWORD_63", "KEYWORD_59", "KEYWORD_60", "KEYWORD_61", "KEYWORD_56", "KEYWORD_57", "KEYWORD_58", "KEYWORD_52", "KEYWORD_53", "KEYWORD_54", "KEYWORD_55", "KEYWORD_50", "KEYWORD_51", "KEYWORD_45", "KEYWORD_46", "KEYWORD_47", "KEYWORD_48", "KEYWORD_49", "KEYWORD_38", "KEYWORD_39", "KEYWORD_40", "KEYWORD_41", "KEYWORD_42", "KEYWORD_43", "KEYWORD_44", "KEYWORD_21", "KEYWORD_22", "KEYWORD_23", "KEYWORD_24", "KEYWORD_25", "KEYWORD_26", "KEYWORD_27", "KEYWORD_28", "KEYWORD_29", "KEYWORD_30", "KEYWORD_31", "KEYWORD_32", "KEYWORD_33", "KEYWORD_34", "KEYWORD_35", "KEYWORD_36", "KEYWORD_37", "KEYWORD_1", "KEYWORD_2", "KEYWORD_3", "KEYWORD_4", "KEYWORD_5", "KEYWORD_6", "KEYWORD_7", "KEYWORD_8", "KEYWORD_9", "KEYWORD_10", "KEYWORD_11", "KEYWORD_12", "KEYWORD_13", "KEYWORD_14", "KEYWORD_15", "KEYWORD_16", "KEYWORD_17", "KEYWORD_18", "KEYWORD_19", "KEYWORD_20", "RULE_DOCUMENTATION", "RULE_HEX", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "Tokens"
    };
    public static final int KEYWORD_7=55;
    public static final int KEYWORD_49=24;
    public static final int KEYWORD_43=30;
    public static final int KEYWORD_21=32;
    public static final int KEYWORD_17=65;
    public static final int KEYWORD_18=66;
    public static final int KEYWORD_24=35;
    public static final int KEYWORD_65=5;
    public static final int RULE_STRING=73;
    public static final int KEYWORD_31=42;
    public static final int KEYWORD_36=47;
    public static final int KEYWORD_2=50;
    public static final int KEYWORD_9=57;
    public static final int KEYWORD_19=67;
    public static final int KEYWORD_23=34;
    public static final int RULE_HEX=70;
    public static final int KEYWORD_30=41;
    public static final int KEYWORD_44=31;
    public static final int KEYWORD_16=64;
    public static final int KEYWORD_58=13;
    public static final int KEYWORD_22=33;
    public static final int KEYWORD_57=12;
    public static final int KEYWORD_28=39;
    public static final int KEYWORD_61=10;
    public static final int KEYWORD_50=18;
    public static final int RULE_INT=72;
    public static final int KEYWORD_13=61;
    public static final int KEYWORD_35=46;
    public static final int KEYWORD_5=53;
    public static final int KEYWORD_62=6;
    public static final int KEYWORD_51=19;
    public static final int KEYWORD_47=22;
    public static final int KEYWORD_34=45;
    public static final int KEYWORD_12=60;
    public static final int KEYWORD_8=56;
    public static final int KEYWORD_37=48;
    public static final int KEYWORD_56=11;
    public static final int KEYWORD_48=23;
    public static final int KEYWORD_27=38;
    public static final int KEYWORD_32=43;
    public static final int KEYWORD_53=15;
    public static final int KEYWORD_38=25;
    public static final int RULE_ML_COMMENT=74;
    public static final int RULE_ID=71;
    public static final int KEYWORD_10=58;
    public static final int KEYWORD_29=40;
    public static final int KEYWORD_1=49;
    public static final int KEYWORD_39=26;
    public static final int KEYWORD_46=21;
    public static final int KEYWORD_54=16;
    public static final int KEYWORD_55=17;
    public static final int KEYWORD_45=20;
    public static final int KEYWORD_52=14;
    public static final int KEYWORD_33=44;
    public static final int KEYWORD_11=59;
    public static final int KEYWORD_64=4;
    public static final int KEYWORD_4=52;
    public static final int RULE_WS=76;
    public static final int KEYWORD_20=68;
    public static final int KEYWORD_14=62;
    public static final int EOF=-1;
    public static final int KEYWORD_42=29;
    public static final int KEYWORD_6=54;
    public static final int RULE_DOCUMENTATION=69;
    public static final int Tokens=78;
    public static final int KEYWORD_25=36;
    public static final int RULE_ANY_OTHER=77;
    public static final int KEYWORD_41=28;
    public static final int KEYWORD_15=63;
    public static final int KEYWORD_59=8;
    public static final int KEYWORD_60=9;
    public static final int RULE_SL_COMMENT=75;
    public static final int KEYWORD_63=7;
    public static final int KEYWORD_26=37;
    public static final int KEYWORD_3=51;
    public static final int KEYWORD_40=27;

        public InternalExBeeLangTestLanguageParser(TokenStream input) {
            super(input);
            ruleMemo = new HashMap[259+1];
         }
        

    public String[] getTokenNames() { return tokenNames; }
    public String getGrammarFileName() { return "../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     

     	private ExBeeLangTestLanguageGrammarAccess grammarAccess;
     	
        public InternalExBeeLangTestLanguageParser(TokenStream input, IAstFactory factory, ExBeeLangTestLanguageGrammarAccess grammarAccess) {
            this(input);
            this.factory = factory;
            registerRules(grammarAccess.getGrammar());
            this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected InputStream getTokenFile() {
        	ClassLoader classLoader = getClass().getClassLoader();
        	return classLoader.getResourceAsStream("org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.tokens");
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "DelegateModel";	
       	} 
       	   	
       	@Override
       	protected ExBeeLangTestLanguageGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start entryRuleDelegateModel
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:79:1: entryRuleDelegateModel returns [EObject current=null] : iv_ruleDelegateModel= ruleDelegateModel EOF ;
    public final EObject entryRuleDelegateModel() throws RecognitionException {
        EObject current = null;
        int entryRuleDelegateModel_StartIndex = input.index();
        EObject iv_ruleDelegateModel = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 1) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:80:2: (iv_ruleDelegateModel= ruleDelegateModel EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:81:2: iv_ruleDelegateModel= ruleDelegateModel EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getDelegateModelRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDelegateModel_in_entryRuleDelegateModel80);
            iv_ruleDelegateModel=ruleDelegateModel();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleDelegateModel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDelegateModel90); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 1, entryRuleDelegateModel_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleDelegateModel


    // $ANTLR start ruleDelegateModel
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:88:1: ruleDelegateModel returns [EObject current=null] : this_Model_0= ruleModel ;
    public final EObject ruleDelegateModel() throws RecognitionException {
        EObject current = null;
        int ruleDelegateModel_StartIndex = input.index();
        EObject this_Model_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 2) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:93:6: (this_Model_0= ruleModel )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:95:2: this_Model_0= ruleModel
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getDelegateModelAccess().getModelParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleModel_in_ruleDelegateModel139);
            this_Model_0=ruleModel();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_Model_0;
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 2, ruleDelegateModel_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleDelegateModel


    // $ANTLR start entryRuleModel
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:114:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;
        int entryRuleModel_StartIndex = input.index();
        EObject iv_ruleModel = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 3) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:115:2: (iv_ruleModel= ruleModel EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:116:2: iv_ruleModel= ruleModel EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getModelRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleModel_in_entryRuleModel172);
            iv_ruleModel=ruleModel();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleModel182); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 3, entryRuleModel_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleModel


    // $ANTLR start ruleModel
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:123:1: ruleModel returns [EObject current=null] : ( ( (lv_units_0_0= ruleUnit ) )* | ( (lv_functions_1_0= ruleFunction ) )* ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;
        int ruleModel_StartIndex = input.index();
        EObject lv_units_0_0 = null;

        EObject lv_functions_1_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 4) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:128:6: ( ( ( (lv_units_0_0= ruleUnit ) )* | ( (lv_functions_1_0= ruleFunction ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:129:1: ( ( (lv_units_0_0= ruleUnit ) )* | ( (lv_functions_1_0= ruleFunction ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:129:1: ( ( (lv_units_0_0= ruleUnit ) )* | ( (lv_functions_1_0= ruleFunction ) )* )
            int alt3=2;
            switch ( input.LA(1) ) {
            case RULE_DOCUMENTATION:
                {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==KEYWORD_59||LA3_1==KEYWORD_50||LA3_1==RULE_ID) ) {
                    alt3=2;
                }
                else if ( (LA3_1==KEYWORD_47) ) {
                    alt3=1;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("129:1: ( ( (lv_units_0_0= ruleUnit ) )* | ( (lv_functions_1_0= ruleFunction ) )* )", 3, 1, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_47:
                {
                alt3=1;
                }
                break;
            case EOF:
                {
                int LA3_3 = input.LA(2);

                if ( (synpred2()) ) {
                    alt3=1;
                }
                else if ( (true) ) {
                    alt3=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("129:1: ( ( (lv_units_0_0= ruleUnit ) )* | ( (lv_functions_1_0= ruleFunction ) )* )", 3, 3, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_59:
            case KEYWORD_50:
            case RULE_ID:
                {
                alt3=2;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("129:1: ( ( (lv_units_0_0= ruleUnit ) )* | ( (lv_functions_1_0= ruleFunction ) )* )", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:129:2: ( (lv_units_0_0= ruleUnit ) )*
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:129:2: ( (lv_units_0_0= ruleUnit ) )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==KEYWORD_47||LA1_0==RULE_DOCUMENTATION) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:130:1: (lv_units_0_0= ruleUnit )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:130:1: (lv_units_0_0= ruleUnit )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:131:3: lv_units_0_0= ruleUnit
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleUnit_in_ruleModel228);
                    	    lv_units_0_0=ruleUnit();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"units",
                    	      	        		lv_units_0_0, 
                    	      	        		"Unit", 
                    	      	        		currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:154:6: ( (lv_functions_1_0= ruleFunction ) )*
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:154:6: ( (lv_functions_1_0= ruleFunction ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==KEYWORD_59||LA2_0==KEYWORD_50||LA2_0==RULE_DOCUMENTATION||LA2_0==RULE_ID) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:155:1: (lv_functions_1_0= ruleFunction )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:155:1: (lv_functions_1_0= ruleFunction )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:156:3: lv_functions_1_0= ruleFunction
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleFunction_in_ruleModel256);
                    	    lv_functions_1_0=ruleFunction();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"functions",
                    	      	        		lv_functions_1_0, 
                    	      	        		"Function", 
                    	      	        		currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 4, ruleModel_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleModel


    // $ANTLR start entryRuleUnit
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:186:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;
        int entryRuleUnit_StartIndex = input.index();
        EObject iv_ruleUnit = null;


         
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getUnitAccess().getUnorderedGroup_7()
        		);
        	
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 5) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:192:2: (iv_ruleUnit= ruleUnit EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:193:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnitRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleUnit_in_entryRuleUnit298);
            iv_ruleUnit=ruleUnit();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleUnit308); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 5, entryRuleUnit_StartIndex); }

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleUnit


    // $ANTLR start ruleUnit
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:203:1: ruleUnit returns [EObject current=null] : ( () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20 ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;
        int ruleUnit_StartIndex = input.index();
        Token lv_documentation_1_0=null;
        Token lv_name_3_0=null;
        Token lv_version_5_0=null;
        EObject lv_implements_7_0 = null;

        EObject lv_implements_9_0 = null;

        AntlrDatatypeRuleToken lv_sourceLocation_14_0 = null;

        AntlrDatatypeRuleToken lv_outputLocation_18_0 = null;

        EObject lv_providedCapabilities_22_0 = null;

        EObject lv_requiredCapabilities_26_0 = null;

        EObject lv_metaRequiredCapabilities_31_0 = null;

        EObject lv_functions_33_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getUnitAccess().getUnorderedGroup_7()
        		);
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 6) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:211:6: ( ( () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:212:1: ( () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:212:1: ( () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:212:2: () ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )? KEYWORD_47 ( (lv_name_3_0= RULE_ID ) )? ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )? ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )? KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) ) KEYWORD_20
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:212:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:213:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getUnitAccess().getUnitAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getUnitAccess().getUnitAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:226:2: ( (lv_documentation_1_0= RULE_DOCUMENTATION ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_DOCUMENTATION) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:227:1: (lv_documentation_1_0= RULE_DOCUMENTATION )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:227:1: (lv_documentation_1_0= RULE_DOCUMENTATION )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:228:3: lv_documentation_1_0= RULE_DOCUMENTATION
                    {
                    lv_documentation_1_0=(Token)input.LT(1);
                    match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_RULE_DOCUMENTATION_in_ruleUnit366); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0(), "documentation"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"documentation",
                      	        		lv_documentation_1_0, 
                      	        		"DOCUMENTATION", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleUnit383); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getUnitKeyword_2(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:255:1: ( (lv_name_3_0= RULE_ID ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_ID) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:256:1: (lv_name_3_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:256:1: (lv_name_3_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:257:3: lv_name_3_0= RULE_ID
                    {
                    lv_name_3_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleUnit400); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"name",
                      	        		lv_name_3_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:279:3: ( KEYWORD_58 ( (lv_version_5_0= RULE_ID ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==KEYWORD_58) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:280:2: KEYWORD_58 ( (lv_version_5_0= RULE_ID ) )
                    {
                    match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_ruleUnit418); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnitAccess().getVersionKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:284:1: ( (lv_version_5_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:285:1: (lv_version_5_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:285:1: (lv_version_5_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:286:3: lv_version_5_0= RULE_ID
                    {
                    lv_version_5_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleUnit435); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0(), "version"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"version",
                      	        		lv_version_5_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:308:4: ( KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )* )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==KEYWORD_62) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:309:2: KEYWORD_62 ( (lv_implements_7_0= ruleSimpleTypeRef ) ) ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )*
                    {
                    match(input,KEYWORD_62,FollowSets000.FOLLOW_KEYWORD_62_in_ruleUnit454); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnitAccess().getImplementsKeyword_5_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:313:1: ( (lv_implements_7_0= ruleSimpleTypeRef ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:314:1: (lv_implements_7_0= ruleSimpleTypeRef )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:314:1: (lv_implements_7_0= ruleSimpleTypeRef )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:315:3: lv_implements_7_0= ruleSimpleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleSimpleTypeRef_in_ruleUnit475);
                    lv_implements_7_0=ruleSimpleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"implements",
                      	        		lv_implements_7_0, 
                      	        		"SimpleTypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:337:2: ( KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==KEYWORD_7) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:338:2: KEYWORD_7 ( (lv_implements_9_0= ruleSimpleTypeRef ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleUnit487); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:342:1: ( (lv_implements_9_0= ruleSimpleTypeRef ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:343:1: (lv_implements_9_0= ruleSimpleTypeRef )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:343:1: (lv_implements_9_0= ruleSimpleTypeRef )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:344:3: lv_implements_9_0= ruleSimpleTypeRef
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleSimpleTypeRef_in_ruleUnit508);
                    	    lv_implements_9_0=ruleSimpleTypeRef();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"implements",
                    	      	        		lv_implements_9_0, 
                    	      	        		"SimpleTypeRef", 
                    	      	        		currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }

            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleUnit523); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:371:1: ( ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:373:1: ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:373:1: ( ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:374:2: ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:377:2: ( ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:378:3: ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )*
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:378:3: ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) | ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) ) )*
            loop13:
            do {
                int alt13=7;
                int LA13_0 = input.LA(1);

                if ( LA13_0 ==KEYWORD_55 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                    alt13=1;
                }
                else if ( LA13_0 ==KEYWORD_54 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                    alt13=2;
                }
                else if ( LA13_0 ==KEYWORD_60 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                    alt13=3;
                }
                else if ( (LA13_0==KEYWORD_61) ) {
                    int LA13_5 = input.LA(2);

                    if ( LA13_5 ==KEYWORD_41 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                        alt13=5;
                    }
                    else if ( LA13_5 ==KEYWORD_11 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                        alt13=4;
                    }


                }
                else if ( LA13_0 ==RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                    alt13=6;
                }
                else if ( LA13_0 ==RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                    alt13=6;
                }
                else if ( LA13_0 ==KEYWORD_50 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                    alt13=6;
                }
                else if ( LA13_0 ==KEYWORD_59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                    alt13=6;
                }


                switch (alt13) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:380:4: ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:380:4: ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:381:5: {...}? => ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:381:101: ( ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:382:6: ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:385:6: ( KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:386:2: KEYWORD_55 KEYWORD_11 ( (lv_sourceLocation_14_0= rulePath ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_55,FollowSets000.FOLLOW_KEYWORD_55_in_ruleUnit577); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit588); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:395:1: ( (lv_sourceLocation_14_0= rulePath ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:396:1: (lv_sourceLocation_14_0= rulePath )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:396:1: (lv_sourceLocation_14_0= rulePath )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:397:3: lv_sourceLocation_14_0= rulePath
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_rulePath_in_ruleUnit609);
            	    lv_sourceLocation_14_0=rulePath();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"sourceLocation",
            	      	        		lv_sourceLocation_14_0, 
            	      	        		"Path", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit620); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:431:4: ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:431:4: ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:432:5: {...}? => ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:432:101: ( ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:433:6: ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:436:6: ( KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:437:2: KEYWORD_54 KEYWORD_11 ( (lv_outputLocation_18_0= rulePath ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_54,FollowSets000.FOLLOW_KEYWORD_54_in_ruleUnit683); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit694); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:446:1: ( (lv_outputLocation_18_0= rulePath ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:447:1: (lv_outputLocation_18_0= rulePath )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:447:1: (lv_outputLocation_18_0= rulePath )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:448:3: lv_outputLocation_18_0= rulePath
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_rulePath_in_ruleUnit715);
            	    lv_outputLocation_18_0=rulePath();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"outputLocation",
            	      	        		lv_outputLocation_18_0, 
            	      	        		"Path", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit726); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:482:4: ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:482:4: ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:483:5: {...}? => ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:483:101: ( ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+ )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:484:6: ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:487:6: ( KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12 )+
            	    int cnt9=0;
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==KEYWORD_60) ) {
            	            int LA9_4 = input.LA(2);

            	            if ( (synpred11()) ) {
            	                alt9=1;
            	            }


            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:488:2: KEYWORD_60 KEYWORD_11 ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) ) KEYWORD_12
            	    	    {
            	    	    match(input,KEYWORD_60,FollowSets000.FOLLOW_KEYWORD_60_in_ruleUnit789); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0(), null); 
            	    	          
            	    	    }
            	    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit800); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_2_1(), null); 
            	    	          
            	    	    }
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:497:1: ( (lv_providedCapabilities_22_0= ruleProvidedCapability ) )
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:498:1: (lv_providedCapabilities_22_0= ruleProvidedCapability )
            	    	    {
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:498:1: (lv_providedCapabilities_22_0= ruleProvidedCapability )
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:499:3: lv_providedCapabilities_22_0= ruleProvidedCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_ruleProvidedCapability_in_ruleUnit821);
            	    	    lv_providedCapabilities_22_0=ruleProvidedCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        try {
            	    	      	       		add(
            	    	      	       			current, 
            	    	      	       			"providedCapabilities",
            	    	      	        		lv_providedCapabilities_22_0, 
            	    	      	        		"ProvidedCapability", 
            	    	      	        		currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }

            	    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit832); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt9 >= 1 ) break loop9;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(9, input);
            	                throw eee;
            	        }
            	        cnt9++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:533:4: ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:533:4: ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:534:5: {...}? => ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:534:101: ( ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:535:6: ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:538:6: ( KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12 )+
            	    int cnt10=0;
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==KEYWORD_61) ) {
            	            int LA10_5 = input.LA(2);

            	            if ( (synpred13()) ) {
            	                alt10=1;
            	            }


            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:539:2: KEYWORD_61 KEYWORD_11 ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) ) KEYWORD_12
            	    	    {
            	    	    match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_ruleUnit896); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0(), null); 
            	    	          
            	    	    }
            	    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit907); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_3_1(), null); 
            	    	          
            	    	    }
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:548:1: ( (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability ) )
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:549:1: (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability )
            	    	    {
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:549:1: (lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability )
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:550:3: lv_requiredCapabilities_26_0= ruleAliasedRequiredCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_ruleAliasedRequiredCapability_in_ruleUnit928);
            	    	    lv_requiredCapabilities_26_0=ruleAliasedRequiredCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        try {
            	    	      	       		add(
            	    	      	       			current, 
            	    	      	       			"requiredCapabilities",
            	    	      	        		lv_requiredCapabilities_26_0, 
            	    	      	        		"AliasedRequiredCapability", 
            	    	      	        		currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }

            	    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit939); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt10 >= 1 ) break loop10;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(10, input);
            	                throw eee;
            	        }
            	        cnt10++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:584:4: ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:584:4: ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:585:5: {...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:585:101: ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+ )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:586:6: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:589:6: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12 )+
            	    int cnt11=0;
            	    loop11:
            	    do {
            	        int alt11=2;
            	        int LA11_0 = input.LA(1);

            	        if ( (LA11_0==KEYWORD_61) ) {
            	            int LA11_5 = input.LA(2);

            	            if ( (synpred15()) ) {
            	                alt11=1;
            	            }


            	        }


            	        switch (alt11) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:590:2: KEYWORD_61 KEYWORD_41 KEYWORD_11 ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) ) KEYWORD_12
            	    	    {
            	    	    match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_ruleUnit1003); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0(), null); 
            	    	          
            	    	    }
            	    	    match(input,KEYWORD_41,FollowSets000.FOLLOW_KEYWORD_41_in_ruleUnit1014); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1(), null); 
            	    	          
            	    	    }
            	    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleUnit1025); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getColonKeyword_7_4_2(), null); 
            	    	          
            	    	    }
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:604:1: ( (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability ) )
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:605:1: (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability )
            	    	    {
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:605:1: (lv_metaRequiredCapabilities_31_0= ruleRequiredCapability )
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:606:3: lv_metaRequiredCapabilities_31_0= ruleRequiredCapability
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_ruleRequiredCapability_in_ruleUnit1046);
            	    	    lv_metaRequiredCapabilities_31_0=ruleRequiredCapability();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        try {
            	    	      	       		add(
            	    	      	       			current, 
            	    	      	       			"metaRequiredCapabilities",
            	    	      	        		lv_metaRequiredCapabilities_31_0, 
            	    	      	        		"RequiredCapability", 
            	    	      	        		currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }

            	    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleUnit1057); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	              createLeafNode(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt11 >= 1 ) break loop11;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(11, input);
            	                throw eee;
            	        }
            	        cnt11++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:640:4: ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:640:4: ({...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:641:5: {...}? => ( ( (lv_functions_33_0= ruleFunction ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUnit", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:641:101: ( ( (lv_functions_33_0= ruleFunction ) )+ )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:642:6: ( (lv_functions_33_0= ruleFunction ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:645:6: ( (lv_functions_33_0= ruleFunction ) )+
            	    int cnt12=0;
            	    loop12:
            	    do {
            	        int alt12=2;
            	        switch ( input.LA(1) ) {
            	        case RULE_DOCUMENTATION:
            	            {
            	            int LA12_6 = input.LA(2);

            	            if ( (synpred17()) ) {
            	                alt12=1;
            	            }


            	            }
            	            break;
            	        case RULE_ID:
            	            {
            	            int LA12_7 = input.LA(2);

            	            if ( (synpred17()) ) {
            	                alt12=1;
            	            }


            	            }
            	            break;
            	        case KEYWORD_50:
            	            {
            	            int LA12_8 = input.LA(2);

            	            if ( (synpred17()) ) {
            	                alt12=1;
            	            }


            	            }
            	            break;
            	        case KEYWORD_59:
            	            {
            	            int LA12_9 = input.LA(2);

            	            if ( (synpred17()) ) {
            	                alt12=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt12) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:646:1: (lv_functions_33_0= ruleFunction )
            	    	    {
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:646:1: (lv_functions_33_0= ruleFunction )
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:647:3: lv_functions_33_0= ruleFunction
            	    	    {
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0(), currentNode); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_ruleFunction_in_ruleUnit1130);
            	    	    lv_functions_33_0=ruleFunction();
            	    	    _fsp--;
            	    	    if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = factory.create(grammarAccess.getUnitRule().getType().getClassifier());
            	    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	    	      	        }
            	    	      	        try {
            	    	      	       		add(
            	    	      	       			current, 
            	    	      	       			"functions",
            	    	      	        		lv_functions_33_0, 
            	    	      	        		"Function", 
            	    	      	        		currentNode);
            	    	      	        } catch (ValueConverterException vce) {
            	    	      				handleValueConverterException(vce);
            	    	      	        }
            	    	      	        currentNode = currentNode.getParent();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt12 >= 1 ) break loop12;
            	    	    if (backtracking>0) {failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(12, input);
            	                throw eee;
            	        }
            	        cnt12++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getUnitAccess().getUnorderedGroup_7());

            }

            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleUnit1181); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 6, ruleUnit_StartIndex); }

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end ruleUnit


    // $ANTLR start entryRuleProvidedCapability
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:699:1: entryRuleProvidedCapability returns [EObject current=null] : iv_ruleProvidedCapability= ruleProvidedCapability EOF ;
    public final EObject entryRuleProvidedCapability() throws RecognitionException {
        EObject current = null;
        int entryRuleProvidedCapability_StartIndex = input.index();
        EObject iv_ruleProvidedCapability = null;


         
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()
        		);
        	
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 7) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:705:2: (iv_ruleProvidedCapability= ruleProvidedCapability EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:706:2: iv_ruleProvidedCapability= ruleProvidedCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getProvidedCapabilityRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability1226);
            iv_ruleProvidedCapability=ruleProvidedCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleProvidedCapability; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleProvidedCapability1236); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 7, entryRuleProvidedCapability_StartIndex); }

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleProvidedCapability


    // $ANTLR start ruleProvidedCapability
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:716:1: ruleProvidedCapability returns [EObject current=null] : ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )? ) ;
    public final EObject ruleProvidedCapability() throws RecognitionException {
        EObject current = null;
        int ruleProvidedCapability_StartIndex = input.index();
        Token lv_nameSpace_1_0=null;
        Token lv_name_11_0=null;
        Token lv_version_15_0=null;
        EObject lv_condExpr_7_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()
        		);
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 8) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:724:6: ( ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )? ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:725:1: ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )? )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:725:1: ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )? )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:725:2: () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )?
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:725:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:726:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:739:2: ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_ID) ) {
                alt14=1;
            }
            else if ( (LA14_0==KEYWORD_47) ) {
                alt14=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("739:2: ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 )", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:739:3: ( (lv_nameSpace_1_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:739:3: ( (lv_nameSpace_1_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:740:1: (lv_nameSpace_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:740:1: (lv_nameSpace_1_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:741:3: lv_nameSpace_1_0= RULE_ID
                    {
                    lv_nameSpace_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleProvidedCapability1295); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0(), "nameSpace"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"nameSpace",
                      	        		lv_nameSpace_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:765:2: KEYWORD_47
                    {
                    match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleProvidedCapability1317); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:769:2: ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20 )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==KEYWORD_18) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:770:2: KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) ) KEYWORD_20
                    {
                    match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleProvidedCapability1330); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:774:1: ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:776:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:776:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:777:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?)
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:780:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?)
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:781:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+ {...}?
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:781:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) ) )+
                    int cnt15=0;
                    loop15:
                    do {
                        int alt15=4;
                        int LA15_0 = input.LA(1);

                        if ( LA15_0 ==KEYWORD_48 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                            alt15=1;
                        }
                        else if ( LA15_0 ==KEYWORD_45 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                            alt15=2;
                        }
                        else if ( LA15_0 ==KEYWORD_58 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                            alt15=3;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:783:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:783:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:784:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                    	        if (backtracking>0) {failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleProvidedCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:784:117: ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:785:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:788:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12 )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:789:2: KEYWORD_48 KEYWORD_11 ( (lv_condExpr_7_0= ruleExpression ) ) KEYWORD_12
                    	    {
                    	    match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_ruleProvidedCapability1384); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0(), null); 
                    	          
                    	    }
                    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleProvidedCapability1395); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:798:1: ( (lv_condExpr_7_0= ruleExpression ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:799:1: (lv_condExpr_7_0= ruleExpression )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:799:1: (lv_condExpr_7_0= ruleExpression )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:800:3: lv_condExpr_7_0= ruleExpression
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleProvidedCapability1416);
                    	    lv_condExpr_7_0=ruleExpression();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        try {
                    	      	       		set(
                    	      	       			current, 
                    	      	       			"condExpr",
                    	      	        		lv_condExpr_7_0, 
                    	      	        		"Expression", 
                    	      	        		currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleProvidedCapability1427); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3(), null); 
                    	          
                    	    }

                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:834:4: ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:834:4: ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:835:5: {...}? => ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                    	        if (backtracking>0) {failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleProvidedCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:835:117: ( ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:836:6: ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:839:6: ( KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12 )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:840:2: KEYWORD_45 KEYWORD_11 ( (lv_name_11_0= RULE_ID ) ) KEYWORD_12
                    	    {
                    	    match(input,KEYWORD_45,FollowSets000.FOLLOW_KEYWORD_45_in_ruleProvidedCapability1490); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0(), null); 
                    	          
                    	    }
                    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleProvidedCapability1501); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:849:1: ( (lv_name_11_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:850:1: (lv_name_11_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:850:1: (lv_name_11_0= RULE_ID )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:851:3: lv_name_11_0= RULE_ID
                    	    {
                    	    lv_name_11_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleProvidedCapability1518); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0(), "name"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		set(
                    	      	       			current, 
                    	      	       			"name",
                    	      	        		lv_name_11_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleProvidedCapability1534); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3(), null); 
                    	          
                    	    }

                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:885:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:885:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:886:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                    	        if (backtracking>0) {failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleProvidedCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)");
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:886:117: ( ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:887:6: ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:890:6: ( KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12 )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:891:2: KEYWORD_58 KEYWORD_11 ( (lv_version_15_0= RULE_ID ) ) KEYWORD_12
                    	    {
                    	    match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_ruleProvidedCapability1597); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0(), null); 
                    	          
                    	    }
                    	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleProvidedCapability1608); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:900:1: ( (lv_version_15_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:901:1: (lv_version_15_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:901:1: (lv_version_15_0= RULE_ID )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:902:3: lv_version_15_0= RULE_ID
                    	    {
                    	    lv_version_15_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleProvidedCapability1625); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0(), "version"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getProvidedCapabilityRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		set(
                    	      	       			current, 
                    	      	       			"version",
                    	      	        		lv_version_15_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleProvidedCapability1641); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3(), null); 
                    	          
                    	    }

                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt15 >= 1 ) break loop15;
                    	    if (backtracking>0) {failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(15, input);
                                throw eee;
                        }
                        cnt15++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()) ) {
                        if (backtracking>0) {failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleProvidedCapability", "getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1())");
                    }

                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());

                    }

                    match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleProvidedCapability1698); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2(), null); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 8, ruleProvidedCapability_StartIndex); }

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end ruleProvidedCapability


    // $ANTLR start entryRuleAliasedRequiredCapability
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:960:1: entryRuleAliasedRequiredCapability returns [EObject current=null] : iv_ruleAliasedRequiredCapability= ruleAliasedRequiredCapability EOF ;
    public final EObject entryRuleAliasedRequiredCapability() throws RecognitionException {
        EObject current = null;
        int entryRuleAliasedRequiredCapability_StartIndex = input.index();
        EObject iv_ruleAliasedRequiredCapability = null;


         
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()
        		);
        	
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 9) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:966:2: (iv_ruleAliasedRequiredCapability= ruleAliasedRequiredCapability EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:967:2: iv_ruleAliasedRequiredCapability= ruleAliasedRequiredCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAliasedRequiredCapabilityRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAliasedRequiredCapability_in_entryRuleAliasedRequiredCapability1745);
            iv_ruleAliasedRequiredCapability=ruleAliasedRequiredCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAliasedRequiredCapability; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAliasedRequiredCapability1755); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 9, entryRuleAliasedRequiredCapability_StartIndex); }

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleAliasedRequiredCapability


    // $ANTLR start ruleAliasedRequiredCapability
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:977:1: ruleAliasedRequiredCapability returns [EObject current=null] : ( ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) ) ;
    public final EObject ruleAliasedRequiredCapability() throws RecognitionException {
        EObject current = null;
        int ruleAliasedRequiredCapability_StartIndex = input.index();
        Token lv_nameSpace_0_0=null;
        Token lv_name_2_0=null;
        Token lv_alias_4_0=null;
        Token lv_greedy_11_0=null;
        Token lv_min_15_0=null;
        Token lv_max_19_0=null;
        Token lv_versionRange_23_0=null;
        EObject lv_condExpr_9_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()
        		);
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 10) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:985:6: ( ( ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:986:1: ( ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:986:1: ( ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:986:2: ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_2_0= RULE_ID ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:986:2: ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID) ) {
                alt17=1;
            }
            else if ( (LA17_0==KEYWORD_47) ) {
                alt17=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("986:2: ( ( (lv_nameSpace_0_0= RULE_ID ) ) | KEYWORD_47 )", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:986:3: ( (lv_nameSpace_0_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:986:3: ( (lv_nameSpace_0_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:987:1: (lv_nameSpace_0_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:987:1: (lv_nameSpace_0_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:988:3: lv_nameSpace_0_0= RULE_ID
                    {
                    lv_nameSpace_0_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1802); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0(), "nameSpace"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"nameSpace",
                      	        		lv_nameSpace_0_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1012:2: KEYWORD_47
                    {
                    match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleAliasedRequiredCapability1824); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1016:2: ( (lv_name_2_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1017:1: (lv_name_2_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1017:1: (lv_name_2_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1018:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1842); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_2_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1040:2: ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==KEYWORD_35) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1041:2: KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) )
                    {
                    match(input,KEYWORD_35,FollowSets000.FOLLOW_KEYWORD_35_in_ruleAliasedRequiredCapability1859); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1045:1: ( (lv_alias_4_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1046:1: (lv_alias_4_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1046:1: (lv_alias_4_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1047:3: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1876); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0(), "alias"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"alias",
                      	        		lv_alias_4_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1069:4: ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1070:2: KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20
            {
            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleAliasedRequiredCapability1895); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1074:1: ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1076:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1076:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1077:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1080:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1081:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )*
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1081:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) ) )*
            loop19:
            do {
                int alt19=6;
                int LA19_0 = input.LA(1);

                if ( LA19_0 ==KEYWORD_48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                    alt19=1;
                }
                else if ( LA19_0 ==KEYWORD_53 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                    alt19=2;
                }
                else if ( LA19_0 ==KEYWORD_65 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                    alt19=3;
                }
                else if ( LA19_0 ==KEYWORD_64 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                    alt19=4;
                }
                else if ( LA19_0 ==KEYWORD_58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                    alt19=5;
                }


                switch (alt19) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1083:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1083:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1084:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1084:124: ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1085:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1088:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1089:2: KEYWORD_48 KEYWORD_11 ( (lv_condExpr_9_0= ruleExpression ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_ruleAliasedRequiredCapability1949); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability1960); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1098:1: ( (lv_condExpr_9_0= ruleExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1099:1: (lv_condExpr_9_0= ruleExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1099:1: (lv_condExpr_9_0= ruleExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1100:3: lv_condExpr_9_0= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleAliasedRequiredCapability1981);
            	    lv_condExpr_9_0=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"condExpr",
            	      	        		lv_condExpr_9_0, 
            	      	        		"Expression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability1992); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1134:4: ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1134:4: ({...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1135:5: {...}? => ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1135:124: ( ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1136:6: ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1139:6: ( ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1139:7: ( (lv_greedy_11_0= KEYWORD_53 ) ) KEYWORD_12
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1139:7: ( (lv_greedy_11_0= KEYWORD_53 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1140:1: (lv_greedy_11_0= KEYWORD_53 )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1140:1: (lv_greedy_11_0= KEYWORD_53 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1141:3: lv_greedy_11_0= KEYWORD_53
            	    {
            	    lv_greedy_11_0=(Token)input.LT(1);
            	    match(input,KEYWORD_53,FollowSets000.FOLLOW_KEYWORD_53_in_ruleAliasedRequiredCapability2063); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0(), "greedy"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "greedy", true, "greedy", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2087); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1173:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1173:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1174:5: {...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1174:124: ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1175:6: ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1178:6: ( KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1179:2: KEYWORD_65 KEYWORD_11 ( (lv_min_15_0= RULE_INT ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_65,FollowSets000.FOLLOW_KEYWORD_65_in_ruleAliasedRequiredCapability2150); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2161); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1188:1: ( (lv_min_15_0= RULE_INT ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1189:1: (lv_min_15_0= RULE_INT )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1189:1: (lv_min_15_0= RULE_INT )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1190:3: lv_min_15_0= RULE_INT
            	    {
            	    lv_min_15_0=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleAliasedRequiredCapability2178); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0(), "min"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"min",
            	      	        		lv_min_15_0, 
            	      	        		"INT", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2194); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1224:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1224:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1225:5: {...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1225:124: ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1226:6: ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1229:6: ( KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1230:2: KEYWORD_64 KEYWORD_11 ( (lv_max_19_0= RULE_INT ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_64,FollowSets000.FOLLOW_KEYWORD_64_in_ruleAliasedRequiredCapability2257); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2268); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1239:1: ( (lv_max_19_0= RULE_INT ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1240:1: (lv_max_19_0= RULE_INT )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1240:1: (lv_max_19_0= RULE_INT )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1241:3: lv_max_19_0= RULE_INT
            	    {
            	    lv_max_19_0=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleAliasedRequiredCapability2285); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0(), "max"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"max",
            	      	        		lv_max_19_0, 
            	      	        		"INT", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2301); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1275:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1275:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1276:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAliasedRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1276:124: ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1277:6: ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1280:6: ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1281:2: KEYWORD_58 KEYWORD_11 ( (lv_versionRange_23_0= RULE_ID ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_ruleAliasedRequiredCapability2364); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2375); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1290:1: ( (lv_versionRange_23_0= RULE_ID ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1291:1: (lv_versionRange_23_0= RULE_ID )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1291:1: (lv_versionRange_23_0= RULE_ID )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1292:3: lv_versionRange_23_0= RULE_ID
            	    {
            	    lv_versionRange_23_0=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability2392); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0(), "versionRange"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAliasedRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"versionRange",
            	      	        		lv_versionRange_23_0, 
            	      	        		"ID", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2408); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());

            }

            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleAliasedRequiredCapability2459); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2(), null); 
                  
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 10, ruleAliasedRequiredCapability_StartIndex); }

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end ruleAliasedRequiredCapability


    // $ANTLR start entryRuleRequiredCapability
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1349:1: entryRuleRequiredCapability returns [EObject current=null] : iv_ruleRequiredCapability= ruleRequiredCapability EOF ;
    public final EObject entryRuleRequiredCapability() throws RecognitionException {
        EObject current = null;
        int entryRuleRequiredCapability_StartIndex = input.index();
        EObject iv_ruleRequiredCapability = null;


         
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()
        		);
        	
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 11) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1355:2: (iv_ruleRequiredCapability= ruleRequiredCapability EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1356:2: iv_ruleRequiredCapability= ruleRequiredCapability EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRequiredCapabilityRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability2505);
            iv_ruleRequiredCapability=ruleRequiredCapability();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRequiredCapability; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleRequiredCapability2515); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 11, entryRuleRequiredCapability_StartIndex); }

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleRequiredCapability


    // $ANTLR start ruleRequiredCapability
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1366:1: ruleRequiredCapability returns [EObject current=null] : ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) ) ;
    public final EObject ruleRequiredCapability() throws RecognitionException {
        EObject current = null;
        int ruleRequiredCapability_StartIndex = input.index();
        Token lv_nameSpace_1_0=null;
        Token lv_name_3_0=null;
        Token lv_greedy_10_0=null;
        Token lv_min_14_0=null;
        Token lv_max_18_0=null;
        Token lv_versionRange_22_0=null;
        EObject lv_condExpr_8_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
        		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        			grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()
        		);
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 12) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1374:6: ( ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1375:1: ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1375:1: ( () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1375:2: () ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 ) ( (lv_name_3_0= RULE_ID ) ) ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1375:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1376:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1389:2: ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_ID) ) {
                alt20=1;
            }
            else if ( (LA20_0==KEYWORD_47) ) {
                alt20=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("1389:2: ( ( (lv_nameSpace_1_0= RULE_ID ) ) | KEYWORD_47 )", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1389:3: ( (lv_nameSpace_1_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1389:3: ( (lv_nameSpace_1_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1390:1: (lv_nameSpace_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1390:1: (lv_nameSpace_1_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1391:3: lv_nameSpace_1_0= RULE_ID
                    {
                    lv_nameSpace_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleRequiredCapability2574); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0(), "nameSpace"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"nameSpace",
                      	        		lv_nameSpace_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1415:2: KEYWORD_47
                    {
                    match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleRequiredCapability2596); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1419:2: ( (lv_name_3_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1420:1: (lv_name_3_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1420:1: (lv_name_3_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1421:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleRequiredCapability2614); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_3_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1443:2: ( KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1444:2: KEYWORD_18 ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) ) KEYWORD_20
            {
            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleRequiredCapability2631); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1448:1: ( ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1450:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1450:1: ( ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1451:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1454:2: ( ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1455:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )*
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1455:3: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) ) | ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) ) )*
            loop21:
            do {
                int alt21=6;
                int LA21_0 = input.LA(1);

                if ( LA21_0 ==KEYWORD_48 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                    alt21=1;
                }
                else if ( LA21_0 ==KEYWORD_53 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                    alt21=2;
                }
                else if ( LA21_0 ==KEYWORD_65 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                    alt21=3;
                }
                else if ( LA21_0 ==KEYWORD_64 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                    alt21=4;
                }
                else if ( LA21_0 ==KEYWORD_58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                    alt21=5;
                }


                switch (alt21) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1457:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1457:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1458:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1458:117: ( ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1459:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1462:6: ( KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1463:2: KEYWORD_48 KEYWORD_11 ( (lv_condExpr_8_0= ruleExpression ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_ruleRequiredCapability2685); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleRequiredCapability2696); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1472:1: ( (lv_condExpr_8_0= ruleExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1473:1: (lv_condExpr_8_0= ruleExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1473:1: (lv_condExpr_8_0= ruleExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1474:3: lv_condExpr_8_0= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleRequiredCapability2717);
            	    lv_condExpr_8_0=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"condExpr",
            	      	        		lv_condExpr_8_0, 
            	      	        		"Expression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability2728); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1508:4: ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1508:4: ({...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1509:5: {...}? => ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1509:117: ( ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1510:6: ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1513:6: ( ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1513:7: ( (lv_greedy_10_0= KEYWORD_53 ) ) KEYWORD_12
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1513:7: ( (lv_greedy_10_0= KEYWORD_53 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1514:1: (lv_greedy_10_0= KEYWORD_53 )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1514:1: (lv_greedy_10_0= KEYWORD_53 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1515:3: lv_greedy_10_0= KEYWORD_53
            	    {
            	    lv_greedy_10_0=(Token)input.LT(1);
            	    match(input,KEYWORD_53,FollowSets000.FOLLOW_KEYWORD_53_in_ruleRequiredCapability2799); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0(), "greedy"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "greedy", true, "greedy", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability2823); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1547:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1547:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1548:5: {...}? => ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1548:117: ( ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1549:6: ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1552:6: ( KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1553:2: KEYWORD_65 KEYWORD_11 ( (lv_min_14_0= RULE_INT ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_65,FollowSets000.FOLLOW_KEYWORD_65_in_ruleRequiredCapability2886); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleRequiredCapability2897); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1562:1: ( (lv_min_14_0= RULE_INT ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1563:1: (lv_min_14_0= RULE_INT )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1563:1: (lv_min_14_0= RULE_INT )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1564:3: lv_min_14_0= RULE_INT
            	    {
            	    lv_min_14_0=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleRequiredCapability2914); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0(), "min"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"min",
            	      	        		lv_min_14_0, 
            	      	        		"INT", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability2930); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1598:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1598:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1599:5: {...}? => ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1599:117: ( ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1600:6: ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1603:6: ( KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1604:2: KEYWORD_64 KEYWORD_11 ( (lv_max_18_0= RULE_INT ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_64,FollowSets000.FOLLOW_KEYWORD_64_in_ruleRequiredCapability2993); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleRequiredCapability3004); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1613:1: ( (lv_max_18_0= RULE_INT ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1614:1: (lv_max_18_0= RULE_INT )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1614:1: (lv_max_18_0= RULE_INT )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1615:3: lv_max_18_0= RULE_INT
            	    {
            	    lv_max_18_0=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleRequiredCapability3021); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0(), "max"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"max",
            	      	        		lv_max_18_0, 
            	      	        		"INT", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability3037); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1649:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1649:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1650:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
            	        if (backtracking>0) {failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRequiredCapability", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1650:117: ( ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1651:6: ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1654:6: ( KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1655:2: KEYWORD_58 KEYWORD_11 ( (lv_versionRange_22_0= RULE_ID ) ) KEYWORD_12
            	    {
            	    match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_ruleRequiredCapability3100); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0(), null); 
            	          
            	    }
            	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleRequiredCapability3111); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1664:1: ( (lv_versionRange_22_0= RULE_ID ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1665:1: (lv_versionRange_22_0= RULE_ID )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1665:1: (lv_versionRange_22_0= RULE_ID )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1666:3: lv_versionRange_22_0= RULE_ID
            	    {
            	    lv_versionRange_22_0=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleRequiredCapability3128); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0(), "versionRange"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRequiredCapabilityRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"versionRange",
            	      	        		lv_versionRange_22_0, 
            	      	        		"ID", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleRequiredCapability3144); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3(), null); 
            	          
            	    }

            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());

            }

            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleRequiredCapability3195); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2(), null); 
                  
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 12, ruleRequiredCapability_StartIndex); }

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end ruleRequiredCapability


    // $ANTLR start entryRulePath
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1723:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;
        int entryRulePath_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulePath = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 13) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1727:1: (iv_rulePath= rulePath EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1728:2: iv_rulePath= rulePath EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPathRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePath_in_entryRulePath3242);
            iv_rulePath=rulePath();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePath3253); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 13, entryRulePath_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end entryRulePath


    // $ANTLR start rulePath
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1738:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulePath_StartIndex = input.index();
        Token this_STRING_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_QID_2 = null;

        AntlrDatatypeRuleToken this_QID_4 = null;


         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 14) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1744:6: ( (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1745:1: (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1745:1: (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_STRING) ) {
                alt25=1;
            }
            else if ( (LA25_0==KEYWORD_10||LA25_0==RULE_ID) ) {
                alt25=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("1745:1: (this_STRING_0= RULE_STRING | ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? ) )", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1745:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)input.LT(1);
                    match(input,RULE_STRING,FollowSets000.FOLLOW_RULE_STRING_in_rulePath3297); if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( backtracking==0 ) {
                       
                          createLeafNode(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1753:6: ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1753:6: ( (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )? )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1753:7: (kw= KEYWORD_10 )? this_QID_2= ruleQID (kw= KEYWORD_10 this_QID_4= ruleQID )* (kw= KEYWORD_10 )?
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1753:7: (kw= KEYWORD_10 )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==KEYWORD_10) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1754:2: kw= KEYWORD_10
                            {
                            kw=(Token)input.LT(1);
                            match(input,KEYWORD_10,FollowSets000.FOLLOW_KEYWORD_10_in_rulePath3323); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_0(), null); 
                                  
                            }

                            }
                            break;

                    }

                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleQID_in_rulePath3347);
                    this_QID_2=ruleQID();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      		current.merge(this_QID_2);
                          
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode = currentNode.getParent();
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1770:1: (kw= KEYWORD_10 this_QID_4= ruleQID )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==KEYWORD_10) ) {
                            int LA23_1 = input.LA(2);

                            if ( (LA23_1==RULE_ID) ) {
                                alt23=1;
                            }


                        }


                        switch (alt23) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1771:2: kw= KEYWORD_10 this_QID_4= ruleQID
                    	    {
                    	    kw=(Token)input.LT(1);
                    	    match(input,KEYWORD_10,FollowSets000.FOLLOW_KEYWORD_10_in_rulePath3366); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              current.merge(kw);
                    	              createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0(), null); 
                    	          
                    	    }
                    	    if ( backtracking==0 ) {
                    	       
                    	              currentNode=createCompositeNode(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1(), currentNode); 
                    	          
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleQID_in_rulePath3388);
                    	    this_QID_4=ruleQID();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      		current.merge(this_QID_4);
                    	          
                    	    }
                    	    if ( backtracking==0 ) {
                    	       
                    	              currentNode = currentNode.getParent();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1787:3: (kw= KEYWORD_10 )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==KEYWORD_10) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1788:2: kw= KEYWORD_10
                            {
                            kw=(Token)input.LT(1);
                            match(input,KEYWORD_10,FollowSets000.FOLLOW_KEYWORD_10_in_rulePath3409); if (failed) return current;
                            if ( backtracking==0 ) {

                                      current.merge(kw);
                                      createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_1_3(), null); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 14, rulePath_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end rulePath


    // $ANTLR start entryRuleParameterList
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1804:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;
        int entryRuleParameterList_StartIndex = input.index();
        EObject iv_ruleParameterList = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 15) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1805:2: (iv_ruleParameterList= ruleParameterList EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1806:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParameterListRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_entryRuleParameterList3455);
            iv_ruleParameterList=ruleParameterList();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleParameterList3465); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 15, entryRuleParameterList_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleParameterList


    // $ANTLR start ruleParameterList
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1813:1: ruleParameterList returns [EObject current=null] : ( ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )* ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;
        int ruleParameterList_StartIndex = input.index();
        EObject lv_parameters_0_0 = null;

        EObject lv_parameters_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 16) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1818:6: ( ( ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1819:1: ( ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1819:1: ( ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1819:2: ( (lv_parameters_0_0= ruleFirstParameter ) ) ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )*
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1819:2: ( (lv_parameters_0_0= ruleFirstParameter ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1820:1: (lv_parameters_0_0= ruleFirstParameter )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1820:1: (lv_parameters_0_0= ruleFirstParameter )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1821:3: lv_parameters_0_0= ruleFirstParameter
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleFirstParameter_in_ruleParameterList3511);
            lv_parameters_0_0=ruleFirstParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getParameterListRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		add(
              	       			current, 
              	       			"parameters",
              	        		lv_parameters_0_0, 
              	        		"FirstParameter", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1843:2: ( KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==KEYWORD_7) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1844:2: KEYWORD_7 ( (lv_parameters_2_0= ruleFirstParameter ) )
            	    {
            	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleParameterList3523); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getParameterListAccess().getCommaKeyword_1_0(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1848:1: ( (lv_parameters_2_0= ruleFirstParameter ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1849:1: (lv_parameters_2_0= ruleFirstParameter )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1849:1: (lv_parameters_2_0= ruleFirstParameter )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1850:3: lv_parameters_2_0= ruleFirstParameter
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleFirstParameter_in_ruleParameterList3544);
            	    lv_parameters_2_0=ruleFirstParameter();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getParameterListRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		add(
            	      	       			current, 
            	      	       			"parameters",
            	      	        		lv_parameters_2_0, 
            	      	        		"FirstParameter", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 16, ruleParameterList_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleParameterList


    // $ANTLR start entryRuleFirstParameter
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1880:1: entryRuleFirstParameter returns [EObject current=null] : iv_ruleFirstParameter= ruleFirstParameter EOF ;
    public final EObject entryRuleFirstParameter() throws RecognitionException {
        EObject current = null;
        int entryRuleFirstParameter_StartIndex = input.index();
        EObject iv_ruleFirstParameter = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 17) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1881:2: (iv_ruleFirstParameter= ruleFirstParameter EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1882:2: iv_ruleFirstParameter= ruleFirstParameter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFirstParameterRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFirstParameter_in_entryRuleFirstParameter3581);
            iv_ruleFirstParameter=ruleFirstParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFirstParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFirstParameter3591); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 17, entryRuleFirstParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleFirstParameter


    // $ANTLR start ruleFirstParameter
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1889:1: ruleFirstParameter returns [EObject current=null] : (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter ) ;
    public final EObject ruleFirstParameter() throws RecognitionException {
        EObject current = null;
        int ruleFirstParameter_StartIndex = input.index();
        EObject this_ClosureParameter_0 = null;

        EObject this_Parameter_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 18) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1894:6: ( (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1895:1: (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1895:1: (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter )
            int alt27=2;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1896:2: this_ClosureParameter_0= ruleClosureParameter
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleClosureParameter_in_ruleFirstParameter3641);
                    this_ClosureParameter_0=ruleClosureParameter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_ClosureParameter_0;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1909:2: this_Parameter_1= ruleParameter
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParameter_in_ruleFirstParameter3671);
                    this_Parameter_1=ruleParameter();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_Parameter_1;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 18, ruleFirstParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleFirstParameter


    // $ANTLR start entryRuleParameter
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1928:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;
        int entryRuleParameter_StartIndex = input.index();
        EObject iv_ruleParameter = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 19) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1929:2: (iv_ruleParameter= ruleParameter EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1930:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleParameter_in_entryRuleParameter3705);
            iv_ruleParameter=ruleParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleParameter3715); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 19, entryRuleParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleParameter


    // $ANTLR start ruleParameter
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1937:1: ruleParameter returns [EObject current=null] : ( (lv_expr_0_0= ruleExpression ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;
        int ruleParameter_StartIndex = input.index();
        EObject lv_expr_0_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 20) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1942:6: ( ( (lv_expr_0_0= ruleExpression ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1943:1: ( (lv_expr_0_0= ruleExpression ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1943:1: ( (lv_expr_0_0= ruleExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1944:1: (lv_expr_0_0= ruleExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1944:1: (lv_expr_0_0= ruleExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1945:3: lv_expr_0_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleParameter3760);
            lv_expr_0_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_0_0, 
              	        		"Expression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 20, ruleParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleParameter


    // $ANTLR start entryRuleClosureParameter
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1975:1: entryRuleClosureParameter returns [EObject current=null] : iv_ruleClosureParameter= ruleClosureParameter EOF ;
    public final EObject entryRuleClosureParameter() throws RecognitionException {
        EObject current = null;
        int entryRuleClosureParameter_StartIndex = input.index();
        EObject iv_ruleClosureParameter = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 21) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1976:2: (iv_ruleClosureParameter= ruleClosureParameter EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1977:2: iv_ruleClosureParameter= ruleClosureParameter EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getClosureParameterRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureParameter_in_entryRuleClosureParameter3794);
            iv_ruleClosureParameter=ruleClosureParameter();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleClosureParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleClosureParameter3804); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 21, entryRuleClosureParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleClosureParameter


    // $ANTLR start ruleClosureParameter
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1984:1: ruleClosureParameter returns [EObject current=null] : ( (lv_expr_0_0= ruleClosureExpression ) ) ;
    public final EObject ruleClosureParameter() throws RecognitionException {
        EObject current = null;
        int ruleClosureParameter_StartIndex = input.index();
        EObject lv_expr_0_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 22) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1989:6: ( ( (lv_expr_0_0= ruleClosureExpression ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1990:1: ( (lv_expr_0_0= ruleClosureExpression ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1990:1: ( (lv_expr_0_0= ruleClosureExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1991:1: (lv_expr_0_0= ruleClosureExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1991:1: (lv_expr_0_0= ruleClosureExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1992:3: lv_expr_0_0= ruleClosureExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureExpression_in_ruleClosureParameter3849);
            lv_expr_0_0=ruleClosureExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getClosureParameterRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_0_0, 
              	        		"ClosureExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 22, ruleClosureParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleClosureParameter


    // $ANTLR start entryRuleParameterDeclaration
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2022:1: entryRuleParameterDeclaration returns [EObject current=null] : iv_ruleParameterDeclaration= ruleParameterDeclaration EOF ;
    public final EObject entryRuleParameterDeclaration() throws RecognitionException {
        EObject current = null;
        int entryRuleParameterDeclaration_StartIndex = input.index();
        EObject iv_ruleParameterDeclaration = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 23) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2023:2: (iv_ruleParameterDeclaration= ruleParameterDeclaration EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2024:2: iv_ruleParameterDeclaration= ruleParameterDeclaration EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParameterDeclarationRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_entryRuleParameterDeclaration3883);
            iv_ruleParameterDeclaration=ruleParameterDeclaration();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParameterDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleParameterDeclaration3893); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 23, entryRuleParameterDeclaration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleParameterDeclaration


    // $ANTLR start ruleParameterDeclaration
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2031:1: ruleParameterDeclaration returns [EObject current=null] : ( ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleParameterDeclaration() throws RecognitionException {
        EObject current = null;
        int ruleParameterDeclaration_StartIndex = input.index();
        Token lv_name_1_0=null;
        EObject lv_type_0_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 24) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2036:6: ( ( ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2037:1: ( ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2037:1: ( ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2037:2: ( (lv_type_0_0= ruleTypeRef ) )? ( (lv_name_1_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2037:2: ( (lv_type_0_0= ruleTypeRef ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==KEYWORD_3) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_ID) ) {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==KEYWORD_13||LA28_2==RULE_ID) ) {
                    alt28=1;
                }
            }
            switch (alt28) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2038:1: (lv_type_0_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2038:1: (lv_type_0_0= ruleTypeRef )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2039:3: lv_type_0_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleParameterDeclaration3939);
                    lv_type_0_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getParameterDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"type",
                      	        		lv_type_0_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2061:3: ( (lv_name_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2062:1: (lv_name_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2062:1: (lv_name_1_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2063:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleParameterDeclaration3957); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getParameterDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_1_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 24, ruleParameterDeclaration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleParameterDeclaration


    // $ANTLR start entryRuleFunction
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2093:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;
        int entryRuleFunction_StartIndex = input.index();
        EObject iv_ruleFunction = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 25) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2094:2: (iv_ruleFunction= ruleFunction EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2095:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFunctionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFunction_in_entryRuleFunction3997);
            iv_ruleFunction=ruleFunction();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFunction4007); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 25, entryRuleFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleFunction


    // $ANTLR start ruleFunction
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2102:1: ruleFunction returns [EObject current=null] : ( ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) ) ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;
        int ruleFunction_StartIndex = input.index();
        Token lv_documentation_0_0=null;
        Token lv_visibility_1_0=null;
        Token lv_final_2_0=null;
        Token lv_name_5_0=null;
        Token lv_varArgs_11_0=null;
        Token lv_varArgs_13_0=null;
        EObject lv_returnType_4_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_parameters_14_0 = null;

        EObject lv_guard_17_0 = null;

        EObject lv_funcExpr_19_0 = null;

        EObject lv_funcExpr_21_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 26) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2107:6: ( ( ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2108:1: ( ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2108:1: ( ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2108:2: ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )? ( (lv_visibility_1_0= RULE_ID ) )? ( (lv_final_2_0= KEYWORD_50 ) )? KEYWORD_59 ( (lv_returnType_4_0= ruleTypeRef ) )? ( (lv_name_5_0= RULE_ID ) ) ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )? ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )? ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2108:2: ( (lv_documentation_0_0= RULE_DOCUMENTATION ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_DOCUMENTATION) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2109:1: (lv_documentation_0_0= RULE_DOCUMENTATION )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2109:1: (lv_documentation_0_0= RULE_DOCUMENTATION )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2110:3: lv_documentation_0_0= RULE_DOCUMENTATION
                    {
                    lv_documentation_0_0=(Token)input.LT(1);
                    match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_RULE_DOCUMENTATION_in_ruleFunction4049); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0(), "documentation"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"documentation",
                      	        		lv_documentation_0_0, 
                      	        		"DOCUMENTATION", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2132:3: ( (lv_visibility_1_0= RULE_ID ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_ID) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2133:1: (lv_visibility_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2133:1: (lv_visibility_1_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2134:3: lv_visibility_1_0= RULE_ID
                    {
                    lv_visibility_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleFunction4072); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0(), "visibility"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"visibility",
                      	        		lv_visibility_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2156:3: ( (lv_final_2_0= KEYWORD_50 ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==KEYWORD_50) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2157:1: (lv_final_2_0= KEYWORD_50 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2157:1: (lv_final_2_0= KEYWORD_50 )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2158:3: lv_final_2_0= KEYWORD_50
                    {
                    lv_final_2_0=(Token)input.LT(1);
                    match(input,KEYWORD_50,FollowSets000.FOLLOW_KEYWORD_50_in_ruleFunction4097); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0(), "final"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "final", true, "final", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,KEYWORD_59,FollowSets000.FOLLOW_KEYWORD_59_in_ruleFunction4122); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getFunctionAccess().getFunctionKeyword_3(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2183:1: ( (lv_returnType_4_0= ruleTypeRef ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==KEYWORD_3) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_ID) ) {
                int LA32_2 = input.LA(2);

                if ( (LA32_2==KEYWORD_13||LA32_2==RULE_ID) ) {
                    alt32=1;
                }
            }
            switch (alt32) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2184:1: (lv_returnType_4_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2184:1: (lv_returnType_4_0= ruleTypeRef )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2185:3: lv_returnType_4_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleFunction4143);
                    lv_returnType_4_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"returnType",
                      	        		lv_returnType_4_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2207:3: ( (lv_name_5_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2208:1: (lv_name_5_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2208:1: (lv_name_5_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2209:3: lv_name_5_0= RULE_ID
            {
            lv_name_5_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleFunction4161); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_5_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2231:2: ( KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==KEYWORD_3) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2232:2: KEYWORD_3 ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )? KEYWORD_4
                    {
                    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleFunction4178); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2236:1: ( ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? ) | ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) ) )?
                    int alt35=3;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==KEYWORD_3||LA35_0==RULE_ID) ) {
                        alt35=1;
                    }
                    else if ( (LA35_0==KEYWORD_39) ) {
                        alt35=2;
                    }
                    switch (alt35) {
                        case 1 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2236:2: ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2236:2: ( ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )? )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2236:3: ( (lv_parameters_7_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )?
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2236:3: ( (lv_parameters_7_0= ruleParameterDeclaration ) )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2237:1: (lv_parameters_7_0= ruleParameterDeclaration )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2237:1: (lv_parameters_7_0= ruleParameterDeclaration )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2238:3: lv_parameters_7_0= ruleParameterDeclaration
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleFunction4201);
                            lv_parameters_7_0=ruleParameterDeclaration();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		add(
                              	       			current, 
                              	       			"parameters",
                              	        		lv_parameters_7_0, 
                              	        		"ParameterDeclaration", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2260:2: ( KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) ) )*
                            loop33:
                            do {
                                int alt33=2;
                                int LA33_0 = input.LA(1);

                                if ( (LA33_0==KEYWORD_7) ) {
                                    int LA33_1 = input.LA(2);

                                    if ( (LA33_1==KEYWORD_3||LA33_1==RULE_ID) ) {
                                        alt33=1;
                                    }


                                }


                                switch (alt33) {
                            	case 1 :
                            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2261:2: KEYWORD_7 ( (lv_parameters_9_0= ruleParameterDeclaration ) )
                            	    {
                            	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleFunction4213); if (failed) return current;
                            	    if ( backtracking==0 ) {

                            	              createLeafNode(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0(), null); 
                            	          
                            	    }
                            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2265:1: ( (lv_parameters_9_0= ruleParameterDeclaration ) )
                            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2266:1: (lv_parameters_9_0= ruleParameterDeclaration )
                            	    {
                            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2266:1: (lv_parameters_9_0= ruleParameterDeclaration )
                            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2267:3: lv_parameters_9_0= ruleParameterDeclaration
                            	    {
                            	    if ( backtracking==0 ) {
                            	       
                            	      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0(), currentNode); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleFunction4234);
                            	    lv_parameters_9_0=ruleParameterDeclaration();
                            	    _fsp--;
                            	    if (failed) return current;
                            	    if ( backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                            	      	        }
                            	      	        try {
                            	      	       		add(
                            	      	       			current, 
                            	      	       			"parameters",
                            	      	        		lv_parameters_9_0, 
                            	      	        		"ParameterDeclaration", 
                            	      	        		currentNode);
                            	      	        } catch (ValueConverterException vce) {
                            	      				handleValueConverterException(vce);
                            	      	        }
                            	      	        currentNode = currentNode.getParent();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop33;
                                }
                            } while (true);

                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2289:4: ( KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )?
                            int alt34=2;
                            int LA34_0 = input.LA(1);

                            if ( (LA34_0==KEYWORD_7) ) {
                                alt34=1;
                            }
                            switch (alt34) {
                                case 1 :
                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2290:2: KEYWORD_7 ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) )
                                    {
                                    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleFunction4248); if (failed) return current;
                                    if ( backtracking==0 ) {

                                              createLeafNode(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0(), null); 
                                          
                                    }
                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2294:1: ( (lv_varArgs_11_0= KEYWORD_39 ) )
                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2295:1: (lv_varArgs_11_0= KEYWORD_39 )
                                    {
                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2295:1: (lv_varArgs_11_0= KEYWORD_39 )
                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2296:3: lv_varArgs_11_0= KEYWORD_39
                                    {
                                    lv_varArgs_11_0=(Token)input.LT(1);
                                    match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleFunction4267); if (failed) return current;
                                    if ( backtracking==0 ) {

                                              createLeafNode(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0(), "varArgs"); 
                                          
                                    }
                                    if ( backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                                      	            associateNodeWithAstElement(currentNode, current);
                                      	        }
                                      	        
                                      	        try {
                                      	       		set(current, "varArgs", true, "...", lastConsumedNode);
                                      	        } catch (ValueConverterException vce) {
                                      				handleValueConverterException(vce);
                                      	        }
                                      	    
                                    }

                                    }


                                    }

                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2316:2: ( (lv_parameters_12_0= ruleParameterDeclaration ) )
                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2317:1: (lv_parameters_12_0= ruleParameterDeclaration )
                                    {
                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2317:1: (lv_parameters_12_0= ruleParameterDeclaration )
                                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2318:3: lv_parameters_12_0= ruleParameterDeclaration
                                    {
                                    if ( backtracking==0 ) {
                                       
                                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0(), currentNode); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleFunction4301);
                                    lv_parameters_12_0=ruleParameterDeclaration();
                                    _fsp--;
                                    if (failed) return current;
                                    if ( backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                                      	        }
                                      	        try {
                                      	       		add(
                                      	       			current, 
                                      	       			"parameters",
                                      	        		lv_parameters_12_0, 
                                      	        		"ParameterDeclaration", 
                                      	        		currentNode);
                                      	        } catch (ValueConverterException vce) {
                                      				handleValueConverterException(vce);
                                      	        }
                                      	        currentNode = currentNode.getParent();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2341:6: ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2341:6: ( ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) ) )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2341:7: ( (lv_varArgs_13_0= KEYWORD_39 ) ) ( (lv_parameters_14_0= ruleParameterDeclaration ) )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2341:7: ( (lv_varArgs_13_0= KEYWORD_39 ) )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2342:1: (lv_varArgs_13_0= KEYWORD_39 )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2342:1: (lv_varArgs_13_0= KEYWORD_39 )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2343:3: lv_varArgs_13_0= KEYWORD_39
                            {
                            lv_varArgs_13_0=(Token)input.LT(1);
                            match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleFunction4330); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0(), "varArgs"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "varArgs", true, "...", lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2363:2: ( (lv_parameters_14_0= ruleParameterDeclaration ) )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2364:1: (lv_parameters_14_0= ruleParameterDeclaration )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2364:1: (lv_parameters_14_0= ruleParameterDeclaration )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2365:3: lv_parameters_14_0= ruleParameterDeclaration
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleFunction4364);
                            lv_parameters_14_0=ruleParameterDeclaration();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		add(
                              	       			current, 
                              	       			"parameters",
                              	        		lv_parameters_14_0, 
                              	        		"ParameterDeclaration", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleFunction4378); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2392:3: ( KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==KEYWORD_48) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2393:2: KEYWORD_48 ( (lv_guard_17_0= ruleGuardExpression ) )
                    {
                    match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_ruleFunction4392); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getWhenKeyword_7_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2397:1: ( (lv_guard_17_0= ruleGuardExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2398:1: (lv_guard_17_0= ruleGuardExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2398:1: (lv_guard_17_0= ruleGuardExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2399:3: lv_guard_17_0= ruleGuardExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleGuardExpression_in_ruleFunction4413);
                    lv_guard_17_0=ruleGuardExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"guard",
                      	        		lv_guard_17_0, 
                      	        		"GuardExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2421:4: ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==KEYWORD_11) ) {
                alt38=1;
            }
            else if ( (LA38_0==KEYWORD_18) ) {
                alt38=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2421:4: ( ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_funcExpr_21_0= ruleBlockExpression ) ) )", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2421:5: ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2421:5: ( KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12 )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2422:2: KEYWORD_11 ( (lv_funcExpr_19_0= ruleExpression ) ) KEYWORD_12
                    {
                    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleFunction4428); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2426:1: ( (lv_funcExpr_19_0= ruleExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2427:1: (lv_funcExpr_19_0= ruleExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2427:1: (lv_funcExpr_19_0= ruleExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2428:3: lv_funcExpr_19_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleFunction4449);
                    lv_funcExpr_19_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"funcExpr",
                      	        		lv_funcExpr_19_0, 
                      	        		"Expression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleFunction4460); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2456:6: ( (lv_funcExpr_21_0= ruleBlockExpression ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2456:6: ( (lv_funcExpr_21_0= ruleBlockExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2457:1: (lv_funcExpr_21_0= ruleBlockExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2457:1: (lv_funcExpr_21_0= ruleBlockExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2458:3: lv_funcExpr_21_0= ruleBlockExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_ruleFunction4488);
                    lv_funcExpr_21_0=ruleBlockExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getFunctionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"funcExpr",
                      	        		lv_funcExpr_21_0, 
                      	        		"BlockExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 26, ruleFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleFunction


    // $ANTLR start entryRuleGuardExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2488:1: entryRuleGuardExpression returns [EObject current=null] : iv_ruleGuardExpression= ruleGuardExpression EOF ;
    public final EObject entryRuleGuardExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleGuardExpression_StartIndex = input.index();
        EObject iv_ruleGuardExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 27) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2489:2: (iv_ruleGuardExpression= ruleGuardExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2490:2: iv_ruleGuardExpression= ruleGuardExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getGuardExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleGuardExpression_in_entryRuleGuardExpression4524);
            iv_ruleGuardExpression=ruleGuardExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleGuardExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleGuardExpression4534); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 27, entryRuleGuardExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleGuardExpression


    // $ANTLR start ruleGuardExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2497:1: ruleGuardExpression returns [EObject current=null] : ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) ) ;
    public final EObject ruleGuardExpression() throws RecognitionException {
        EObject current = null;
        int ruleGuardExpression_StartIndex = input.index();
        EObject lv_guardExpr_1_0 = null;

        EObject lv_guardExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 28) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2502:6: ( ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2503:1: ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2503:1: ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==KEYWORD_11) ) {
                alt39=1;
            }
            else if ( (LA39_0==KEYWORD_18) ) {
                alt39=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2503:1: ( ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 ) | ( (lv_guardExpr_3_0= ruleBlockExpression ) ) )", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2503:2: ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2503:2: ( KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12 )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2504:2: KEYWORD_11 ( (lv_guardExpr_1_0= ruleExpression ) ) KEYWORD_12
                    {
                    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleGuardExpression4571); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2508:1: ( (lv_guardExpr_1_0= ruleExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2509:1: (lv_guardExpr_1_0= ruleExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2509:1: (lv_guardExpr_1_0= ruleExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2510:3: lv_guardExpr_1_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleGuardExpression4592);
                    lv_guardExpr_1_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getGuardExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"guardExpr",
                      	        		lv_guardExpr_1_0, 
                      	        		"Expression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleGuardExpression4603); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2(), null); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2538:6: ( (lv_guardExpr_3_0= ruleBlockExpression ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2538:6: ( (lv_guardExpr_3_0= ruleBlockExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2539:1: (lv_guardExpr_3_0= ruleBlockExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2539:1: (lv_guardExpr_3_0= ruleBlockExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2540:3: lv_guardExpr_3_0= ruleBlockExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_ruleGuardExpression4631);
                    lv_guardExpr_3_0=ruleBlockExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getGuardExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"guardExpr",
                      	        		lv_guardExpr_3_0, 
                      	        		"BlockExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 28, ruleGuardExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleGuardExpression


    // $ANTLR start entryRuleAssignmentOperator
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2570:1: entryRuleAssignmentOperator returns [String current=null] : iv_ruleAssignmentOperator= ruleAssignmentOperator EOF ;
    public final String entryRuleAssignmentOperator() throws RecognitionException {
        String current = null;
        int entryRuleAssignmentOperator_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleAssignmentOperator = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 29) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2571:1: (iv_ruleAssignmentOperator= ruleAssignmentOperator EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2572:2: iv_ruleAssignmentOperator= ruleAssignmentOperator EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAssignmentOperatorRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAssignmentOperator_in_entryRuleAssignmentOperator4667);
            iv_ruleAssignmentOperator=ruleAssignmentOperator();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAssignmentOperator.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAssignmentOperator4678); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 29, entryRuleAssignmentOperator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleAssignmentOperator


    // $ANTLR start ruleAssignmentOperator
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2579:1: ruleAssignmentOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 ) ;
    public final AntlrDatatypeRuleToken ruleAssignmentOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleAssignmentOperator_StartIndex = input.index();
        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 30) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2584:6: ( (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2585:1: (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2585:1: (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 )
            int alt40=6;
            switch ( input.LA(1) ) {
            case KEYWORD_14:
                {
                alt40=1;
                }
                break;
            case KEYWORD_26:
                {
                alt40=2;
                }
                break;
            case KEYWORD_28:
                {
                alt40=3;
                }
                break;
            case KEYWORD_24:
                {
                alt40=4;
                }
                break;
            case KEYWORD_30:
                {
                alt40=5;
                }
                break;
            case KEYWORD_22:
                {
                alt40=6;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2585:1: (kw= KEYWORD_14 | kw= KEYWORD_26 | kw= KEYWORD_28 | kw= KEYWORD_24 | kw= KEYWORD_30 | kw= KEYWORD_22 )", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2586:2: kw= KEYWORD_14
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_14,FollowSets000.FOLLOW_KEYWORD_14_in_ruleAssignmentOperator4716); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2593:2: kw= KEYWORD_26
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_26,FollowSets000.FOLLOW_KEYWORD_26_in_ruleAssignmentOperator4735); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1(), null); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2600:2: kw= KEYWORD_28
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_28,FollowSets000.FOLLOW_KEYWORD_28_in_ruleAssignmentOperator4754); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2(), null); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2607:2: kw= KEYWORD_24
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_24,FollowSets000.FOLLOW_KEYWORD_24_in_ruleAssignmentOperator4773); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3(), null); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2614:2: kw= KEYWORD_30
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_30,FollowSets000.FOLLOW_KEYWORD_30_in_ruleAssignmentOperator4792); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4(), null); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2621:2: kw= KEYWORD_22
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_22,FollowSets000.FOLLOW_KEYWORD_22_in_ruleAssignmentOperator4811); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5(), null); 
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 30, ruleAssignmentOperator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleAssignmentOperator


    // $ANTLR start entryRuleRelationalOperator
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2634:1: entryRuleRelationalOperator returns [String current=null] : iv_ruleRelationalOperator= ruleRelationalOperator EOF ;
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;
        int entryRuleRelationalOperator_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 31) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2635:1: (iv_ruleRelationalOperator= ruleRelationalOperator EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2636:2: iv_ruleRelationalOperator= ruleRelationalOperator EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRelationalOperatorRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleRelationalOperator_in_entryRuleRelationalOperator4851);
            iv_ruleRelationalOperator=ruleRelationalOperator();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleRelationalOperator4862); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 31, entryRuleRelationalOperator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleRelationalOperator


    // $ANTLR start ruleRelationalOperator
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2643:1: ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 ) ;
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleRelationalOperator_StartIndex = input.index();
        Token kw=null;

         setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 32) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2648:6: ( (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2649:1: (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2649:1: (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 )
            int alt41=9;
            switch ( input.LA(1) ) {
            case KEYWORD_37:
                {
                alt41=1;
                }
                break;
            case KEYWORD_32:
                {
                alt41=2;
                }
                break;
            case KEYWORD_40:
                {
                alt41=3;
                }
                break;
            case KEYWORD_21:
                {
                alt41=4;
                }
                break;
            case KEYWORD_38:
                {
                alt41=5;
                }
                break;
            case KEYWORD_34:
                {
                alt41=6;
                }
                break;
            case KEYWORD_31:
                {
                alt41=7;
                }
                break;
            case KEYWORD_15:
                {
                alt41=8;
                }
                break;
            case KEYWORD_13:
                {
                alt41=9;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2649:1: (kw= KEYWORD_37 | kw= KEYWORD_32 | kw= KEYWORD_40 | kw= KEYWORD_21 | kw= KEYWORD_38 | kw= KEYWORD_34 | kw= KEYWORD_31 | kw= KEYWORD_15 | kw= KEYWORD_13 )", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2650:2: kw= KEYWORD_37
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_37,FollowSets000.FOLLOW_KEYWORD_37_in_ruleRelationalOperator4900); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2657:2: kw= KEYWORD_32
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_32,FollowSets000.FOLLOW_KEYWORD_32_in_ruleRelationalOperator4919); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1(), null); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2664:2: kw= KEYWORD_40
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_40,FollowSets000.FOLLOW_KEYWORD_40_in_ruleRelationalOperator4938); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2(), null); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2671:2: kw= KEYWORD_21
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_21,FollowSets000.FOLLOW_KEYWORD_21_in_ruleRelationalOperator4957); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3(), null); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2678:2: kw= KEYWORD_38
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_38,FollowSets000.FOLLOW_KEYWORD_38_in_ruleRelationalOperator4976); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4(), null); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2685:2: kw= KEYWORD_34
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_34,FollowSets000.FOLLOW_KEYWORD_34_in_ruleRelationalOperator4995); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5(), null); 
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2692:2: kw= KEYWORD_31
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_31,FollowSets000.FOLLOW_KEYWORD_31_in_ruleRelationalOperator5014); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6(), null); 
                          
                    }

                    }
                    break;
                case 8 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2699:2: kw= KEYWORD_15
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_15,FollowSets000.FOLLOW_KEYWORD_15_in_ruleRelationalOperator5033); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7(), null); 
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2706:2: kw= KEYWORD_13
                    {
                    kw=(Token)input.LT(1);
                    match(input,KEYWORD_13,FollowSets000.FOLLOW_KEYWORD_13_in_ruleRelationalOperator5052); if (failed) return current;
                    if ( backtracking==0 ) {

                              current.merge(kw);
                              createLeafNode(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8(), null); 
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 32, ruleRelationalOperator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleRelationalOperator


    // $ANTLR start entryRuleTopLevelExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2719:1: entryRuleTopLevelExpression returns [EObject current=null] : iv_ruleTopLevelExpression= ruleTopLevelExpression EOF ;
    public final EObject entryRuleTopLevelExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleTopLevelExpression_StartIndex = input.index();
        EObject iv_ruleTopLevelExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 33) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2720:2: (iv_ruleTopLevelExpression= ruleTopLevelExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2721:2: iv_ruleTopLevelExpression= ruleTopLevelExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getTopLevelExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleTopLevelExpression_in_entryRuleTopLevelExpression5091);
            iv_ruleTopLevelExpression=ruleTopLevelExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleTopLevelExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleTopLevelExpression5101); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 33, entryRuleTopLevelExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleTopLevelExpression


    // $ANTLR start ruleTopLevelExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2728:1: ruleTopLevelExpression returns [EObject current=null] : (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression ) ;
    public final EObject ruleTopLevelExpression() throws RecognitionException {
        EObject current = null;
        int ruleTopLevelExpression_StartIndex = input.index();
        EObject this_VarDeclaration_0 = null;

        EObject this_ValDeclaration_1 = null;

        EObject this_AssignmentExpression_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 34) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2733:6: ( (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )
            int alt42=3;
            switch ( input.LA(1) ) {
            case KEYWORD_50:
                {
                int LA42_1 = input.LA(2);

                if ( (LA42_1==KEYWORD_44||LA42_1==KEYWORD_3||LA42_1==RULE_ID) ) {
                    alt42=1;
                }
                else if ( (LA42_1==KEYWORD_43) ) {
                    alt42=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 1, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_44:
                {
                alt42=1;
                }
                break;
            case KEYWORD_3:
                {
                switch ( input.LA(2) ) {
                case RULE_ID:
                    {
                    switch ( input.LA(3) ) {
                    case KEYWORD_38:
                    case KEYWORD_40:
                    case KEYWORD_21:
                    case KEYWORD_22:
                    case KEYWORD_23:
                    case KEYWORD_24:
                    case KEYWORD_25:
                    case KEYWORD_26:
                    case KEYWORD_27:
                    case KEYWORD_28:
                    case KEYWORD_29:
                    case KEYWORD_30:
                    case KEYWORD_31:
                    case KEYWORD_32:
                    case KEYWORD_34:
                    case KEYWORD_36:
                    case KEYWORD_37:
                    case KEYWORD_2:
                    case KEYWORD_3:
                    case KEYWORD_5:
                    case KEYWORD_6:
                    case KEYWORD_8:
                    case KEYWORD_9:
                    case KEYWORD_10:
                    case KEYWORD_13:
                    case KEYWORD_14:
                    case KEYWORD_15:
                    case KEYWORD_16:
                        {
                        alt42=3;
                        }
                        break;
                    case KEYWORD_4:
                        {
                        int LA42_9 = input.LA(4);

                        if ( (LA42_9==KEYWORD_33) ) {
                            alt42=1;
                        }
                        else if ( (LA42_9==EOF||LA42_9==KEYWORD_38||LA42_9==KEYWORD_40||(LA42_9>=KEYWORD_21 && LA42_9<=KEYWORD_32)||LA42_9==KEYWORD_34||(LA42_9>=KEYWORD_36 && LA42_9<=KEYWORD_37)||(LA42_9>=KEYWORD_2 && LA42_9<=KEYWORD_3)||(LA42_9>=KEYWORD_5 && LA42_9<=KEYWORD_6)||(LA42_9>=KEYWORD_8 && LA42_9<=KEYWORD_10)||(LA42_9>=KEYWORD_12 && LA42_9<=KEYWORD_16)) ) {
                            alt42=3;
                        }
                        else {
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 9, input);

                            throw nvae;
                        }
                        }
                        break;
                    case KEYWORD_7:
                        {
                        alt42=1;
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 7, input);

                        throw nvae;
                    }

                    }
                    break;
                case KEYWORD_39:
                case KEYWORD_4:
                    {
                    alt42=1;
                    }
                    break;
                case KEYWORD_63:
                case KEYWORD_56:
                case KEYWORD_52:
                case KEYWORD_54:
                case KEYWORD_55:
                case KEYWORD_51:
                case KEYWORD_46:
                case KEYWORD_47:
                case KEYWORD_49:
                case KEYWORD_42:
                case KEYWORD_25:
                case KEYWORD_27:
                case KEYWORD_1:
                case KEYWORD_3:
                case KEYWORD_8:
                case KEYWORD_18:
                case RULE_STRING:
                    {
                    alt42=3;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case KEYWORD_38:
                case KEYWORD_40:
                case KEYWORD_21:
                case KEYWORD_22:
                case KEYWORD_23:
                case KEYWORD_24:
                case KEYWORD_25:
                case KEYWORD_26:
                case KEYWORD_27:
                case KEYWORD_28:
                case KEYWORD_29:
                case KEYWORD_30:
                case KEYWORD_31:
                case KEYWORD_32:
                case KEYWORD_34:
                case KEYWORD_36:
                case KEYWORD_37:
                case KEYWORD_2:
                case KEYWORD_3:
                case KEYWORD_5:
                case KEYWORD_6:
                case KEYWORD_8:
                case KEYWORD_9:
                case KEYWORD_10:
                case KEYWORD_12:
                case KEYWORD_14:
                case KEYWORD_15:
                case KEYWORD_16:
                    {
                    alt42=3;
                    }
                    break;
                case KEYWORD_13:
                    {
                    int LA42_8 = input.LA(3);

                    if ( (LA42_8==RULE_ID) ) {
                        switch ( input.LA(4) ) {
                        case EOF:
                        case KEYWORD_38:
                        case KEYWORD_40:
                        case KEYWORD_21:
                        case KEYWORD_22:
                        case KEYWORD_23:
                        case KEYWORD_24:
                        case KEYWORD_25:
                        case KEYWORD_26:
                        case KEYWORD_27:
                        case KEYWORD_28:
                        case KEYWORD_29:
                        case KEYWORD_30:
                        case KEYWORD_31:
                        case KEYWORD_32:
                        case KEYWORD_34:
                        case KEYWORD_36:
                        case KEYWORD_37:
                        case KEYWORD_2:
                        case KEYWORD_3:
                        case KEYWORD_5:
                        case KEYWORD_6:
                        case KEYWORD_8:
                        case KEYWORD_9:
                        case KEYWORD_10:
                        case KEYWORD_12:
                        case KEYWORD_13:
                        case KEYWORD_14:
                        case KEYWORD_16:
                            {
                            alt42=3;
                            }
                            break;
                        case KEYWORD_7:
                            {
                            alt42=1;
                            }
                            break;
                        case KEYWORD_15:
                            {
                            int LA42_11 = input.LA(5);

                            if ( (LA42_11==RULE_ID) ) {
                                int LA42_12 = input.LA(6);

                                if ( (synpred69()) ) {
                                    alt42=1;
                                }
                                else if ( (true) ) {
                                    alt42=3;
                                }
                                else {
                                    if (backtracking>0) {failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 12, input);

                                    throw nvae;
                                }
                            }
                            else if ( (LA42_11==KEYWORD_63||LA42_11==KEYWORD_56||(LA42_11>=KEYWORD_54 && LA42_11<=KEYWORD_55)||LA42_11==KEYWORD_51||(LA42_11>=KEYWORD_46 && LA42_11<=KEYWORD_47)||LA42_11==KEYWORD_49||LA42_11==KEYWORD_42||LA42_11==KEYWORD_25||LA42_11==KEYWORD_27||LA42_11==KEYWORD_1||LA42_11==KEYWORD_3||LA42_11==KEYWORD_8||LA42_11==KEYWORD_18||LA42_11==RULE_STRING) ) {
                                alt42=3;
                            }
                            else {
                                if (backtracking>0) {failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 11, input);

                                throw nvae;
                            }
                            }
                            break;
                        default:
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 10, input);

                            throw nvae;
                        }

                    }
                    else if ( (LA42_8==KEYWORD_63||LA42_8==KEYWORD_56||(LA42_8>=KEYWORD_54 && LA42_8<=KEYWORD_55)||LA42_8==KEYWORD_51||(LA42_8>=KEYWORD_46 && LA42_8<=KEYWORD_47)||LA42_8==KEYWORD_49||LA42_8==KEYWORD_42||LA42_8==KEYWORD_25||LA42_8==KEYWORD_27||LA42_8==KEYWORD_1||LA42_8==KEYWORD_3||LA42_8==KEYWORD_8||LA42_8==KEYWORD_18||LA42_8==RULE_STRING) ) {
                        alt42=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 8, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    alt42=1;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 4, input);

                    throw nvae;
                }

                }
                break;
            case KEYWORD_43:
                {
                alt42=2;
                }
                break;
            case KEYWORD_63:
            case KEYWORD_56:
            case KEYWORD_52:
            case KEYWORD_54:
            case KEYWORD_55:
            case KEYWORD_51:
            case KEYWORD_46:
            case KEYWORD_47:
            case KEYWORD_49:
            case KEYWORD_42:
            case KEYWORD_25:
            case KEYWORD_27:
            case KEYWORD_1:
            case KEYWORD_8:
            case KEYWORD_18:
            case RULE_STRING:
                {
                alt42=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2734:1: (this_VarDeclaration_0= ruleVarDeclaration | this_ValDeclaration_1= ruleValDeclaration | this_AssignmentExpression_2= ruleAssignmentExpression )", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2735:2: this_VarDeclaration_0= ruleVarDeclaration
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleVarDeclaration_in_ruleTopLevelExpression5151);
                    this_VarDeclaration_0=ruleVarDeclaration();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_VarDeclaration_0;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2748:2: this_ValDeclaration_1= ruleValDeclaration
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleValDeclaration_in_ruleTopLevelExpression5181);
                    this_ValDeclaration_1=ruleValDeclaration();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_ValDeclaration_1;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2761:2: this_AssignmentExpression_2= ruleAssignmentExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_ruleTopLevelExpression5211);
                    this_AssignmentExpression_2=ruleAssignmentExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_AssignmentExpression_2;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 34, ruleTopLevelExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleTopLevelExpression


    // $ANTLR start entryRuleExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2780:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleExpression_StartIndex = input.index();
        EObject iv_ruleExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 35) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2781:2: (iv_ruleExpression= ruleExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2782:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_entryRuleExpression5245);
            iv_ruleExpression=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleExpression5255); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 35, entryRuleExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleExpression


    // $ANTLR start ruleExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2789:1: ruleExpression returns [EObject current=null] : this_AssignmentExpression_0= ruleAssignmentExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;
        int ruleExpression_StartIndex = input.index();
        EObject this_AssignmentExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 36) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2794:6: (this_AssignmentExpression_0= ruleAssignmentExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2796:2: this_AssignmentExpression_0= ruleAssignmentExpression
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_ruleExpression5304);
            this_AssignmentExpression_0=ruleAssignmentExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 36, ruleExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleExpression


    // $ANTLR start entryRuleAssignmentExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2815:1: entryRuleAssignmentExpression returns [EObject current=null] : iv_ruleAssignmentExpression= ruleAssignmentExpression EOF ;
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAssignmentExpression_StartIndex = input.index();
        EObject iv_ruleAssignmentExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 37) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2816:2: (iv_ruleAssignmentExpression= ruleAssignmentExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2817:2: iv_ruleAssignmentExpression= ruleAssignmentExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAssignmentExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression5337);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAssignmentExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAssignmentExpression5347); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 37, entryRuleAssignmentExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleAssignmentExpression


    // $ANTLR start ruleAssignmentExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2824:1: ruleAssignmentExpression returns [EObject current=null] : (this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )? ) ;
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;
        int ruleAssignmentExpression_StartIndex = input.index();
        EObject this_CachedExpression_0 = null;

        AntlrDatatypeRuleToken lv_functionName_2_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 38) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2829:6: ( (this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )? ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2830:1: (this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )? )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2830:1: (this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )? )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2831:2: this_CachedExpression_0= ruleCachedExpression ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )?
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleCachedExpression_in_ruleAssignmentExpression5397);
            this_CachedExpression_0=ruleCachedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_CachedExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2842:1: ( () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) ) )?
            int alt43=2;
            switch ( input.LA(1) ) {
                case KEYWORD_14:
                    {
                    int LA43_1 = input.LA(2);

                    if ( (synpred71()) ) {
                        alt43=1;
                    }
                    }
                    break;
                case KEYWORD_26:
                    {
                    int LA43_2 = input.LA(2);

                    if ( (synpred71()) ) {
                        alt43=1;
                    }
                    }
                    break;
                case KEYWORD_28:
                    {
                    int LA43_3 = input.LA(2);

                    if ( (synpred71()) ) {
                        alt43=1;
                    }
                    }
                    break;
                case KEYWORD_24:
                    {
                    int LA43_4 = input.LA(2);

                    if ( (synpred71()) ) {
                        alt43=1;
                    }
                    }
                    break;
                case KEYWORD_30:
                    {
                    int LA43_5 = input.LA(2);

                    if ( (synpred71()) ) {
                        alt43=1;
                    }
                    }
                    break;
                case KEYWORD_22:
                    {
                    int LA43_6 = input.LA(2);

                    if ( (synpred71()) ) {
                        alt43=1;
                    }
                    }
                    break;
            }

            switch (alt43) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2842:2: () ( (lv_functionName_2_0= ruleAssignmentOperator ) ) ( (lv_rightExpr_3_0= ruleAssignmentExpression ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2842:2: ()
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2843:2: 
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2861:2: ( (lv_functionName_2_0= ruleAssignmentOperator ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2862:1: (lv_functionName_2_0= ruleAssignmentOperator )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2862:1: (lv_functionName_2_0= ruleAssignmentOperator )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2863:3: lv_functionName_2_0= ruleAssignmentOperator
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleAssignmentOperator_in_ruleAssignmentExpression5430);
                    lv_functionName_2_0=ruleAssignmentOperator();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"functionName",
                      	        		lv_functionName_2_0, 
                      	        		"AssignmentOperator", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2885:2: ( (lv_rightExpr_3_0= ruleAssignmentExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2886:1: (lv_rightExpr_3_0= ruleAssignmentExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2886:1: (lv_rightExpr_3_0= ruleAssignmentExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2887:3: lv_rightExpr_3_0= ruleAssignmentExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression5451);
                    lv_rightExpr_3_0=ruleAssignmentExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getAssignmentExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"rightExpr",
                      	        		lv_rightExpr_3_0, 
                      	        		"AssignmentExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 38, ruleAssignmentExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleAssignmentExpression


    // $ANTLR start entryRuleVarDeclaration
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2917:1: entryRuleVarDeclaration returns [EObject current=null] : iv_ruleVarDeclaration= ruleVarDeclaration EOF ;
    public final EObject entryRuleVarDeclaration() throws RecognitionException {
        EObject current = null;
        int entryRuleVarDeclaration_StartIndex = input.index();
        EObject iv_ruleVarDeclaration = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 39) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2918:2: (iv_ruleVarDeclaration= ruleVarDeclaration EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2919:2: iv_ruleVarDeclaration= ruleVarDeclaration EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getVarDeclarationRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleVarDeclaration_in_entryRuleVarDeclaration5488);
            iv_ruleVarDeclaration=ruleVarDeclaration();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleVarDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleVarDeclaration5498); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 39, entryRuleVarDeclaration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleVarDeclaration


    // $ANTLR start ruleVarDeclaration
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2926:1: ruleVarDeclaration returns [EObject current=null] : ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )? ) ;
    public final EObject ruleVarDeclaration() throws RecognitionException {
        EObject current = null;
        int ruleVarDeclaration_StartIndex = input.index();
        Token lv_final_1_0=null;
        Token lv_name_4_0=null;
        EObject lv_type_3_0 = null;

        EObject lv_valueExpr_6_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 40) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2931:6: ( ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )? ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2932:1: ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )? )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2932:1: ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )? )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2932:2: () ( (lv_final_1_0= KEYWORD_50 ) )? ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) ) ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )?
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2932:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2933:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getVarDeclarationAccess().getDefValueAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getVarDeclarationAccess().getDefValueAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2946:2: ( (lv_final_1_0= KEYWORD_50 ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==KEYWORD_50) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2947:1: (lv_final_1_0= KEYWORD_50 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2947:1: (lv_final_1_0= KEYWORD_50 )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2948:3: lv_final_1_0= KEYWORD_50
                    {
                    lv_final_1_0=(Token)input.LT(1);
                    match(input,KEYWORD_50,FollowSets000.FOLLOW_KEYWORD_50_in_ruleVarDeclaration5554); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0(), "final"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "final", true, "final", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2968:3: ( ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2968:4: ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) ) ( (lv_name_4_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2968:4: ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==KEYWORD_44) ) {
                alt45=1;
            }
            else if ( (LA45_0==KEYWORD_3||LA45_0==RULE_ID) ) {
                alt45=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("2968:4: ( KEYWORD_44 | ( (lv_type_3_0= ruleTypeRef ) ) )", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2969:2: KEYWORD_44
                    {
                    match(input,KEYWORD_44,FollowSets000.FOLLOW_KEYWORD_44_in_ruleVarDeclaration5581); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0(), null); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2974:6: ( (lv_type_3_0= ruleTypeRef ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2974:6: ( (lv_type_3_0= ruleTypeRef ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2975:1: (lv_type_3_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2975:1: (lv_type_3_0= ruleTypeRef )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2976:3: lv_type_3_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleVarDeclaration5608);
                    lv_type_3_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"type",
                      	        		lv_type_3_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2998:3: ( (lv_name_4_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2999:1: (lv_name_4_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2999:1: (lv_name_4_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3000:3: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleVarDeclaration5626); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_4_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3022:3: ( KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==KEYWORD_14) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3023:2: KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) )
                    {
                    match(input,KEYWORD_14,FollowSets000.FOLLOW_KEYWORD_14_in_ruleVarDeclaration5644); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3027:1: ( (lv_valueExpr_6_0= ruleExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3028:1: (lv_valueExpr_6_0= ruleExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3028:1: (lv_valueExpr_6_0= ruleExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3029:3: lv_valueExpr_6_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleVarDeclaration5665);
                    lv_valueExpr_6_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getVarDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"valueExpr",
                      	        		lv_valueExpr_6_0, 
                      	        		"Expression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 40, ruleVarDeclaration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleVarDeclaration


    // $ANTLR start entryRuleValDeclaration
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3059:1: entryRuleValDeclaration returns [EObject current=null] : iv_ruleValDeclaration= ruleValDeclaration EOF ;
    public final EObject entryRuleValDeclaration() throws RecognitionException {
        EObject current = null;
        int entryRuleValDeclaration_StartIndex = input.index();
        EObject iv_ruleValDeclaration = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 41) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3060:2: (iv_ruleValDeclaration= ruleValDeclaration EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3061:2: iv_ruleValDeclaration= ruleValDeclaration EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getValDeclarationRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleValDeclaration_in_entryRuleValDeclaration5702);
            iv_ruleValDeclaration=ruleValDeclaration();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleValDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleValDeclaration5712); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 41, entryRuleValDeclaration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleValDeclaration


    // $ANTLR start ruleValDeclaration
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3068:1: ruleValDeclaration returns [EObject current=null] : ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) ) ;
    public final EObject ruleValDeclaration() throws RecognitionException {
        EObject current = null;
        int ruleValDeclaration_StartIndex = input.index();
        Token lv_final_1_0=null;
        Token lv_immutable_2_0=null;
        Token lv_name_4_0=null;
        EObject lv_type_3_0 = null;

        EObject lv_valueExpr_6_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 42) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3073:6: ( ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3074:1: ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3074:1: ( () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3074:2: () ( (lv_final_1_0= KEYWORD_50 ) )? ( (lv_immutable_2_0= KEYWORD_43 ) ) ( (lv_type_3_0= ruleTypeRef ) )? ( (lv_name_4_0= RULE_ID ) ) KEYWORD_14 ( (lv_valueExpr_6_0= ruleExpression ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3074:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3075:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getValDeclarationAccess().getDefValueAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getValDeclarationAccess().getDefValueAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3088:2: ( (lv_final_1_0= KEYWORD_50 ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==KEYWORD_50) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3089:1: (lv_final_1_0= KEYWORD_50 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3089:1: (lv_final_1_0= KEYWORD_50 )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3090:3: lv_final_1_0= KEYWORD_50
                    {
                    lv_final_1_0=(Token)input.LT(1);
                    match(input,KEYWORD_50,FollowSets000.FOLLOW_KEYWORD_50_in_ruleValDeclaration5768); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0(), "final"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "final", true, "final", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3110:3: ( (lv_immutable_2_0= KEYWORD_43 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3111:1: (lv_immutable_2_0= KEYWORD_43 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3111:1: (lv_immutable_2_0= KEYWORD_43 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3112:3: lv_immutable_2_0= KEYWORD_43
            {
            lv_immutable_2_0=(Token)input.LT(1);
            match(input,KEYWORD_43,FollowSets000.FOLLOW_KEYWORD_43_in_ruleValDeclaration5801); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0(), "immutable"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "immutable", true, "val", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3132:2: ( (lv_type_3_0= ruleTypeRef ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==KEYWORD_3) ) {
                alt48=1;
            }
            else if ( (LA48_0==RULE_ID) ) {
                int LA48_2 = input.LA(2);

                if ( (LA48_2==KEYWORD_13||LA48_2==RULE_ID) ) {
                    alt48=1;
                }
            }
            switch (alt48) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3133:1: (lv_type_3_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3133:1: (lv_type_3_0= ruleTypeRef )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3134:3: lv_type_3_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleValDeclaration5835);
                    lv_type_3_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"type",
                      	        		lv_type_3_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3156:3: ( (lv_name_4_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3157:1: (lv_name_4_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3157:1: (lv_name_4_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3158:3: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleValDeclaration5853); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_4_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            match(input,KEYWORD_14,FollowSets000.FOLLOW_KEYWORD_14_in_ruleValDeclaration5869); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3185:1: ( (lv_valueExpr_6_0= ruleExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3186:1: (lv_valueExpr_6_0= ruleExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3186:1: (lv_valueExpr_6_0= ruleExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3187:3: lv_valueExpr_6_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleValDeclaration5890);
            lv_valueExpr_6_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValDeclarationRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"valueExpr",
              	        		lv_valueExpr_6_0, 
              	        		"Expression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 42, ruleValDeclaration_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleValDeclaration


    // $ANTLR start entryRuleTypeRef
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3217:1: entryRuleTypeRef returns [EObject current=null] : iv_ruleTypeRef= ruleTypeRef EOF ;
    public final EObject entryRuleTypeRef() throws RecognitionException {
        EObject current = null;
        int entryRuleTypeRef_StartIndex = input.index();
        EObject iv_ruleTypeRef = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 43) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3218:2: (iv_ruleTypeRef= ruleTypeRef EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3219:2: iv_ruleTypeRef= ruleTypeRef EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getTypeRefRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_entryRuleTypeRef5925);
            iv_ruleTypeRef=ruleTypeRef();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleTypeRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleTypeRef5935); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 43, entryRuleTypeRef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleTypeRef


    // $ANTLR start ruleTypeRef
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3226:1: ruleTypeRef returns [EObject current=null] : (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef ) ;
    public final EObject ruleTypeRef() throws RecognitionException {
        EObject current = null;
        int ruleTypeRef_StartIndex = input.index();
        EObject this_ClosureTypeRef_0 = null;

        EObject this_SimpleTypeRef_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 44) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3231:6: ( (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3232:1: (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3232:1: (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==KEYWORD_3) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_ID) ) {
                alt49=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("3232:1: (this_ClosureTypeRef_0= ruleClosureTypeRef | this_SimpleTypeRef_1= ruleSimpleTypeRef )", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3233:2: this_ClosureTypeRef_0= ruleClosureTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleClosureTypeRef_in_ruleTypeRef5985);
                    this_ClosureTypeRef_0=ruleClosureTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_ClosureTypeRef_0;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3246:2: this_SimpleTypeRef_1= ruleSimpleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleSimpleTypeRef_in_ruleTypeRef6015);
                    this_SimpleTypeRef_1=ruleSimpleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_SimpleTypeRef_1;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 44, ruleTypeRef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleTypeRef


    // $ANTLR start entryRuleSimpleTypeRef
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3265:1: entryRuleSimpleTypeRef returns [EObject current=null] : iv_ruleSimpleTypeRef= ruleSimpleTypeRef EOF ;
    public final EObject entryRuleSimpleTypeRef() throws RecognitionException {
        EObject current = null;
        int entryRuleSimpleTypeRef_StartIndex = input.index();
        EObject iv_ruleSimpleTypeRef = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 45) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3266:2: (iv_ruleSimpleTypeRef= ruleSimpleTypeRef EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3267:2: iv_ruleSimpleTypeRef= ruleSimpleTypeRef EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSimpleTypeRefRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleSimpleTypeRef_in_entryRuleSimpleTypeRef6049);
            iv_ruleSimpleTypeRef=ruleSimpleTypeRef();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSimpleTypeRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleSimpleTypeRef6059); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 45, entryRuleSimpleTypeRef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleSimpleTypeRef


    // $ANTLR start ruleSimpleTypeRef
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3274:1: ruleSimpleTypeRef returns [EObject current=null] : ( ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )? ) ;
    public final EObject ruleSimpleTypeRef() throws RecognitionException {
        EObject current = null;
        int ruleSimpleTypeRef_StartIndex = input.index();
        Token lv_rawType_0_0=null;
        Token lv_actualArgumentsList_2_0=null;
        Token lv_actualArgumentsList_4_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 46) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3279:6: ( ( ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )? ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3280:1: ( ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )? )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3280:1: ( ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )? )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3280:2: ( (lv_rawType_0_0= RULE_ID ) ) ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )?
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3280:2: ( (lv_rawType_0_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3281:1: (lv_rawType_0_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3281:1: (lv_rawType_0_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3282:3: lv_rawType_0_0= RULE_ID
            {
            lv_rawType_0_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleSimpleTypeRef6101); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0(), "rawType"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"rawType",
              	        		lv_rawType_0_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3304:2: ( KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==KEYWORD_13) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3305:2: KEYWORD_13 ( (lv_actualArgumentsList_2_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )* KEYWORD_15
                    {
                    match(input,KEYWORD_13,FollowSets000.FOLLOW_KEYWORD_13_in_ruleSimpleTypeRef6118); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3309:1: ( (lv_actualArgumentsList_2_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3310:1: (lv_actualArgumentsList_2_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3310:1: (lv_actualArgumentsList_2_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3311:3: lv_actualArgumentsList_2_0= RULE_ID
                    {
                    lv_actualArgumentsList_2_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleSimpleTypeRef6135); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0(), "actualArgumentsList"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"actualArgumentsList",
                      	        		lv_actualArgumentsList_2_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3333:2: ( KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==KEYWORD_7) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3334:2: KEYWORD_7 ( (lv_actualArgumentsList_4_0= RULE_ID ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleSimpleTypeRef6152); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3338:1: ( (lv_actualArgumentsList_4_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3339:1: (lv_actualArgumentsList_4_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3339:1: (lv_actualArgumentsList_4_0= RULE_ID )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3340:3: lv_actualArgumentsList_4_0= RULE_ID
                    	    {
                    	    lv_actualArgumentsList_4_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleSimpleTypeRef6169); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0(), "actualArgumentsList"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getSimpleTypeRefRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"actualArgumentsList",
                    	      	        		lv_actualArgumentsList_4_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    match(input,KEYWORD_15,FollowSets000.FOLLOW_KEYWORD_15_in_ruleSimpleTypeRef6187); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3(), null); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 46, ruleSimpleTypeRef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleSimpleTypeRef


    // $ANTLR start entryRuleClosureTypeRef
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3375:1: entryRuleClosureTypeRef returns [EObject current=null] : iv_ruleClosureTypeRef= ruleClosureTypeRef EOF ;
    public final EObject entryRuleClosureTypeRef() throws RecognitionException {
        EObject current = null;
        int entryRuleClosureTypeRef_StartIndex = input.index();
        EObject iv_ruleClosureTypeRef = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 47) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3376:2: (iv_ruleClosureTypeRef= ruleClosureTypeRef EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3377:2: iv_ruleClosureTypeRef= ruleClosureTypeRef EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getClosureTypeRefRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureTypeRef_in_entryRuleClosureTypeRef6224);
            iv_ruleClosureTypeRef=ruleClosureTypeRef();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleClosureTypeRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleClosureTypeRef6234); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 47, entryRuleClosureTypeRef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleClosureTypeRef


    // $ANTLR start ruleClosureTypeRef
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3384:1: ruleClosureTypeRef returns [EObject current=null] : ( KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) ) ) ;
    public final EObject ruleClosureTypeRef() throws RecognitionException {
        EObject current = null;
        int ruleClosureTypeRef_StartIndex = input.index();
        Token lv_parameterTypes_1_0=null;
        Token lv_parameterTypes_3_0=null;
        Token lv_varArgs_5_0=null;
        Token lv_parameterTypes_6_0=null;
        Token lv_varArgs_7_0=null;
        Token lv_parameterTypes_8_0=null;
        Token lv_returnType_11_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 48) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3389:6: ( ( KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3390:1: ( KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3390:1: ( KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3391:2: KEYWORD_3 ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )? KEYWORD_4 KEYWORD_33 ( (lv_returnType_11_0= RULE_ID ) )
            {
            match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleClosureTypeRef6270); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3395:1: ( ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? ) | ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) ) )?
            int alt54=3;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_ID) ) {
                alt54=1;
            }
            else if ( (LA54_0==KEYWORD_39) ) {
                alt54=2;
            }
            switch (alt54) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3395:2: ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3395:2: ( ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )? )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3395:3: ( (lv_parameterTypes_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )* ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )?
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3395:3: ( (lv_parameterTypes_1_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3396:1: (lv_parameterTypes_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3396:1: (lv_parameterTypes_1_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3397:3: lv_parameterTypes_1_0= RULE_ID
                    {
                    lv_parameterTypes_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6289); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0(), "parameterTypes"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"parameterTypes",
                      	        		lv_parameterTypes_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3419:2: ( KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) ) )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==KEYWORD_7) ) {
                            int LA52_1 = input.LA(2);

                            if ( (LA52_1==RULE_ID) ) {
                                alt52=1;
                            }


                        }


                        switch (alt52) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3420:2: KEYWORD_7 ( (lv_parameterTypes_3_0= RULE_ID ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleClosureTypeRef6306); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3424:1: ( (lv_parameterTypes_3_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3425:1: (lv_parameterTypes_3_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3425:1: (lv_parameterTypes_3_0= RULE_ID )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3426:3: lv_parameterTypes_3_0= RULE_ID
                    	    {
                    	    lv_parameterTypes_3_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6323); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0(), "parameterTypes"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"parameterTypes",
                    	      	        		lv_parameterTypes_3_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3448:4: ( KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) ) )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==KEYWORD_7) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3449:2: KEYWORD_7 ( (lv_varArgs_5_0= KEYWORD_39 ) ) ( (lv_parameterTypes_6_0= RULE_ID ) )
                            {
                            match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleClosureTypeRef6342); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0(), null); 
                                  
                            }
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3453:1: ( (lv_varArgs_5_0= KEYWORD_39 ) )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3454:1: (lv_varArgs_5_0= KEYWORD_39 )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3454:1: (lv_varArgs_5_0= KEYWORD_39 )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3455:3: lv_varArgs_5_0= KEYWORD_39
                            {
                            lv_varArgs_5_0=(Token)input.LT(1);
                            match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleClosureTypeRef6361); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0(), "varArgs"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "varArgs", true, "...", lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3475:2: ( (lv_parameterTypes_6_0= RULE_ID ) )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3476:1: (lv_parameterTypes_6_0= RULE_ID )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3476:1: (lv_parameterTypes_6_0= RULE_ID )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3477:3: lv_parameterTypes_6_0= RULE_ID
                            {
                            lv_parameterTypes_6_0=(Token)input.LT(1);
                            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6391); if (failed) return current;
                            if ( backtracking==0 ) {

                              			createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0(), "parameterTypes"); 
                              		
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        try {
                              	       		add(
                              	       			current, 
                              	       			"parameterTypes",
                              	        		lv_parameterTypes_6_0, 
                              	        		"ID", 
                              	        		lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3500:6: ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3500:6: ( ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3500:7: ( (lv_varArgs_7_0= KEYWORD_39 ) ) ( (lv_parameterTypes_8_0= RULE_ID ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3500:7: ( (lv_varArgs_7_0= KEYWORD_39 ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3501:1: (lv_varArgs_7_0= KEYWORD_39 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3501:1: (lv_varArgs_7_0= KEYWORD_39 )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3502:3: lv_varArgs_7_0= KEYWORD_39
                    {
                    lv_varArgs_7_0=(Token)input.LT(1);
                    match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleClosureTypeRef6425); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0(), "varArgs"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "varArgs", true, "...", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3522:2: ( (lv_parameterTypes_8_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3523:1: (lv_parameterTypes_8_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3523:1: (lv_parameterTypes_8_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3524:3: lv_parameterTypes_8_0= RULE_ID
                    {
                    lv_parameterTypes_8_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6455); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0(), "parameterTypes"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"parameterTypes",
                      	        		lv_parameterTypes_8_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleClosureTypeRef6474); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2(), null); 
                  
            }
            match(input,KEYWORD_33,FollowSets000.FOLLOW_KEYWORD_33_in_ruleClosureTypeRef6485); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3556:1: ( (lv_returnType_11_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3557:1: (lv_returnType_11_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3557:1: (lv_returnType_11_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3558:3: lv_returnType_11_0= RULE_ID
            {
            lv_returnType_11_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleClosureTypeRef6502); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0(), "returnType"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getClosureTypeRefRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"returnType",
              	        		lv_returnType_11_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 48, ruleClosureTypeRef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleClosureTypeRef


    // $ANTLR start entryRuleCachedExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3588:1: entryRuleCachedExpression returns [EObject current=null] : iv_ruleCachedExpression= ruleCachedExpression EOF ;
    public final EObject entryRuleCachedExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleCachedExpression_StartIndex = input.index();
        EObject iv_ruleCachedExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 49) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3589:2: (iv_ruleCachedExpression= ruleCachedExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3590:2: iv_ruleCachedExpression= ruleCachedExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCachedExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleCachedExpression_in_entryRuleCachedExpression6542);
            iv_ruleCachedExpression=ruleCachedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCachedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleCachedExpression6552); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 49, entryRuleCachedExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleCachedExpression


    // $ANTLR start ruleCachedExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3597:1: ruleCachedExpression returns [EObject current=null] : ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression ) ;
    public final EObject ruleCachedExpression() throws RecognitionException {
        EObject current = null;
        int ruleCachedExpression_StartIndex = input.index();
        EObject lv_expr_2_0 = null;

        EObject this_OrExpression_3 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 50) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3602:6: ( ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3603:1: ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3603:1: ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==KEYWORD_52) ) {
                alt55=1;
            }
            else if ( (LA55_0==KEYWORD_63||LA55_0==KEYWORD_56||(LA55_0>=KEYWORD_54 && LA55_0<=KEYWORD_55)||LA55_0==KEYWORD_51||(LA55_0>=KEYWORD_46 && LA55_0<=KEYWORD_47)||LA55_0==KEYWORD_49||LA55_0==KEYWORD_42||LA55_0==KEYWORD_25||LA55_0==KEYWORD_27||LA55_0==KEYWORD_1||LA55_0==KEYWORD_3||LA55_0==KEYWORD_8||LA55_0==KEYWORD_18||LA55_0==RULE_ID||LA55_0==RULE_STRING) ) {
                alt55=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("3603:1: ( ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) ) | this_OrExpression_3= ruleOrExpression )", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3603:2: ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3603:2: ( () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3603:3: () KEYWORD_52 ( (lv_expr_2_0= ruleOrExpression ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3603:3: ()
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3604:2: 
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0().getType().getClassifier());
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    match(input,KEYWORD_52,FollowSets000.FOLLOW_KEYWORD_52_in_ruleCachedExpression6601); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3622:1: ( (lv_expr_2_0= ruleOrExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3623:1: (lv_expr_2_0= ruleOrExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3623:1: (lv_expr_2_0= ruleOrExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3624:3: lv_expr_2_0= ruleOrExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleOrExpression_in_ruleCachedExpression6622);
                    lv_expr_2_0=ruleOrExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getCachedExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"expr",
                      	        		lv_expr_2_0, 
                      	        		"OrExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3648:2: this_OrExpression_3= ruleOrExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleOrExpression_in_ruleCachedExpression6654);
                    this_OrExpression_3=ruleOrExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_OrExpression_3;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 50, ruleCachedExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleCachedExpression


    // $ANTLR start entryRuleOrExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3667:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleOrExpression_StartIndex = input.index();
        EObject iv_ruleOrExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 51) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3668:2: (iv_ruleOrExpression= ruleOrExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3669:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getOrExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleOrExpression_in_entryRuleOrExpression6688);
            iv_ruleOrExpression=ruleOrExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleOrExpression6698); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 51, entryRuleOrExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleOrExpression


    // $ANTLR start ruleOrExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3676:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;
        int ruleOrExpression_StartIndex = input.index();
        EObject this_AndExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 52) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3681:6: ( (this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3682:1: (this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3682:1: (this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3683:2: this_AndExpression_0= ruleAndExpression ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleAndExpression_in_ruleOrExpression6748);
            this_AndExpression_0=ruleAndExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_AndExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3694:1: ( () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==KEYWORD_36) ) {
                    int LA56_2 = input.LA(2);

                    if ( (synpred85()) ) {
                        alt56=1;
                    }


                }


                switch (alt56) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3694:2: () KEYWORD_36 ( (lv_rightExpr_3_0= ruleAndExpression ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3694:2: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3695:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_36,FollowSets000.FOLLOW_KEYWORD_36_in_ruleOrExpression6771); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3718:1: ( (lv_rightExpr_3_0= ruleAndExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3719:1: (lv_rightExpr_3_0= ruleAndExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3719:1: (lv_rightExpr_3_0= ruleAndExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3720:3: lv_rightExpr_3_0= ruleAndExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleAndExpression_in_ruleOrExpression6792);
            	    lv_rightExpr_3_0=ruleAndExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getOrExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"AndExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 52, ruleOrExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleOrExpression


    // $ANTLR start entryRuleAndExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3750:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAndExpression_StartIndex = input.index();
        EObject iv_ruleAndExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 53) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3751:2: (iv_ruleAndExpression= ruleAndExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3752:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAndExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAndExpression_in_entryRuleAndExpression6829);
            iv_ruleAndExpression=ruleAndExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAndExpression6839); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 53, entryRuleAndExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleAndExpression


    // $ANTLR start ruleAndExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3759:1: ruleAndExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;
        int ruleAndExpression_StartIndex = input.index();
        EObject this_RelationalExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 54) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3764:6: ( (this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3765:1: (this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3765:1: (this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3766:2: this_RelationalExpression_0= ruleRelationalExpression ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleRelationalExpression_in_ruleAndExpression6889);
            this_RelationalExpression_0=ruleRelationalExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3777:1: ( () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==KEYWORD_23) ) {
                    int LA57_2 = input.LA(2);

                    if ( (synpred86()) ) {
                        alt57=1;
                    }


                }


                switch (alt57) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3777:2: () KEYWORD_23 ( (lv_rightExpr_3_0= ruleRelationalExpression ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3777:2: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3778:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_23,FollowSets000.FOLLOW_KEYWORD_23_in_ruleAndExpression6912); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3801:1: ( (lv_rightExpr_3_0= ruleRelationalExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3802:1: (lv_rightExpr_3_0= ruleRelationalExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3802:1: (lv_rightExpr_3_0= ruleRelationalExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3803:3: lv_rightExpr_3_0= ruleRelationalExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleRelationalExpression_in_ruleAndExpression6933);
            	    lv_rightExpr_3_0=ruleRelationalExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAndExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"RelationalExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 54, ruleAndExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleAndExpression


    // $ANTLR start entryRuleRelationalExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3833:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleRelationalExpression_StartIndex = input.index();
        EObject iv_ruleRelationalExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 55) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3834:2: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3835:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getRelationalExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression6970);
            iv_ruleRelationalExpression=ruleRelationalExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleRelationalExpression6980); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 55, entryRuleRelationalExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleRelationalExpression


    // $ANTLR start ruleRelationalExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3842:1: ruleRelationalExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;
        int ruleRelationalExpression_StartIndex = input.index();
        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_functionName_2_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 56) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3847:6: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3848:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3848:1: (this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3849:2: this_AdditiveExpression_0= ruleAdditiveExpression ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression7030);
            this_AdditiveExpression_0=ruleAdditiveExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_AdditiveExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3860:1: ( () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) ) )*
            loop58:
            do {
                int alt58=2;
                switch ( input.LA(1) ) {
                case KEYWORD_37:
                    {
                    int LA58_2 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case KEYWORD_32:
                    {
                    int LA58_3 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case KEYWORD_40:
                    {
                    int LA58_4 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case KEYWORD_21:
                    {
                    int LA58_5 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case KEYWORD_38:
                    {
                    int LA58_6 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case KEYWORD_34:
                    {
                    int LA58_7 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case KEYWORD_31:
                    {
                    int LA58_8 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case KEYWORD_15:
                    {
                    int LA58_9 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case KEYWORD_13:
                    {
                    int LA58_10 = input.LA(2);

                    if ( (synpred87()) ) {
                        alt58=1;
                    }


                    }
                    break;

                }

                switch (alt58) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3860:2: () ( (lv_functionName_2_0= ruleRelationalOperator ) ) ( (lv_rightExpr_3_0= ruleAdditiveExpression ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3860:2: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3861:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3879:2: ( (lv_functionName_2_0= ruleRelationalOperator ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3880:1: (lv_functionName_2_0= ruleRelationalOperator )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3880:1: (lv_functionName_2_0= ruleRelationalOperator )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3881:3: lv_functionName_2_0= ruleRelationalOperator
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleRelationalOperator_in_ruleRelationalExpression7063);
            	    lv_functionName_2_0=ruleRelationalOperator();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"functionName",
            	      	        		lv_functionName_2_0, 
            	      	        		"RelationalOperator", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3903:2: ( (lv_rightExpr_3_0= ruleAdditiveExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3904:1: (lv_rightExpr_3_0= ruleAdditiveExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3904:1: (lv_rightExpr_3_0= ruleAdditiveExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3905:3: lv_rightExpr_3_0= ruleAdditiveExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression7084);
            	    lv_rightExpr_3_0=ruleAdditiveExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getRelationalExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"AdditiveExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 56, ruleRelationalExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleRelationalExpression


    // $ANTLR start entryRuleAdditiveExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3935:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleAdditiveExpression_StartIndex = input.index();
        EObject iv_ruleAdditiveExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 57) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3936:2: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3937:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getAdditiveExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression7121);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleAdditiveExpression7131); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 57, entryRuleAdditiveExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleAdditiveExpression


    // $ANTLR start ruleAdditiveExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3944:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;
        int ruleAdditiveExpression_StartIndex = input.index();
        Token lv_functionName_2_1=null;
        Token lv_functionName_2_2=null;
        EObject this_MultiplicativeExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 58) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3949:6: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3950:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3950:1: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3951:2: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression7181);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_MultiplicativeExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3962:1: ( () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==KEYWORD_6) ) {
                    int LA60_2 = input.LA(2);

                    if ( (synpred89()) ) {
                        alt60=1;
                    }


                }
                else if ( (LA60_0==KEYWORD_8) ) {
                    int LA60_3 = input.LA(2);

                    if ( (synpred89()) ) {
                        alt60=1;
                    }


                }


                switch (alt60) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3962:2: () ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) ) ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3962:2: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3963:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3981:2: ( ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3982:1: ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3982:1: ( (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3983:1: (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3983:1: (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 )
            	    int alt59=2;
            	    int LA59_0 = input.LA(1);

            	    if ( (LA59_0==KEYWORD_6) ) {
            	        alt59=1;
            	    }
            	    else if ( (LA59_0==KEYWORD_8) ) {
            	        alt59=2;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("3983:1: (lv_functionName_2_1= KEYWORD_6 | lv_functionName_2_2= KEYWORD_8 )", 59, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt59) {
            	        case 1 :
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3984:3: lv_functionName_2_1= KEYWORD_6
            	            {
            	            lv_functionName_2_1=(Token)input.LT(1);
            	            match(input,KEYWORD_6,FollowSets000.FOLLOW_KEYWORD_6_in_ruleAdditiveExpression7214); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4003:8: lv_functionName_2_2= KEYWORD_8
            	            {
            	            lv_functionName_2_2=(Token)input.LT(1);
            	            match(input,KEYWORD_8,FollowSets000.FOLLOW_KEYWORD_8_in_ruleAdditiveExpression7244); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4025:2: ( (lv_rightExpr_3_0= ruleMultiplicativeExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4026:1: (lv_rightExpr_3_0= ruleMultiplicativeExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4026:1: (lv_rightExpr_3_0= ruleMultiplicativeExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4027:3: lv_rightExpr_3_0= ruleMultiplicativeExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression7281);
            	    lv_rightExpr_3_0=ruleMultiplicativeExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getAdditiveExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"MultiplicativeExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 58, ruleAdditiveExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleAdditiveExpression


    // $ANTLR start entryRuleMultiplicativeExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4057:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleMultiplicativeExpression_StartIndex = input.index();
        EObject iv_ruleMultiplicativeExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 59) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4058:2: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4059:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression7318);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleMultiplicativeExpression7328); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 59, entryRuleMultiplicativeExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleMultiplicativeExpression


    // $ANTLR start ruleMultiplicativeExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4066:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;
        int ruleMultiplicativeExpression_StartIndex = input.index();
        Token lv_functionName_2_1=null;
        Token lv_functionName_2_2=null;
        Token lv_functionName_2_3=null;
        EObject this_SetExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 60) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4071:6: ( (this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4072:1: (this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4072:1: (this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4073:2: this_SetExpression_0= ruleSetExpression ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression7378);
            this_SetExpression_0=ruleSetExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_SetExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4084:1: ( () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) ) )*
            loop62:
            do {
                int alt62=2;
                switch ( input.LA(1) ) {
                case KEYWORD_5:
                    {
                    int LA62_2 = input.LA(2);

                    if ( (synpred92()) ) {
                        alt62=1;
                    }


                    }
                    break;
                case KEYWORD_10:
                    {
                    int LA62_3 = input.LA(2);

                    if ( (synpred92()) ) {
                        alt62=1;
                    }


                    }
                    break;
                case KEYWORD_2:
                    {
                    int LA62_4 = input.LA(2);

                    if ( (synpred92()) ) {
                        alt62=1;
                    }


                    }
                    break;

                }

                switch (alt62) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4084:2: () ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) ) ( (lv_rightExpr_3_0= ruleSetExpression ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4084:2: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4085:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4103:2: ( ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4104:1: ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4104:1: ( (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4105:1: (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4105:1: (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 )
            	    int alt61=3;
            	    switch ( input.LA(1) ) {
            	    case KEYWORD_5:
            	        {
            	        alt61=1;
            	        }
            	        break;
            	    case KEYWORD_10:
            	        {
            	        alt61=2;
            	        }
            	        break;
            	    case KEYWORD_2:
            	        {
            	        alt61=3;
            	        }
            	        break;
            	    default:
            	        if (backtracking>0) {failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("4105:1: (lv_functionName_2_1= KEYWORD_5 | lv_functionName_2_2= KEYWORD_10 | lv_functionName_2_3= KEYWORD_2 )", 61, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt61) {
            	        case 1 :
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4106:3: lv_functionName_2_1= KEYWORD_5
            	            {
            	            lv_functionName_2_1=(Token)input.LT(1);
            	            match(input,KEYWORD_5,FollowSets000.FOLLOW_KEYWORD_5_in_ruleMultiplicativeExpression7411); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4125:8: lv_functionName_2_2= KEYWORD_10
            	            {
            	            lv_functionName_2_2=(Token)input.LT(1);
            	            match(input,KEYWORD_10,FollowSets000.FOLLOW_KEYWORD_10_in_ruleMultiplicativeExpression7441); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4144:8: lv_functionName_2_3= KEYWORD_2
            	            {
            	            lv_functionName_2_3=(Token)input.LT(1);
            	            match(input,KEYWORD_2,FollowSets000.FOLLOW_KEYWORD_2_in_ruleMultiplicativeExpression7471); if (failed) return current;
            	            if ( backtracking==0 ) {

            	                      createLeafNode(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2(), "functionName"); 
            	                  
            	            }
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode, current);
            	              	        }
            	              	        
            	              	        try {
            	              	       		set(current, "functionName", lv_functionName_2_3, null, lastConsumedNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4166:2: ( (lv_rightExpr_3_0= ruleSetExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4167:1: (lv_rightExpr_3_0= ruleSetExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4167:1: (lv_rightExpr_3_0= ruleSetExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4168:3: lv_rightExpr_3_0= ruleSetExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression7508);
            	    lv_rightExpr_3_0=ruleSetExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"SetExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 60, ruleMultiplicativeExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleMultiplicativeExpression


    // $ANTLR start entryRuleSetExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4198:1: entryRuleSetExpression returns [EObject current=null] : iv_ruleSetExpression= ruleSetExpression EOF ;
    public final EObject entryRuleSetExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleSetExpression_StartIndex = input.index();
        EObject iv_ruleSetExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 61) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4199:2: (iv_ruleSetExpression= ruleSetExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4200:2: iv_ruleSetExpression= ruleSetExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getSetExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleSetExpression_in_entryRuleSetExpression7545);
            iv_ruleSetExpression=ruleSetExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleSetExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleSetExpression7555); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 61, entryRuleSetExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleSetExpression


    // $ANTLR start ruleSetExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4207:1: ruleSetExpression returns [EObject current=null] : (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )* ) ;
    public final EObject ruleSetExpression() throws RecognitionException {
        EObject current = null;
        int ruleSetExpression_StartIndex = input.index();
        Token lv_functionName_2_0=null;
        EObject this_UnaryOrInfixExpression_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 62) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4212:6: ( (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4213:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4213:1: (this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4214:2: this_UnaryOrInfixExpression_0= ruleUnaryOrInfixExpression ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression7605);
            this_UnaryOrInfixExpression_0=ruleUnaryOrInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_UnaryOrInfixExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4225:1: ( () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) ) )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==KEYWORD_29) ) {
                    int LA63_2 = input.LA(2);

                    if ( (synpred93()) ) {
                        alt63=1;
                    }


                }


                switch (alt63) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4225:2: () ( (lv_functionName_2_0= KEYWORD_29 ) ) ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4225:2: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4226:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "leftExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4244:2: ( (lv_functionName_2_0= KEYWORD_29 ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4245:1: (lv_functionName_2_0= KEYWORD_29 )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4245:1: (lv_functionName_2_0= KEYWORD_29 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4246:3: lv_functionName_2_0= KEYWORD_29
            	    {
            	    lv_functionName_2_0=(Token)input.LT(1);
            	    match(input,KEYWORD_29,FollowSets000.FOLLOW_KEYWORD_29_in_ruleSetExpression7636); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0(), "functionName"); 
            	          
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSetExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        
            	      	        try {
            	      	       		set(current, "functionName", lv_functionName_2_0, "..", lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4266:2: ( (lv_rightExpr_3_0= ruleUnaryOrInfixExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4267:1: (lv_rightExpr_3_0= ruleUnaryOrInfixExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4267:1: (lv_rightExpr_3_0= ruleUnaryOrInfixExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4268:3: lv_rightExpr_3_0= ruleUnaryOrInfixExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression7670);
            	    lv_rightExpr_3_0=ruleUnaryOrInfixExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getSetExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"rightExpr",
            	      	        		lv_rightExpr_3_0, 
            	      	        		"UnaryOrInfixExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 62, ruleSetExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleSetExpression


    // $ANTLR start entryRuleUnaryOrInfixExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4298:1: entryRuleUnaryOrInfixExpression returns [EObject current=null] : iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF ;
    public final EObject entryRuleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleUnaryOrInfixExpression_StartIndex = input.index();
        EObject iv_ruleUnaryOrInfixExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 63) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4299:2: (iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4300:2: iv_ruleUnaryOrInfixExpression= ruleUnaryOrInfixExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnaryOrInfixExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression7707);
            iv_ruleUnaryOrInfixExpression=ruleUnaryOrInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnaryOrInfixExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression7717); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 63, entryRuleUnaryOrInfixExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryOrInfixExpression


    // $ANTLR start ruleUnaryOrInfixExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4307:1: ruleUnaryOrInfixExpression returns [EObject current=null] : (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression ) ;
    public final EObject ruleUnaryOrInfixExpression() throws RecognitionException {
        EObject current = null;
        int ruleUnaryOrInfixExpression_StartIndex = input.index();
        EObject this_PostopExpression_0 = null;

        EObject this_UnaryExpression_1 = null;

        EObject this_PreopExpression_2 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 64) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4312:6: ( (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4313:1: (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4313:1: (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression )
            int alt64=3;
            switch ( input.LA(1) ) {
            case KEYWORD_63:
            case KEYWORD_56:
            case KEYWORD_54:
            case KEYWORD_55:
            case KEYWORD_51:
            case KEYWORD_46:
            case KEYWORD_47:
            case KEYWORD_49:
            case KEYWORD_42:
            case KEYWORD_3:
            case KEYWORD_18:
            case RULE_ID:
            case RULE_STRING:
                {
                alt64=1;
                }
                break;
            case KEYWORD_1:
            case KEYWORD_8:
                {
                alt64=2;
                }
                break;
            case KEYWORD_25:
            case KEYWORD_27:
                {
                alt64=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4313:1: (this_PostopExpression_0= rulePostopExpression | this_UnaryExpression_1= ruleUnaryExpression | this_PreopExpression_2= rulePreopExpression )", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4314:2: this_PostopExpression_0= rulePostopExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression7767);
                    this_PostopExpression_0=rulePostopExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_PostopExpression_0;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4327:2: this_UnaryExpression_1= ruleUnaryExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression7797);
                    this_UnaryExpression_1=ruleUnaryExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_UnaryExpression_1;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4340:2: this_PreopExpression_2= rulePreopExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePreopExpression_in_ruleUnaryOrInfixExpression7827);
                    this_PreopExpression_2=rulePreopExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_PreopExpression_2;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 64, ruleUnaryOrInfixExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleUnaryOrInfixExpression


    // $ANTLR start entryRuleUnaryExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4359:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleUnaryExpression_StartIndex = input.index();
        EObject iv_ruleUnaryExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 65) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4360:2: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4361:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getUnaryExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression7861);
            iv_ruleUnaryExpression=ruleUnaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleUnaryExpression7871); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 65, entryRuleUnaryExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleUnaryExpression


    // $ANTLR start ruleUnaryExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4368:1: ruleUnaryExpression returns [EObject current=null] : ( () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;
        int ruleUnaryExpression_StartIndex = input.index();
        Token lv_functionName_1_1=null;
        Token lv_functionName_1_2=null;
        EObject lv_expr_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 66) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4373:6: ( ( () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4374:1: ( () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4374:1: ( () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4374:2: () ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4374:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4375:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4388:2: ( ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4389:1: ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4389:1: ( (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4390:1: (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4390:1: (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==KEYWORD_1) ) {
                alt65=1;
            }
            else if ( (LA65_0==KEYWORD_8) ) {
                alt65=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4390:1: (lv_functionName_1_1= KEYWORD_1 | lv_functionName_1_2= KEYWORD_8 )", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4391:3: lv_functionName_1_1= KEYWORD_1
                    {
                    lv_functionName_1_1=(Token)input.LT(1);
                    match(input,KEYWORD_1,FollowSets000.FOLLOW_KEYWORD_1_in_ruleUnaryExpression7929); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0(), "functionName"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "functionName", lv_functionName_1_1, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4410:8: lv_functionName_1_2= KEYWORD_8
                    {
                    lv_functionName_1_2=(Token)input.LT(1);
                    match(input,KEYWORD_8,FollowSets000.FOLLOW_KEYWORD_8_in_ruleUnaryExpression7959); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1(), "functionName"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "functionName", lv_functionName_1_2, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4432:2: ( (lv_expr_2_0= ruleInfixExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4433:1: (lv_expr_2_0= ruleInfixExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4433:1: (lv_expr_2_0= ruleInfixExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4434:3: lv_expr_2_0= ruleInfixExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleInfixExpression_in_ruleUnaryExpression7996);
            lv_expr_2_0=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getUnaryExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_2_0, 
              	        		"InfixExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 66, ruleUnaryExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleUnaryExpression


    // $ANTLR start entryRulePreopExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4464:1: entryRulePreopExpression returns [EObject current=null] : iv_rulePreopExpression= rulePreopExpression EOF ;
    public final EObject entryRulePreopExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePreopExpression_StartIndex = input.index();
        EObject iv_rulePreopExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 67) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4465:2: (iv_rulePreopExpression= rulePreopExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4466:2: iv_rulePreopExpression= rulePreopExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPreopExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePreopExpression_in_entryRulePreopExpression8031);
            iv_rulePreopExpression=rulePreopExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePreopExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePreopExpression8041); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 67, entryRulePreopExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRulePreopExpression


    // $ANTLR start rulePreopExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4473:1: rulePreopExpression returns [EObject current=null] : ( () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) ) ;
    public final EObject rulePreopExpression() throws RecognitionException {
        EObject current = null;
        int rulePreopExpression_StartIndex = input.index();
        Token lv_functionName_1_1=null;
        Token lv_functionName_1_2=null;
        EObject lv_expr_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 68) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4478:6: ( ( () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4479:1: ( () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4479:1: ( () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4479:2: () ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) ) ( (lv_expr_2_0= ruleInfixExpression ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4479:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4480:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4493:2: ( ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4494:1: ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4494:1: ( (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4495:1: (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4495:1: (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==KEYWORD_25) ) {
                alt66=1;
            }
            else if ( (LA66_0==KEYWORD_27) ) {
                alt66=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4495:1: (lv_functionName_1_1= KEYWORD_25 | lv_functionName_1_2= KEYWORD_27 )", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4496:3: lv_functionName_1_1= KEYWORD_25
                    {
                    lv_functionName_1_1=(Token)input.LT(1);
                    match(input,KEYWORD_25,FollowSets000.FOLLOW_KEYWORD_25_in_rulePreopExpression8099); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0(), "functionName"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "functionName", lv_functionName_1_1, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4515:8: lv_functionName_1_2= KEYWORD_27
                    {
                    lv_functionName_1_2=(Token)input.LT(1);
                    match(input,KEYWORD_27,FollowSets000.FOLLOW_KEYWORD_27_in_rulePreopExpression8129); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1(), "functionName"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "functionName", lv_functionName_1_2, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4537:2: ( (lv_expr_2_0= ruleInfixExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4538:1: (lv_expr_2_0= ruleInfixExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4538:1: (lv_expr_2_0= ruleInfixExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4539:3: lv_expr_2_0= ruleInfixExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleInfixExpression_in_rulePreopExpression8166);
            lv_expr_2_0=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getPreopExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_2_0, 
              	        		"InfixExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 68, rulePreopExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end rulePreopExpression


    // $ANTLR start entryRulePostopExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4569:1: entryRulePostopExpression returns [EObject current=null] : iv_rulePostopExpression= rulePostopExpression EOF ;
    public final EObject entryRulePostopExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePostopExpression_StartIndex = input.index();
        EObject iv_rulePostopExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 69) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4570:2: (iv_rulePostopExpression= rulePostopExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4571:2: iv_rulePostopExpression= rulePostopExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPostopExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePostopExpression_in_entryRulePostopExpression8201);
            iv_rulePostopExpression=rulePostopExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePostopExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePostopExpression8211); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 69, entryRulePostopExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRulePostopExpression


    // $ANTLR start rulePostopExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4578:1: rulePostopExpression returns [EObject current=null] : (this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )? ) ;
    public final EObject rulePostopExpression() throws RecognitionException {
        EObject current = null;
        int rulePostopExpression_StartIndex = input.index();
        Token lv_functionName_2_1=null;
        Token lv_functionName_2_2=null;
        EObject this_InfixExpression_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 70) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4583:6: ( (this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )? ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4584:1: (this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )? )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4584:1: (this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )? )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4585:2: this_InfixExpression_0= ruleInfixExpression ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )?
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleInfixExpression_in_rulePostopExpression8261);
            this_InfixExpression_0=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_InfixExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4596:1: ( () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==KEYWORD_27) ) {
                int LA68_1 = input.LA(2);

                if ( (synpred99()) ) {
                    alt68=1;
                }
            }
            else if ( (LA68_0==KEYWORD_25) ) {
                int LA68_2 = input.LA(2);

                if ( (synpred99()) ) {
                    alt68=1;
                }
            }
            switch (alt68) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4596:2: () ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4596:2: ()
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4597:2: 
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              temp=factory.create(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0().getType().getClassifier());
                              try {
                              	factory.set(temp, "expr", current, null /*ParserRule*/, currentNode);
                              } catch(ValueConverterException vce) {
                              	handleValueConverterException(vce);
                              }
                              current = temp; 
                              temp = null;
                              CompositeNode newNode = createCompositeNode(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0(), currentNode.getParent());
                          newNode.getChildren().add(currentNode);
                          moveLookaheadInfo(currentNode, newNode);
                          currentNode = newNode; 
                              associateNodeWithAstElement(currentNode, current); 
                          
                    }

                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4615:2: ( ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4616:1: ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4616:1: ( (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4617:1: (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4617:1: (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 )
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==KEYWORD_27) ) {
                        alt67=1;
                    }
                    else if ( (LA67_0==KEYWORD_25) ) {
                        alt67=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4617:1: (lv_functionName_2_1= KEYWORD_27 | lv_functionName_2_2= KEYWORD_25 )", 67, 0, input);

                        throw nvae;
                    }
                    switch (alt67) {
                        case 1 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4618:3: lv_functionName_2_1= KEYWORD_27
                            {
                            lv_functionName_2_1=(Token)input.LT(1);
                            match(input,KEYWORD_27,FollowSets000.FOLLOW_KEYWORD_27_in_rulePostopExpression8294); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0(), "functionName"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "functionName", lv_functionName_2_1, null, lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4637:8: lv_functionName_2_2= KEYWORD_25
                            {
                            lv_functionName_2_2=(Token)input.LT(1);
                            match(input,KEYWORD_25,FollowSets000.FOLLOW_KEYWORD_25_in_rulePostopExpression8324); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1(), "functionName"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getPostopExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "functionName", lv_functionName_2_2, null, lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 70, rulePostopExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end rulePostopExpression


    // $ANTLR start entryRuleInfixExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4667:1: entryRuleInfixExpression returns [EObject current=null] : iv_ruleInfixExpression= ruleInfixExpression EOF ;
    public final EObject entryRuleInfixExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleInfixExpression_StartIndex = input.index();
        EObject iv_ruleInfixExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 71) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4668:2: (iv_ruleInfixExpression= ruleInfixExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4669:2: iv_ruleInfixExpression= ruleInfixExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInfixExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression8377);
            iv_ruleInfixExpression=ruleInfixExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInfixExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleInfixExpression8387); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 71, entryRuleInfixExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleInfixExpression


    // $ANTLR start ruleInfixExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4676:1: ruleInfixExpression returns [EObject current=null] : (this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )* ) ;
    public final EObject ruleInfixExpression() throws RecognitionException {
        EObject current = null;
        int ruleInfixExpression_StartIndex = input.index();
        Token lv_name_3_0=null;
        Token lv_featureName_13_0=null;
        EObject this_CallExpression_0 = null;

        EObject lv_parameterList_5_0 = null;

        EObject lv_indexExpr_9_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 72) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4681:6: ( (this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4682:1: (this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4682:1: (this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4683:2: this_CallExpression_0= ruleCallExpression ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleCallExpression_in_ruleInfixExpression8437);
            this_CallExpression_0=ruleCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_CallExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:1: ( ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 ) | ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 ) | ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) ) )*
            loop70:
            do {
                int alt70=4;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==KEYWORD_9) ) {
                    int LA70_2 = input.LA(2);

                    if ( (synpred101()) ) {
                        alt70=1;
                    }
                    else if ( (synpred103()) ) {
                        alt70=3;
                    }


                }
                else if ( (LA70_0==KEYWORD_16) ) {
                    int LA70_3 = input.LA(2);

                    if ( (synpred102()) ) {
                        alt70=2;
                    }


                }


                switch (alt70) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:2: ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:2: ( () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:3: () KEYWORD_9 ( (lv_name_3_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_5_0= ruleParameterList ) )? KEYWORD_4
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:3: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4695:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "funcExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_ruleInfixExpression8461); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4718:1: ( (lv_name_3_0= RULE_ID ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4719:1: (lv_name_3_0= RULE_ID )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4719:1: (lv_name_3_0= RULE_ID )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4720:3: lv_name_3_0= RULE_ID
            	    {
            	    lv_name_3_0=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleInfixExpression8478); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0(), "name"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"name",
            	      	        		lv_name_3_0, 
            	      	        		"ID", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleInfixExpression8494); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4747:1: ( (lv_parameterList_5_0= ruleParameterList ) )?
            	    int alt69=2;
            	    int LA69_0 = input.LA(1);

            	    if ( (LA69_0==KEYWORD_63||LA69_0==KEYWORD_56||LA69_0==KEYWORD_52||(LA69_0>=KEYWORD_54 && LA69_0<=KEYWORD_55)||LA69_0==KEYWORD_51||(LA69_0>=KEYWORD_46 && LA69_0<=KEYWORD_47)||LA69_0==KEYWORD_49||LA69_0==KEYWORD_39||LA69_0==KEYWORD_42||LA69_0==KEYWORD_25||LA69_0==KEYWORD_27||LA69_0==KEYWORD_1||LA69_0==KEYWORD_3||LA69_0==KEYWORD_8||LA69_0==KEYWORD_13||(LA69_0>=KEYWORD_18 && LA69_0<=KEYWORD_19)||LA69_0==RULE_ID||LA69_0==RULE_STRING) ) {
            	        alt69=1;
            	    }
            	    switch (alt69) {
            	        case 1 :
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4748:1: (lv_parameterList_5_0= ruleParameterList )
            	            {
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4748:1: (lv_parameterList_5_0= ruleParameterList )
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4749:3: lv_parameterList_5_0= ruleParameterList
            	            {
            	            if ( backtracking==0 ) {
            	               
            	              	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0(), currentNode); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleInfixExpression8515);
            	            lv_parameterList_5_0=ruleParameterList();
            	            _fsp--;
            	            if (failed) return current;
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode.getParent(), current);
            	              	        }
            	              	        try {
            	              	       		set(
            	              	       			current, 
            	              	       			"parameterList",
            	              	        		lv_parameterList_5_0, 
            	              	        		"ParameterList", 
            	              	        		currentNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	        currentNode = currentNode.getParent();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleInfixExpression8527); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:6: ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:6: ( () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17 )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:7: () KEYWORD_16 ( (lv_indexExpr_9_0= ruleExpression ) ) KEYWORD_17
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:7: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4778:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "objExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_16,FollowSets000.FOLLOW_KEYWORD_16_in_ruleInfixExpression8558); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4801:1: ( (lv_indexExpr_9_0= ruleExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4802:1: (lv_indexExpr_9_0= ruleExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4802:1: (lv_indexExpr_9_0= ruleExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4803:3: lv_indexExpr_9_0= ruleExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleInfixExpression8579);
            	    lv_indexExpr_9_0=ruleExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"indexExpr",
            	      	        		lv_indexExpr_9_0, 
            	      	        		"Expression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_17,FollowSets000.FOLLOW_KEYWORD_17_in_ruleInfixExpression8590); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3(), null); 
            	          
            	    }

            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:6: ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:6: ( () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:7: () KEYWORD_9 ( (lv_featureName_13_0= RULE_ID ) )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:7: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4832:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "objExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_ruleInfixExpression8621); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4855:1: ( (lv_featureName_13_0= RULE_ID ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4856:1: (lv_featureName_13_0= RULE_ID )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4856:1: (lv_featureName_13_0= RULE_ID )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4857:3: lv_featureName_13_0= RULE_ID
            	    {
            	    lv_featureName_13_0=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleInfixExpression8638); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      			createLeafNode(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0(), "featureName"); 
            	      		
            	    }
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getInfixExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode, current);
            	      	        }
            	      	        try {
            	      	       		set(
            	      	       			current, 
            	      	       			"featureName",
            	      	        		lv_featureName_13_0, 
            	      	        		"ID", 
            	      	        		lastConsumedNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 72, ruleInfixExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleInfixExpression


    // $ANTLR start entryRuleCallExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4887:1: entryRuleCallExpression returns [EObject current=null] : iv_ruleCallExpression= ruleCallExpression EOF ;
    public final EObject entryRuleCallExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleCallExpression_StartIndex = input.index();
        EObject iv_ruleCallExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 73) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4888:2: (iv_ruleCallExpression= ruleCallExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4889:2: iv_ruleCallExpression= ruleCallExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getCallExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleCallExpression_in_entryRuleCallExpression8681);
            iv_ruleCallExpression=ruleCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleCallExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleCallExpression8691); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 73, entryRuleCallExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleCallExpression


    // $ANTLR start ruleCallExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4896:1: ruleCallExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )* ) ;
    public final EObject ruleCallExpression() throws RecognitionException {
        EObject current = null;
        int ruleCallExpression_StartIndex = input.index();
        EObject this_PrimaryExpression_0 = null;

        EObject lv_parameterList_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 74) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4901:6: ( (this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4902:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4902:1: (this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4903:2: this_PrimaryExpression_0= rulePrimaryExpression ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )*
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_rulePrimaryExpression_in_ruleCallExpression8741);
            this_PrimaryExpression_0=rulePrimaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_PrimaryExpression_0;
                      currentNode = currentNode.getParent();
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4914:1: ( () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==KEYWORD_3) ) {
                    int LA72_2 = input.LA(2);

                    if ( (synpred105()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4914:2: () KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4914:2: ()
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4915:2: 
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( backtracking==0 ) {
            	       
            	              temp=factory.create(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0().getType().getClassifier());
            	              try {
            	              	factory.set(temp, "funcExpr", current, null /*ParserRule*/, currentNode);
            	              } catch(ValueConverterException vce) {
            	              	handleValueConverterException(vce);
            	              }
            	              current = temp; 
            	              temp = null;
            	              CompositeNode newNode = createCompositeNode(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0(), currentNode.getParent());
            	          newNode.getChildren().add(currentNode);
            	          moveLookaheadInfo(currentNode, newNode);
            	          currentNode = newNode; 
            	              associateNodeWithAstElement(currentNode, current); 
            	          
            	    }

            	    }

            	    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleCallExpression8764); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4938:1: ( (lv_parameterList_3_0= ruleParameterList ) )?
            	    int alt71=2;
            	    int LA71_0 = input.LA(1);

            	    if ( (LA71_0==KEYWORD_63||LA71_0==KEYWORD_56||LA71_0==KEYWORD_52||(LA71_0>=KEYWORD_54 && LA71_0<=KEYWORD_55)||LA71_0==KEYWORD_51||(LA71_0>=KEYWORD_46 && LA71_0<=KEYWORD_47)||LA71_0==KEYWORD_49||LA71_0==KEYWORD_39||LA71_0==KEYWORD_42||LA71_0==KEYWORD_25||LA71_0==KEYWORD_27||LA71_0==KEYWORD_1||LA71_0==KEYWORD_3||LA71_0==KEYWORD_8||LA71_0==KEYWORD_13||(LA71_0>=KEYWORD_18 && LA71_0<=KEYWORD_19)||LA71_0==RULE_ID||LA71_0==RULE_STRING) ) {
            	        alt71=1;
            	    }
            	    switch (alt71) {
            	        case 1 :
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4939:1: (lv_parameterList_3_0= ruleParameterList )
            	            {
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4939:1: (lv_parameterList_3_0= ruleParameterList )
            	            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4940:3: lv_parameterList_3_0= ruleParameterList
            	            {
            	            if ( backtracking==0 ) {
            	               
            	              	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0(), currentNode); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleCallExpression8785);
            	            lv_parameterList_3_0=ruleParameterList();
            	            _fsp--;
            	            if (failed) return current;
            	            if ( backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = factory.create(grammarAccess.getCallExpressionRule().getType().getClassifier());
            	              	            associateNodeWithAstElement(currentNode.getParent(), current);
            	              	        }
            	              	        try {
            	              	       		set(
            	              	       			current, 
            	              	       			"parameterList",
            	              	        		lv_parameterList_3_0, 
            	              	        		"ParameterList", 
            	              	        		currentNode);
            	              	        } catch (ValueConverterException vce) {
            	              				handleValueConverterException(vce);
            	              	        }
            	              	        currentNode = currentNode.getParent();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleCallExpression8797); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 74, ruleCallExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleCallExpression


    // $ANTLR start entryRulePrimaryExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4975:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        int entryRulePrimaryExpression_StartIndex = input.index();
        EObject iv_rulePrimaryExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 75) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4976:2: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4977:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getPrimaryExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression8834);
            iv_rulePrimaryExpression=rulePrimaryExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePrimaryExpression8844); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 75, entryRulePrimaryExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRulePrimaryExpression


    // $ANTLR start rulePrimaryExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4984:1: rulePrimaryExpression returns [EObject current=null] : (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        int rulePrimaryExpression_StartIndex = input.index();
        EObject this_FeatureCall_0 = null;

        EObject this_ConstructorCallExpression_1 = null;

        EObject this_Value_2 = null;

        EObject this_Literal_3 = null;

        EObject this_KeywordVariables_4 = null;

        EObject this_ParanthesizedExpression_5 = null;

        EObject this_BlockExpression_6 = null;

        EObject this_WithExpression_7 = null;

        EObject this_WithContextExpression_8 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 76) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4989:6: ( (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )
            int alt73=9;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA73_1 = input.LA(2);

                if ( (LA73_1==KEYWORD_3) ) {
                    int LA73_8 = input.LA(3);

                    if ( (synpred106()) ) {
                        alt73=1;
                    }
                    else if ( (synpred108()) ) {
                        alt73=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 8, input);

                        throw nvae;
                    }
                }
                else if ( (LA73_1==EOF||LA73_1==KEYWORD_38||LA73_1==KEYWORD_40||(LA73_1>=KEYWORD_21 && LA73_1<=KEYWORD_32)||(LA73_1>=KEYWORD_34 && LA73_1<=KEYWORD_37)||LA73_1==KEYWORD_2||(LA73_1>=KEYWORD_4 && LA73_1<=KEYWORD_10)||(LA73_1>=KEYWORD_12 && LA73_1<=KEYWORD_18)||LA73_1==KEYWORD_20) ) {
                    alt73=3;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 1, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_42:
                {
                alt73=2;
                }
                break;
            case RULE_STRING:
                {
                alt73=4;
                }
                break;
            case KEYWORD_18:
                {
                switch ( input.LA(2) ) {
                case KEYWORD_63:
                case KEYWORD_56:
                case KEYWORD_52:
                case KEYWORD_54:
                case KEYWORD_55:
                case KEYWORD_50:
                case KEYWORD_51:
                case KEYWORD_46:
                case KEYWORD_47:
                case KEYWORD_49:
                case KEYWORD_42:
                case KEYWORD_43:
                case KEYWORD_44:
                case KEYWORD_25:
                case KEYWORD_27:
                case KEYWORD_1:
                case KEYWORD_8:
                case KEYWORD_18:
                case KEYWORD_20:
                case RULE_STRING:
                    {
                    alt73=7;
                    }
                    break;
                case KEYWORD_3:
                    {
                    int LA73_11 = input.LA(3);

                    if ( (synpred109()) ) {
                        alt73=4;
                    }
                    else if ( (synpred112()) ) {
                        alt73=7;
                    }
                    else {
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 11, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    switch ( input.LA(3) ) {
                    case KEYWORD_38:
                    case KEYWORD_40:
                    case KEYWORD_21:
                    case KEYWORD_22:
                    case KEYWORD_23:
                    case KEYWORD_24:
                    case KEYWORD_25:
                    case KEYWORD_26:
                    case KEYWORD_27:
                    case KEYWORD_28:
                    case KEYWORD_29:
                    case KEYWORD_30:
                    case KEYWORD_31:
                    case KEYWORD_32:
                    case KEYWORD_34:
                    case KEYWORD_36:
                    case KEYWORD_37:
                    case KEYWORD_2:
                    case KEYWORD_3:
                    case KEYWORD_5:
                    case KEYWORD_6:
                    case KEYWORD_8:
                    case KEYWORD_9:
                    case KEYWORD_10:
                    case KEYWORD_12:
                    case KEYWORD_14:
                    case KEYWORD_15:
                    case KEYWORD_16:
                        {
                        alt73=7;
                        }
                        break;
                    case KEYWORD_7:
                    case KEYWORD_19:
                        {
                        alt73=4;
                        }
                        break;
                    case KEYWORD_13:
                        {
                        int LA73_16 = input.LA(4);

                        if ( (synpred109()) ) {
                            alt73=4;
                        }
                        else if ( (synpred112()) ) {
                            alt73=7;
                        }
                        else {
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 16, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_ID:
                        {
                        int LA73_17 = input.LA(4);

                        if ( (LA73_17==KEYWORD_7||LA73_17==KEYWORD_19) ) {
                            alt73=4;
                        }
                        else if ( (LA73_17==KEYWORD_12||LA73_17==KEYWORD_14) ) {
                            alt73=7;
                        }
                        else {
                            if (backtracking>0) {failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 17, input);

                            throw nvae;
                        }
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 12, input);

                        throw nvae;
                    }

                    }
                    break;
                case KEYWORD_39:
                case KEYWORD_13:
                case KEYWORD_19:
                    {
                    alt73=4;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 4, input);

                    throw nvae;
                }

                }
                break;
            case KEYWORD_63:
            case KEYWORD_56:
            case KEYWORD_54:
            case KEYWORD_55:
            case KEYWORD_51:
            case KEYWORD_46:
            case KEYWORD_47:
                {
                alt73=5;
                }
                break;
            case KEYWORD_3:
                {
                alt73=6;
                }
                break;
            case KEYWORD_49:
                {
                int LA73_7 = input.LA(2);

                if ( (LA73_7==KEYWORD_57) ) {
                    alt73=9;
                }
                else if ( (LA73_7==KEYWORD_11||LA73_7==KEYWORD_18||LA73_7==RULE_ID) ) {
                    alt73=8;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 7, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("4990:1: (this_FeatureCall_0= ruleFeatureCall | this_ConstructorCallExpression_1= ruleConstructorCallExpression | this_Value_2= ruleValue | this_Literal_3= ruleLiteral | this_KeywordVariables_4= ruleKeywordVariables | this_ParanthesizedExpression_5= ruleParanthesizedExpression | this_BlockExpression_6= ruleBlockExpression | this_WithExpression_7= ruleWithExpression | this_WithContextExpression_8= ruleWithContextExpression )", 73, 0, input);

                throw nvae;
            }

            switch (alt73) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4991:2: this_FeatureCall_0= ruleFeatureCall
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleFeatureCall_in_rulePrimaryExpression8894);
                    this_FeatureCall_0=ruleFeatureCall();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_FeatureCall_0;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5004:2: this_ConstructorCallExpression_1= ruleConstructorCallExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression8924);
                    this_ConstructorCallExpression_1=ruleConstructorCallExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_ConstructorCallExpression_1;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5017:2: this_Value_2= ruleValue
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleValue_in_rulePrimaryExpression8954);
                    this_Value_2=ruleValue();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_Value_2;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5030:2: this_Literal_3= ruleLiteral
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleLiteral_in_rulePrimaryExpression8984);
                    this_Literal_3=ruleLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_Literal_3;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5043:2: this_KeywordVariables_4= ruleKeywordVariables
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression9014);
                    this_KeywordVariables_4=ruleKeywordVariables();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_KeywordVariables_4;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5056:2: this_ParanthesizedExpression_5= ruleParanthesizedExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression9044);
                    this_ParanthesizedExpression_5=ruleParanthesizedExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_ParanthesizedExpression_5;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5069:2: this_BlockExpression_6= ruleBlockExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_rulePrimaryExpression9074);
                    this_BlockExpression_6=ruleBlockExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_BlockExpression_6;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 8 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5082:2: this_WithExpression_7= ruleWithExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleWithExpression_in_rulePrimaryExpression9104);
                    this_WithExpression_7=ruleWithExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_WithExpression_7;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5095:2: this_WithContextExpression_8= ruleWithContextExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleWithContextExpression_in_rulePrimaryExpression9134);
                    this_WithContextExpression_8=ruleWithContextExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_WithContextExpression_8;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 76, rulePrimaryExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end rulePrimaryExpression


    // $ANTLR start entryRuleWithExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5114:1: entryRuleWithExpression returns [EObject current=null] : iv_ruleWithExpression= ruleWithExpression EOF ;
    public final EObject entryRuleWithExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleWithExpression_StartIndex = input.index();
        EObject iv_ruleWithExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 77) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5115:2: (iv_ruleWithExpression= ruleWithExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5116:2: iv_ruleWithExpression= ruleWithExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getWithExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleWithExpression_in_entryRuleWithExpression9168);
            iv_ruleWithExpression=ruleWithExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleWithExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleWithExpression9178); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 77, entryRuleWithExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleWithExpression


    // $ANTLR start ruleWithExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5123:1: ruleWithExpression returns [EObject current=null] : ( KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) ) ) ;
    public final EObject ruleWithExpression() throws RecognitionException {
        EObject current = null;
        int ruleWithExpression_StartIndex = input.index();
        Token lv_referencedAdvice_1_0=null;
        Token lv_referencedAdvice_3_0=null;
        EObject lv_funcExpr_5_0 = null;

        EObject lv_funcExpr_7_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 78) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5128:6: ( ( KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5129:1: ( KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5129:1: ( KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5130:2: KEYWORD_49 ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )? ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) )
            {
            match(input,KEYWORD_49,FollowSets000.FOLLOW_KEYWORD_49_in_ruleWithExpression9214); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithExpressionAccess().getWithKeyword_0(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5134:1: ( ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )* )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_ID) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5134:2: ( (lv_referencedAdvice_1_0= RULE_ID ) ) ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )*
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5134:2: ( (lv_referencedAdvice_1_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5135:1: (lv_referencedAdvice_1_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5135:1: (lv_referencedAdvice_1_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5136:3: lv_referencedAdvice_1_0= RULE_ID
                    {
                    lv_referencedAdvice_1_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleWithExpression9232); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0(), "referencedAdvice"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"referencedAdvice",
                      	        		lv_referencedAdvice_1_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5158:2: ( KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) ) )*
                    loop74:
                    do {
                        int alt74=2;
                        int LA74_0 = input.LA(1);

                        if ( (LA74_0==KEYWORD_7) ) {
                            alt74=1;
                        }


                        switch (alt74) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5159:2: KEYWORD_7 ( (lv_referencedAdvice_3_0= RULE_ID ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleWithExpression9249); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5163:1: ( (lv_referencedAdvice_3_0= RULE_ID ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5164:1: (lv_referencedAdvice_3_0= RULE_ID )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5164:1: (lv_referencedAdvice_3_0= RULE_ID )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5165:3: lv_referencedAdvice_3_0= RULE_ID
                    	    {
                    	    lv_referencedAdvice_3_0=(Token)input.LT(1);
                    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleWithExpression9266); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      			createLeafNode(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0(), "referencedAdvice"); 
                    	      		
                    	    }
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode, current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"referencedAdvice",
                    	      	        		lv_referencedAdvice_3_0, 
                    	      	        		"ID", 
                    	      	        		lastConsumedNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop74;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5187:6: ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==KEYWORD_11) ) {
                alt76=1;
            }
            else if ( (LA76_0==KEYWORD_18) ) {
                alt76=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("5187:6: ( ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) ) | ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 ) )", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5187:7: ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5187:7: ( KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5188:2: KEYWORD_11 ( (lv_funcExpr_5_0= ruleExpression ) )
                    {
                    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleWithExpression9288); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5192:1: ( (lv_funcExpr_5_0= ruleExpression ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5193:1: (lv_funcExpr_5_0= ruleExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5193:1: (lv_funcExpr_5_0= ruleExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5194:3: lv_funcExpr_5_0= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleWithExpression9309);
                    lv_funcExpr_5_0=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"funcExpr",
                      	        		lv_funcExpr_5_0, 
                      	        		"Expression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5217:6: ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5217:6: ( KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20 )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5218:2: KEYWORD_18 ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) ) KEYWORD_20
                    {
                    match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleWithExpression9328); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5222:1: ( (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5223:1: (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5223:1: (lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5224:3: lv_funcExpr_7_0= ruleBlockExpressionWithoutBrackets
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpressionWithoutBrackets_in_ruleWithExpression9349);
                    lv_funcExpr_7_0=ruleBlockExpressionWithoutBrackets();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getWithExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"funcExpr",
                      	        		lv_funcExpr_7_0, 
                      	        		"BlockExpressionWithoutBrackets", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleWithExpression9360); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2(), null); 
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 78, ruleWithExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleWithExpression


    // $ANTLR start entryRuleWithContextExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5259:1: entryRuleWithContextExpression returns [EObject current=null] : iv_ruleWithContextExpression= ruleWithContextExpression EOF ;
    public final EObject entryRuleWithContextExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleWithContextExpression_StartIndex = input.index();
        EObject iv_ruleWithContextExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 79) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5260:2: (iv_ruleWithContextExpression= ruleWithContextExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5261:2: iv_ruleWithContextExpression= ruleWithContextExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getWithContextExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleWithContextExpression_in_entryRuleWithContextExpression9397);
            iv_ruleWithContextExpression=ruleWithContextExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleWithContextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleWithContextExpression9407); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 79, entryRuleWithContextExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleWithContextExpression


    // $ANTLR start ruleWithContextExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5268:1: ruleWithContextExpression returns [EObject current=null] : ( KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) ) ) ;
    public final EObject ruleWithContextExpression() throws RecognitionException {
        EObject current = null;
        int ruleWithContextExpression_StartIndex = input.index();
        Token lv_alias_4_0=null;
        EObject lv_expr_2_0 = null;

        EObject lv_contextBlock_5_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 80) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5273:6: ( ( KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5274:1: ( KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5274:1: ( KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5275:2: KEYWORD_49 KEYWORD_57 ( (lv_expr_2_0= ruleExpression ) ) ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )? ( (lv_contextBlock_5_0= ruleBlockExpression ) )
            {
            match(input,KEYWORD_49,FollowSets000.FOLLOW_KEYWORD_49_in_ruleWithContextExpression9443); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0(), null); 
                  
            }
            match(input,KEYWORD_57,FollowSets000.FOLLOW_KEYWORD_57_in_ruleWithContextExpression9454); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5284:1: ( (lv_expr_2_0= ruleExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5285:1: (lv_expr_2_0= ruleExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5285:1: (lv_expr_2_0= ruleExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5286:3: lv_expr_2_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleWithContextExpression9475);
            lv_expr_2_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"expr",
              	        		lv_expr_2_0, 
              	        		"Expression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5308:2: ( KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==KEYWORD_35) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5309:2: KEYWORD_35 ( (lv_alias_4_0= RULE_ID ) )
                    {
                    match(input,KEYWORD_35,FollowSets000.FOLLOW_KEYWORD_35_in_ruleWithContextExpression9487); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5313:1: ( (lv_alias_4_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5314:1: (lv_alias_4_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5314:1: (lv_alias_4_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5315:3: lv_alias_4_0= RULE_ID
                    {
                    lv_alias_4_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleWithContextExpression9504); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0(), "alias"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"alias",
                      	        		lv_alias_4_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5337:4: ( (lv_contextBlock_5_0= ruleBlockExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5338:1: (lv_contextBlock_5_0= ruleBlockExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5338:1: (lv_contextBlock_5_0= ruleBlockExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5339:3: lv_contextBlock_5_0= ruleBlockExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_ruleWithContextExpression9532);
            lv_contextBlock_5_0=ruleBlockExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getWithContextExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"contextBlock",
              	        		lv_contextBlock_5_0, 
              	        		"BlockExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 80, ruleWithContextExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleWithContextExpression


    // $ANTLR start entryRuleBlockExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5369:1: entryRuleBlockExpression returns [EObject current=null] : iv_ruleBlockExpression= ruleBlockExpression EOF ;
    public final EObject entryRuleBlockExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleBlockExpression_StartIndex = input.index();
        EObject iv_ruleBlockExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 81) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5370:2: (iv_ruleBlockExpression= ruleBlockExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5371:2: iv_ruleBlockExpression= ruleBlockExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBlockExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_entryRuleBlockExpression9567);
            iv_ruleBlockExpression=ruleBlockExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBlockExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleBlockExpression9577); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 81, entryRuleBlockExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleBlockExpression


    // $ANTLR start ruleBlockExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5378:1: ruleBlockExpression returns [EObject current=null] : ( () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20 ) ;
    public final EObject ruleBlockExpression() throws RecognitionException {
        EObject current = null;
        int ruleBlockExpression_StartIndex = input.index();
        EObject lv_expressions_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 82) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5383:6: ( ( () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5384:1: ( () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5384:1: ( () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5384:2: () KEYWORD_18 ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )* KEYWORD_20
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5384:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5385:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleBlockExpression9625); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5403:1: ( ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==KEYWORD_63||LA78_0==KEYWORD_56||LA78_0==KEYWORD_52||(LA78_0>=KEYWORD_54 && LA78_0<=KEYWORD_51)||(LA78_0>=KEYWORD_46 && LA78_0<=KEYWORD_47)||LA78_0==KEYWORD_49||(LA78_0>=KEYWORD_42 && LA78_0<=KEYWORD_44)||LA78_0==KEYWORD_25||LA78_0==KEYWORD_27||LA78_0==KEYWORD_1||LA78_0==KEYWORD_3||LA78_0==KEYWORD_8||LA78_0==KEYWORD_18||LA78_0==RULE_ID||LA78_0==RULE_STRING) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5403:2: ( (lv_expressions_2_0= ruleTopLevelExpression ) ) KEYWORD_12
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5403:2: ( (lv_expressions_2_0= ruleTopLevelExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5404:1: (lv_expressions_2_0= ruleTopLevelExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5404:1: (lv_expressions_2_0= ruleTopLevelExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5405:3: lv_expressions_2_0= ruleTopLevelExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleTopLevelExpression_in_ruleBlockExpression9647);
            	    lv_expressions_2_0=ruleTopLevelExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBlockExpressionRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		add(
            	      	       			current, 
            	      	       			"expressions",
            	      	        		lv_expressions_2_0, 
            	      	        		"TopLevelExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleBlockExpression9658); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleBlockExpression9671); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 82, ruleBlockExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleBlockExpression


    // $ANTLR start entryRuleValue
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5445:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;
        int entryRuleValue_StartIndex = input.index();
        EObject iv_ruleValue = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 83) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5446:2: (iv_ruleValue= ruleValue EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5447:2: iv_ruleValue= ruleValue EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getValueRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleValue_in_entryRuleValue9706);
            iv_ruleValue=ruleValue();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleValue9716); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 83, entryRuleValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleValue


    // $ANTLR start ruleValue
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5454:1: ruleValue returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;
        int ruleValue_StartIndex = input.index();
        Token lv_name_1_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 84) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5459:6: ( ( () ( (lv_name_1_0= RULE_ID ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5460:1: ( () ( (lv_name_1_0= RULE_ID ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5460:1: ( () ( (lv_name_1_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5460:2: () ( (lv_name_1_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5460:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5461:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getValueAccess().getVariableExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getValueAccess().getVariableExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5474:2: ( (lv_name_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5475:1: (lv_name_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5475:1: (lv_name_1_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5476:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleValue9770); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValueRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_1_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 84, ruleValue_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleValue


    // $ANTLR start entryRuleKeywordVariables
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5506:1: entryRuleKeywordVariables returns [EObject current=null] : iv_ruleKeywordVariables= ruleKeywordVariables EOF ;
    public final EObject entryRuleKeywordVariables() throws RecognitionException {
        EObject current = null;
        int entryRuleKeywordVariables_StartIndex = input.index();
        EObject iv_ruleKeywordVariables = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 85) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5507:2: (iv_ruleKeywordVariables= ruleKeywordVariables EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5508:2: iv_ruleKeywordVariables= ruleKeywordVariables EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getKeywordVariablesRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables9810);
            iv_ruleKeywordVariables=ruleKeywordVariables();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleKeywordVariables; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleKeywordVariables9820); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 85, entryRuleKeywordVariables_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleKeywordVariables


    // $ANTLR start ruleKeywordVariables
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5515:1: ruleKeywordVariables returns [EObject current=null] : ( () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) ) ) ;
    public final EObject ruleKeywordVariables() throws RecognitionException {
        EObject current = null;
        int ruleKeywordVariables_StartIndex = input.index();
        Token lv_name_1_1=null;
        Token lv_name_1_2=null;
        Token lv_name_1_3=null;
        Token lv_name_1_4=null;
        Token lv_name_1_5=null;
        Token lv_name_1_6=null;
        Token lv_name_1_7=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 86) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5520:6: ( ( () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5521:1: ( () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5521:1: ( () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5521:2: () ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5521:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5522:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5535:2: ( ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5536:1: ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5536:1: ( (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5537:1: (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5537:1: (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 )
            int alt79=7;
            switch ( input.LA(1) ) {
            case KEYWORD_51:
                {
                alt79=1;
                }
                break;
            case KEYWORD_54:
                {
                alt79=2;
                }
                break;
            case KEYWORD_55:
                {
                alt79=3;
                }
                break;
            case KEYWORD_63:
                {
                alt79=4;
                }
                break;
            case KEYWORD_56:
                {
                alt79=5;
                }
                break;
            case KEYWORD_47:
                {
                alt79=6;
                }
                break;
            case KEYWORD_46:
                {
                alt79=7;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("5537:1: (lv_name_1_1= KEYWORD_51 | lv_name_1_2= KEYWORD_54 | lv_name_1_3= KEYWORD_55 | lv_name_1_4= KEYWORD_63 | lv_name_1_5= KEYWORD_56 | lv_name_1_6= KEYWORD_47 | lv_name_1_7= KEYWORD_46 )", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5538:3: lv_name_1_1= KEYWORD_51
                    {
                    lv_name_1_1=(Token)input.LT(1);
                    match(input,KEYWORD_51,FollowSets000.FOLLOW_KEYWORD_51_in_ruleKeywordVariables9878); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_1, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5557:8: lv_name_1_2= KEYWORD_54
                    {
                    lv_name_1_2=(Token)input.LT(1);
                    match(input,KEYWORD_54,FollowSets000.FOLLOW_KEYWORD_54_in_ruleKeywordVariables9908); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_2, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5576:8: lv_name_1_3= KEYWORD_55
                    {
                    lv_name_1_3=(Token)input.LT(1);
                    match(input,KEYWORD_55,FollowSets000.FOLLOW_KEYWORD_55_in_ruleKeywordVariables9938); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_3, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5595:8: lv_name_1_4= KEYWORD_63
                    {
                    lv_name_1_4=(Token)input.LT(1);
                    match(input,KEYWORD_63,FollowSets000.FOLLOW_KEYWORD_63_in_ruleKeywordVariables9968); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_4, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5614:8: lv_name_1_5= KEYWORD_56
                    {
                    lv_name_1_5=(Token)input.LT(1);
                    match(input,KEYWORD_56,FollowSets000.FOLLOW_KEYWORD_56_in_ruleKeywordVariables9998); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_5, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5633:8: lv_name_1_6= KEYWORD_47
                    {
                    lv_name_1_6=(Token)input.LT(1);
                    match(input,KEYWORD_47,FollowSets000.FOLLOW_KEYWORD_47_in_ruleKeywordVariables10028); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_6, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5652:8: lv_name_1_7= KEYWORD_46
                    {
                    lv_name_1_7=(Token)input.LT(1);
                    match(input,KEYWORD_46,FollowSets000.FOLLOW_KEYWORD_46_in_ruleKeywordVariables10058); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6(), "name"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getKeywordVariablesRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "name", lv_name_1_7, null, lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 86, ruleKeywordVariables_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleKeywordVariables


    // $ANTLR start entryRuleFeatureCall
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5682:1: entryRuleFeatureCall returns [EObject current=null] : iv_ruleFeatureCall= ruleFeatureCall EOF ;
    public final EObject entryRuleFeatureCall() throws RecognitionException {
        EObject current = null;
        int entryRuleFeatureCall_StartIndex = input.index();
        EObject iv_ruleFeatureCall = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 87) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5683:2: (iv_ruleFeatureCall= ruleFeatureCall EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5684:2: iv_ruleFeatureCall= ruleFeatureCall EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFeatureCallRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFeatureCall_in_entryRuleFeatureCall10109);
            iv_ruleFeatureCall=ruleFeatureCall();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFeatureCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFeatureCall10119); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 87, entryRuleFeatureCall_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleFeatureCall


    // $ANTLR start ruleFeatureCall
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5691:1: ruleFeatureCall returns [EObject current=null] : this_OperationCall_0= ruleOperationCall ;
    public final EObject ruleFeatureCall() throws RecognitionException {
        EObject current = null;
        int ruleFeatureCall_StartIndex = input.index();
        EObject this_OperationCall_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 88) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5696:6: (this_OperationCall_0= ruleOperationCall )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5698:2: this_OperationCall_0= ruleOperationCall
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleOperationCall_in_ruleFeatureCall10168);
            this_OperationCall_0=ruleOperationCall();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_OperationCall_0;
                      currentNode = currentNode.getParent();
                  
            }

            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 88, ruleFeatureCall_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleFeatureCall


    // $ANTLR start entryRuleOperationCall
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5717:1: entryRuleOperationCall returns [EObject current=null] : iv_ruleOperationCall= ruleOperationCall EOF ;
    public final EObject entryRuleOperationCall() throws RecognitionException {
        EObject current = null;
        int entryRuleOperationCall_StartIndex = input.index();
        EObject iv_ruleOperationCall = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 89) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5718:2: (iv_ruleOperationCall= ruleOperationCall EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5719:2: iv_ruleOperationCall= ruleOperationCall EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getOperationCallRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleOperationCall_in_entryRuleOperationCall10201);
            iv_ruleOperationCall=ruleOperationCall();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleOperationCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleOperationCall10211); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 89, entryRuleOperationCall_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleOperationCall


    // $ANTLR start ruleOperationCall
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5726:1: ruleOperationCall returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 ) ;
    public final EObject ruleOperationCall() throws RecognitionException {
        EObject current = null;
        int ruleOperationCall_StartIndex = input.index();
        Token lv_name_1_0=null;
        EObject lv_parameterList_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 90) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5731:6: ( ( () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5732:1: ( () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5732:1: ( () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5732:2: () ( (lv_name_1_0= RULE_ID ) ) KEYWORD_3 ( (lv_parameterList_3_0= ruleParameterList ) )? KEYWORD_4
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5732:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5733:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5746:2: ( (lv_name_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5747:1: (lv_name_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5747:1: (lv_name_1_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5748:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleOperationCall10265); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"name",
              	        		lv_name_1_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleOperationCall10281); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5775:1: ( (lv_parameterList_3_0= ruleParameterList ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==KEYWORD_63||LA80_0==KEYWORD_56||LA80_0==KEYWORD_52||(LA80_0>=KEYWORD_54 && LA80_0<=KEYWORD_55)||LA80_0==KEYWORD_51||(LA80_0>=KEYWORD_46 && LA80_0<=KEYWORD_47)||LA80_0==KEYWORD_49||LA80_0==KEYWORD_39||LA80_0==KEYWORD_42||LA80_0==KEYWORD_25||LA80_0==KEYWORD_27||LA80_0==KEYWORD_1||LA80_0==KEYWORD_3||LA80_0==KEYWORD_8||LA80_0==KEYWORD_13||(LA80_0>=KEYWORD_18 && LA80_0<=KEYWORD_19)||LA80_0==RULE_ID||LA80_0==RULE_STRING) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5776:1: (lv_parameterList_3_0= ruleParameterList )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5776:1: (lv_parameterList_3_0= ruleParameterList )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5777:3: lv_parameterList_3_0= ruleParameterList
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleOperationCall10302);
                    lv_parameterList_3_0=ruleParameterList();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getOperationCallRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"parameterList",
                      	        		lv_parameterList_3_0, 
                      	        		"ParameterList", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }

            match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleOperationCall10314); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 90, ruleOperationCall_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleOperationCall


    // $ANTLR start entryRuleConstructorCallExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5812:1: entryRuleConstructorCallExpression returns [EObject current=null] : iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF ;
    public final EObject entryRuleConstructorCallExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleConstructorCallExpression_StartIndex = input.index();
        EObject iv_ruleConstructorCallExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 91) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5813:2: (iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5814:2: iv_ruleConstructorCallExpression= ruleConstructorCallExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getConstructorCallExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression10349);
            iv_ruleConstructorCallExpression=ruleConstructorCallExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleConstructorCallExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleConstructorCallExpression10359); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 91, entryRuleConstructorCallExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleConstructorCallExpression


    // $ANTLR start ruleConstructorCallExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5821:1: ruleConstructorCallExpression returns [EObject current=null] : ( () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )? ) ;
    public final EObject ruleConstructorCallExpression() throws RecognitionException {
        EObject current = null;
        int ruleConstructorCallExpression_StartIndex = input.index();
        Token lv_typeExpr_2_0=null;
        Token lv_alias_7_0=null;
        EObject lv_parameterList_4_0 = null;

        EObject lv_contextBlock_8_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 92) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5826:6: ( ( () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )? ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5827:1: ( () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )? )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5827:1: ( () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )? )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5827:2: () KEYWORD_42 ( (lv_typeExpr_2_0= RULE_ID ) ) ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )? ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )? ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )?
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5827:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5828:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,KEYWORD_42,FollowSets000.FOLLOW_KEYWORD_42_in_ruleConstructorCallExpression10407); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5846:1: ( (lv_typeExpr_2_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5847:1: (lv_typeExpr_2_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5847:1: (lv_typeExpr_2_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5848:3: lv_typeExpr_2_0= RULE_ID
            {
            lv_typeExpr_2_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleConstructorCallExpression10424); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0(), "typeExpr"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"typeExpr",
              	        		lv_typeExpr_2_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5870:2: ( KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==KEYWORD_3) ) {
                int LA82_1 = input.LA(2);

                if ( (synpred127()) ) {
                    alt82=1;
                }
            }
            switch (alt82) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5871:2: KEYWORD_3 ( (lv_parameterList_4_0= ruleParameterList ) )? KEYWORD_4
                    {
                    match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleConstructorCallExpression10441); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5875:1: ( (lv_parameterList_4_0= ruleParameterList ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==KEYWORD_63||LA81_0==KEYWORD_56||LA81_0==KEYWORD_52||(LA81_0>=KEYWORD_54 && LA81_0<=KEYWORD_55)||LA81_0==KEYWORD_51||(LA81_0>=KEYWORD_46 && LA81_0<=KEYWORD_47)||LA81_0==KEYWORD_49||LA81_0==KEYWORD_39||LA81_0==KEYWORD_42||LA81_0==KEYWORD_25||LA81_0==KEYWORD_27||LA81_0==KEYWORD_1||LA81_0==KEYWORD_3||LA81_0==KEYWORD_8||LA81_0==KEYWORD_13||(LA81_0>=KEYWORD_18 && LA81_0<=KEYWORD_19)||LA81_0==RULE_ID||LA81_0==RULE_STRING) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5876:1: (lv_parameterList_4_0= ruleParameterList )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5876:1: (lv_parameterList_4_0= ruleParameterList )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5877:3: lv_parameterList_4_0= ruleParameterList
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_ruleConstructorCallExpression10462);
                            lv_parameterList_4_0=ruleParameterList();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		set(
                              	       			current, 
                              	       			"parameterList",
                              	        		lv_parameterList_4_0, 
                              	        		"ParameterList", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleConstructorCallExpression10474); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5904:3: ( KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==KEYWORD_35) ) {
                int LA83_1 = input.LA(2);

                if ( (LA83_1==RULE_ID) ) {
                    int LA83_3 = input.LA(3);

                    if ( (synpred128()) ) {
                        alt83=1;
                    }
                }
            }
            switch (alt83) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5905:2: KEYWORD_35 ( (lv_alias_7_0= RULE_ID ) )
                    {
                    match(input,KEYWORD_35,FollowSets000.FOLLOW_KEYWORD_35_in_ruleConstructorCallExpression10488); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5909:1: ( (lv_alias_7_0= RULE_ID ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5910:1: (lv_alias_7_0= RULE_ID )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5910:1: (lv_alias_7_0= RULE_ID )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5911:3: lv_alias_7_0= RULE_ID
                    {
                    lv_alias_7_0=(Token)input.LT(1);
                    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleConstructorCallExpression10505); if (failed) return current;
                    if ( backtracking==0 ) {

                      			createLeafNode(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0(), "alias"); 
                      		
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"alias",
                      	        		lv_alias_7_0, 
                      	        		"ID", 
                      	        		lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5933:4: ( (lv_contextBlock_8_0= ruleInitializationBlockExpression ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==KEYWORD_18) ) {
                int LA84_1 = input.LA(2);

                if ( (LA84_1==RULE_ID) ) {
                    int LA84_3 = input.LA(3);

                    if ( (LA84_3==KEYWORD_11) ) {
                        alt84=1;
                    }
                }
            }
            switch (alt84) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5934:1: (lv_contextBlock_8_0= ruleInitializationBlockExpression )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5934:1: (lv_contextBlock_8_0= ruleInitializationBlockExpression )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5935:3: lv_contextBlock_8_0= ruleInitializationBlockExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleInitializationBlockExpression_in_ruleConstructorCallExpression10533);
                    lv_contextBlock_8_0=ruleInitializationBlockExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getConstructorCallExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"contextBlock",
                      	        		lv_contextBlock_8_0, 
                      	        		"InitializationBlockExpression", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 92, ruleConstructorCallExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleConstructorCallExpression


    // $ANTLR start entryRuleInitializationBlockExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5965:1: entryRuleInitializationBlockExpression returns [EObject current=null] : iv_ruleInitializationBlockExpression= ruleInitializationBlockExpression EOF ;
    public final EObject entryRuleInitializationBlockExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleInitializationBlockExpression_StartIndex = input.index();
        EObject iv_ruleInitializationBlockExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 93) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5966:2: (iv_ruleInitializationBlockExpression= ruleInitializationBlockExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5967:2: iv_ruleInitializationBlockExpression= ruleInitializationBlockExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInitializationBlockExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleInitializationBlockExpression_in_entryRuleInitializationBlockExpression10569);
            iv_ruleInitializationBlockExpression=ruleInitializationBlockExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInitializationBlockExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleInitializationBlockExpression10579); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 93, entryRuleInitializationBlockExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleInitializationBlockExpression


    // $ANTLR start ruleInitializationBlockExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5974:1: ruleInitializationBlockExpression returns [EObject current=null] : ( () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20 ) ;
    public final EObject ruleInitializationBlockExpression() throws RecognitionException {
        EObject current = null;
        int ruleInitializationBlockExpression_StartIndex = input.index();
        EObject lv_expressions_2_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 94) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5979:6: ( ( () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5980:1: ( () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5980:1: ( () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5980:2: () KEYWORD_18 ( (lv_expressions_2_0= ruleInitializationExpression ) ) KEYWORD_12 KEYWORD_20
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5980:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5981:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleInitializationBlockExpression10627); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5999:1: ( (lv_expressions_2_0= ruleInitializationExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6000:1: (lv_expressions_2_0= ruleInitializationExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6000:1: (lv_expressions_2_0= ruleInitializationExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6001:3: lv_expressions_2_0= ruleInitializationExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleInitializationExpression_in_ruleInitializationBlockExpression10648);
            lv_expressions_2_0=ruleInitializationExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getInitializationBlockExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		add(
              	       			current, 
              	       			"expressions",
              	        		lv_expressions_2_0, 
              	        		"InitializationExpression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleInitializationBlockExpression10659); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3(), null); 
                  
            }
            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleInitializationBlockExpression10670); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 94, ruleInitializationBlockExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleInitializationBlockExpression


    // $ANTLR start entryRuleInitializationExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6041:1: entryRuleInitializationExpression returns [EObject current=null] : iv_ruleInitializationExpression= ruleInitializationExpression EOF ;
    public final EObject entryRuleInitializationExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleInitializationExpression_StartIndex = input.index();
        EObject iv_ruleInitializationExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 95) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6042:2: (iv_ruleInitializationExpression= ruleInitializationExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6043:2: iv_ruleInitializationExpression= ruleInitializationExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getInitializationExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleInitializationExpression_in_entryRuleInitializationExpression10705);
            iv_ruleInitializationExpression=ruleInitializationExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleInitializationExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleInitializationExpression10715); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 95, entryRuleInitializationExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleInitializationExpression


    // $ANTLR start ruleInitializationExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6050:1: ruleInitializationExpression returns [EObject current=null] : ( () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) ) ) ;
    public final EObject ruleInitializationExpression() throws RecognitionException {
        EObject current = null;
        int ruleInitializationExpression_StartIndex = input.index();
        Token lv_functionName_2_0=null;
        EObject lv_leftExpr_1_0 = null;

        EObject lv_rightExpr_3_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 96) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6055:6: ( ( () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6056:1: ( () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6056:1: ( () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6056:2: () ( (lv_leftExpr_1_0= ruleFeatureOfThis ) ) ( (lv_functionName_2_0= KEYWORD_11 ) ) ( (lv_rightExpr_3_0= ruleExpression ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6056:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6057:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6070:2: ( (lv_leftExpr_1_0= ruleFeatureOfThis ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6071:1: (lv_leftExpr_1_0= ruleFeatureOfThis )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6071:1: (lv_leftExpr_1_0= ruleFeatureOfThis )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6072:3: lv_leftExpr_1_0= ruleFeatureOfThis
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleFeatureOfThis_in_ruleInitializationExpression10773);
            lv_leftExpr_1_0=ruleFeatureOfThis();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"leftExpr",
              	        		lv_leftExpr_1_0, 
              	        		"FeatureOfThis", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6094:2: ( (lv_functionName_2_0= KEYWORD_11 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6095:1: (lv_functionName_2_0= KEYWORD_11 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6095:1: (lv_functionName_2_0= KEYWORD_11 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6096:3: lv_functionName_2_0= KEYWORD_11
            {
            lv_functionName_2_0=(Token)input.LT(1);
            match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_ruleInitializationExpression10792); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0(), "functionName"); 
                  
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        
              	        try {
              	       		set(current, "functionName", lv_functionName_2_0, ":", lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6116:2: ( (lv_rightExpr_3_0= ruleExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6117:1: (lv_rightExpr_3_0= ruleExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6117:1: (lv_rightExpr_3_0= ruleExpression )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6118:3: lv_rightExpr_3_0= ruleExpression
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleInitializationExpression10826);
            lv_rightExpr_3_0=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getInitializationExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"rightExpr",
              	        		lv_rightExpr_3_0, 
              	        		"Expression", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 96, ruleInitializationExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleInitializationExpression


    // $ANTLR start entryRuleFeatureOfThis
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6148:1: entryRuleFeatureOfThis returns [EObject current=null] : iv_ruleFeatureOfThis= ruleFeatureOfThis EOF ;
    public final EObject entryRuleFeatureOfThis() throws RecognitionException {
        EObject current = null;
        int entryRuleFeatureOfThis_StartIndex = input.index();
        EObject iv_ruleFeatureOfThis = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 97) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6149:2: (iv_ruleFeatureOfThis= ruleFeatureOfThis EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6150:2: iv_ruleFeatureOfThis= ruleFeatureOfThis EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getFeatureOfThisRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFeatureOfThis_in_entryRuleFeatureOfThis10861);
            iv_ruleFeatureOfThis=ruleFeatureOfThis();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleFeatureOfThis; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFeatureOfThis10871); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 97, entryRuleFeatureOfThis_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleFeatureOfThis


    // $ANTLR start ruleFeatureOfThis
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6157:1: ruleFeatureOfThis returns [EObject current=null] : ( () ( (lv_featureName_1_0= RULE_ID ) ) ) ;
    public final EObject ruleFeatureOfThis() throws RecognitionException {
        EObject current = null;
        int ruleFeatureOfThis_StartIndex = input.index();
        Token lv_featureName_1_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 98) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6162:6: ( ( () ( (lv_featureName_1_0= RULE_ID ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6163:1: ( () ( (lv_featureName_1_0= RULE_ID ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6163:1: ( () ( (lv_featureName_1_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6163:2: () ( (lv_featureName_1_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6163:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6164:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6177:2: ( (lv_featureName_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6178:1: (lv_featureName_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6178:1: (lv_featureName_1_0= RULE_ID )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6179:3: lv_featureName_1_0= RULE_ID
            {
            lv_featureName_1_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleFeatureOfThis10925); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0(), "featureName"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getFeatureOfThisRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"featureName",
              	        		lv_featureName_1_0, 
              	        		"ID", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 98, ruleFeatureOfThis_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleFeatureOfThis


    // $ANTLR start entryRuleLiteral
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6209:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteral_StartIndex = input.index();
        EObject iv_ruleLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 99) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6210:2: (iv_ruleLiteral= ruleLiteral EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6211:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleLiteral_in_entryRuleLiteral10965);
            iv_ruleLiteral=ruleLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleLiteral10975); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 99, entryRuleLiteral_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleLiteral


    // $ANTLR start ruleLiteral
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6218:1: ruleLiteral returns [EObject current=null] : (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;
        int ruleLiteral_StartIndex = input.index();
        EObject this_ValueLiteral_0 = null;

        EObject this_LiteralFunction_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 100) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6223:6: ( (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6224:1: (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6224:1: (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==RULE_STRING) ) {
                alt85=1;
            }
            else if ( (LA85_0==KEYWORD_18) ) {
                alt85=2;
            }
            else {
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("6224:1: (this_ValueLiteral_0= ruleValueLiteral | this_LiteralFunction_1= ruleLiteralFunction )", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6225:2: this_ValueLiteral_0= ruleValueLiteral
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleValueLiteral_in_ruleLiteral11025);
                    this_ValueLiteral_0=ruleValueLiteral();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_ValueLiteral_0;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6238:2: this_LiteralFunction_1= ruleLiteralFunction
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleLiteralFunction_in_ruleLiteral11055);
                    this_LiteralFunction_1=ruleLiteralFunction();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_LiteralFunction_1;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 100, ruleLiteral_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleLiteral


    // $ANTLR start entryRuleLiteralFunction
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6257:1: entryRuleLiteralFunction returns [EObject current=null] : iv_ruleLiteralFunction= ruleLiteralFunction EOF ;
    public final EObject entryRuleLiteralFunction() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteralFunction_StartIndex = input.index();
        EObject iv_ruleLiteralFunction = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 101) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6258:2: (iv_ruleLiteralFunction= ruleLiteralFunction EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6259:2: iv_ruleLiteralFunction= ruleLiteralFunction EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getLiteralFunctionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction11089);
            iv_ruleLiteralFunction=ruleLiteralFunction();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleLiteralFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleLiteralFunction11099); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 101, entryRuleLiteralFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleLiteralFunction


    // $ANTLR start ruleLiteralFunction
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6266:1: ruleLiteralFunction returns [EObject current=null] : ( KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20 ) ;
    public final EObject ruleLiteralFunction() throws RecognitionException {
        EObject current = null;
        int ruleLiteralFunction_StartIndex = input.index();
        EObject this_ClosureExpression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 102) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6271:6: ( ( KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6272:1: ( KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6272:1: ( KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6273:2: KEYWORD_18 this_ClosureExpression_1= ruleClosureExpression KEYWORD_20
            {
            match(input,KEYWORD_18,FollowSets000.FOLLOW_KEYWORD_18_in_ruleLiteralFunction11135); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0(), null); 
                  
            }
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureExpression_in_ruleLiteralFunction11160);
            this_ClosureExpression_1=ruleClosureExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_ClosureExpression_1;
                      currentNode = currentNode.getParent();
                  
            }
            match(input,KEYWORD_20,FollowSets000.FOLLOW_KEYWORD_20_in_ruleLiteralFunction11170); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 102, ruleLiteralFunction_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleLiteralFunction


    // $ANTLR start entryRuleClosureExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6302:1: entryRuleClosureExpression returns [EObject current=null] : iv_ruleClosureExpression= ruleClosureExpression EOF ;
    public final EObject entryRuleClosureExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleClosureExpression_StartIndex = input.index();
        EObject iv_ruleClosureExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 103) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6303:2: (iv_ruleClosureExpression= ruleClosureExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6304:2: iv_ruleClosureExpression= ruleClosureExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getClosureExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleClosureExpression_in_entryRuleClosureExpression11205);
            iv_ruleClosureExpression=ruleClosureExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleClosureExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleClosureExpression11215); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 103, entryRuleClosureExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleClosureExpression


    // $ANTLR start ruleClosureExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6311:1: ruleClosureExpression returns [EObject current=null] : ( () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) ) ) ;
    public final EObject ruleClosureExpression() throws RecognitionException {
        EObject current = null;
        int ruleClosureExpression_StartIndex = input.index();
        Token lv_varArgs_9_0=null;
        Token lv_varArgs_11_0=null;
        EObject lv_returnType_2_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_funcExpr_14_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 104) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6316:6: ( ( () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6317:1: ( () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6317:1: ( () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6317:2: () ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )? ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )? KEYWORD_19 ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6317:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6318:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getClosureExpressionAccess().getFunctionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getClosureExpressionAccess().getFunctionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6331:2: ( KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==KEYWORD_13) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6332:2: KEYWORD_13 ( (lv_returnType_2_0= ruleTypeRef ) ) KEYWORD_15
                    {
                    match(input,KEYWORD_13,FollowSets000.FOLLOW_KEYWORD_13_in_ruleClosureExpression11264); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0(), null); 
                          
                    }
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6336:1: ( (lv_returnType_2_0= ruleTypeRef ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6337:1: (lv_returnType_2_0= ruleTypeRef )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6337:1: (lv_returnType_2_0= ruleTypeRef )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6338:3: lv_returnType_2_0= ruleTypeRef
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleTypeRef_in_ruleClosureExpression11285);
                    lv_returnType_2_0=ruleTypeRef();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		set(
                      	       			current, 
                      	       			"returnType",
                      	        		lv_returnType_2_0, 
                      	        		"TypeRef", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    match(input,KEYWORD_15,FollowSets000.FOLLOW_KEYWORD_15_in_ruleClosureExpression11296); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2(), null); 
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:3: ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )?
            int alt90=3;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:4: ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:4: ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:5: ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:5: ( KEYWORD_19 )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==KEYWORD_19) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6366:2: KEYWORD_19
                            {
                            match(input,KEYWORD_19,FollowSets000.FOLLOW_KEYWORD_19_in_ruleClosureExpression11312); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0(), null); 
                                  
                            }

                            }
                            break;

                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6370:3: ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6370:4: ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )?
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6370:4: ( (lv_parameters_5_0= ruleParameterDeclaration ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6371:1: (lv_parameters_5_0= ruleParameterDeclaration )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6371:1: (lv_parameters_5_0= ruleParameterDeclaration )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6372:3: lv_parameters_5_0= ruleParameterDeclaration
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11336);
                    lv_parameters_5_0=ruleParameterDeclaration();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"parameters",
                      	        		lv_parameters_5_0, 
                      	        		"ParameterDeclaration", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6394:2: ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==KEYWORD_7) ) {
                            int LA88_1 = input.LA(2);

                            if ( (LA88_1==KEYWORD_3||LA88_1==RULE_ID) ) {
                                alt88=1;
                            }


                        }


                        switch (alt88) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6395:2: KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) )
                    	    {
                    	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleClosureExpression11348); if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	              createLeafNode(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0(), null); 
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6399:1: ( (lv_parameters_7_0= ruleParameterDeclaration ) )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6400:1: (lv_parameters_7_0= ruleParameterDeclaration )
                    	    {
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6400:1: (lv_parameters_7_0= ruleParameterDeclaration )
                    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6401:3: lv_parameters_7_0= ruleParameterDeclaration
                    	    {
                    	    if ( backtracking==0 ) {
                    	       
                    	      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0(), currentNode); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11369);
                    	    lv_parameters_7_0=ruleParameterDeclaration();
                    	    _fsp--;
                    	    if (failed) return current;
                    	    if ( backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                    	      	            associateNodeWithAstElement(currentNode.getParent(), current);
                    	      	        }
                    	      	        try {
                    	      	       		add(
                    	      	       			current, 
                    	      	       			"parameters",
                    	      	        		lv_parameters_7_0, 
                    	      	        		"ParameterDeclaration", 
                    	      	        		currentNode);
                    	      	        } catch (ValueConverterException vce) {
                    	      				handleValueConverterException(vce);
                    	      	        }
                    	      	        currentNode = currentNode.getParent();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6423:4: ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==KEYWORD_7) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6424:2: KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) )
                            {
                            match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_ruleClosureExpression11383); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0(), null); 
                                  
                            }
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6428:1: ( (lv_varArgs_9_0= KEYWORD_39 ) )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6429:1: (lv_varArgs_9_0= KEYWORD_39 )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6429:1: (lv_varArgs_9_0= KEYWORD_39 )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6430:3: lv_varArgs_9_0= KEYWORD_39
                            {
                            lv_varArgs_9_0=(Token)input.LT(1);
                            match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleClosureExpression11402); if (failed) return current;
                            if ( backtracking==0 ) {

                                      createLeafNode(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0(), "varArgs"); 
                                  
                            }
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode, current);
                              	        }
                              	        
                              	        try {
                              	       		set(current, "varArgs", true, "...", lastConsumedNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6450:2: ( (lv_parameters_10_0= ruleParameterDeclaration ) )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6451:1: (lv_parameters_10_0= ruleParameterDeclaration )
                            {
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6451:1: (lv_parameters_10_0= ruleParameterDeclaration )
                            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6452:3: lv_parameters_10_0= ruleParameterDeclaration
                            {
                            if ( backtracking==0 ) {
                               
                              	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0(), currentNode); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11436);
                            lv_parameters_10_0=ruleParameterDeclaration();
                            _fsp--;
                            if (failed) return current;
                            if ( backtracking==0 ) {

                              	        if (current==null) {
                              	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                              	            associateNodeWithAstElement(currentNode.getParent(), current);
                              	        }
                              	        try {
                              	       		add(
                              	       			current, 
                              	       			"parameters",
                              	        		lv_parameters_10_0, 
                              	        		"ParameterDeclaration", 
                              	        		currentNode);
                              	        } catch (ValueConverterException vce) {
                              				handleValueConverterException(vce);
                              	        }
                              	        currentNode = currentNode.getParent();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6475:6: ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6475:6: ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6475:7: ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6475:7: ( (lv_varArgs_11_0= KEYWORD_39 ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6476:1: (lv_varArgs_11_0= KEYWORD_39 )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6476:1: (lv_varArgs_11_0= KEYWORD_39 )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6477:3: lv_varArgs_11_0= KEYWORD_39
                    {
                    lv_varArgs_11_0=(Token)input.LT(1);
                    match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_ruleClosureExpression11466); if (failed) return current;
                    if ( backtracking==0 ) {

                              createLeafNode(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0(), "varArgs"); 
                          
                    }
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode, current);
                      	        }
                      	        
                      	        try {
                      	       		set(current, "varArgs", true, "...", lastConsumedNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6497:2: ( (lv_parameters_12_0= ruleParameterDeclaration ) )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6498:1: (lv_parameters_12_0= ruleParameterDeclaration )
                    {
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6498:1: (lv_parameters_12_0= ruleParameterDeclaration )
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6499:3: lv_parameters_12_0= ruleParameterDeclaration
                    {
                    if ( backtracking==0 ) {
                       
                      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0(), currentNode); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11500);
                    lv_parameters_12_0=ruleParameterDeclaration();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                      	        if (current==null) {
                      	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
                      	            associateNodeWithAstElement(currentNode.getParent(), current);
                      	        }
                      	        try {
                      	       		add(
                      	       			current, 
                      	       			"parameters",
                      	        		lv_parameters_12_0, 
                      	        		"ParameterDeclaration", 
                      	        		currentNode);
                      	        } catch (ValueConverterException vce) {
                      				handleValueConverterException(vce);
                      	        }
                      	        currentNode = currentNode.getParent();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            match(input,KEYWORD_19,FollowSets000.FOLLOW_KEYWORD_19_in_ruleClosureExpression11514); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6526:1: ( (lv_funcExpr_14_0= ruleOneOrManyExpressions ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6527:1: (lv_funcExpr_14_0= ruleOneOrManyExpressions )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6527:1: (lv_funcExpr_14_0= ruleOneOrManyExpressions )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6528:3: lv_funcExpr_14_0= ruleOneOrManyExpressions
            {
            if ( backtracking==0 ) {
               
              	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0(), currentNode); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleOneOrManyExpressions_in_ruleClosureExpression11535);
            lv_funcExpr_14_0=ruleOneOrManyExpressions();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getClosureExpressionRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode.getParent(), current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"funcExpr",
              	        		lv_funcExpr_14_0, 
              	        		"OneOrManyExpressions", 
              	        		currentNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	        currentNode = currentNode.getParent();
              	    
            }

            }


            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 104, ruleClosureExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleClosureExpression


    // $ANTLR start entryRuleOneOrManyExpressions
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6558:1: entryRuleOneOrManyExpressions returns [EObject current=null] : iv_ruleOneOrManyExpressions= ruleOneOrManyExpressions EOF ;
    public final EObject entryRuleOneOrManyExpressions() throws RecognitionException {
        EObject current = null;
        int entryRuleOneOrManyExpressions_StartIndex = input.index();
        EObject iv_ruleOneOrManyExpressions = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 105) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6559:2: (iv_ruleOneOrManyExpressions= ruleOneOrManyExpressions EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6560:2: iv_ruleOneOrManyExpressions= ruleOneOrManyExpressions EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getOneOrManyExpressionsRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleOneOrManyExpressions_in_entryRuleOneOrManyExpressions11570);
            iv_ruleOneOrManyExpressions=ruleOneOrManyExpressions();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleOneOrManyExpressions; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleOneOrManyExpressions11580); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 105, entryRuleOneOrManyExpressions_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleOneOrManyExpressions


    // $ANTLR start ruleOneOrManyExpressions
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6567:1: ruleOneOrManyExpressions returns [EObject current=null] : (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression ) ;
    public final EObject ruleOneOrManyExpressions() throws RecognitionException {
        EObject current = null;
        int ruleOneOrManyExpressions_StartIndex = input.index();
        EObject this_BlockExpressionWithoutBrackets_0 = null;

        EObject this_Expression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 106) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6572:6: ( (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )
            int alt91=2;
            switch ( input.LA(1) ) {
            case KEYWORD_50:
            case KEYWORD_43:
            case KEYWORD_44:
                {
                alt91=1;
                }
                break;
            case KEYWORD_3:
                {
                int LA91_3 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA91_4 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 4, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_52:
                {
                int LA91_6 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 6, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_42:
                {
                int LA91_7 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 7, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA91_8 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 8, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_18:
                {
                int LA91_9 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 9, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_51:
                {
                int LA91_10 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 10, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_54:
                {
                int LA91_11 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 11, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_55:
                {
                int LA91_12 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 12, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_63:
                {
                int LA91_13 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 13, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_56:
                {
                int LA91_14 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 14, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_47:
                {
                int LA91_15 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 15, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_46:
                {
                int LA91_16 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 16, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_49:
                {
                int LA91_17 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 17, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_1:
                {
                int LA91_18 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 18, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_8:
                {
                int LA91_19 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 19, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_25:
                {
                int LA91_20 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 20, input);

                    throw nvae;
                }
                }
                break;
            case KEYWORD_27:
                {
                int LA91_21 = input.LA(2);

                if ( (synpred137()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (backtracking>0) {failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 21, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("6573:1: (this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets | this_Expression_1= ruleExpression )", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6574:2: this_BlockExpressionWithoutBrackets_0= ruleBlockExpressionWithoutBrackets
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleBlockExpressionWithoutBrackets_in_ruleOneOrManyExpressions11630);
                    this_BlockExpressionWithoutBrackets_0=ruleBlockExpressionWithoutBrackets();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_BlockExpressionWithoutBrackets_0;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6587:2: this_Expression_1= ruleExpression
                    {
                    if ( backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( backtracking==0 ) {
                       
                              currentNode=createCompositeNode(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1(), currentNode); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleOneOrManyExpressions11660);
                    this_Expression_1=ruleExpression();
                    _fsp--;
                    if (failed) return current;
                    if ( backtracking==0 ) {

                              current = this_Expression_1;
                              currentNode = currentNode.getParent();
                          
                    }

                    }
                    break;

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 106, ruleOneOrManyExpressions_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleOneOrManyExpressions


    // $ANTLR start entryRuleBlockExpressionWithoutBrackets
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6606:1: entryRuleBlockExpressionWithoutBrackets returns [EObject current=null] : iv_ruleBlockExpressionWithoutBrackets= ruleBlockExpressionWithoutBrackets EOF ;
    public final EObject entryRuleBlockExpressionWithoutBrackets() throws RecognitionException {
        EObject current = null;
        int entryRuleBlockExpressionWithoutBrackets_StartIndex = input.index();
        EObject iv_ruleBlockExpressionWithoutBrackets = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 107) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6607:2: (iv_ruleBlockExpressionWithoutBrackets= ruleBlockExpressionWithoutBrackets EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6608:2: iv_ruleBlockExpressionWithoutBrackets= ruleBlockExpressionWithoutBrackets EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleBlockExpressionWithoutBrackets_in_entryRuleBlockExpressionWithoutBrackets11694);
            iv_ruleBlockExpressionWithoutBrackets=ruleBlockExpressionWithoutBrackets();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleBlockExpressionWithoutBrackets; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleBlockExpressionWithoutBrackets11704); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 107, entryRuleBlockExpressionWithoutBrackets_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleBlockExpressionWithoutBrackets


    // $ANTLR start ruleBlockExpressionWithoutBrackets
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6615:1: ruleBlockExpressionWithoutBrackets returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+ ) ;
    public final EObject ruleBlockExpressionWithoutBrackets() throws RecognitionException {
        EObject current = null;
        int ruleBlockExpressionWithoutBrackets_StartIndex = input.index();
        EObject lv_expressions_1_0 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 108) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6620:6: ( ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+ ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6621:1: ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+ )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6621:1: ( () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+ )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6621:2: () ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6621:2: ()
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6622:2: 
            {
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      temp=factory.create(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0().getType().getClassifier());
                      current = temp; 
                      temp = null;
                      CompositeNode newNode = createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0(), currentNode.getParent());
                  newNode.getChildren().add(currentNode);
                  moveLookaheadInfo(currentNode, newNode);
                  currentNode = newNode; 
                      associateNodeWithAstElement(currentNode, current); 
                  
            }

            }

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6635:2: ( ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12 )+
            int cnt92=0;
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==KEYWORD_63||LA92_0==KEYWORD_56||LA92_0==KEYWORD_52||(LA92_0>=KEYWORD_54 && LA92_0<=KEYWORD_51)||(LA92_0>=KEYWORD_46 && LA92_0<=KEYWORD_47)||LA92_0==KEYWORD_49||(LA92_0>=KEYWORD_42 && LA92_0<=KEYWORD_44)||LA92_0==KEYWORD_25||LA92_0==KEYWORD_27||LA92_0==KEYWORD_1||LA92_0==KEYWORD_3||LA92_0==KEYWORD_8||LA92_0==KEYWORD_18||LA92_0==RULE_ID||LA92_0==RULE_STRING) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6635:3: ( (lv_expressions_1_0= ruleTopLevelExpression ) ) KEYWORD_12
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6635:3: ( (lv_expressions_1_0= ruleTopLevelExpression ) )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6636:1: (lv_expressions_1_0= ruleTopLevelExpression )
            	    {
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6636:1: (lv_expressions_1_0= ruleTopLevelExpression )
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6637:3: lv_expressions_1_0= ruleTopLevelExpression
            	    {
            	    if ( backtracking==0 ) {
            	       
            	      	        currentNode=createCompositeNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0(), currentNode); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleTopLevelExpression_in_ruleBlockExpressionWithoutBrackets11763);
            	    lv_expressions_1_0=ruleTopLevelExpression();
            	    _fsp--;
            	    if (failed) return current;
            	    if ( backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = factory.create(grammarAccess.getBlockExpressionWithoutBracketsRule().getType().getClassifier());
            	      	            associateNodeWithAstElement(currentNode.getParent(), current);
            	      	        }
            	      	        try {
            	      	       		add(
            	      	       			current, 
            	      	       			"expressions",
            	      	        		lv_expressions_1_0, 
            	      	        		"TopLevelExpression", 
            	      	        		currentNode);
            	      	        } catch (ValueConverterException vce) {
            	      				handleValueConverterException(vce);
            	      	        }
            	      	        currentNode = currentNode.getParent();
            	      	    
            	    }

            	    }


            	    }

            	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_ruleBlockExpressionWithoutBrackets11774); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              createLeafNode(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt92 >= 1 ) break loop92;
            	    if (backtracking>0) {failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(92, input);
                        throw eee;
                }
                cnt92++;
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 108, ruleBlockExpressionWithoutBrackets_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleBlockExpressionWithoutBrackets


    // $ANTLR start entryRuleValueLiteral
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6672:1: entryRuleValueLiteral returns [EObject current=null] : iv_ruleValueLiteral= ruleValueLiteral EOF ;
    public final EObject entryRuleValueLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleValueLiteral_StartIndex = input.index();
        EObject iv_ruleValueLiteral = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 109) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6673:2: (iv_ruleValueLiteral= ruleValueLiteral EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6674:2: iv_ruleValueLiteral= ruleValueLiteral EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getValueLiteralRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral11811);
            iv_ruleValueLiteral=ruleValueLiteral();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleValueLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleValueLiteral11821); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 109, entryRuleValueLiteral_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleValueLiteral


    // $ANTLR start ruleValueLiteral
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6681:1: ruleValueLiteral returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleValueLiteral() throws RecognitionException {
        EObject current = null;
        int ruleValueLiteral_StartIndex = input.index();
        Token lv_value_0_0=null;

         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 110) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6686:6: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6687:1: ( (lv_value_0_0= RULE_STRING ) )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6687:1: ( (lv_value_0_0= RULE_STRING ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6688:1: (lv_value_0_0= RULE_STRING )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6688:1: (lv_value_0_0= RULE_STRING )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6689:3: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)input.LT(1);
            match(input,RULE_STRING,FollowSets000.FOLLOW_RULE_STRING_in_ruleValueLiteral11862); if (failed) return current;
            if ( backtracking==0 ) {

              			createLeafNode(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0(), "value"); 
              		
            }
            if ( backtracking==0 ) {

              	        if (current==null) {
              	            current = factory.create(grammarAccess.getValueLiteralRule().getType().getClassifier());
              	            associateNodeWithAstElement(currentNode, current);
              	        }
              	        try {
              	       		set(
              	       			current, 
              	       			"value",
              	        		lv_value_0_0, 
              	        		"STRING", 
              	        		lastConsumedNode);
              	        } catch (ValueConverterException vce) {
              				handleValueConverterException(vce);
              	        }
              	    
            }

            }


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 110, ruleValueLiteral_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleValueLiteral


    // $ANTLR start entryRuleParanthesizedExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6719:1: entryRuleParanthesizedExpression returns [EObject current=null] : iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF ;
    public final EObject entryRuleParanthesizedExpression() throws RecognitionException {
        EObject current = null;
        int entryRuleParanthesizedExpression_StartIndex = input.index();
        EObject iv_ruleParanthesizedExpression = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 111) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6720:2: (iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6721:2: iv_ruleParanthesizedExpression= ruleParanthesizedExpression EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getParanthesizedExpressionRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression11901);
            iv_ruleParanthesizedExpression=ruleParanthesizedExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleParanthesizedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleParanthesizedExpression11911); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 111, entryRuleParanthesizedExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end entryRuleParanthesizedExpression


    // $ANTLR start ruleParanthesizedExpression
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6728:1: ruleParanthesizedExpression returns [EObject current=null] : ( KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4 ) ;
    public final EObject ruleParanthesizedExpression() throws RecognitionException {
        EObject current = null;
        int ruleParanthesizedExpression_StartIndex = input.index();
        EObject this_Expression_1 = null;


         EObject temp=null; setCurrentLookahead(); resetLookahead(); 
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 112) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6733:6: ( ( KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4 ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6734:1: ( KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4 )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6734:1: ( KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4 )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6735:2: KEYWORD_3 this_Expression_1= ruleExpression KEYWORD_4
            {
            match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_ruleParanthesizedExpression11947); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0(), null); 
                  
            }
            if ( backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( backtracking==0 ) {
               
                      currentNode=createCompositeNode(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1(), currentNode); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_ruleExpression_in_ruleParanthesizedExpression11972);
            this_Expression_1=ruleExpression();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {

                      current = this_Expression_1;
                      currentNode = currentNode.getParent();
                  
            }
            match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_ruleParanthesizedExpression11982); if (failed) return current;
            if ( backtracking==0 ) {

                      createLeafNode(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2(), null); 
                  
            }

            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
                  	lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 112, ruleParanthesizedExpression_StartIndex); }
        }
        return current;
    }
    // $ANTLR end ruleParanthesizedExpression


    // $ANTLR start entryRuleQID
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6764:1: entryRuleQID returns [String current=null] : iv_ruleQID= ruleQID EOF ;
    public final String entryRuleQID() throws RecognitionException {
        String current = null;
        int entryRuleQID_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleQID = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 113) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6768:1: (iv_ruleQID= ruleQID EOF )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6769:2: iv_ruleQID= ruleQID EOF
            {
            if ( backtracking==0 ) {
               currentNode = createCompositeNode(grammarAccess.getQIDRule(), currentNode); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleQID_in_entryRuleQID12024);
            iv_ruleQID=ruleQID();
            _fsp--;
            if (failed) return current;
            if ( backtracking==0 ) {
               current =iv_ruleQID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleQID12035); if (failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 113, entryRuleQID_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end entryRuleQID


    // $ANTLR start ruleQID
    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6779:1: ruleQID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* ) ;
    public final AntlrDatatypeRuleToken ruleQID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleQID_StartIndex = input.index();
        Token this_ID_0=null;
        Token this_INT_1=null;
        Token this_HEX_2=null;
        Token this_ID_3=null;
        Token kw=null;
        Token this_ID_5=null;
        Token this_INT_6=null;
        Token this_HEX_7=null;
        Token this_ID_8=null;

         setCurrentLookahead(); resetLookahead(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 114) ) { return current; }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6785:6: ( (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* ) )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6786:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* )
            {
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6786:1: (this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )* )
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6786:6: this_ID_0= RULE_ID (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )* (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )*
            {
            this_ID_0=(Token)input.LT(1);
            match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleQID12079); if (failed) return current;
            if ( backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( backtracking==0 ) {
               
                  createLeafNode(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0(), null); 
                  
            }
            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6793:1: (this_INT_1= RULE_INT | this_HEX_2= RULE_HEX | this_ID_3= RULE_ID )*
            loop93:
            do {
                int alt93=4;
                switch ( input.LA(1) ) {
                case RULE_INT:
                    {
                    alt93=1;
                    }
                    break;
                case RULE_HEX:
                    {
                    alt93=2;
                    }
                    break;
                case RULE_ID:
                    {
                    alt93=3;
                    }
                    break;

                }

                switch (alt93) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6793:6: this_INT_1= RULE_INT
            	    {
            	    this_INT_1=(Token)input.LT(1);
            	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleQID12100); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_INT_1);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6801:10: this_HEX_2= RULE_HEX
            	    {
            	    this_HEX_2=(Token)input.LT(1);
            	    match(input,RULE_HEX,FollowSets000.FOLLOW_RULE_HEX_in_ruleQID12126); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_HEX_2);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1(), null); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6809:10: this_ID_3= RULE_ID
            	    {
            	    this_ID_3=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleQID12152); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_3);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2(), null); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6816:3: (kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )* )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==KEYWORD_9) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6817:2: kw= KEYWORD_9 this_ID_5= RULE_ID (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    {
            	    kw=(Token)input.LT(1);
            	    match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_ruleQID12173); if (failed) return current;
            	    if ( backtracking==0 ) {

            	              current.merge(kw);
            	              createLeafNode(grammarAccess.getQIDAccess().getFullStopKeyword_2_0(), null); 
            	          
            	    }
            	    this_ID_5=(Token)input.LT(1);
            	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleQID12188); if (failed) return current;
            	    if ( backtracking==0 ) {

            	      		current.merge(this_ID_5);
            	          
            	    }
            	    if ( backtracking==0 ) {
            	       
            	          createLeafNode(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1(), null); 
            	          
            	    }
            	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6829:1: (this_INT_6= RULE_INT | this_HEX_7= RULE_HEX | this_ID_8= RULE_ID )*
            	    loop94:
            	    do {
            	        int alt94=4;
            	        switch ( input.LA(1) ) {
            	        case RULE_INT:
            	            {
            	            alt94=1;
            	            }
            	            break;
            	        case RULE_HEX:
            	            {
            	            alt94=2;
            	            }
            	            break;
            	        case RULE_ID:
            	            {
            	            alt94=3;
            	            }
            	            break;

            	        }

            	        switch (alt94) {
            	    	case 1 :
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6829:6: this_INT_6= RULE_INT
            	    	    {
            	    	    this_INT_6=(Token)input.LT(1);
            	    	    match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_ruleQID12209); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_INT_6);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6837:10: this_HEX_7= RULE_HEX
            	    	    {
            	    	    this_HEX_7=(Token)input.LT(1);
            	    	    match(input,RULE_HEX,FollowSets000.FOLLOW_RULE_HEX_in_ruleQID12235); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_HEX_7);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6845:10: this_ID_8= RULE_ID
            	    	    {
            	    	    this_ID_8=(Token)input.LT(1);
            	    	    match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_ruleQID12261); if (failed) return current;
            	    	    if ( backtracking==0 ) {

            	    	      		current.merge(this_ID_8);
            	    	          
            	    	    }
            	    	    if ( backtracking==0 ) {
            	    	       
            	    	          createLeafNode(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2(), null); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop94;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( backtracking==0 ) {
               resetLookahead(); 
              	    lastConsumedNode = currentNode;
                  
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( backtracking>0 ) { memoize(input, 114, ruleQID_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end ruleQID

    // $ANTLR start synpred2
    public final void synpred2_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:129:2: ( ( ( ruleUnit ) )* )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:129:2: ( ( ruleUnit ) )*
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:129:2: ( ( ruleUnit ) )*
        loop96:
        do {
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==KEYWORD_47||LA96_0==RULE_DOCUMENTATION) ) {
                alt96=1;
            }


            switch (alt96) {
        	case 1 :
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:130:1: ( ruleUnit )
        	    {
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:130:1: ( ruleUnit )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:131:3: ruleUnit
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleUnit_in_synpred2228);
        	    ruleUnit();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop96;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred2

    // $ANTLR start synpred9
    public final void synpred9_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:380:4: ( ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:380:4: ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:380:4: ({...}? => ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:381:5: {...}? => ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred9", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:381:101: ( ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:382:6: ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:385:6: ( KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:386:2: KEYWORD_55 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12
        {
        match(input,KEYWORD_55,FollowSets000.FOLLOW_KEYWORD_55_in_synpred9577); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred9588); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:395:1: ( ( rulePath ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:396:1: ( rulePath )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:396:1: ( rulePath )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:397:3: rulePath
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_rulePath_in_synpred9609);
        rulePath();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred9620); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred9

    // $ANTLR start synpred10
    public final void synpred10_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:431:4: ( ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:431:4: ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:431:4: ({...}? => ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:432:5: {...}? => ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:432:101: ( ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:433:6: ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:436:6: ( KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:437:2: KEYWORD_54 KEYWORD_11 ( ( rulePath ) ) KEYWORD_12
        {
        match(input,KEYWORD_54,FollowSets000.FOLLOW_KEYWORD_54_in_synpred10683); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred10694); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:446:1: ( ( rulePath ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:447:1: ( rulePath )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:447:1: ( rulePath )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:448:3: rulePath
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_rulePath_in_synpred10715);
        rulePath();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred10726); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10

    // $ANTLR start synpred11
    public final void synpred11_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:488:2: ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:488:2: KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12
        {
        match(input,KEYWORD_60,FollowSets000.FOLLOW_KEYWORD_60_in_synpred11789); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred11800); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:497:1: ( ( ruleProvidedCapability ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:498:1: ( ruleProvidedCapability )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:498:1: ( ruleProvidedCapability )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:499:3: ruleProvidedCapability
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleProvidedCapability_in_synpred11821);
        ruleProvidedCapability();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred11832); if (failed) return ;

        }
    }
    // $ANTLR end synpred11

    // $ANTLR start synpred12
    public final void synpred12_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:482:4: ( ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:482:4: ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:482:4: ({...}? => ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:483:5: {...}? => ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:483:101: ( ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+ )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:484:6: ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:487:6: ( KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12 )+
        int cnt98=0;
        loop98:
        do {
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==KEYWORD_60) ) {
                alt98=1;
            }


            switch (alt98) {
        	case 1 :
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:488:2: KEYWORD_60 KEYWORD_11 ( ( ruleProvidedCapability ) ) KEYWORD_12
        	    {
        	    match(input,KEYWORD_60,FollowSets000.FOLLOW_KEYWORD_60_in_synpred12789); if (failed) return ;
        	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred12800); if (failed) return ;
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:497:1: ( ( ruleProvidedCapability ) )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:498:1: ( ruleProvidedCapability )
        	    {
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:498:1: ( ruleProvidedCapability )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:499:3: ruleProvidedCapability
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleProvidedCapability_in_synpred12821);
        	    ruleProvidedCapability();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }

        	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred12832); if (failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt98 >= 1 ) break loop98;
        	    if (backtracking>0) {failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(98, input);
                    throw eee;
            }
            cnt98++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred12

    // $ANTLR start synpred13
    public final void synpred13_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:539:2: ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:539:2: KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12
        {
        match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_synpred13896); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred13907); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:548:1: ( ( ruleAliasedRequiredCapability ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:549:1: ( ruleAliasedRequiredCapability )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:549:1: ( ruleAliasedRequiredCapability )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:550:3: ruleAliasedRequiredCapability
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAliasedRequiredCapability_in_synpred13928);
        ruleAliasedRequiredCapability();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred13939); if (failed) return ;

        }
    }
    // $ANTLR end synpred13

    // $ANTLR start synpred14
    public final void synpred14_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:533:4: ( ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:533:4: ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:533:4: ({...}? => ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:534:5: {...}? => ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred14", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:534:101: ( ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+ )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:535:6: ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:538:6: ( KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12 )+
        int cnt99=0;
        loop99:
        do {
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==KEYWORD_61) ) {
                alt99=1;
            }


            switch (alt99) {
        	case 1 :
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:539:2: KEYWORD_61 KEYWORD_11 ( ( ruleAliasedRequiredCapability ) ) KEYWORD_12
        	    {
        	    match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_synpred14896); if (failed) return ;
        	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred14907); if (failed) return ;
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:548:1: ( ( ruleAliasedRequiredCapability ) )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:549:1: ( ruleAliasedRequiredCapability )
        	    {
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:549:1: ( ruleAliasedRequiredCapability )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:550:3: ruleAliasedRequiredCapability
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleAliasedRequiredCapability_in_synpred14928);
        	    ruleAliasedRequiredCapability();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }

        	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred14939); if (failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt99 >= 1 ) break loop99;
        	    if (backtracking>0) {failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(99, input);
                    throw eee;
            }
            cnt99++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred14

    // $ANTLR start synpred15
    public final void synpred15_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:590:2: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:590:2: KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12
        {
        match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_synpred151003); if (failed) return ;
        match(input,KEYWORD_41,FollowSets000.FOLLOW_KEYWORD_41_in_synpred151014); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred151025); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:604:1: ( ( ruleRequiredCapability ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:605:1: ( ruleRequiredCapability )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:605:1: ( ruleRequiredCapability )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:606:3: ruleRequiredCapability
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleRequiredCapability_in_synpred151046);
        ruleRequiredCapability();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred151057); if (failed) return ;

        }
    }
    // $ANTLR end synpred15

    // $ANTLR start synpred16
    public final void synpred16_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:584:4: ( ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:584:4: ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:584:4: ({...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:585:5: {...}? => ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred16", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:585:101: ( ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+ )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:586:6: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:589:6: ( KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12 )+
        int cnt100=0;
        loop100:
        do {
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==KEYWORD_61) ) {
                alt100=1;
            }


            switch (alt100) {
        	case 1 :
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:590:2: KEYWORD_61 KEYWORD_41 KEYWORD_11 ( ( ruleRequiredCapability ) ) KEYWORD_12
        	    {
        	    match(input,KEYWORD_61,FollowSets000.FOLLOW_KEYWORD_61_in_synpred161003); if (failed) return ;
        	    match(input,KEYWORD_41,FollowSets000.FOLLOW_KEYWORD_41_in_synpred161014); if (failed) return ;
        	    match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred161025); if (failed) return ;
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:604:1: ( ( ruleRequiredCapability ) )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:605:1: ( ruleRequiredCapability )
        	    {
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:605:1: ( ruleRequiredCapability )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:606:3: ruleRequiredCapability
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleRequiredCapability_in_synpred161046);
        	    ruleRequiredCapability();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }

        	    match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred161057); if (failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt100 >= 1 ) break loop100;
        	    if (backtracking>0) {failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(100, input);
                    throw eee;
            }
            cnt100++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred16

    // $ANTLR start synpred17
    public final void synpred17_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:646:1: ( ( ruleFunction ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:646:1: ( ruleFunction )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:646:1: ( ruleFunction )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:647:3: ruleFunction
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleFunction_in_synpred171130);
        ruleFunction();
        _fsp--;
        if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred17

    // $ANTLR start synpred18
    public final void synpred18_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:640:4: ( ({...}? => ( ( ( ruleFunction ) )+ ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:640:4: ({...}? => ( ( ( ruleFunction ) )+ ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:640:4: ({...}? => ( ( ( ruleFunction ) )+ ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:641:5: {...}? => ( ( ( ruleFunction ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred18", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:641:101: ( ( ( ruleFunction ) )+ )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:642:6: ( ( ruleFunction ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:645:6: ( ( ruleFunction ) )+
        int cnt101=0;
        loop101:
        do {
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==KEYWORD_59||LA101_0==KEYWORD_50||LA101_0==RULE_DOCUMENTATION||LA101_0==RULE_ID) ) {
                alt101=1;
            }


            switch (alt101) {
        	case 1 :
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:646:1: ( ruleFunction )
        	    {
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:646:1: ( ruleFunction )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:647:3: ruleFunction
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleFunction_in_synpred181130);
        	    ruleFunction();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt101 >= 1 ) break loop101;
        	    if (backtracking>0) {failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(101, input);
                    throw eee;
            }
            cnt101++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred18

    // $ANTLR start synpred20
    public final void synpred20_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:783:4: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:783:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:783:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:784:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred20", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:784:117: ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:785:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:788:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:789:2: KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12
        {
        match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_synpred201384); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred201395); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:798:1: ( ( ruleExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:799:1: ( ruleExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:799:1: ( ruleExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:800:3: ruleExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleExpression_in_synpred201416);
        ruleExpression();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred201427); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred20

    // $ANTLR start synpred21
    public final void synpred21_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:834:4: ( ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:834:4: ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:834:4: ({...}? => ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:835:5: {...}? => ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred21", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:835:117: ( ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:836:6: ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:839:6: ( KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:840:2: KEYWORD_45 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12
        {
        match(input,KEYWORD_45,FollowSets000.FOLLOW_KEYWORD_45_in_synpred211490); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred211501); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:849:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:850:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:850:1: ( RULE_ID )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:851:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred211518); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred211534); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred21

    // $ANTLR start synpred22
    public final void synpred22_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:885:4: ( ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:885:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:885:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:886:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred22", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:886:117: ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:887:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:890:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:891:2: KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12
        {
        match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_synpred221597); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred221608); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:900:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:901:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:901:1: ( RULE_ID )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:902:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred221625); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred221641); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred22

    // $ANTLR start synpred26
    public final void synpred26_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1083:4: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1083:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1083:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1084:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred26", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1084:124: ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1085:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1088:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1089:2: KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12
        {
        match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_synpred261949); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred261960); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1098:1: ( ( ruleExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1099:1: ( ruleExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1099:1: ( ruleExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1100:3: ruleExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleExpression_in_synpred261981);
        ruleExpression();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred261992); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred26

    // $ANTLR start synpred27
    public final void synpred27_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1134:4: ( ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1134:4: ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1134:4: ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1135:5: {...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred27", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1135:124: ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1136:6: ( ( ( KEYWORD_53 ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1139:6: ( ( ( KEYWORD_53 ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1139:7: ( ( KEYWORD_53 ) ) KEYWORD_12
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1139:7: ( ( KEYWORD_53 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1140:1: ( KEYWORD_53 )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1140:1: ( KEYWORD_53 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1141:3: KEYWORD_53
        {
        match(input,KEYWORD_53,FollowSets000.FOLLOW_KEYWORD_53_in_synpred272063); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred272087); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27

    // $ANTLR start synpred28
    public final void synpred28_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1173:4: ( ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1173:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1173:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1174:5: {...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred28", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1174:124: ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1175:6: ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1178:6: ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1179:2: KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12
        {
        match(input,KEYWORD_65,FollowSets000.FOLLOW_KEYWORD_65_in_synpred282150); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred282161); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1188:1: ( ( RULE_INT ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1189:1: ( RULE_INT )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1189:1: ( RULE_INT )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1190:3: RULE_INT
        {
        match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_synpred282178); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred282194); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred28

    // $ANTLR start synpred29
    public final void synpred29_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1224:4: ( ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1224:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1224:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1225:5: {...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred29", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1225:124: ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1226:6: ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1229:6: ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1230:2: KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12
        {
        match(input,KEYWORD_64,FollowSets000.FOLLOW_KEYWORD_64_in_synpred292257); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred292268); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1239:1: ( ( RULE_INT ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1240:1: ( RULE_INT )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1240:1: ( RULE_INT )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1241:3: RULE_INT
        {
        match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_synpred292285); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred292301); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29

    // $ANTLR start synpred30
    public final void synpred30_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1275:4: ( ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1275:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1275:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1276:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred30", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1276:124: ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1277:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1280:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1281:2: KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12
        {
        match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_synpred302364); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred302375); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1290:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1291:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1291:1: ( RULE_ID )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1292:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred302392); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred302408); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred30

    // $ANTLR start synpred32
    public final void synpred32_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1457:4: ( ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1457:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1457:4: ({...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1458:5: {...}? => ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred32", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1458:117: ( ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1459:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1462:6: ( KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1463:2: KEYWORD_48 KEYWORD_11 ( ( ruleExpression ) ) KEYWORD_12
        {
        match(input,KEYWORD_48,FollowSets000.FOLLOW_KEYWORD_48_in_synpred322685); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred322696); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1472:1: ( ( ruleExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1473:1: ( ruleExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1473:1: ( ruleExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1474:3: ruleExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleExpression_in_synpred322717);
        ruleExpression();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred322728); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred32

    // $ANTLR start synpred33
    public final void synpred33_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1508:4: ( ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1508:4: ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1508:4: ({...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1509:5: {...}? => ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred33", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1509:117: ( ( ( ( KEYWORD_53 ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1510:6: ( ( ( KEYWORD_53 ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1513:6: ( ( ( KEYWORD_53 ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1513:7: ( ( KEYWORD_53 ) ) KEYWORD_12
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1513:7: ( ( KEYWORD_53 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1514:1: ( KEYWORD_53 )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1514:1: ( KEYWORD_53 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1515:3: KEYWORD_53
        {
        match(input,KEYWORD_53,FollowSets000.FOLLOW_KEYWORD_53_in_synpred332799); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred332823); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred33

    // $ANTLR start synpred34
    public final void synpred34_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1547:4: ( ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1547:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1547:4: ({...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1548:5: {...}? => ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred34", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1548:117: ( ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1549:6: ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1552:6: ( KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1553:2: KEYWORD_65 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12
        {
        match(input,KEYWORD_65,FollowSets000.FOLLOW_KEYWORD_65_in_synpred342886); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred342897); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1562:1: ( ( RULE_INT ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1563:1: ( RULE_INT )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1563:1: ( RULE_INT )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1564:3: RULE_INT
        {
        match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_synpred342914); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred342930); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred34

    // $ANTLR start synpred35
    public final void synpred35_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1598:4: ( ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1598:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1598:4: ({...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1599:5: {...}? => ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred35", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1599:117: ( ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1600:6: ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1603:6: ( KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1604:2: KEYWORD_64 KEYWORD_11 ( ( RULE_INT ) ) KEYWORD_12
        {
        match(input,KEYWORD_64,FollowSets000.FOLLOW_KEYWORD_64_in_synpred352993); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred353004); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1613:1: ( ( RULE_INT ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1614:1: ( RULE_INT )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1614:1: ( RULE_INT )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1615:3: RULE_INT
        {
        match(input,RULE_INT,FollowSets000.FOLLOW_RULE_INT_in_synpred353021); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred353037); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35

    // $ANTLR start synpred36
    public final void synpred36_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1649:4: ( ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1649:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1649:4: ({...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1650:5: {...}? => ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
            if (backtracking>0) {failed=true; return ;}
            throw new FailedPredicateException(input, "synpred36", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
        }
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1650:117: ( ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1651:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1654:6: ( KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1655:2: KEYWORD_58 KEYWORD_11 ( ( RULE_ID ) ) KEYWORD_12
        {
        match(input,KEYWORD_58,FollowSets000.FOLLOW_KEYWORD_58_in_synpred363100); if (failed) return ;
        match(input,KEYWORD_11,FollowSets000.FOLLOW_KEYWORD_11_in_synpred363111); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1664:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1665:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1665:1: ( RULE_ID )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1666:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred363128); if (failed) return ;

        }


        }

        match(input,KEYWORD_12,FollowSets000.FOLLOW_KEYWORD_12_in_synpred363144); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred36

    // $ANTLR start synpred42
    public final void synpred42_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1896:2: ( ruleClosureParameter )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:1896:2: ruleClosureParameter
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleClosureParameter_in_synpred423641);
        ruleClosureParameter();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred42

    // $ANTLR start synpred69
    public final void synpred69_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2735:2: ( ruleVarDeclaration )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2735:2: ruleVarDeclaration
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleVarDeclaration_in_synpred695151);
        ruleVarDeclaration();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred69

    // $ANTLR start synpred71
    public final void synpred71_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2842:2: ( () ( ( ruleAssignmentOperator ) ) ( ( ruleAssignmentExpression ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2842:2: () ( ( ruleAssignmentOperator ) ) ( ( ruleAssignmentExpression ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2842:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2843:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2861:2: ( ( ruleAssignmentOperator ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2862:1: ( ruleAssignmentOperator )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2862:1: ( ruleAssignmentOperator )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2863:3: ruleAssignmentOperator
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAssignmentOperator_in_synpred715430);
        ruleAssignmentOperator();
        _fsp--;
        if (failed) return ;

        }


        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2885:2: ( ( ruleAssignmentExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2886:1: ( ruleAssignmentExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2886:1: ( ruleAssignmentExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:2887:3: ruleAssignmentExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAssignmentExpression_in_synpred715451);
        ruleAssignmentExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred71

    // $ANTLR start synpred85
    public final void synpred85_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3694:2: ( () KEYWORD_36 ( ( ruleAndExpression ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3694:2: () KEYWORD_36 ( ( ruleAndExpression ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3694:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3695:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_36,FollowSets000.FOLLOW_KEYWORD_36_in_synpred856771); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3718:1: ( ( ruleAndExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3719:1: ( ruleAndExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3719:1: ( ruleAndExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3720:3: ruleAndExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAndExpression_in_synpred856792);
        ruleAndExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred85

    // $ANTLR start synpred86
    public final void synpred86_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3777:2: ( () KEYWORD_23 ( ( ruleRelationalExpression ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3777:2: () KEYWORD_23 ( ( ruleRelationalExpression ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3777:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3778:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_23,FollowSets000.FOLLOW_KEYWORD_23_in_synpred866912); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3801:1: ( ( ruleRelationalExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3802:1: ( ruleRelationalExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3802:1: ( ruleRelationalExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3803:3: ruleRelationalExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleRelationalExpression_in_synpred866933);
        ruleRelationalExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86

    // $ANTLR start synpred87
    public final void synpred87_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3860:2: ( () ( ( ruleRelationalOperator ) ) ( ( ruleAdditiveExpression ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3860:2: () ( ( ruleRelationalOperator ) ) ( ( ruleAdditiveExpression ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3860:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3861:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3879:2: ( ( ruleRelationalOperator ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3880:1: ( ruleRelationalOperator )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3880:1: ( ruleRelationalOperator )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3881:3: ruleRelationalOperator
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleRelationalOperator_in_synpred877063);
        ruleRelationalOperator();
        _fsp--;
        if (failed) return ;

        }


        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3903:2: ( ( ruleAdditiveExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3904:1: ( ruleAdditiveExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3904:1: ( ruleAdditiveExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3905:3: ruleAdditiveExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleAdditiveExpression_in_synpred877084);
        ruleAdditiveExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred87

    // $ANTLR start synpred89
    public final void synpred89_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3962:2: ( () ( ( ( KEYWORD_6 | KEYWORD_8 ) ) ) ( ( ruleMultiplicativeExpression ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3962:2: () ( ( ( KEYWORD_6 | KEYWORD_8 ) ) ) ( ( ruleMultiplicativeExpression ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3962:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3963:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3981:2: ( ( ( KEYWORD_6 | KEYWORD_8 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3982:1: ( ( KEYWORD_6 | KEYWORD_8 ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3982:1: ( ( KEYWORD_6 | KEYWORD_8 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:3983:1: ( KEYWORD_6 | KEYWORD_8 )
        {
        if ( input.LA(1)==KEYWORD_6||input.LA(1)==KEYWORD_8 ) {
            input.consume();
            errorRecovery=false;failed=false;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            MismatchedSetException mse =
                new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FollowSets000.FOLLOW_set_in_synpred897206);    throw mse;
        }


        }


        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4025:2: ( ( ruleMultiplicativeExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4026:1: ( ruleMultiplicativeExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4026:1: ( ruleMultiplicativeExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4027:3: ruleMultiplicativeExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleMultiplicativeExpression_in_synpred897281);
        ruleMultiplicativeExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred89

    // $ANTLR start synpred92
    public final void synpred92_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4084:2: ( () ( ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) ) ) ( ( ruleSetExpression ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4084:2: () ( ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) ) ) ( ( ruleSetExpression ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4084:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4085:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4103:2: ( ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4104:1: ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4104:1: ( ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4105:1: ( KEYWORD_5 | KEYWORD_10 | KEYWORD_2 )
        {
        if ( input.LA(1)==KEYWORD_2||input.LA(1)==KEYWORD_5||input.LA(1)==KEYWORD_10 ) {
            input.consume();
            errorRecovery=false;failed=false;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            MismatchedSetException mse =
                new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FollowSets000.FOLLOW_set_in_synpred927403);    throw mse;
        }


        }


        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4166:2: ( ( ruleSetExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4167:1: ( ruleSetExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4167:1: ( ruleSetExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4168:3: ruleSetExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleSetExpression_in_synpred927508);
        ruleSetExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred92

    // $ANTLR start synpred93
    public final void synpred93_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4225:2: ( () ( ( KEYWORD_29 ) ) ( ( ruleUnaryOrInfixExpression ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4225:2: () ( ( KEYWORD_29 ) ) ( ( ruleUnaryOrInfixExpression ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4225:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4226:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4244:2: ( ( KEYWORD_29 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4245:1: ( KEYWORD_29 )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4245:1: ( KEYWORD_29 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4246:3: KEYWORD_29
        {
        match(input,KEYWORD_29,FollowSets000.FOLLOW_KEYWORD_29_in_synpred937636); if (failed) return ;

        }


        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4266:2: ( ( ruleUnaryOrInfixExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4267:1: ( ruleUnaryOrInfixExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4267:1: ( ruleUnaryOrInfixExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4268:3: ruleUnaryOrInfixExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleUnaryOrInfixExpression_in_synpred937670);
        ruleUnaryOrInfixExpression();
        _fsp--;
        if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred93

    // $ANTLR start synpred99
    public final void synpred99_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4596:2: ( () ( ( ( KEYWORD_27 | KEYWORD_25 ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4596:2: () ( ( ( KEYWORD_27 | KEYWORD_25 ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4596:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4597:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4615:2: ( ( ( KEYWORD_27 | KEYWORD_25 ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4616:1: ( ( KEYWORD_27 | KEYWORD_25 ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4616:1: ( ( KEYWORD_27 | KEYWORD_25 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4617:1: ( KEYWORD_27 | KEYWORD_25 )
        {
        if ( input.LA(1)==KEYWORD_25||input.LA(1)==KEYWORD_27 ) {
            input.consume();
            errorRecovery=false;failed=false;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            MismatchedSetException mse =
                new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FollowSets000.FOLLOW_set_in_synpred998286);    throw mse;
        }


        }


        }


        }
    }
    // $ANTLR end synpred99

    // $ANTLR start synpred101
    public final void synpred101_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:2: ( ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:2: ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:2: ( () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:3: () KEYWORD_9 ( ( RULE_ID ) ) KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4694:3: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4695:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_synpred1018461); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4718:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4719:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4719:1: ( RULE_ID )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4720:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred1018478); if (failed) return ;

        }


        }

        match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_synpred1018494); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4747:1: ( ( ruleParameterList ) )?
        int alt111=2;
        int LA111_0 = input.LA(1);

        if ( (LA111_0==KEYWORD_63||LA111_0==KEYWORD_56||LA111_0==KEYWORD_52||(LA111_0>=KEYWORD_54 && LA111_0<=KEYWORD_55)||LA111_0==KEYWORD_51||(LA111_0>=KEYWORD_46 && LA111_0<=KEYWORD_47)||LA111_0==KEYWORD_49||LA111_0==KEYWORD_39||LA111_0==KEYWORD_42||LA111_0==KEYWORD_25||LA111_0==KEYWORD_27||LA111_0==KEYWORD_1||LA111_0==KEYWORD_3||LA111_0==KEYWORD_8||LA111_0==KEYWORD_13||(LA111_0>=KEYWORD_18 && LA111_0<=KEYWORD_19)||LA111_0==RULE_ID||LA111_0==RULE_STRING) ) {
            alt111=1;
        }
        switch (alt111) {
            case 1 :
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4748:1: ( ruleParameterList )
                {
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4748:1: ( ruleParameterList )
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4749:3: ruleParameterList
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_synpred1018515);
                ruleParameterList();
                _fsp--;
                if (failed) return ;

                }


                }
                break;

        }

        match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_synpred1018527); if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred101

    // $ANTLR start synpred102
    public final void synpred102_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:6: ( ( () KEYWORD_16 ( ( ruleExpression ) ) KEYWORD_17 ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:6: ( () KEYWORD_16 ( ( ruleExpression ) ) KEYWORD_17 )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:6: ( () KEYWORD_16 ( ( ruleExpression ) ) KEYWORD_17 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:7: () KEYWORD_16 ( ( ruleExpression ) ) KEYWORD_17
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4777:7: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4778:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_16,FollowSets000.FOLLOW_KEYWORD_16_in_synpred1028558); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4801:1: ( ( ruleExpression ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4802:1: ( ruleExpression )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4802:1: ( ruleExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4803:3: ruleExpression
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleExpression_in_synpred1028579);
        ruleExpression();
        _fsp--;
        if (failed) return ;

        }


        }

        match(input,KEYWORD_17,FollowSets000.FOLLOW_KEYWORD_17_in_synpred1028590); if (failed) return ;

        }


        }
    }
    // $ANTLR end synpred102

    // $ANTLR start synpred103
    public final void synpred103_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:6: ( ( () KEYWORD_9 ( ( RULE_ID ) ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:6: ( () KEYWORD_9 ( ( RULE_ID ) ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:6: ( () KEYWORD_9 ( ( RULE_ID ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:7: () KEYWORD_9 ( ( RULE_ID ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4831:7: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4832:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_9,FollowSets000.FOLLOW_KEYWORD_9_in_synpred1038621); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4855:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4856:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4856:1: ( RULE_ID )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4857:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred1038638); if (failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred103

    // $ANTLR start synpred105
    public final void synpred105_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4914:2: ( () KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4914:2: () KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4914:2: ()
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4915:2: 
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_synpred1058764); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4938:1: ( ( ruleParameterList ) )?
        int alt112=2;
        int LA112_0 = input.LA(1);

        if ( (LA112_0==KEYWORD_63||LA112_0==KEYWORD_56||LA112_0==KEYWORD_52||(LA112_0>=KEYWORD_54 && LA112_0<=KEYWORD_55)||LA112_0==KEYWORD_51||(LA112_0>=KEYWORD_46 && LA112_0<=KEYWORD_47)||LA112_0==KEYWORD_49||LA112_0==KEYWORD_39||LA112_0==KEYWORD_42||LA112_0==KEYWORD_25||LA112_0==KEYWORD_27||LA112_0==KEYWORD_1||LA112_0==KEYWORD_3||LA112_0==KEYWORD_8||LA112_0==KEYWORD_13||(LA112_0>=KEYWORD_18 && LA112_0<=KEYWORD_19)||LA112_0==RULE_ID||LA112_0==RULE_STRING) ) {
            alt112=1;
        }
        switch (alt112) {
            case 1 :
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4939:1: ( ruleParameterList )
                {
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4939:1: ( ruleParameterList )
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4940:3: ruleParameterList
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_synpred1058785);
                ruleParameterList();
                _fsp--;
                if (failed) return ;

                }


                }
                break;

        }

        match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_synpred1058797); if (failed) return ;

        }
    }
    // $ANTLR end synpred105

    // $ANTLR start synpred106
    public final void synpred106_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4991:2: ( ruleFeatureCall )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:4991:2: ruleFeatureCall
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleFeatureCall_in_synpred1068894);
        ruleFeatureCall();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred106

    // $ANTLR start synpred108
    public final void synpred108_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5017:2: ( ruleValue )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5017:2: ruleValue
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleValue_in_synpred1088954);
        ruleValue();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred108

    // $ANTLR start synpred109
    public final void synpred109_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5030:2: ( ruleLiteral )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5030:2: ruleLiteral
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleLiteral_in_synpred1098984);
        ruleLiteral();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred109

    // $ANTLR start synpred112
    public final void synpred112_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5069:2: ( ruleBlockExpression )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5069:2: ruleBlockExpression
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleBlockExpression_in_synpred1129074);
        ruleBlockExpression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred112

    // $ANTLR start synpred127
    public final void synpred127_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5871:2: ( KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4 )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5871:2: KEYWORD_3 ( ( ruleParameterList ) )? KEYWORD_4
        {
        match(input,KEYWORD_3,FollowSets000.FOLLOW_KEYWORD_3_in_synpred12710441); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5875:1: ( ( ruleParameterList ) )?
        int alt114=2;
        int LA114_0 = input.LA(1);

        if ( (LA114_0==KEYWORD_63||LA114_0==KEYWORD_56||LA114_0==KEYWORD_52||(LA114_0>=KEYWORD_54 && LA114_0<=KEYWORD_55)||LA114_0==KEYWORD_51||(LA114_0>=KEYWORD_46 && LA114_0<=KEYWORD_47)||LA114_0==KEYWORD_49||LA114_0==KEYWORD_39||LA114_0==KEYWORD_42||LA114_0==KEYWORD_25||LA114_0==KEYWORD_27||LA114_0==KEYWORD_1||LA114_0==KEYWORD_3||LA114_0==KEYWORD_8||LA114_0==KEYWORD_13||(LA114_0>=KEYWORD_18 && LA114_0<=KEYWORD_19)||LA114_0==RULE_ID||LA114_0==RULE_STRING) ) {
            alt114=1;
        }
        switch (alt114) {
            case 1 :
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5876:1: ( ruleParameterList )
                {
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5876:1: ( ruleParameterList )
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5877:3: ruleParameterList
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterList_in_synpred12710462);
                ruleParameterList();
                _fsp--;
                if (failed) return ;

                }


                }
                break;

        }

        match(input,KEYWORD_4,FollowSets000.FOLLOW_KEYWORD_4_in_synpred12710474); if (failed) return ;

        }
    }
    // $ANTLR end synpred127

    // $ANTLR start synpred128
    public final void synpred128_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5905:2: ( KEYWORD_35 ( ( RULE_ID ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5905:2: KEYWORD_35 ( ( RULE_ID ) )
        {
        match(input,KEYWORD_35,FollowSets000.FOLLOW_KEYWORD_35_in_synpred12810488); if (failed) return ;
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5909:1: ( ( RULE_ID ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5910:1: ( RULE_ID )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5910:1: ( RULE_ID )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:5911:3: RULE_ID
        {
        match(input,RULE_ID,FollowSets000.FOLLOW_RULE_ID_in_synpred12810505); if (failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred128

    // $ANTLR start synpred135
    public final void synpred135_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:4: ( ( ( KEYWORD_19 )? ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? ) ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:4: ( ( KEYWORD_19 )? ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? ) )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:4: ( ( KEYWORD_19 )? ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:5: ( KEYWORD_19 )? ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6365:5: ( KEYWORD_19 )?
        int alt115=2;
        int LA115_0 = input.LA(1);

        if ( (LA115_0==KEYWORD_19) ) {
            alt115=1;
        }
        switch (alt115) {
            case 1 :
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6366:2: KEYWORD_19
                {
                match(input,KEYWORD_19,FollowSets000.FOLLOW_KEYWORD_19_in_synpred13511312); if (failed) return ;

                }
                break;

        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6370:3: ( ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )? )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6370:4: ( ( ruleParameterDeclaration ) ) ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )?
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6370:4: ( ( ruleParameterDeclaration ) )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6371:1: ( ruleParameterDeclaration )
        {
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6371:1: ( ruleParameterDeclaration )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6372:3: ruleParameterDeclaration
        {
        if ( backtracking==0 ) {
           
          	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0(), currentNode); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_synpred13511336);
        ruleParameterDeclaration();
        _fsp--;
        if (failed) return ;

        }


        }

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6394:2: ( KEYWORD_7 ( ( ruleParameterDeclaration ) ) )*
        loop116:
        do {
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==KEYWORD_7) ) {
                int LA116_1 = input.LA(2);

                if ( (LA116_1==KEYWORD_3||LA116_1==RULE_ID) ) {
                    alt116=1;
                }


            }


            switch (alt116) {
        	case 1 :
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6395:2: KEYWORD_7 ( ( ruleParameterDeclaration ) )
        	    {
        	    match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_synpred13511348); if (failed) return ;
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6399:1: ( ( ruleParameterDeclaration ) )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6400:1: ( ruleParameterDeclaration )
        	    {
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6400:1: ( ruleParameterDeclaration )
        	    // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6401:3: ruleParameterDeclaration
        	    {
        	    if ( backtracking==0 ) {
        	       
        	      	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0(), currentNode); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_synpred13511369);
        	    ruleParameterDeclaration();
        	    _fsp--;
        	    if (failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop116;
            }
        } while (true);

        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6423:4: ( KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) ) )?
        int alt117=2;
        int LA117_0 = input.LA(1);

        if ( (LA117_0==KEYWORD_7) ) {
            alt117=1;
        }
        switch (alt117) {
            case 1 :
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6424:2: KEYWORD_7 ( ( KEYWORD_39 ) ) ( ( ruleParameterDeclaration ) )
                {
                match(input,KEYWORD_7,FollowSets000.FOLLOW_KEYWORD_7_in_synpred13511383); if (failed) return ;
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6428:1: ( ( KEYWORD_39 ) )
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6429:1: ( KEYWORD_39 )
                {
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6429:1: ( KEYWORD_39 )
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6430:3: KEYWORD_39
                {
                match(input,KEYWORD_39,FollowSets000.FOLLOW_KEYWORD_39_in_synpred13511402); if (failed) return ;

                }


                }

                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6450:2: ( ( ruleParameterDeclaration ) )
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6451:1: ( ruleParameterDeclaration )
                {
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6451:1: ( ruleParameterDeclaration )
                // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6452:3: ruleParameterDeclaration
                {
                if ( backtracking==0 ) {
                   
                  	        currentNode=createCompositeNode(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0(), currentNode); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_ruleParameterDeclaration_in_synpred13511436);
                ruleParameterDeclaration();
                _fsp--;
                if (failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred135

    // $ANTLR start synpred137
    public final void synpred137_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6574:2: ( ruleBlockExpressionWithoutBrackets )
        // ../org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/parser/antlr/internal/InternalExBeeLangTestLanguage.g:6574:2: ruleBlockExpressionWithoutBrackets
        {
        if ( backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_ruleBlockExpressionWithoutBrackets_in_synpred13711630);
        ruleBlockExpressionWithoutBrackets();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred137

    public final boolean synpred106() {
        backtracking++;
        int start = input.mark();
        try {
            synpred106_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred14() {
        backtracking++;
        int start = input.mark();
        try {
            synpred14_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred105() {
        backtracking++;
        int start = input.mark();
        try {
            synpred105_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred15() {
        backtracking++;
        int start = input.mark();
        try {
            synpred15_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred22() {
        backtracking++;
        int start = input.mark();
        try {
            synpred22_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred30() {
        backtracking++;
        int start = input.mark();
        try {
            synpred30_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred128() {
        backtracking++;
        int start = input.mark();
        try {
            synpred128_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred109() {
        backtracking++;
        int start = input.mark();
        try {
            synpred109_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred112() {
        backtracking++;
        int start = input.mark();
        try {
            synpred112_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred92() {
        backtracking++;
        int start = input.mark();
        try {
            synpred92_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred12() {
        backtracking++;
        int start = input.mark();
        try {
            synpred12_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred27() {
        backtracking++;
        int start = input.mark();
        try {
            synpred27_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred85() {
        backtracking++;
        int start = input.mark();
        try {
            synpred85_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred9() {
        backtracking++;
        int start = input.mark();
        try {
            synpred9_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred101() {
        backtracking++;
        int start = input.mark();
        try {
            synpred101_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred20() {
        backtracking++;
        int start = input.mark();
        try {
            synpred20_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred17() {
        backtracking++;
        int start = input.mark();
        try {
            synpred17_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred28() {
        backtracking++;
        int start = input.mark();
        try {
            synpred28_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred36() {
        backtracking++;
        int start = input.mark();
        try {
            synpred36_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred33() {
        backtracking++;
        int start = input.mark();
        try {
            synpred33_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred18() {
        backtracking++;
        int start = input.mark();
        try {
            synpred18_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred2() {
        backtracking++;
        int start = input.mark();
        try {
            synpred2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred29() {
        backtracking++;
        int start = input.mark();
        try {
            synpred29_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred135() {
        backtracking++;
        int start = input.mark();
        try {
            synpred135_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred69() {
        backtracking++;
        int start = input.mark();
        try {
            synpred69_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred11() {
        backtracking++;
        int start = input.mark();
        try {
            synpred11_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred32() {
        backtracking++;
        int start = input.mark();
        try {
            synpred32_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred86() {
        backtracking++;
        int start = input.mark();
        try {
            synpred86_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred26() {
        backtracking++;
        int start = input.mark();
        try {
            synpred26_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred34() {
        backtracking++;
        int start = input.mark();
        try {
            synpred34_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred102() {
        backtracking++;
        int start = input.mark();
        try {
            synpred102_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred89() {
        backtracking++;
        int start = input.mark();
        try {
            synpred89_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred21() {
        backtracking++;
        int start = input.mark();
        try {
            synpred21_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred10() {
        backtracking++;
        int start = input.mark();
        try {
            synpred10_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred42() {
        backtracking++;
        int start = input.mark();
        try {
            synpred42_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred87() {
        backtracking++;
        int start = input.mark();
        try {
            synpred87_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred16() {
        backtracking++;
        int start = input.mark();
        try {
            synpred16_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred35() {
        backtracking++;
        int start = input.mark();
        try {
            synpred35_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred137() {
        backtracking++;
        int start = input.mark();
        try {
            synpred137_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred127() {
        backtracking++;
        int start = input.mark();
        try {
            synpred127_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred99() {
        backtracking++;
        int start = input.mark();
        try {
            synpred99_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred108() {
        backtracking++;
        int start = input.mark();
        try {
            synpred108_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred13() {
        backtracking++;
        int start = input.mark();
        try {
            synpred13_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred93() {
        backtracking++;
        int start = input.mark();
        try {
            synpred93_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred71() {
        backtracking++;
        int start = input.mark();
        try {
            synpred71_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred103() {
        backtracking++;
        int start = input.mark();
        try {
            synpred103_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }


    protected DFA27 dfa27 = new DFA27(this);
    protected DFA90 dfa90 = new DFA90(this);
    static final String DFA27_eotS =
        "\56\uffff";
    static final String DFA27_eofS =
        "\3\uffff\1\4\4\uffff\2\4\12\uffff\2\4\1\uffff\1\4\15\uffff\2\4\7"+
        "\uffff";
    static final String DFA27_minS =
        "\1\7\1\uffff\1\7\1\31\1\uffff\1\31\2\7\2\31\1\7\1\0\1\63\2\7\1\31"+
        "\1\107\1\54\1\32\1\0\2\31\1\32\1\31\1\64\1\107\1\64\1\107\1\54\2"+
        "\7\1\107\1\64\1\107\1\32\1\64\1\107\2\31\1\64\1\0\1\64\2\107\1\64"+
        "\1\0";
    static final String DFA27_maxS =
        "\1\111\1\uffff\1\111\1\107\1\uffff\1\100\2\111\2\100\1\111\1\0\1"+
        "\107\2\111\1\100\1\107\1\54\1\107\1\0\1\107\1\103\1\107\1\100\1"+
        "\64\1\107\1\67\1\107\1\54\2\111\1\107\1\67\2\107\1\64\2\107\1\103"+
        "\1\64\1\0\1\67\2\107\1\64\1\0";
    static final String DFA27_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\51\uffff";
    static final String DFA27_specialS =
        "\13\uffff\1\1\7\uffff\1\0\24\uffff\1\2\4\uffff\1\3}>";
    static final String[] DFA27_transitionS = {
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\1\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\2\4\uffff\1\4\4\uffff\1\1\4\uffff"+
            "\1\4\1\1\3\uffff\1\3\1\uffff\1\4",
            "",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\1\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\4\1\1\3\uffff\1\4\11\uffff\1\4\4"+
            "\uffff\1\5\1\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\7\3\4\2\uffff\1\6\3\4\2\uffff\1\1\3\uffff\1\1",
            "",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\2\4\1\10\2\4\1\1\3\4\2\uffff\4\4",
            "\1\4\3\uffff\1\4\4\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\12\uffff\1\4\1\uffff"+
            "\1\4\4\uffff\1\4\11\uffff\1\4\4\uffff\1\11\1\uffff\1\4",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\14\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\12\4\uffff\1\4\4\uffff\1\4\4\uffff"+
            "\2\4\3\uffff\1\13\1\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\1\1\4\1\uffff\2\4\1\uffff\11"+
            "\4\2\uffff\4\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\15\3\4\2\uffff\2\4\1\16\1\4",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\20\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\4\1\21\3\uffff\1\4\11\uffff\1\4"+
            "\4\uffff\1\17\1\uffff\1\4",
            "\1\uffff",
            "\1\22\23\uffff\1\23",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\1\4\4\uffff"+
            "\2\4\3\uffff\1\24\1\uffff\1\4",
            "\1\4\3\uffff\1\4\4\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\12\uffff\1\4\1\uffff"+
            "\1\4\4\uffff\1\4\11\uffff\1\4\4\uffff\1\25\1\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\2\4\1\27\2\4\1\26\3\4\2\uffff\4\4",
            "\1\30",
            "\1\31",
            "\1\33\31\uffff\1\34\22\uffff\1\32",
            "\1\uffff",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\35\3\4\2\uffff\2\4\1\36\1\4\2\uffff\1\4\3\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\7\3\4\2\uffff\4\4\2\uffff\1\1",
            "\1\37\54\uffff\1\40",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\31\1\4\1\uffff\2\4\1\uffff\11"+
            "\4\2\uffff\4\4",
            "\1\21",
            "\1\41",
            "\1\34\2\uffff\1\42",
            "\1\43",
            "\1\44",
            "\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff"+
            "\2\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\6\uffff\1\4\1\uffff"+
            "\1\4\12\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\1\4\4\uffff"+
            "\2\4\3\uffff\1\45\1\uffff\1\4",
            "\1\4\3\uffff\1\4\4\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\12\uffff\1\4\1\uffff"+
            "\1\4\4\uffff\1\4\11\uffff\1\4\4\uffff\1\46\1\uffff\1\4",
            "\1\47",
            "\1\21\2\uffff\1\26",
            "\1\50",
            "\1\52\54\uffff\1\51",
            "\1\34",
            "\1\53",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\35\3\4\2\uffff\2\4\1\36\1\4\2\uffff\1\4\3\uffff\1\4",
            "\1\4\1\uffff\1\4\4\uffff\14\4\1\uffff\1\4\1\uffff\2\4\1\uffff"+
            "\5\4\1\7\3\4\2\uffff\4\4\2\uffff\1\1",
            "\1\21",
            "\1\uffff",
            "\1\34\2\uffff\1\42",
            "\1\54",
            "\1\55",
            "\1\34",
            "\1\uffff"
    };

    static final short[] DFA27_eot = DFA.unpackEncodedString(DFA27_eotS);
    static final short[] DFA27_eof = DFA.unpackEncodedString(DFA27_eofS);
    static final char[] DFA27_min = DFA.unpackEncodedStringToUnsignedChars(DFA27_minS);
    static final char[] DFA27_max = DFA.unpackEncodedStringToUnsignedChars(DFA27_maxS);
    static final short[] DFA27_accept = DFA.unpackEncodedString(DFA27_acceptS);
    static final short[] DFA27_special = DFA.unpackEncodedString(DFA27_specialS);
    static final short[][] DFA27_transition;

    static {
        int numStates = DFA27_transitionS.length;
        DFA27_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA27_transition[i] = DFA.unpackEncodedString(DFA27_transitionS[i]);
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = DFA27_eot;
            this.eof = DFA27_eof;
            this.min = DFA27_min;
            this.max = DFA27_max;
            this.accept = DFA27_accept;
            this.special = DFA27_special;
            this.transition = DFA27_transition;
        }
        public String getDescription() {
            return "1895:1: (this_ClosureParameter_0= ruleClosureParameter | this_Parameter_1= ruleParameter )";
        }
        public int specialStateTransition(int s, IntStream input) throws NoViableAltException {
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_19 = input.LA(1);

                         
                        int index27_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index27_19);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA27_11 = input.LA(1);

                         
                        int index27_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index27_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA27_40 = input.LA(1);

                         
                        int index27_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index27_40);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA27_45 = input.LA(1);

                         
                        int index27_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index27_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (backtracking>0) {failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA90_eotS =
        "\72\uffff";
    static final String DFA90_eofS =
        "\5\uffff\1\6\7\uffff\1\6\3\uffff\1\6\16\uffff\2\6\1\uffff\1\6\15"+
        "\uffff\2\6\7\uffff";
    static final String DFA90_minS =
        "\1\32\1\7\2\uffff\1\7\1\31\1\uffff\1\31\1\107\1\54\2\7\1\67\1\31"+
        "\1\32\1\64\1\107\1\31\1\7\1\0\1\63\1\107\1\64\1\107\2\7\1\31\1\107"+
        "\1\54\1\32\1\0\1\64\2\31\1\32\1\31\1\64\1\107\1\64\1\107\1\54\2"+
        "\7\1\107\1\64\1\107\1\32\1\64\1\107\2\31\1\64\1\0\1\64\2\107\1\64"+
        "\1\0";
    static final String DFA90_maxS =
        "\1\107\1\111\2\uffff\1\111\1\107\1\uffff\1\100\1\107\1\54\2\111"+
        "\1\103\1\104\1\107\1\64\1\107\1\104\1\111\1\0\2\107\1\67\1\107\2"+
        "\111\1\100\1\107\1\54\1\107\1\0\1\64\1\107\1\104\1\107\1\100\1\64"+
        "\1\107\1\67\1\107\1\54\2\111\1\107\1\67\2\107\1\64\1\107\1\103\1"+
        "\107\1\64\1\0\1\67\2\107\1\64\1\0";
    static final String DFA90_acceptS =
        "\2\uffff\1\1\1\2\2\uffff\1\3\63\uffff";
    static final String DFA90_specialS =
        "\23\uffff\1\0\12\uffff\1\3\25\uffff\1\1\4\uffff\1\2}>";
    static final String[] DFA90_transitionS = {
            "\1\3\30\uffff\1\2\17\uffff\1\1\3\uffff\1\2",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\4\6\1\uffff\2\6\1\uffff"+
            "\1\6\4\uffff\3\6\4\uffff\1\6\1\uffff\1\6\12\uffff\1\6\1\uffff"+
            "\1\4\4\uffff\1\6\11\uffff\1\6\4\uffff\1\5\1\uffff\1\6",
            "",
            "",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\10\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\6\1\11\3\uffff\1\6\11\uffff\1\6"+
            "\4\uffff\1\7\1\uffff\1\6",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\13\3\6\1\uffff\1\6\1\12\3\6\2\uffff\1\2\1\6\2\uffff\1"+
            "\14",
            "",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\2\6\1\15\2\6\1\16\3\6\2\uffff\4\6",
            "\1\17",
            "\1\20",
            "\1\6\3\uffff\1\6\4\uffff\2\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\1\6\4\uffff\1\6\6\uffff\1\6\1\uffff\1\6\12\uffff\1\6\1\uffff"+
            "\1\6\4\uffff\1\6\11\uffff\1\6\4\uffff\1\21\1\uffff\1\6",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\24\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\22\4\uffff\1\6\4\uffff\1\6\4\uffff"+
            "\2\6\3\uffff\1\23\1\uffff\1\6",
            "\1\2\4\uffff\1\6\1\uffff\1\6\4\uffff\1\2",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\20\1\6\1\uffff\2\6\1\uffff\11"+
            "\6\1\uffff\5\6\3\uffff\1\6",
            "\1\25\54\uffff\1\26",
            "\1\11",
            "\1\27",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\30\3\6\1\uffff\3\6\1\31\1\6\3\uffff\1\6",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\33\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\6\1\34\3\uffff\1\6\11\uffff\1\6"+
            "\4\uffff\1\32\1\uffff\1\6",
            "\1\uffff",
            "\1\35\23\uffff\1\36",
            "\1\37",
            "\1\11\2\uffff\1\16",
            "\1\14",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\6\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\6\4\uffff\1\6\4\uffff\1\6\4\uffff"+
            "\2\6\3\uffff\1\40\1\uffff\1\6",
            "\1\6\3\uffff\1\6\4\uffff\2\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\1\6\4\uffff\1\6\6\uffff\1\6\1\uffff\1\6\12\uffff\1\6\1\uffff"+
            "\1\6\4\uffff\1\6\11\uffff\1\6\4\uffff\1\41\1\uffff\1\6",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\2\6\1\43\2\6\1\42\3\6\2\uffff\4\6",
            "\1\44",
            "\1\45",
            "\1\47\31\uffff\1\50\22\uffff\1\46",
            "\1\uffff",
            "\1\11",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\52\3\6\2\uffff\2\6\1\51\1\6\2\uffff\1\6\3\uffff\1\6",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\13\3\6\1\uffff\5\6\2\uffff\1\2\1\6",
            "\1\53\54\uffff\1\54",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\45\1\6\1\uffff\2\6\1\uffff\11"+
            "\6\2\uffff\4\6",
            "\1\34",
            "\1\55",
            "\1\50\2\uffff\1\56",
            "\1\57",
            "\1\60",
            "\1\6\3\uffff\1\6\4\uffff\2\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\1\6\4\uffff\1\6\6\uffff\1\6\1\uffff\1\6\12\uffff\1\6\1\uffff"+
            "\1\6\4\uffff\1\6\11\uffff\1\6\4\uffff\1\61\1\uffff\1\6",
            "\1\6\3\uffff\1\6\2\uffff\1\6\1\uffff\2\6\1\uffff\1\6\1\uffff"+
            "\2\6\1\uffff\1\6\1\uffff\1\6\2\uffff\1\6\6\uffff\1\6\1\uffff"+
            "\1\6\12\uffff\1\6\1\uffff\1\6\4\uffff\1\6\4\uffff\1\6\4\uffff"+
            "\2\6\3\uffff\1\62\1\uffff\1\6",
            "\1\63",
            "\1\34\2\uffff\1\42",
            "\1\64",
            "\1\66\54\uffff\1\65",
            "\1\50",
            "\1\67",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\13\3\6\1\uffff\5\6\2\uffff\1\2",
            "\1\6\1\uffff\1\6\4\uffff\14\6\1\uffff\1\6\1\uffff\2\6\1\uffff"+
            "\5\6\1\52\3\6\2\uffff\2\6\1\51\1\6\2\uffff\1\6\3\uffff\1\6",
            "\1\34",
            "\1\uffff",
            "\1\50\2\uffff\1\56",
            "\1\70",
            "\1\71",
            "\1\50",
            "\1\uffff"
    };

    static final short[] DFA90_eot = DFA.unpackEncodedString(DFA90_eotS);
    static final short[] DFA90_eof = DFA.unpackEncodedString(DFA90_eofS);
    static final char[] DFA90_min = DFA.unpackEncodedStringToUnsignedChars(DFA90_minS);
    static final char[] DFA90_max = DFA.unpackEncodedStringToUnsignedChars(DFA90_maxS);
    static final short[] DFA90_accept = DFA.unpackEncodedString(DFA90_acceptS);
    static final short[] DFA90_special = DFA.unpackEncodedString(DFA90_specialS);
    static final short[][] DFA90_transition;

    static {
        int numStates = DFA90_transitionS.length;
        DFA90_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA90_transition[i] = DFA.unpackEncodedString(DFA90_transitionS[i]);
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = DFA90_eot;
            this.eof = DFA90_eof;
            this.min = DFA90_min;
            this.max = DFA90_max;
            this.accept = DFA90_accept;
            this.special = DFA90_special;
            this.transition = DFA90_transition;
        }
        public String getDescription() {
            return "6365:3: ( ( ( KEYWORD_19 )? ( ( (lv_parameters_5_0= ruleParameterDeclaration ) ) ( KEYWORD_7 ( (lv_parameters_7_0= ruleParameterDeclaration ) ) )* ( KEYWORD_7 ( (lv_varArgs_9_0= KEYWORD_39 ) ) ( (lv_parameters_10_0= ruleParameterDeclaration ) ) )? ) ) | ( ( (lv_varArgs_11_0= KEYWORD_39 ) ) ( (lv_parameters_12_0= ruleParameterDeclaration ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream input) throws NoViableAltException {
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_19 = input.LA(1);

                         
                        int index90_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index90_19);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_52 = input.LA(1);

                         
                        int index90_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index90_52);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA90_57 = input.LA(1);

                         
                        int index90_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index90_57);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA90_30 = input.LA(1);

                         
                        int index90_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index90_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (backtracking>0) {failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_ruleDelegateModel_in_entryRuleDelegateModel80 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDelegateModel90 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleModel_in_ruleDelegateModel139 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleModel_in_entryRuleModel172 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleModel182 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleUnit_in_ruleModel228 = new BitSet(new long[]{0x0000000000400002L,0x0000000000000020L});
        public static final BitSet FOLLOW_ruleFunction_in_ruleModel256 = new BitSet(new long[]{0x0000000000040102L,0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleUnit_in_entryRuleUnit298 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleUnit308 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_DOCUMENTATION_in_ruleUnit366 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleUnit383 = new BitSet(new long[]{0x0000000000002040L,0x0000000000000084L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleUnit400 = new BitSet(new long[]{0x0000000000002040L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_58_in_ruleUnit418 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleUnit435 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_62_in_ruleUnit454 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleSimpleTypeRef_in_ruleUnit475 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleUnit487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleSimpleTypeRef_in_ruleUnit508 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleUnit523 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_55_in_ruleUnit577 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit588 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000280L});
        public static final BitSet FOLLOW_rulePath_in_ruleUnit609 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit620 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_54_in_ruleUnit683 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit694 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000280L});
        public static final BitSet FOLLOW_rulePath_in_ruleUnit715 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit726 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_60_in_ruleUnit789 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit800 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleProvidedCapability_in_ruleUnit821 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit832 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_61_in_ruleUnit896 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit907 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleAliasedRequiredCapability_in_ruleUnit928 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit939 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_61_in_ruleUnit1003 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_KEYWORD_41_in_ruleUnit1014 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleUnit1025 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleRequiredCapability_in_ruleUnit1046 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleUnit1057 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_ruleFunction_in_ruleUnit1130 = new BitSet(new long[]{0x0000000000070700L,0x00000000000000B0L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleUnit1181 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleProvidedCapability_in_entryRuleProvidedCapability1226 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleProvidedCapability1236 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleProvidedCapability1295 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleProvidedCapability1317 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleProvidedCapability1330 = new BitSet(new long[]{0x0000000000902000L});
        public static final BitSet FOLLOW_KEYWORD_48_in_ruleProvidedCapability1384 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleProvidedCapability1395 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleProvidedCapability1416 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleProvidedCapability1427 = new BitSet(new long[]{0x0000000000902000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_45_in_ruleProvidedCapability1490 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleProvidedCapability1501 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleProvidedCapability1518 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleProvidedCapability1534 = new BitSet(new long[]{0x0000000000902000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_58_in_ruleProvidedCapability1597 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleProvidedCapability1608 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleProvidedCapability1625 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleProvidedCapability1641 = new BitSet(new long[]{0x0000000000902000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleProvidedCapability1698 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAliasedRequiredCapability_in_entryRuleAliasedRequiredCapability1745 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAliasedRequiredCapability1755 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1802 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleAliasedRequiredCapability1824 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1842 = new BitSet(new long[]{0x0000400000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_35_in_ruleAliasedRequiredCapability1859 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability1876 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleAliasedRequiredCapability1895 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_48_in_ruleAliasedRequiredCapability1949 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability1960 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleAliasedRequiredCapability1981 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability1992 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_53_in_ruleAliasedRequiredCapability2063 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2087 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_65_in_ruleAliasedRequiredCapability2150 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleAliasedRequiredCapability2178 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2194 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_64_in_ruleAliasedRequiredCapability2257 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2268 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleAliasedRequiredCapability2285 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2301 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_58_in_ruleAliasedRequiredCapability2364 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleAliasedRequiredCapability2375 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleAliasedRequiredCapability2392 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleAliasedRequiredCapability2408 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleAliasedRequiredCapability2459 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleRequiredCapability_in_entryRuleRequiredCapability2505 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleRequiredCapability2515 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleRequiredCapability2574 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleRequiredCapability2596 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleRequiredCapability2614 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleRequiredCapability2631 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_48_in_ruleRequiredCapability2685 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleRequiredCapability2696 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleRequiredCapability2717 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability2728 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_53_in_ruleRequiredCapability2799 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability2823 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_65_in_ruleRequiredCapability2886 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleRequiredCapability2897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleRequiredCapability2914 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability2930 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_64_in_ruleRequiredCapability2993 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleRequiredCapability3004 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleRequiredCapability3021 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability3037 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_58_in_ruleRequiredCapability3100 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleRequiredCapability3111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleRequiredCapability3128 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleRequiredCapability3144 = new BitSet(new long[]{0x000000000080A030L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleRequiredCapability3195 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePath_in_entryRulePath3242 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePath3253 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_rulePath3297 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_10_in_rulePath3323 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleQID_in_rulePath3347 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_KEYWORD_10_in_rulePath3366 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleQID_in_rulePath3388 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_KEYWORD_10_in_rulePath3409 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParameterList_in_entryRuleParameterList3455 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleParameterList3465 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFirstParameter_in_ruleParameterList3511 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleParameterList3523 = new BitSet(new long[]{0x210A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleFirstParameter_in_ruleParameterList3544 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_ruleFirstParameter_in_entryRuleFirstParameter3581 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFirstParameter3591 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureParameter_in_ruleFirstParameter3641 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParameter_in_ruleFirstParameter3671 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParameter_in_entryRuleParameter3705 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleParameter3715 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleParameter3760 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureParameter_in_entryRuleClosureParameter3794 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleClosureParameter3804 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureExpression_in_ruleClosureParameter3849 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_entryRuleParameterDeclaration3883 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleParameterDeclaration3893 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleParameterDeclaration3939 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleParameterDeclaration3957 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunction_in_entryRuleFunction3997 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFunction4007 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_DOCUMENTATION_in_ruleFunction4049 = new BitSet(new long[]{0x0000000000040100L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleFunction4072 = new BitSet(new long[]{0x0000000000040100L});
        public static final BitSet FOLLOW_KEYWORD_50_in_ruleFunction4097 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_KEYWORD_59_in_ruleFunction4122 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleFunction4143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleFunction4161 = new BitSet(new long[]{0x0808000000800000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleFunction4178 = new BitSet(new long[]{0x0018000004000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleFunction4201 = new BitSet(new long[]{0x0090000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleFunction4213 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleFunction4234 = new BitSet(new long[]{0x0090000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleFunction4248 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleFunction4267 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleFunction4301 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleFunction4330 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleFunction4364 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleFunction4378 = new BitSet(new long[]{0x0800000000800000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_48_in_ruleFunction4392 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_ruleGuardExpression_in_ruleFunction4413 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleFunction4428 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleFunction4449 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleFunction4460 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_ruleFunction4488 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleGuardExpression_in_entryRuleGuardExpression4524 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleGuardExpression4534 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleGuardExpression4571 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleGuardExpression4592 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleGuardExpression4603 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_ruleGuardExpression4631 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentOperator_in_entryRuleAssignmentOperator4667 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentOperator4678 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_14_in_ruleAssignmentOperator4716 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_26_in_ruleAssignmentOperator4735 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_28_in_ruleAssignmentOperator4754 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_24_in_ruleAssignmentOperator4773 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_30_in_ruleAssignmentOperator4792 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_22_in_ruleAssignmentOperator4811 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleRelationalOperator_in_entryRuleRelationalOperator4851 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleRelationalOperator4862 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_37_in_ruleRelationalOperator4900 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_32_in_ruleRelationalOperator4919 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_40_in_ruleRelationalOperator4938 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_21_in_ruleRelationalOperator4957 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_38_in_ruleRelationalOperator4976 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_34_in_ruleRelationalOperator4995 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_31_in_ruleRelationalOperator5014 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_15_in_ruleRelationalOperator5033 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_13_in_ruleRelationalOperator5052 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTopLevelExpression_in_entryRuleTopLevelExpression5091 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleTopLevelExpression5101 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleVarDeclaration_in_ruleTopLevelExpression5151 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValDeclaration_in_ruleTopLevelExpression5181 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleTopLevelExpression5211 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExpression_in_entryRuleExpression5245 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExpression5255 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleExpression5304 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_entryRuleAssignmentExpression5337 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentExpression5347 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleCachedExpression_in_ruleAssignmentExpression5397 = new BitSet(new long[]{0x400002AA00000002L});
        public static final BitSet FOLLOW_ruleAssignmentOperator_in_ruleAssignmentExpression5430 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_ruleAssignmentExpression5451 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleVarDeclaration_in_entryRuleVarDeclaration5488 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleVarDeclaration5498 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_50_in_ruleVarDeclaration5554 = new BitSet(new long[]{0x0008000080000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_KEYWORD_44_in_ruleVarDeclaration5581 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleVarDeclaration5608 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleVarDeclaration5626 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_14_in_ruleVarDeclaration5644 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleVarDeclaration5665 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValDeclaration_in_entryRuleValDeclaration5702 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleValDeclaration5712 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_50_in_ruleValDeclaration5768 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_KEYWORD_43_in_ruleValDeclaration5801 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleValDeclaration5835 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleValDeclaration5853 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_14_in_ruleValDeclaration5869 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleValDeclaration5890 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTypeRef_in_entryRuleTypeRef5925 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleTypeRef5935 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureTypeRef_in_ruleTypeRef5985 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSimpleTypeRef_in_ruleTypeRef6015 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSimpleTypeRef_in_entryRuleSimpleTypeRef6049 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSimpleTypeRef6059 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleSimpleTypeRef6101 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_13_in_ruleSimpleTypeRef6118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleSimpleTypeRef6135 = new BitSet(new long[]{0x8080000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleSimpleTypeRef6152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleSimpleTypeRef6169 = new BitSet(new long[]{0x8080000000000000L});
        public static final BitSet FOLLOW_KEYWORD_15_in_ruleSimpleTypeRef6187 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureTypeRef_in_entryRuleClosureTypeRef6224 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleClosureTypeRef6234 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleClosureTypeRef6270 = new BitSet(new long[]{0x0010000004000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6289 = new BitSet(new long[]{0x0090000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleClosureTypeRef6306 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6323 = new BitSet(new long[]{0x0090000000000000L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleClosureTypeRef6342 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleClosureTypeRef6361 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6391 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleClosureTypeRef6425 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6455 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleClosureTypeRef6474 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_KEYWORD_33_in_ruleClosureTypeRef6485 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleClosureTypeRef6502 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleCachedExpression_in_entryRuleCachedExpression6542 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleCachedExpression6552 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_52_in_ruleCachedExpression6601 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleOrExpression_in_ruleCachedExpression6622 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrExpression_in_ruleCachedExpression6654 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrExpression_in_entryRuleOrExpression6688 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOrExpression6698 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression6748 = new BitSet(new long[]{0x0000800000000002L});
        public static final BitSet FOLLOW_KEYWORD_36_in_ruleOrExpression6771 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAndExpression_in_ruleOrExpression6792 = new BitSet(new long[]{0x0000800000000002L});
        public static final BitSet FOLLOW_ruleAndExpression_in_entryRuleAndExpression6829 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAndExpression6839 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleAndExpression6889 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_KEYWORD_23_in_ruleAndExpression6912 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleRelationalExpression_in_ruleAndExpression6933 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_ruleRelationalExpression_in_entryRuleRelationalExpression6970 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleRelationalExpression6980 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression7030 = new BitSet(new long[]{0xA0012C010A000002L});
        public static final BitSet FOLLOW_ruleRelationalOperator_in_ruleRelationalExpression7063 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAdditiveExpression_in_ruleRelationalExpression7084 = new BitSet(new long[]{0xA0012C010A000002L});
        public static final BitSet FOLLOW_ruleAdditiveExpression_in_entryRuleAdditiveExpression7121 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAdditiveExpression7131 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression7181 = new BitSet(new long[]{0x0140000000000002L});
        public static final BitSet FOLLOW_KEYWORD_6_in_ruleAdditiveExpression7214 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_8_in_ruleAdditiveExpression7244 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_ruleAdditiveExpression7281 = new BitSet(new long[]{0x0140000000000002L});
        public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_entryRuleMultiplicativeExpression7318 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMultiplicativeExpression7328 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression7378 = new BitSet(new long[]{0x0424000000000002L});
        public static final BitSet FOLLOW_KEYWORD_5_in_ruleMultiplicativeExpression7411 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_10_in_ruleMultiplicativeExpression7441 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_2_in_ruleMultiplicativeExpression7471 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleSetExpression_in_ruleMultiplicativeExpression7508 = new BitSet(new long[]{0x0424000000000002L});
        public static final BitSet FOLLOW_ruleSetExpression_in_entryRuleSetExpression7545 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSetExpression7555 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression7605 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_KEYWORD_29_in_ruleSetExpression7636 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_ruleSetExpression7670 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_entryRuleUnaryOrInfixExpression7707 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleUnaryOrInfixExpression7717 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePostopExpression_in_ruleUnaryOrInfixExpression7767 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleUnaryExpression_in_ruleUnaryOrInfixExpression7797 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePreopExpression_in_ruleUnaryOrInfixExpression7827 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleUnaryExpression_in_entryRuleUnaryExpression7861 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleUnaryExpression7871 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_1_in_ruleUnaryExpression7929 = new BitSet(new long[]{0x00080000216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_8_in_ruleUnaryExpression7959 = new BitSet(new long[]{0x00080000216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleInfixExpression_in_ruleUnaryExpression7996 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePreopExpression_in_entryRulePreopExpression8031 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePreopExpression8041 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_25_in_rulePreopExpression8099 = new BitSet(new long[]{0x00080000216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_KEYWORD_27_in_rulePreopExpression8129 = new BitSet(new long[]{0x00080000216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleInfixExpression_in_rulePreopExpression8166 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePostopExpression_in_entryRulePostopExpression8201 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePostopExpression8211 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInfixExpression_in_rulePostopExpression8261 = new BitSet(new long[]{0x0000005000000002L});
        public static final BitSet FOLLOW_KEYWORD_27_in_rulePostopExpression8294 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_25_in_rulePostopExpression8324 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInfixExpression_in_entryRuleInfixExpression8377 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleInfixExpression8387 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleCallExpression_in_ruleInfixExpression8437 = new BitSet(new long[]{0x0200000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_KEYWORD_9_in_ruleInfixExpression8461 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression8478 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleInfixExpression8494 = new BitSet(new long[]{0x211A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleInfixExpression8515 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleInfixExpression8527 = new BitSet(new long[]{0x0200000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_KEYWORD_16_in_ruleInfixExpression8558 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleInfixExpression8579 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_17_in_ruleInfixExpression8590 = new BitSet(new long[]{0x0200000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_KEYWORD_9_in_ruleInfixExpression8621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleInfixExpression8638 = new BitSet(new long[]{0x0200000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_ruleCallExpression_in_entryRuleCallExpression8681 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleCallExpression8691 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePrimaryExpression_in_ruleCallExpression8741 = new BitSet(new long[]{0x0008000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleCallExpression8764 = new BitSet(new long[]{0x211A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleCallExpression8785 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleCallExpression8797 = new BitSet(new long[]{0x0008000000000002L});
        public static final BitSet FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression8834 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePrimaryExpression8844 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureCall_in_rulePrimaryExpression8894 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleConstructorCallExpression_in_rulePrimaryExpression8924 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValue_in_rulePrimaryExpression8954 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteral_in_rulePrimaryExpression8984 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleKeywordVariables_in_rulePrimaryExpression9014 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParanthesizedExpression_in_rulePrimaryExpression9044 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_rulePrimaryExpression9074 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleWithExpression_in_rulePrimaryExpression9104 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleWithContextExpression_in_rulePrimaryExpression9134 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleWithExpression_in_entryRuleWithExpression9168 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleWithExpression9178 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_49_in_ruleWithExpression9214 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000084L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleWithExpression9232 = new BitSet(new long[]{0x0880000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleWithExpression9249 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleWithExpression9266 = new BitSet(new long[]{0x0880000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleWithExpression9288 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleWithExpression9309 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleWithExpression9328 = new BitSet(new long[]{0x010A0050E16F4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleBlockExpressionWithoutBrackets_in_ruleWithExpression9349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleWithExpression9360 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleWithContextExpression_in_entryRuleWithContextExpression9397 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleWithContextExpression9407 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_49_in_ruleWithContextExpression9443 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_KEYWORD_57_in_ruleWithContextExpression9454 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleWithContextExpression9475 = new BitSet(new long[]{0x0000400000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_35_in_ruleWithContextExpression9487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleWithContextExpression9504 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_ruleWithContextExpression9532 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_entryRuleBlockExpression9567 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleBlockExpression9577 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleBlockExpression9625 = new BitSet(new long[]{0x010A0050E16F4880L,0x0000000000000294L});
        public static final BitSet FOLLOW_ruleTopLevelExpression_in_ruleBlockExpression9647 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleBlockExpression9658 = new BitSet(new long[]{0x010A0050E16F4880L,0x0000000000000294L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleBlockExpression9671 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValue_in_entryRuleValue9706 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleValue9716 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleValue9770 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleKeywordVariables_in_entryRuleKeywordVariables9810 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleKeywordVariables9820 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_51_in_ruleKeywordVariables9878 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_54_in_ruleKeywordVariables9908 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_55_in_ruleKeywordVariables9938 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_63_in_ruleKeywordVariables9968 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_56_in_ruleKeywordVariables9998 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_47_in_ruleKeywordVariables10028 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_46_in_ruleKeywordVariables10058 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureCall_in_entryRuleFeatureCall10109 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFeatureCall10119 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOperationCall_in_ruleFeatureCall10168 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOperationCall_in_entryRuleOperationCall10201 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOperationCall10211 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleOperationCall10265 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleOperationCall10281 = new BitSet(new long[]{0x211A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleOperationCall10302 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleOperationCall10314 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleConstructorCallExpression_in_entryRuleConstructorCallExpression10349 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleConstructorCallExpression10359 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_42_in_ruleConstructorCallExpression10407 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleConstructorCallExpression10424 = new BitSet(new long[]{0x0008400000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleConstructorCallExpression10441 = new BitSet(new long[]{0x211A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_ruleConstructorCallExpression10462 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleConstructorCallExpression10474 = new BitSet(new long[]{0x0000400000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_KEYWORD_35_in_ruleConstructorCallExpression10488 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleConstructorCallExpression10505 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_ruleInitializationBlockExpression_in_ruleConstructorCallExpression10533 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInitializationBlockExpression_in_entryRuleInitializationBlockExpression10569 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleInitializationBlockExpression10579 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleInitializationBlockExpression10627 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleInitializationExpression_in_ruleInitializationBlockExpression10648 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleInitializationBlockExpression10659 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleInitializationBlockExpression10670 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInitializationExpression_in_entryRuleInitializationExpression10705 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleInitializationExpression10715 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureOfThis_in_ruleInitializationExpression10773 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_ruleInitializationExpression10792 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleInitializationExpression10826 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureOfThis_in_entryRuleFeatureOfThis10861 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFeatureOfThis10871 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleFeatureOfThis10925 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteral_in_entryRuleLiteral10965 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleLiteral10975 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValueLiteral_in_ruleLiteral11025 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteralFunction_in_ruleLiteral11055 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteralFunction_in_entryRuleLiteralFunction11089 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleLiteralFunction11099 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_18_in_ruleLiteralFunction11135 = new BitSet(new long[]{0x2008000004000000L,0x0000000000000088L});
        public static final BitSet FOLLOW_ruleClosureExpression_in_ruleLiteralFunction11160 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_KEYWORD_20_in_ruleLiteralFunction11170 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureExpression_in_entryRuleClosureExpression11205 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleClosureExpression11215 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_13_in_ruleClosureExpression11264 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleTypeRef_in_ruleClosureExpression11285 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_15_in_ruleClosureExpression11296 = new BitSet(new long[]{0x0008000004000000L,0x0000000000000088L});
        public static final BitSet FOLLOW_KEYWORD_19_in_ruleClosureExpression11312 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11336 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleClosureExpression11348 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11369 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_KEYWORD_7_in_ruleClosureExpression11383 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleClosureExpression11402 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11436 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_KEYWORD_39_in_ruleClosureExpression11466 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_ruleClosureExpression11500 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_KEYWORD_19_in_ruleClosureExpression11514 = new BitSet(new long[]{0x010A0050E16F4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleOneOrManyExpressions_in_ruleClosureExpression11535 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOneOrManyExpressions_in_entryRuleOneOrManyExpressions11570 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOneOrManyExpressions11580 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpressionWithoutBrackets_in_ruleOneOrManyExpressions11630 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleOneOrManyExpressions11660 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpressionWithoutBrackets_in_entryRuleBlockExpressionWithoutBrackets11694 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleBlockExpressionWithoutBrackets11704 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTopLevelExpression_in_ruleBlockExpressionWithoutBrackets11763 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_ruleBlockExpressionWithoutBrackets11774 = new BitSet(new long[]{0x010A0050E16F4882L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleValueLiteral_in_entryRuleValueLiteral11811 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleValueLiteral11821 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleValueLiteral11862 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleParanthesizedExpression_in_entryRuleParanthesizedExpression11901 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleParanthesizedExpression11911 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_ruleParanthesizedExpression11947 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_ruleParanthesizedExpression11972 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_ruleParanthesizedExpression11982 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQID_in_entryRuleQID12024 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleQID12035 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleQID12079 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleQID12100 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_HEX_in_ruleQID12126 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleQID12152 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_KEYWORD_9_in_ruleQID12173 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleQID12188 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_INT_in_ruleQID12209 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_HEX_in_ruleQID12235 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_RULE_ID_in_ruleQID12261 = new BitSet(new long[]{0x0200000000000002L,0x00000000000001C0L});
        public static final BitSet FOLLOW_ruleUnit_in_synpred2228 = new BitSet(new long[]{0x0000000000400002L,0x0000000000000020L});
        public static final BitSet FOLLOW_KEYWORD_55_in_synpred9577 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred9588 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000280L});
        public static final BitSet FOLLOW_rulePath_in_synpred9609 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred9620 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_54_in_synpred10683 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred10694 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000280L});
        public static final BitSet FOLLOW_rulePath_in_synpred10715 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred10726 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_60_in_synpred11789 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred11800 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleProvidedCapability_in_synpred11821 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred11832 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_60_in_synpred12789 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred12800 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleProvidedCapability_in_synpred12821 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred12832 = new BitSet(new long[]{0x0000000000000202L});
        public static final BitSet FOLLOW_KEYWORD_61_in_synpred13896 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred13907 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleAliasedRequiredCapability_in_synpred13928 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred13939 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_61_in_synpred14896 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred14907 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleAliasedRequiredCapability_in_synpred14928 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred14939 = new BitSet(new long[]{0x0000000000000402L});
        public static final BitSet FOLLOW_KEYWORD_61_in_synpred151003 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_KEYWORD_41_in_synpred151014 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred151025 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleRequiredCapability_in_synpred151046 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred151057 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_61_in_synpred161003 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_KEYWORD_41_in_synpred161014 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred161025 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleRequiredCapability_in_synpred161046 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred161057 = new BitSet(new long[]{0x0000000000000402L});
        public static final BitSet FOLLOW_ruleFunction_in_synpred171130 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunction_in_synpred181130 = new BitSet(new long[]{0x0000000000040102L,0x00000000000000A0L});
        public static final BitSet FOLLOW_KEYWORD_48_in_synpred201384 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred201395 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_synpred201416 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred201427 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_45_in_synpred211490 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred211501 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred211518 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred211534 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_58_in_synpred221597 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred221608 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred221625 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred221641 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_48_in_synpred261949 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred261960 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_synpred261981 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred261992 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_53_in_synpred272063 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred272087 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_65_in_synpred282150 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred282161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_synpred282178 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred282194 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_64_in_synpred292257 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred292268 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_synpred292285 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred292301 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_58_in_synpred302364 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred302375 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred302392 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred302408 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_48_in_synpred322685 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred322696 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_synpred322717 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred322728 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_53_in_synpred332799 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred332823 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_65_in_synpred342886 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred342897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_synpred342914 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred342930 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_64_in_synpred352993 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred353004 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_INT_in_synpred353021 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred353037 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_58_in_synpred363100 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_KEYWORD_11_in_synpred363111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred363128 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_KEYWORD_12_in_synpred363144 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleClosureParameter_in_synpred423641 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleVarDeclaration_in_synpred695151 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAssignmentOperator_in_synpred715430 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAssignmentExpression_in_synpred715451 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_36_in_synpred856771 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAndExpression_in_synpred856792 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_23_in_synpred866912 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleRelationalExpression_in_synpred866933 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleRelationalOperator_in_synpred877063 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleAdditiveExpression_in_synpred877084 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred897206 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleMultiplicativeExpression_in_synpred897281 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred927403 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleSetExpression_in_synpred927508 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_29_in_synpred937636 = new BitSet(new long[]{0x010A0050216B0880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleUnaryOrInfixExpression_in_synpred937670 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred998286 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_9_in_synpred1018461 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred1018478 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_KEYWORD_3_in_synpred1018494 = new BitSet(new long[]{0x211A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_synpred1018515 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_synpred1018527 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_16_in_synpred1028558 = new BitSet(new long[]{0x010A0050216B4880L,0x0000000000000284L});
        public static final BitSet FOLLOW_ruleExpression_in_synpred1028579 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_17_in_synpred1028590 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_9_in_synpred1038621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred1038638 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_synpred1058764 = new BitSet(new long[]{0x211A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_synpred1058785 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_synpred1058797 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureCall_in_synpred1068894 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleValue_in_synpred1088954 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleLiteral_in_synpred1098984 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpression_in_synpred1129074 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_3_in_synpred12710441 = new BitSet(new long[]{0x211A0050256B4880L,0x000000000000028CL});
        public static final BitSet FOLLOW_ruleParameterList_in_synpred12710462 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_KEYWORD_4_in_synpred12710474 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_35_in_synpred12810488 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_ID_in_synpred12810505 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_KEYWORD_19_in_synpred13511312 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_synpred13511336 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_KEYWORD_7_in_synpred13511348 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_synpred13511369 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_KEYWORD_7_in_synpred13511383 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_KEYWORD_39_in_synpred13511402 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_ruleParameterDeclaration_in_synpred13511436 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleBlockExpressionWithoutBrackets_in_synpred13711630 = new BitSet(new long[]{0x0000000000000002L});
    }


}