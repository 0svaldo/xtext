apply plugin: 'maven'
apply plugin: 'signing'

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar, javadocJar
}

signing {
  sign configurations.archives
}

def installer = install.repositories.mavenInstaller()
def deployer = uploadArchives.repositories.mavenDeployer()

configure(deployer) {
	beforeDeployment { deployment -> signing.signPom(deployment) }
	repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/")
	snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/")
	if (project.hasProperty('sonatypeUserName') && project.hasProperty('sonatypePassword')) {
		authentication(userName: sonatypeUserName, password: sonatypePassword)
	}
}

[installer, deployer]*.pom*.project {
	def parentPom = file("$rootDir/maven/org.eclipse.xtext.parent/pom.xml")
	def parent = new XmlSlurper().parse(parentPom)
	
	description = parent.description
	
	scm {
		url = parent.scm.url
		connection = parent.scm.connection
	}
	
	licenses {
		parent.licenses.children().each {parent -> 
			license {
				name = parent.name
				url = parent.url
			}
		}
	}
	
	developers {
		parent.developers.children().each {parent ->
			developer {
				id = parent.id
				name = parent.name
				email = parent.email
				organization = parent.organization
			}
		}
	}
}