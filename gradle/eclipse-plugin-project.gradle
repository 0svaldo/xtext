/**
 * This allows us to reference projects built by tycho/eclipse from
 * normal Java projects, for instance the intellij plugins.
 * We read the manifest and build.properties to build a Jar file
 * just like tycho would do it and then use that in the downstream projects.
 */


apply plugin: 'java-base'

configurations {
	compile
	'default' {
		extendsFrom compile
	}
}

task jar(type:Jar) {}

artifacts {
	'default' jar
}

apply from: "${rootDir}/gradle/dependencies-from-manifest.gradle"

task configureJarFromBuildProperties {
	doLast {
		jar {
			//TODO get rid of this distinction by reconfiguring
			//the Eclipse output folder for the mavenized projects
			if(isBuildServer) {
				from('target/classes')
			} else {
				from('bin')
			}

			manifest {
				from('META-INF/MANIFEST.MF')
			}
			Properties buildProperties = new Properties()
			File propertiesFile = file('build.properties')
			propertiesFile.withInputStream {
					buildProperties.load(it)
			}
			def binIncludes = buildProperties.get("bin.includes").split(',').findAll{it != "."}
			binIncludes.each{ include ->
				if (project.file(include).isDirectory()) {
					from(include) {
						into(include)
					}
				} else {
					from(include)
				}
			}
			duplicatesStrategy 'exclude'
		}
	}
}

jar.dependsOn(configureJarFromBuildProperties)
if (isBuildServer) {
	jar.dependsOn(':maven:compileEclipsePlugins')
}

eclipseClasspath.enabled = false
cleanEclipseClasspath.enabled = false